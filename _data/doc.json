[
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Called whenever LuaMenu is on with a game loaded.",
                "extends": {
                    "args": [],
                    "desc": "Called whenever LuaMenu is on with a game loaded.",
                    "finish": [
                        17,
                        27
                    ],
                    "rawdesc": "Called whenever LuaMenu is on with a game loaded.",
                    "start": [
                        17,
                        0
                    ],
                    "type": "function",
                    "view": "function ActivateGame()"
                },
                "file": "/generated/LuaMenu.lua",
                "finish": [
                    17,
                    21
                ],
                "rawdesc": "Called whenever LuaMenu is on with a game loaded.",
                "start": [
                    17,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "ActivateGame",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Called whenever LuaMenu is on with no game loaded.",
                "extends": {
                    "args": [],
                    "desc": "Called whenever LuaMenu is on with no game loaded.",
                    "finish": [
                        14,
                        27
                    ],
                    "rawdesc": "Called whenever LuaMenu is on with no game loaded.",
                    "start": [
                        14,
                        0
                    ],
                    "type": "function",
                    "view": "function ActivateMenu()"
                },
                "file": "/generated/LuaMenu.lua",
                "finish": [
                    14,
                    21
                ],
                "rawdesc": "Called whenever LuaMenu is on with no game loaded.",
                "start": [
                    14,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "ActivateMenu",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Called when a command is issued.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                749,
                                35
                            ],
                            "name": "cmdId",
                            "start": [
                                749,
                                30
                            ],
                            "type": "local",
                            "view": "integer?"
                        },
                        {
                            "finish": [
                                749,
                                44
                            ],
                            "name": "cmdType",
                            "start": [
                                749,
                                37
                            ],
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "Called when a command is issued.",
                    "finish": [
                        749,
                        49
                    ],
                    "rawdesc": "Called when a command is issued.",
                    "start": [
                        749,
                        0
                    ],
                    "type": "function",
                    "view": "function ActiveCommandChanged(cmdId?: integer, cmdType?: integer)"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    749,
                    29
                ],
                "rawdesc": "Called when a command is issued.",
                "start": [
                    749,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "ActiveCommandChanged",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "file": "/generated/LuaShaders.lua",
                "finish": [
                    109,
                    23
                ],
                "start": [
                    109,
                    10
                ],
                "type": "doc.class",
                "view": "ActiveUniform",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "desc": "The character length of `name`.",
                "extends": {
                    "finish": [
                        112,
                        24
                    ],
                    "start": [
                        112,
                        17
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                112,
                                24
                            ],
                            "start": [
                                112,
                                17
                            ],
                            "type": "doc.type.name",
                            "view": "integer"
                        }
                    ],
                    "view": "integer"
                },
                "file": "/generated/LuaShaders.lua",
                "finish": [
                    112,
                    24
                ],
                "name": "length",
                "rawdesc": "The character length of `name`.",
                "start": [
                    112,
                    10
                ],
                "type": "doc.field",
                "view": "integer",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        114,
                        21
                    ],
                    "start": [
                        114,
                        19
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                114,
                                21
                            ],
                            "start": [
                                114,
                                19
                            ],
                            "type": "doc.type.name",
                            "view": "GL"
                        }
                    ],
                    "view": "GL"
                },
                "file": "/generated/LuaShaders.lua",
                "finish": [
                    114,
                    21
                ],
                "name": "location",
                "start": [
                    114,
                    10
                ],
                "type": "doc.field",
                "view": "GL",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        110,
                        21
                    ],
                    "start": [
                        110,
                        15
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                110,
                                21
                            ],
                            "start": [
                                110,
                                15
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string"
                },
                "file": "/generated/LuaShaders.lua",
                "finish": [
                    110,
                    21
                ],
                "name": "name",
                "start": [
                    110,
                    10
                ],
                "type": "doc.field",
                "view": "string",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        113,
                        22
                    ],
                    "start": [
                        113,
                        15
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                113,
                                22
                            ],
                            "start": [
                                113,
                                15
                            ],
                            "type": "doc.type.name",
                            "view": "integer"
                        }
                    ],
                    "view": "integer"
                },
                "file": "/generated/LuaShaders.lua",
                "finish": [
                    113,
                    22
                ],
                "name": "size",
                "start": [
                    113,
                    10
                ],
                "type": "doc.field",
                "view": "integer",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "String name of `GL_*` constant.",
                "extends": {
                    "finish": [
                        111,
                        21
                    ],
                    "start": [
                        111,
                        15
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                111,
                                21
                            ],
                            "start": [
                                111,
                                15
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string"
                },
                "file": "/generated/LuaShaders.lua",
                "finish": [
                    111,
                    21
                ],
                "name": "type",
                "rawdesc": "String name of `GL_*` constant.",
                "start": [
                    111,
                    10
                ],
                "type": "doc.field",
                "view": "string",
                "visible": "public"
            }
        ],
        "name": "ActiveUniform",
        "type": "type",
        "view": "ActiveUniform"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Called when text is entered into the console (e.g. `Spring.Echo`).",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                763,
                                27
                            ],
                            "name": "msg",
                            "start": [
                                763,
                                24
                            ],
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": [
                                763,
                                37
                            ],
                            "name": "priority",
                            "start": [
                                763,
                                29
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Called when text is entered into the console (e.g. `Spring.Echo`).",
                    "finish": [
                        763,
                        42
                    ],
                    "rawdesc": "Called when text is entered into the console (e.g. `Spring.Echo`).",
                    "start": [
                        763,
                        0
                    ],
                    "type": "function",
                    "view": "function AddConsoleLine(msg: string, priority: integer)"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    763,
                    23
                ],
                "rawdesc": "Called when text is entered into the console (e.g. `Spring.Echo`).",
                "start": [
                    763,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "AddConsoleLine",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Called when a construction unit wants to \"use his nano beams\".\n\n@*param* `action` — one of following:\n\n\n-1 Build\nCMD.REPAIR Repair\nCMD.RECLAIM Reclaim\nCMD.RESTORE Restore\nCMD.RESURRECT Resurrect\nCMD.CAPTURE Capture",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                246,
                                36
                            ],
                            "name": "unitID",
                            "start": [
                                246,
                                30
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                246,
                                47
                            ],
                            "name": "unitDefID",
                            "start": [
                                246,
                                38
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "desc": "one of following:",
                            "finish": [
                                246,
                                55
                            ],
                            "name": "action",
                            "rawdesc": "one of following:",
                            "start": [
                                246,
                                49
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "Called when a construction unit wants to \"use his nano beams\".\n\n@*param* `action` — one of following:\n\n\n-1 Build\nCMD.REPAIR Repair\nCMD.RECLAIM Reclaim\nCMD.RESTORE Restore\nCMD.RESURRECT Resurrect\nCMD.CAPTURE Capture",
                    "finish": [
                        246,
                        60
                    ],
                    "rawdesc": "Called when a construction unit wants to \"use his nano beams\".\n\n\n-1 Build\nCMD.REPAIR Repair\nCMD.RECLAIM Reclaim\nCMD.RESTORE Restore\nCMD.RESURRECT Resurrect\nCMD.CAPTURE Capture",
                    "returns": [
                        {
                            "name": "actionAllowed",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        246,
                        0
                    ],
                    "type": "function",
                    "view": "function AllowBuilderHoldFire(unitID: integer, unitDefID: integer, action: number)\n  -> actionAllowed: boolean"
                },
                "file": "/generated/LuaHandleSynced.lua",
                "finish": [
                    246,
                    29
                ],
                "rawdesc": "Called when a construction unit wants to \"use his nano beams\".\n\n\n-1 Build\nCMD.REPAIR Repair\nCMD.RECLAIM Reclaim\nCMD.RESTORE Restore\nCMD.RESURRECT Resurrect\nCMD.CAPTURE Capture",
                "start": [
                    246,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "AllowBuilderHoldFire",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Called when the command is given, before the unit's queue is altered.\n\nThe queue remains untouched when a command is blocked, whether it would be queued or replace the queue.\n\n@*return* `whether` — it should be let into the queue.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                90,
                                28
                            ],
                            "name": "unitID",
                            "start": [
                                90,
                                22
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                90,
                                39
                            ],
                            "name": "unitDefID",
                            "start": [
                                90,
                                30
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                90,
                                49
                            ],
                            "name": "unitTeam",
                            "start": [
                                90,
                                41
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                90,
                                56
                            ],
                            "name": "cmdID",
                            "start": [
                                90,
                                51
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                90,
                                67
                            ],
                            "name": "cmdParams",
                            "start": [
                                90,
                                58
                            ],
                            "type": "local",
                            "view": "number[]"
                        },
                        {
                            "desc": "Parameters for command options\n",
                            "finish": [
                                90,
                                79
                            ],
                            "name": "cmdOptions",
                            "rawdesc": "Parameters for command options\n",
                            "start": [
                                90,
                                69
                            ],
                            "type": "local",
                            "view": "CommandOptions"
                        },
                        {
                            "finish": [
                                90,
                                87
                            ],
                            "name": "cmdTag",
                            "start": [
                                90,
                                81
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                90,
                                95
                            ],
                            "name": "synced",
                            "start": [
                                90,
                                89
                            ],
                            "type": "local",
                            "view": "boolean"
                        },
                        {
                            "finish": [
                                90,
                                104
                            ],
                            "name": "fromLua",
                            "start": [
                                90,
                                97
                            ],
                            "type": "local",
                            "view": "boolean"
                        }
                    ],
                    "desc": "Called when the command is given, before the unit's queue is altered.\n\nThe queue remains untouched when a command is blocked, whether it would be queued or replace the queue.\n\n@*return* `whether` — it should be let into the queue.",
                    "finish": [
                        90,
                        109
                    ],
                    "rawdesc": "Called when the command is given, before the unit's queue is altered.\n\nThe queue remains untouched when a command is blocked, whether it would be queued or replace the queue.",
                    "returns": [
                        {
                            "desc": "it should be let into the queue.",
                            "name": "whether",
                            "rawdesc": "it should be let into the queue.",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        90,
                        0
                    ],
                    "type": "function",
                    "view": "function AllowCommand(unitID: integer, unitDefID: integer, unitTeam: integer, cmdID: integer, cmdParams: number[], cmdOptions: CommandOptions, cmdTag: number, synced: boolean, fromLua: boolean)\n  -> whether: boolean"
                },
                "file": "/generated/LuaHandleSynced.lua",
                "finish": [
                    90,
                    21
                ],
                "rawdesc": "Called when the command is given, before the unit's queue is altered.\n\nThe queue remains untouched when a command is blocked, whether it would be queued or replace the queue.",
                "start": [
                    90,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "AllowCommand",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Determines if this unit can be controlled directly in FPS view.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                231,
                                38
                            ],
                            "name": "unitID",
                            "start": [
                                231,
                                32
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                231,
                                49
                            ],
                            "name": "unitDefID",
                            "start": [
                                231,
                                40
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                231,
                                59
                            ],
                            "name": "unitTeam",
                            "start": [
                                231,
                                51
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                231,
                                69
                            ],
                            "name": "playerID",
                            "start": [
                                231,
                                61
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Determines if this unit can be controlled directly in FPS view.",
                    "finish": [
                        231,
                        74
                    ],
                    "rawdesc": "Determines if this unit can be controlled directly in FPS view.",
                    "returns": [
                        {
                            "name": "allow",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        231,
                        0
                    ],
                    "type": "function",
                    "view": "function AllowDirectUnitControl(unitID: integer, unitDefID: integer, unitTeam: integer, playerID: integer)\n  -> allow: boolean"
                },
                "file": "/generated/LuaHandleSynced.lua",
                "finish": [
                    231,
                    31
                ],
                "rawdesc": "Determines if this unit can be controlled directly in FPS view.",
                "start": [
                    231,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "AllowDirectUnitControl",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Enables Draw{Genesis,Screen,ScreenPost} callins if true is returned, otherwise they are called once every 30 seconds. Only active when a game isn't running.",
                "extends": {
                    "args": [],
                    "desc": "Enables Draw{Genesis,Screen,ScreenPost} callins if true is returned, otherwise they are called once every 30 seconds. Only active when a game isn't running.",
                    "finish": [
                        22,
                        24
                    ],
                    "rawdesc": "Enables Draw{Genesis,Screen,ScreenPost} callins if true is returned, otherwise they are called once every 30 seconds. Only active when a game isn't running.",
                    "returns": [
                        {
                            "name": "allowDraw",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        22,
                        0
                    ],
                    "type": "function",
                    "view": "function AllowDraw()\n  -> allowDraw: boolean"
                },
                "file": "/generated/LuaMenu.lua",
                "finish": [
                    22,
                    18
                ],
                "rawdesc": "Enables Draw{Genesis,Screen,ScreenPost} callins if true is returned, otherwise they are called once every 30 seconds. Only active when a game isn't running.",
                "start": [
                    22,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "AllowDraw",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Called just before a feature changes its build percentage.\n\nNote that this is also called for resurrecting features, and for refilling features with resources before resurrection.\nOn reclaim the part values are negative, and on refill and resurrect they are positive.\nPart is the percentage the feature be built or reclaimed per frame.\nEg. for a 30 workertime builder, that's a build power of 1 per frame.\nFor a 50 buildtime feature reclaimed by this builder, part will be 100/-50(/1) = -2%, or -0.02 numerically.\n\n@*return* `whether` — or not the change is permitted",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                205,
                                40
                            ],
                            "name": "builderID",
                            "start": [
                                205,
                                31
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                205,
                                53
                            ],
                            "name": "builderTeam",
                            "start": [
                                205,
                                42
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                205,
                                64
                            ],
                            "name": "featureID",
                            "start": [
                                205,
                                55
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                205,
                                78
                            ],
                            "name": "featureDefID",
                            "start": [
                                205,
                                66
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                205,
                                84
                            ],
                            "name": "part",
                            "start": [
                                205,
                                80
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "Called just before a feature changes its build percentage.\n\nNote that this is also called for resurrecting features, and for refilling features with resources before resurrection.\nOn reclaim the part values are negative, and on refill and resurrect they are positive.\nPart is the percentage the feature be built or reclaimed per frame.\nEg. for a 30 workertime builder, that's a build power of 1 per frame.\nFor a 50 buildtime feature reclaimed by this builder, part will be 100/-50(/1) = -2%, or -0.02 numerically.\n\n@*return* `whether` — or not the change is permitted",
                    "finish": [
                        205,
                        89
                    ],
                    "rawdesc": "Called just before a feature changes its build percentage.\n\nNote that this is also called for resurrecting features, and for refilling features with resources before resurrection.\nOn reclaim the part values are negative, and on refill and resurrect they are positive.\nPart is the percentage the feature be built or reclaimed per frame.\nEg. for a 30 workertime builder, that's a build power of 1 per frame.\nFor a 50 buildtime feature reclaimed by this builder, part will be 100/-50(/1) = -2%, or -0.02 numerically.",
                    "returns": [
                        {
                            "desc": "or not the change is permitted",
                            "name": "whether",
                            "rawdesc": "or not the change is permitted",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        205,
                        0
                    ],
                    "type": "function",
                    "view": "function AllowFeatureBuildStep(builderID: integer, builderTeam: integer, featureID: integer, featureDefID: integer, part: number)\n  -> whether: boolean"
                },
                "file": "/generated/LuaHandleSynced.lua",
                "finish": [
                    205,
                    30
                ],
                "rawdesc": "Called just before a feature changes its build percentage.\n\nNote that this is also called for resurrecting features, and for refilling features with resources before resurrection.\nOn reclaim the part values are negative, and on refill and resurrect they are positive.\nPart is the percentage the feature be built or reclaimed per frame.\nEg. for a 30 workertime builder, that's a build power of 1 per frame.\nFor a 50 buildtime feature reclaimed by this builder, part will be 100/-50(/1) = -2%, or -0.02 numerically.",
                "start": [
                    205,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "AllowFeatureBuildStep",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Called just before feature is created.\n\n@*return* `whether` — or not the creation is permitted",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                189,
                                42
                            ],
                            "name": "featureDefID",
                            "start": [
                                189,
                                30
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                189,
                                50
                            ],
                            "name": "teamID",
                            "start": [
                                189,
                                44
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                189,
                                53
                            ],
                            "name": "x",
                            "start": [
                                189,
                                52
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                189,
                                56
                            ],
                            "name": "y",
                            "start": [
                                189,
                                55
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                189,
                                59
                            ],
                            "name": "z",
                            "start": [
                                189,
                                58
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "Called just before feature is created.\n\n@*return* `whether` — or not the creation is permitted",
                    "finish": [
                        189,
                        64
                    ],
                    "rawdesc": "Called just before feature is created.",
                    "returns": [
                        {
                            "desc": "or not the creation is permitted",
                            "name": "whether",
                            "rawdesc": "or not the creation is permitted",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        189,
                        0
                    ],
                    "type": "function",
                    "view": "function AllowFeatureCreation(featureDefID: integer, teamID: integer, x: number, y: number, z: number)\n  -> whether: boolean"
                },
                "file": "/generated/LuaHandleSynced.lua",
                "finish": [
                    189,
                    29
                ],
                "rawdesc": "Called just before feature is created.",
                "start": [
                    189,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "AllowFeatureCreation",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Called when a team sets the sharing level of a resource.\n\n@*return* `whether` — or not the sharing level is permitted",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                213,
                                34
                            ],
                            "name": "teamID",
                            "start": [
                                213,
                                28
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                213,
                                39
                            ],
                            "name": "res",
                            "start": [
                                213,
                                36
                            ],
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": [
                                213,
                                46
                            ],
                            "name": "level",
                            "start": [
                                213,
                                41
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "Called when a team sets the sharing level of a resource.\n\n@*return* `whether` — or not the sharing level is permitted",
                    "finish": [
                        213,
                        51
                    ],
                    "rawdesc": "Called when a team sets the sharing level of a resource.",
                    "returns": [
                        {
                            "desc": "or not the sharing level is permitted",
                            "name": "whether",
                            "rawdesc": "or not the sharing level is permitted",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        213,
                        0
                    ],
                    "type": "function",
                    "view": "function AllowResourceLevel(teamID: integer, res: string, level: number)\n  -> whether: boolean"
                },
                "file": "/generated/LuaHandleSynced.lua",
                "finish": [
                    213,
                    27
                ],
                "rawdesc": "Called when a team sets the sharing level of a resource.",
                "start": [
                    213,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "AllowResourceLevel",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Called just before resources are transferred between players.\n\n@*return* `whether` — or not the transfer is permitted.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                222,
                                40
                            ],
                            "name": "oldTeamID",
                            "start": [
                                222,
                                31
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                222,
                                51
                            ],
                            "name": "newTeamID",
                            "start": [
                                222,
                                42
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                222,
                                56
                            ],
                            "name": "res",
                            "start": [
                                222,
                                53
                            ],
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": [
                                222,
                                64
                            ],
                            "name": "amount",
                            "start": [
                                222,
                                58
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "Called just before resources are transferred between players.\n\n@*return* `whether` — or not the transfer is permitted.",
                    "finish": [
                        222,
                        69
                    ],
                    "rawdesc": "Called just before resources are transferred between players.",
                    "returns": [
                        {
                            "desc": "or not the transfer is permitted.",
                            "name": "whether",
                            "rawdesc": "or not the transfer is permitted.",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        222,
                        0
                    ],
                    "type": "function",
                    "view": "function AllowResourceTransfer(oldTeamID: integer, newTeamID: integer, res: string, amount: number)\n  -> whether: boolean"
                },
                "file": "/generated/LuaHandleSynced.lua",
                "finish": [
                    222,
                    30
                ],
                "rawdesc": "Called just before resources are transferred between players.",
                "start": [
                    222,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "AllowResourceTransfer",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Whether a start position should be allowed\n\nclamped{X,Y,Z} are the coordinates clamped into start-boxes, raw is where player tried to place their marker.\n\nThe readyState can be any one of:\n\n0 - player picked a position,\n1 - player clicked ready,\n2 - player pressed ready OR the game was force-started (player did not click ready, but is now forcibly readied) or\n3 - the player failed to load.\nThe default 'failed to choose' start-position is the north-west point of their startbox, or (0,0,0) if they do not have a startbox.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                270,
                                36
                            ],
                            "name": "playerID",
                            "start": [
                                270,
                                28
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                270,
                                44
                            ],
                            "name": "teamID",
                            "start": [
                                270,
                                38
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                270,
                                56
                            ],
                            "name": "readyState",
                            "start": [
                                270,
                                46
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                270,
                                66
                            ],
                            "name": "clampedX",
                            "start": [
                                270,
                                58
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                270,
                                76
                            ],
                            "name": "clampedY",
                            "start": [
                                270,
                                68
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                270,
                                86
                            ],
                            "name": "clampedZ",
                            "start": [
                                270,
                                78
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                270,
                                92
                            ],
                            "name": "rawX",
                            "start": [
                                270,
                                88
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                270,
                                98
                            ],
                            "name": "rawY",
                            "start": [
                                270,
                                94
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                270,
                                104
                            ],
                            "name": "rawZ",
                            "start": [
                                270,
                                100
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "Whether a start position should be allowed\n\nclamped{X,Y,Z} are the coordinates clamped into start-boxes, raw is where player tried to place their marker.\n\nThe readyState can be any one of:\n\n0 - player picked a position,\n1 - player clicked ready,\n2 - player pressed ready OR the game was force-started (player did not click ready, but is now forcibly readied) or\n3 - the player failed to load.\nThe default 'failed to choose' start-position is the north-west point of their startbox, or (0,0,0) if they do not have a startbox.",
                    "finish": [
                        270,
                        109
                    ],
                    "rawdesc": "Whether a start position should be allowed\n\nclamped{X,Y,Z} are the coordinates clamped into start-boxes, raw is where player tried to place their marker.\n\nThe readyState can be any one of:\n\n0 - player picked a position,\n1 - player clicked ready,\n2 - player pressed ready OR the game was force-started (player did not click ready, but is now forcibly readied) or\n3 - the player failed to load.\nThe default 'failed to choose' start-position is the north-west point of their startbox, or (0,0,0) if they do not have a startbox.",
                    "returns": [
                        {
                            "name": "allow",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        270,
                        0
                    ],
                    "type": "function",
                    "view": "function AllowStartPosition(playerID: integer, teamID: integer, readyState: number, clampedX: number, clampedY: number, clampedZ: number, rawX: number, rawY: number, rawZ: number)\n  -> allow: boolean"
                },
                "file": "/generated/LuaHandleSynced.lua",
                "finish": [
                    270,
                    27
                ],
                "rawdesc": "Whether a start position should be allowed\n\nclamped{X,Y,Z} are the coordinates clamped into start-boxes, raw is where player tried to place their marker.\n\nThe readyState can be any one of:\n\n0 - player picked a position,\n1 - player clicked ready,\n2 - player pressed ready OR the game was force-started (player did not click ready, but is now forcibly readied) or\n3 - the player failed to load.\nThe default 'failed to choose' start-position is the north-west point of their startbox, or (0,0,0) if they do not have a startbox.",
                "start": [
                    270,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "AllowStartPosition",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Called just before a unit progresses its build percentage.\n\n@*return* `whether` — or not the build makes progress.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                122,
                                37
                            ],
                            "name": "builderID",
                            "start": [
                                122,
                                28
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                122,
                                50
                            ],
                            "name": "builderTeam",
                            "start": [
                                122,
                                39
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                122,
                                58
                            ],
                            "name": "unitID",
                            "start": [
                                122,
                                52
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                122,
                                69
                            ],
                            "name": "unitDefID",
                            "start": [
                                122,
                                60
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                122,
                                75
                            ],
                            "name": "part",
                            "start": [
                                122,
                                71
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "Called just before a unit progresses its build percentage.\n\n@*return* `whether` — or not the build makes progress.",
                    "finish": [
                        122,
                        80
                    ],
                    "rawdesc": "Called just before a unit progresses its build percentage.",
                    "returns": [
                        {
                            "desc": "or not the build makes progress.",
                            "name": "whether",
                            "rawdesc": "or not the build makes progress.",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        122,
                        0
                    ],
                    "type": "function",
                    "view": "function AllowUnitBuildStep(builderID: integer, builderTeam: integer, unitID: integer, unitDefID: integer, part: number)\n  -> whether: boolean"
                },
                "file": "/generated/LuaHandleSynced.lua",
                "finish": [
                    122,
                    27
                ],
                "rawdesc": "Called just before a unit progresses its build percentage.",
                "start": [
                    122,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "AllowUnitBuildStep",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*return* `whether` — or not the capture makes progress.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                130,
                                39
                            ],
                            "name": "builderID",
                            "start": [
                                130,
                                30
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                130,
                                52
                            ],
                            "name": "builderTeam",
                            "start": [
                                130,
                                41
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                130,
                                60
                            ],
                            "name": "unitID",
                            "start": [
                                130,
                                54
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                130,
                                71
                            ],
                            "name": "unitDefID",
                            "start": [
                                130,
                                62
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                130,
                                77
                            ],
                            "name": "part",
                            "start": [
                                130,
                                73
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "@*return* `whether` — or not the capture makes progress.",
                    "finish": [
                        130,
                        82
                    ],
                    "returns": [
                        {
                            "desc": "or not the capture makes progress.",
                            "name": "whether",
                            "rawdesc": "or not the capture makes progress.",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        130,
                        0
                    ],
                    "type": "function",
                    "view": "function AllowUnitCaptureStep(builderID: integer, builderTeam: integer, unitID: integer, unitDefID: integer, part: number)\n  -> whether: boolean"
                },
                "file": "/generated/LuaHandleSynced.lua",
                "finish": [
                    130,
                    29
                ],
                "start": [
                    130,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "AllowUnitCaptureStep",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*return* `whether` — unit is allowed to cloak",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                168,
                                30
                            ],
                            "name": "unitID",
                            "start": [
                                168,
                                24
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                168,
                                39
                            ],
                            "name": "enemyID",
                            "start": [
                                168,
                                32
                            ],
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "@*return* `whether` — unit is allowed to cloak",
                    "finish": [
                        168,
                        44
                    ],
                    "returns": [
                        {
                            "desc": "unit is allowed to cloak",
                            "name": "whether",
                            "rawdesc": "unit is allowed to cloak",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        168,
                        0
                    ],
                    "type": "function",
                    "view": "function AllowUnitCloak(unitID: integer, enemyID?: integer)\n  -> whether: boolean"
                },
                "file": "/generated/LuaHandleSynced.lua",
                "finish": [
                    168,
                    23
                ],
                "start": [
                    168,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "@*return* `whether` — unit is allowed to decloak",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                174,
                                30
                            ],
                            "name": "unitID",
                            "start": [
                                174,
                                24
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                174,
                                40
                            ],
                            "name": "objectID",
                            "start": [
                                174,
                                32
                            ],
                            "type": "local",
                            "view": "integer?"
                        },
                        {
                            "finish": [
                                174,
                                51
                            ],
                            "name": "weaponNum",
                            "start": [
                                174,
                                42
                            ],
                            "type": "local",
                            "view": "number?"
                        }
                    ],
                    "desc": "@*return* `whether` — unit is allowed to decloak",
                    "finish": [
                        174,
                        56
                    ],
                    "returns": [
                        {
                            "desc": "unit is allowed to decloak",
                            "name": "whether",
                            "rawdesc": "unit is allowed to decloak",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        174,
                        0
                    ],
                    "type": "function",
                    "view": "function AllowUnitCloak(unitID: integer, objectID?: integer, weaponNum?: number)\n  -> whether: boolean"
                },
                "file": "/generated/LuaHandleSynced.lua",
                "finish": [
                    174,
                    23
                ],
                "start": [
                    174,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "AllowUnitCloak",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Called just before unit is created.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                102,
                                36
                            ],
                            "name": "unitDefID",
                            "start": [
                                102,
                                27
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                102,
                                47
                            ],
                            "name": "builderID",
                            "start": [
                                102,
                                38
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                102,
                                60
                            ],
                            "name": "builderTeam",
                            "start": [
                                102,
                                49
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                102,
                                63
                            ],
                            "name": "x",
                            "start": [
                                102,
                                62
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                102,
                                66
                            ],
                            "name": "y",
                            "start": [
                                102,
                                65
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                102,
                                69
                            ],
                            "name": "z",
                            "start": [
                                102,
                                68
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                102,
                                77
                            ],
                            "name": "facing",
                            "start": [
                                102,
                                71
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "Called just before unit is created.",
                    "finish": [
                        102,
                        82
                    ],
                    "rawdesc": "Called just before unit is created.",
                    "returns": [
                        {
                            "name": "allow",
                            "type": "function.return",
                            "view": "boolean"
                        },
                        {
                            "name": "dropOrder",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        102,
                        0
                    ],
                    "type": "function",
                    "view": "function AllowUnitCreation(unitDefID: integer, builderID: integer, builderTeam: integer, x: number, y: number, z: number, facing: number)\n  -> allow: boolean\n  2. dropOrder: boolean"
                },
                "file": "/generated/LuaHandleSynced.lua",
                "finish": [
                    102,
                    26
                ],
                "rawdesc": "Called just before unit is created.",
                "start": [
                    102,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "AllowUnitCreation",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*return* `whether` — unit is allowed to selfd",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                179,
                                33
                            ],
                            "name": "unitID",
                            "start": [
                                179,
                                27
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                179,
                                43
                            ],
                            "name": "targetID",
                            "start": [
                                179,
                                35
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "@*return* `whether` — unit is allowed to selfd",
                    "finish": [
                        179,
                        48
                    ],
                    "returns": [
                        {
                            "desc": "unit is allowed to selfd",
                            "name": "whether",
                            "rawdesc": "unit is allowed to selfd",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        179,
                        0
                    ],
                    "type": "function",
                    "view": "function AllowUnitKamikaze(unitID: integer, targetID: integer)\n  -> whether: boolean"
                },
                "file": "/generated/LuaHandleSynced.lua",
                "finish": [
                    179,
                    26
                ],
                "start": [
                    179,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "AllowUnitKamikaze",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Called just before a unit is transferred to a different team.\n\n@*return* `whether` — or not the transfer is permitted.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                112,
                                33
                            ],
                            "name": "unitID",
                            "start": [
                                112,
                                27
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                112,
                                44
                            ],
                            "name": "unitDefID",
                            "start": [
                                112,
                                35
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                112,
                                53
                            ],
                            "name": "oldTeam",
                            "start": [
                                112,
                                46
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                112,
                                62
                            ],
                            "name": "newTeam",
                            "start": [
                                112,
                                55
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                112,
                                71
                            ],
                            "name": "capture",
                            "start": [
                                112,
                                64
                            ],
                            "type": "local",
                            "view": "boolean"
                        }
                    ],
                    "desc": "Called just before a unit is transferred to a different team.\n\n@*return* `whether` — or not the transfer is permitted.",
                    "finish": [
                        112,
                        76
                    ],
                    "rawdesc": "Called just before a unit is transferred to a different team.",
                    "returns": [
                        {
                            "desc": "or not the transfer is permitted.",
                            "name": "whether",
                            "rawdesc": "or not the transfer is permitted.",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        112,
                        0
                    ],
                    "type": "function",
                    "view": "function AllowUnitTransfer(unitID: integer, unitDefID: integer, oldTeam: integer, newTeam: integer, capture: boolean)\n  -> whether: boolean"
                },
                "file": "/generated/LuaHandleSynced.lua",
                "finish": [
                    112,
                    26
                ],
                "rawdesc": "Called just before a unit is transferred to a different team.",
                "start": [
                    112,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "AllowUnitTransfer",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*return* `whether` — or not the transport is allowed",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                139,
                                41
                            ],
                            "name": "transporterID",
                            "start": [
                                139,
                                28
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                139,
                                63
                            ],
                            "name": "transporterUnitDefID",
                            "start": [
                                139,
                                43
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                139,
                                80
                            ],
                            "name": "transporterTeam",
                            "start": [
                                139,
                                65
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                139,
                                95
                            ],
                            "name": "transporteeID",
                            "start": [
                                139,
                                82
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                139,
                                117
                            ],
                            "name": "transporteeUnitDefID",
                            "start": [
                                139,
                                97
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                139,
                                134
                            ],
                            "name": "transporteeTeam",
                            "start": [
                                139,
                                119
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "@*return* `whether` — or not the transport is allowed",
                    "finish": [
                        139,
                        139
                    ],
                    "returns": [
                        {
                            "desc": "or not the transport is allowed",
                            "name": "whether",
                            "rawdesc": "or not the transport is allowed",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        139,
                        0
                    ],
                    "type": "function",
                    "view": "function AllowUnitTransport(transporterID: integer, transporterUnitDefID: integer, transporterTeam: integer, transporteeID: integer, transporteeUnitDefID: integer, transporteeTeam: integer)\n  -> whether: boolean"
                },
                "file": "/generated/LuaHandleSynced.lua",
                "finish": [
                    139,
                    27
                ],
                "start": [
                    139,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "AllowUnitTransport",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*return* `whether` — or not the transport load is allowed",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                151,
                                45
                            ],
                            "name": "transporterID",
                            "start": [
                                151,
                                32
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                151,
                                67
                            ],
                            "name": "transporterUnitDefID",
                            "start": [
                                151,
                                47
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                151,
                                84
                            ],
                            "name": "transporterTeam",
                            "start": [
                                151,
                                69
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                151,
                                99
                            ],
                            "name": "transporteeID",
                            "start": [
                                151,
                                86
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                151,
                                121
                            ],
                            "name": "transporteeUnitDefID",
                            "start": [
                                151,
                                101
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                151,
                                138
                            ],
                            "name": "transporteeTeam",
                            "start": [
                                151,
                                123
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                151,
                                141
                            ],
                            "name": "x",
                            "start": [
                                151,
                                140
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                151,
                                144
                            ],
                            "name": "y",
                            "start": [
                                151,
                                143
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                151,
                                147
                            ],
                            "name": "z",
                            "start": [
                                151,
                                146
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "@*return* `whether` — or not the transport load is allowed",
                    "finish": [
                        151,
                        152
                    ],
                    "returns": [
                        {
                            "desc": "or not the transport load is allowed",
                            "name": "whether",
                            "rawdesc": "or not the transport load is allowed",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        151,
                        0
                    ],
                    "type": "function",
                    "view": "function AllowUnitTransportLoad(transporterID: integer, transporterUnitDefID: integer, transporterTeam: integer, transporteeID: integer, transporteeUnitDefID: integer, transporteeTeam: integer, x: number, y: number, z: number)\n  -> whether: boolean"
                },
                "file": "/generated/LuaHandleSynced.lua",
                "finish": [
                    151,
                    31
                ],
                "start": [
                    151,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "AllowUnitTransportLoad",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*return* `whether` — or not the transport unload is allowed",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                163,
                                47
                            ],
                            "name": "transporterID",
                            "start": [
                                163,
                                34
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                163,
                                69
                            ],
                            "name": "transporterUnitDefID",
                            "start": [
                                163,
                                49
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                163,
                                86
                            ],
                            "name": "transporterTeam",
                            "start": [
                                163,
                                71
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                163,
                                101
                            ],
                            "name": "transporteeID",
                            "start": [
                                163,
                                88
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                163,
                                123
                            ],
                            "name": "transporteeUnitDefID",
                            "start": [
                                163,
                                103
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                163,
                                140
                            ],
                            "name": "transporteeTeam",
                            "start": [
                                163,
                                125
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                163,
                                143
                            ],
                            "name": "x",
                            "start": [
                                163,
                                142
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                163,
                                146
                            ],
                            "name": "y",
                            "start": [
                                163,
                                145
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                163,
                                149
                            ],
                            "name": "z",
                            "start": [
                                163,
                                148
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "@*return* `whether` — or not the transport unload is allowed",
                    "finish": [
                        163,
                        154
                    ],
                    "returns": [
                        {
                            "desc": "or not the transport unload is allowed",
                            "name": "whether",
                            "rawdesc": "or not the transport unload is allowed",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        163,
                        0
                    ],
                    "type": "function",
                    "view": "function AllowUnitTransportUnload(transporterID: integer, transporterUnitDefID: integer, transporterTeam: integer, transporteeID: integer, transporteeUnitDefID: integer, transporteeTeam: integer, x: number, y: number, z: number)\n  -> whether: boolean"
                },
                "file": "/generated/LuaHandleSynced.lua",
                "finish": [
                    163,
                    33
                ],
                "start": [
                    163,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "AllowUnitTransportUnload",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Controls blocking of a specific intercept target from being considered during an interceptor weapon's periodic auto-targeting sweep.\n\nOnly called for weaponDefIDs registered via Script.SetWatchWeapon.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                390,
                                53
                            ],
                            "name": "interceptorUnitID",
                            "start": [
                                390,
                                36
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                390,
                                74
                            ],
                            "name": "interceptorWeaponID",
                            "start": [
                                390,
                                55
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                390,
                                94
                            ],
                            "name": "targetProjectileID",
                            "start": [
                                390,
                                76
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Controls blocking of a specific intercept target from being considered during an interceptor weapon's periodic auto-targeting sweep.\n\nOnly called for weaponDefIDs registered via Script.SetWatchWeapon.",
                    "finish": [
                        390,
                        99
                    ],
                    "rawdesc": "Controls blocking of a specific intercept target from being considered during an interceptor weapon's periodic auto-targeting sweep.\n\nOnly called for weaponDefIDs registered via Script.SetWatchWeapon.",
                    "returns": [
                        {
                            "name": "allowed",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        390,
                        0
                    ],
                    "type": "function",
                    "view": "function AllowWeaponInterceptTarget(interceptorUnitID: integer, interceptorWeaponID: integer, targetProjectileID: integer)\n  -> allowed: boolean"
                },
                "file": "/generated/LuaHandleSynced.lua",
                "finish": [
                    390,
                    35
                ],
                "rawdesc": "Controls blocking of a specific intercept target from being considered during an interceptor weapon's periodic auto-targeting sweep.\n\nOnly called for weaponDefIDs registered via Script.SetWatchWeapon.",
                "start": [
                    390,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "AllowWeaponInterceptTarget",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Controls blocking of a specific target from being considered during a weapon's periodic auto-targeting sweep.\n\n@*return* `allowed`\n\n@*return* `the` — new priority for this target (if you don't want to change it, return defPriority). Lower priority targets are targeted first.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                380,
                                37
                            ],
                            "name": "attackerID",
                            "start": [
                                380,
                                27
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                380,
                                47
                            ],
                            "name": "targetID",
                            "start": [
                                380,
                                39
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                380,
                                66
                            ],
                            "name": "attackerWeaponNum",
                            "start": [
                                380,
                                49
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                380,
                                87
                            ],
                            "name": "attackerWeaponDefID",
                            "start": [
                                380,
                                68
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                380,
                                100
                            ],
                            "name": "defPriority",
                            "start": [
                                380,
                                89
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "Controls blocking of a specific target from being considered during a weapon's periodic auto-targeting sweep.\n\n@*return* `allowed`\n\n@*return* `the` — new priority for this target (if you don't want to change it, return defPriority). Lower priority targets are targeted first.",
                    "finish": [
                        380,
                        105
                    ],
                    "rawdesc": "Controls blocking of a specific target from being considered during a weapon's periodic auto-targeting sweep.",
                    "returns": [
                        {
                            "name": "allowed",
                            "type": "function.return",
                            "view": "boolean"
                        },
                        {
                            "desc": "new priority for this target (if you don't want to change it, return defPriority). Lower priority targets are targeted first.",
                            "name": "the",
                            "rawdesc": "new priority for this target (if you don't want to change it, return defPriority). Lower priority targets are targeted first.",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        380,
                        0
                    ],
                    "type": "function",
                    "view": "function AllowWeaponTarget(attackerID: integer, targetID: integer, attackerWeaponNum: integer, attackerWeaponDefID: integer, defPriority: number)\n  -> allowed: boolean\n  2. the: number"
                },
                "file": "/generated/LuaHandleSynced.lua",
                "finish": [
                    380,
                    26
                ],
                "rawdesc": "Controls blocking of a specific target from being considered during a weapon's periodic auto-targeting sweep.",
                "start": [
                    380,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "AllowWeaponTarget",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Determines if this weapon can automatically generate targets itself. See also commandFire weaponDef tag.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                369,
                                42
                            ],
                            "name": "attackerID",
                            "start": [
                                369,
                                32
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                369,
                                61
                            ],
                            "name": "attackerWeaponNum",
                            "start": [
                                369,
                                44
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                369,
                                82
                            ],
                            "name": "attackerWeaponDefID",
                            "start": [
                                369,
                                63
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Determines if this weapon can automatically generate targets itself. See also commandFire weaponDef tag.",
                    "finish": [
                        369,
                        87
                    ],
                    "rawdesc": "Determines if this weapon can automatically generate targets itself. See also commandFire weaponDef tag.",
                    "returns": [
                        {
                            "name": "allowCheck",
                            "type": "function.return",
                            "view": "boolean"
                        },
                        {
                            "name": "ignoreCheck",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        369,
                        0
                    ],
                    "type": "function",
                    "view": "function AllowWeaponTargetCheck(attackerID: integer, attackerWeaponNum: integer, attackerWeaponDefID: integer)\n  -> allowCheck: boolean\n  2. ignoreCheck: boolean"
                },
                "file": "/generated/LuaHandleSynced.lua",
                "finish": [
                    369,
                    31
                ],
                "rawdesc": "Determines if this weapon can automatically generate targets itself. See also commandFire weaponDef tag.",
                "start": [
                    369,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "AllowWeaponTargetCheck",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    909,
                    26
                ],
                "start": [
                    909,
                    10
                ],
                "type": "doc.class",
                "view": "AtmosphereParams",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Color quadruple (RGBA)\n",
                "extends": {
                    "desc": "Color quadruple (RGBA)\n",
                    "finish": [
                        914,
                        25
                    ],
                    "rawdesc": "Color quadruple (RGBA)\n",
                    "start": [
                        914,
                        21
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "desc": "Color quadruple (RGBA)\n",
                            "finish": [
                                914,
                                25
                            ],
                            "rawdesc": "Color quadruple (RGBA)\n",
                            "start": [
                                914,
                                21
                            ],
                            "type": "doc.type.name",
                            "view": "rgba"
                        }
                    ],
                    "view": "rgba"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    914,
                    25
                ],
                "name": "cloudColor",
                "rawdesc": "Color quadruple (RGBA)\n",
                "start": [
                    914,
                    10
                ],
                "type": "doc.field",
                "view": "rgba",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        911,
                        23
                    ],
                    "start": [
                        911,
                        17
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                911,
                                23
                            ],
                            "start": [
                                911,
                                17
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    911,
                    23
                ],
                "name": "fogEnd",
                "start": [
                    911,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        910,
                        25
                    ],
                    "start": [
                        910,
                        19
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                910,
                                25
                            ],
                            "start": [
                                910,
                                19
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    910,
                    25
                ],
                "name": "fogStart",
                "start": [
                    910,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Color quadruple (RGBA)\n",
                "extends": {
                    "desc": "Color quadruple (RGBA)\n",
                    "finish": [
                        913,
                        23
                    ],
                    "rawdesc": "Color quadruple (RGBA)\n",
                    "start": [
                        913,
                        19
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "desc": "Color quadruple (RGBA)\n",
                            "finish": [
                                913,
                                23
                            ],
                            "rawdesc": "Color quadruple (RGBA)\n",
                            "start": [
                                913,
                                19
                            ],
                            "type": "doc.type.name",
                            "view": "rgba"
                        }
                    ],
                    "view": "rgba"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    913,
                    23
                ],
                "name": "skyColor",
                "rawdesc": "Color quadruple (RGBA)\n",
                "start": [
                    913,
                    10
                ],
                "type": "doc.field",
                "view": "rgba",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Color quadruple (RGBA)\n",
                "extends": {
                    "desc": "Color quadruple (RGBA)\n",
                    "finish": [
                        912,
                        23
                    ],
                    "rawdesc": "Color quadruple (RGBA)\n",
                    "start": [
                        912,
                        19
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "desc": "Color quadruple (RGBA)\n",
                            "finish": [
                                912,
                                23
                            ],
                            "rawdesc": "Color quadruple (RGBA)\n",
                            "start": [
                                912,
                                19
                            ],
                            "type": "doc.type.name",
                            "view": "rgba"
                        }
                    ],
                    "view": "rgba"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    912,
                    23
                ],
                "name": "sunColor",
                "rawdesc": "Color quadruple (RGBA)\n",
                "start": [
                    912,
                    10
                ],
                "type": "doc.field",
                "view": "rgba",
                "visible": "public"
            }
        ],
        "name": "AtmosphereParams",
        "type": "type",
        "view": "AtmosphereParams"
    },
    {
        "defines": [
            {
                "desc": "```lua\nBuildOrderBlockedStatus:\n    | 0 -- blocked\n    | 1 -- mobile unit on the way\n    | 2 -- reclaimable\n    | 3 -- open\n```",
                "finish": [
                    1432,
                    6
                ],
                "rawdesc": "```lua\nBuildOrderBlockedStatus:\n    | 0 -- blocked\n    | 1 -- mobile unit on the way\n    | 2 -- reclaimable\n    | 3 -- open\n```",
                "start": [
                    1428,
                    10
                ],
                "type": "doc.alias",
                "view": "0|1|2|3"
            }
        ],
        "fields": [],
        "name": "BuildOrderBlockedStatus",
        "type": "type",
        "view": "BuildOrderBlockedStatus"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        197,
                        1
                    ],
                    "start": [
                        14,
                        6
                    ],
                    "type": "table",
                    "view": "enum CMD"
                },
                "file": "/generated/LuaConstCMD.lua",
                "finish": [
                    14,
                    3
                ],
                "start": [
                    14,
                    0
                ],
                "type": "setglobal",
                "view": "enum CMD",
                "visible": "public"
            }
        ],
        "name": "CMD",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        64,
                        1
                    ],
                    "start": [
                        16,
                        10
                    ],
                    "type": "table",
                    "view": "enum CMDTYPE"
                },
                "file": "/generated/LuaConstCMDTYPE.lua",
                "finish": [
                    16,
                    7
                ],
                "start": [
                    16,
                    0
                ],
                "type": "setglobal",
                "view": "enum CMDTYPE",
                "visible": "public"
            }
        ],
        "name": "CMDTYPE",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        245,
                        1
                    ],
                    "start": [
                        14,
                        6
                    ],
                    "type": "table",
                    "view": "enum COB"
                },
                "file": "/generated/LuaConstCOB.lua",
                "finish": [
                    14,
                    3
                ],
                "start": [
                    14,
                    0
                ],
                "type": "setglobal",
                "view": "enum COB",
                "visible": "public"
            }
        ],
        "name": "COB",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "desc": "```lua\nCameraMode:\n    | 0 -- fps\n    | 1 -- ta\n    | 2 -- spring\n    | 3 -- rot\n    | 4 -- free\n    | 5 -- ov\n    | 6 -- dummy\n```",
                "finish": [
                    45,
                    6
                ],
                "rawdesc": "```lua\nCameraMode:\n    | 0 -- fps\n    | 1 -- ta\n    | 2 -- spring\n    | 3 -- rot\n    | 4 -- free\n    | 5 -- ov\n    | 6 -- dummy\n```",
                "start": [
                    38,
                    10
                ],
                "type": "doc.alias",
                "view": "0|1|2|3|4...(+2)"
            }
        ],
        "fields": [],
        "name": "CameraMode",
        "type": "type",
        "view": "CameraMode"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Parameters for camera state\n",
                "file": "/Types.lua",
                "finish": [
                    49,
                    21
                ],
                "rawdesc": "Parameters for camera state\n",
                "start": [
                    49,
                    10
                ],
                "type": "doc.class",
                "view": "CameraState",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Camera rotation angle on X axis (aka tilt/pitch) (ta)",
                "extends": {
                    "finish": [
                        64,
                        23
                    ],
                    "start": [
                        64,
                        16
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                64,
                                22
                            ],
                            "start": [
                                64,
                                16
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number?"
                },
                "file": "/Types.lua",
                "finish": [
                    64,
                    23
                ],
                "name": "angle",
                "rawdesc": "Camera rotation angle on X axis (aka tilt/pitch) (ta)",
                "start": [
                    64,
                    10
                ],
                "type": "doc.field",
                "view": "number?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Camera distance from the ground (spring)",
                "extends": {
                    "finish": [
                        66,
                        22
                    ],
                    "start": [
                        66,
                        15
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                66,
                                21
                            ],
                            "start": [
                                66,
                                15
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number?"
                },
                "file": "/Types.lua",
                "finish": [
                    66,
                    22
                ],
                "name": "dist",
                "rawdesc": "Camera distance from the ground (spring)",
                "start": [
                    66,
                    10
                ],
                "type": "doc.field",
                "view": "number?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Camera direction vector X",
                "extends": {
                    "finish": [
                        58,
                        20
                    ],
                    "start": [
                        58,
                        13
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                58,
                                19
                            ],
                            "start": [
                                58,
                                13
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number?"
                },
                "file": "/Types.lua",
                "finish": [
                    58,
                    20
                ],
                "name": "dx",
                "rawdesc": "Camera direction vector X",
                "start": [
                    58,
                    10
                ],
                "type": "doc.field",
                "view": "number?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Camera direction vector Y",
                "extends": {
                    "finish": [
                        59,
                        20
                    ],
                    "start": [
                        59,
                        13
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                59,
                                19
                            ],
                            "start": [
                                59,
                                13
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number?"
                },
                "file": "/Types.lua",
                "finish": [
                    59,
                    20
                ],
                "name": "dy",
                "rawdesc": "Camera direction vector Y",
                "start": [
                    59,
                    10
                ],
                "type": "doc.field",
                "view": "number?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Camera direction vector Z",
                "extends": {
                    "finish": [
                        60,
                        20
                    ],
                    "start": [
                        60,
                        13
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                60,
                                19
                            ],
                            "start": [
                                60,
                                13
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number?"
                },
                "file": "/Types.lua",
                "finish": [
                    60,
                    20
                ],
                "name": "dz",
                "rawdesc": "Camera direction vector Z",
                "start": [
                    60,
                    10
                ],
                "type": "doc.field",
                "view": "number?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "1 for when south is down, 1 for when north is down (ta)",
                "extends": {
                    "finish": [
                        65,
                        25
                    ],
                    "start": [
                        65,
                        18
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                65,
                                24
                            ],
                            "start": [
                                65,
                                18
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number?"
                },
                "file": "/Types.lua",
                "finish": [
                    65,
                    25
                ],
                "name": "flipped",
                "rawdesc": "1 for when south is down, 1 for when north is down (ta)",
                "start": [
                    65,
                    10
                ],
                "type": "doc.field",
                "view": "number?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        54,
                        21
                    ],
                    "start": [
                        54,
                        14
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                54,
                                20
                            ],
                            "start": [
                                54,
                                14
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number?"
                },
                "file": "/Types.lua",
                "finish": [
                    54,
                    21
                ],
                "name": "fov",
                "start": [
                    54,
                    10
                ],
                "type": "doc.field",
                "view": "number?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Camera distance from the ground (ta)",
                "extends": {
                    "finish": [
                        67,
                        24
                    ],
                    "start": [
                        67,
                        17
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                67,
                                23
                            ],
                            "start": [
                                67,
                                17
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number?"
                },
                "file": "/Types.lua",
                "finish": [
                    67,
                    24
                ],
                "name": "height",
                "rawdesc": "Camera distance from the ground (ta)",
                "start": [
                    67,
                    10
                ],
                "type": "doc.field",
                "view": "number?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "The camera mode",
                "extends": {
                    "finish": [
                        53,
                        25
                    ],
                    "start": [
                        53,
                        15
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                53,
                                25
                            ],
                            "start": [
                                53,
                                15
                            ],
                            "type": "doc.type.name",
                            "view": "0|1|2|3|4...(+2)"
                        }
                    ],
                    "view": "0|1|2|3|4...(+2)"
                },
                "file": "/Types.lua",
                "finish": [
                    53,
                    25
                ],
                "name": "mode",
                "rawdesc": "The camera mode",
                "start": [
                    53,
                    10
                ],
                "type": "doc.field",
                "view": "0|1|2|3|4...(+2)",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nHighly dependent on the type of the current camera controller",
                "extends": {
                    "finish": [
                        52,
                        60
                    ],
                    "start": [
                        52,
                        15
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                52,
                                19
                            ],
                            "start": [
                                52,
                                15
                            ],
                            "type": "doc.type.string",
                            "view": "\"ta\""
                        },
                        {
                            "finish": [
                                52,
                                28
                            ],
                            "start": [
                                52,
                                20
                            ],
                            "type": "doc.type.string",
                            "view": "\"spring\""
                        },
                        {
                            "finish": [
                                52,
                                34
                            ],
                            "start": [
                                52,
                                29
                            ],
                            "type": "doc.type.string",
                            "view": "\"rot\""
                        },
                        {
                            "finish": [
                                52,
                                39
                            ],
                            "start": [
                                52,
                                35
                            ],
                            "type": "doc.type.string",
                            "view": "\"ov\""
                        },
                        {
                            "finish": [
                                52,
                                46
                            ],
                            "start": [
                                52,
                                40
                            ],
                            "type": "doc.type.string",
                            "view": "\"free\""
                        },
                        {
                            "finish": [
                                52,
                                52
                            ],
                            "start": [
                                52,
                                47
                            ],
                            "type": "doc.type.string",
                            "view": "\"fps\""
                        },
                        {
                            "finish": [
                                52,
                                60
                            ],
                            "start": [
                                52,
                                53
                            ],
                            "type": "doc.type.string",
                            "view": "\"dummy\""
                        }
                    ],
                    "view": "\"dummy\"|\"fps\"|\"free\"|\"ov\"|\"rot\"...(+2)"
                },
                "file": "/Types.lua",
                "finish": [
                    52,
                    60
                ],
                "name": "name",
                "rawdesc": "\nHighly dependent on the type of the current camera controller",
                "start": [
                    52,
                    10
                ],
                "type": "doc.field",
                "view": "\"dummy\"|\"fps\"|\"free\"|\"ov\"|\"rot\"...(+2)",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Camera distance from the ground, cannot be changed (rot)",
                "extends": {
                    "finish": [
                        68,
                        27
                    ],
                    "start": [
                        68,
                        20
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                68,
                                26
                            ],
                            "start": [
                                68,
                                20
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number?"
                },
                "file": "/Types.lua",
                "finish": [
                    68,
                    27
                ],
                "name": "oldHeight",
                "rawdesc": "Camera distance from the ground, cannot be changed (rot)",
                "start": [
                    68,
                    10
                ],
                "type": "doc.field",
                "view": "number?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Position X of the ground point in screen center",
                "extends": {
                    "finish": [
                        55,
                        20
                    ],
                    "start": [
                        55,
                        13
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                55,
                                19
                            ],
                            "start": [
                                55,
                                13
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number?"
                },
                "file": "/Types.lua",
                "finish": [
                    55,
                    20
                ],
                "name": "px",
                "rawdesc": "Position X of the ground point in screen center",
                "start": [
                    55,
                    10
                ],
                "type": "doc.field",
                "view": "number?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Position Y of the ground point in screen center",
                "extends": {
                    "finish": [
                        56,
                        20
                    ],
                    "start": [
                        56,
                        13
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                56,
                                19
                            ],
                            "start": [
                                56,
                                13
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number?"
                },
                "file": "/Types.lua",
                "finish": [
                    56,
                    20
                ],
                "name": "py",
                "rawdesc": "Position Y of the ground point in screen center",
                "start": [
                    56,
                    10
                ],
                "type": "doc.field",
                "view": "number?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Position Z of the ground point in screen center",
                "extends": {
                    "finish": [
                        57,
                        20
                    ],
                    "start": [
                        57,
                        13
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                57,
                                19
                            ],
                            "start": [
                                57,
                                13
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number?"
                },
                "file": "/Types.lua",
                "finish": [
                    57,
                    20
                ],
                "name": "pz",
                "rawdesc": "Position Z of the ground point in screen center",
                "start": [
                    57,
                    10
                ],
                "type": "doc.field",
                "view": "number?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Camera rotation angle on X axis (spring)",
                "extends": {
                    "finish": [
                        61,
                        20
                    ],
                    "start": [
                        61,
                        13
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                61,
                                19
                            ],
                            "start": [
                                61,
                                13
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number?"
                },
                "file": "/Types.lua",
                "finish": [
                    61,
                    20
                ],
                "name": "rx",
                "rawdesc": "Camera rotation angle on X axis (spring)",
                "start": [
                    61,
                    10
                ],
                "type": "doc.field",
                "view": "number?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Camera rotation angle on Y axis (spring)",
                "extends": {
                    "finish": [
                        62,
                        20
                    ],
                    "start": [
                        62,
                        13
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                62,
                                19
                            ],
                            "start": [
                                62,
                                13
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number?"
                },
                "file": "/Types.lua",
                "finish": [
                    62,
                    20
                ],
                "name": "ry",
                "rawdesc": "Camera rotation angle on Y axis (spring)",
                "start": [
                    62,
                    10
                ],
                "type": "doc.field",
                "view": "number?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Camera rotation angle on Z axis (spring)",
                "extends": {
                    "finish": [
                        63,
                        20
                    ],
                    "start": [
                        63,
                        13
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                63,
                                19
                            ],
                            "start": [
                                63,
                                13
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number?"
                },
                "file": "/Types.lua",
                "finish": [
                    63,
                    20
                ],
                "name": "rz",
                "rawdesc": "Camera rotation angle on Z axis (spring)",
                "start": [
                    63,
                    10
                ],
                "type": "doc.field",
                "view": "number?",
                "visible": "public"
            }
        ],
        "name": "CameraState",
        "type": "type",
        "view": "CameraState"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    563,
                    23
                ],
                "start": [
                    563,
                    10
                ],
                "type": "doc.class",
                "view": "CameraVectors",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Cartesian triple (XYZ)\n",
                "extends": {
                    "desc": "Cartesian triple (XYZ)\n",
                    "finish": [
                        568,
                        29
                    ],
                    "rawdesc": "Cartesian triple (XYZ)\n",
                    "start": [
                        568,
                        26
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "desc": "Cartesian triple (XYZ)\n",
                            "finish": [
                                568,
                                29
                            ],
                            "rawdesc": "Cartesian triple (XYZ)\n",
                            "start": [
                                568,
                                26
                            ],
                            "type": "doc.type.name",
                            "view": "xyz"
                        }
                    ],
                    "view": "xyz"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    568,
                    29
                ],
                "name": "botFrustumPlane",
                "rawdesc": "Cartesian triple (XYZ)\n",
                "start": [
                    568,
                    10
                ],
                "type": "doc.field",
                "view": "xyz",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Cartesian triple (XYZ)\n",
                "extends": {
                    "desc": "Cartesian triple (XYZ)\n",
                    "finish": [
                        564,
                        21
                    ],
                    "rawdesc": "Cartesian triple (XYZ)\n",
                    "start": [
                        564,
                        18
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "desc": "Cartesian triple (XYZ)\n",
                            "finish": [
                                564,
                                21
                            ],
                            "rawdesc": "Cartesian triple (XYZ)\n",
                            "start": [
                                564,
                                18
                            ],
                            "type": "doc.type.name",
                            "view": "xyz"
                        }
                    ],
                    "view": "xyz"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    564,
                    21
                ],
                "name": "forward",
                "rawdesc": "Cartesian triple (XYZ)\n",
                "start": [
                    564,
                    10
                ],
                "type": "doc.field",
                "view": "xyz",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Cartesian triple (XYZ)\n",
                "extends": {
                    "desc": "Cartesian triple (XYZ)\n",
                    "finish": [
                        569,
                        29
                    ],
                    "rawdesc": "Cartesian triple (XYZ)\n",
                    "start": [
                        569,
                        26
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "desc": "Cartesian triple (XYZ)\n",
                            "finish": [
                                569,
                                29
                            ],
                            "rawdesc": "Cartesian triple (XYZ)\n",
                            "start": [
                                569,
                                26
                            ],
                            "type": "doc.type.name",
                            "view": "xyz"
                        }
                    ],
                    "view": "xyz"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    569,
                    29
                ],
                "name": "lftFrustumPlane",
                "rawdesc": "Cartesian triple (XYZ)\n",
                "start": [
                    569,
                    10
                ],
                "type": "doc.field",
                "view": "xyz",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Cartesian triple (XYZ)\n",
                "extends": {
                    "desc": "Cartesian triple (XYZ)\n",
                    "finish": [
                        570,
                        29
                    ],
                    "rawdesc": "Cartesian triple (XYZ)\n",
                    "start": [
                        570,
                        26
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "desc": "Cartesian triple (XYZ)\n",
                            "finish": [
                                570,
                                29
                            ],
                            "rawdesc": "Cartesian triple (XYZ)\n",
                            "start": [
                                570,
                                26
                            ],
                            "type": "doc.type.name",
                            "view": "xyz"
                        }
                    ],
                    "view": "xyz"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    570,
                    29
                ],
                "name": "rgtFrustumPlane",
                "rawdesc": "Cartesian triple (XYZ)\n",
                "start": [
                    570,
                    10
                ],
                "type": "doc.field",
                "view": "xyz",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Cartesian triple (XYZ)\n",
                "extends": {
                    "desc": "Cartesian triple (XYZ)\n",
                    "finish": [
                        566,
                        19
                    ],
                    "rawdesc": "Cartesian triple (XYZ)\n",
                    "start": [
                        566,
                        16
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "desc": "Cartesian triple (XYZ)\n",
                            "finish": [
                                566,
                                19
                            ],
                            "rawdesc": "Cartesian triple (XYZ)\n",
                            "start": [
                                566,
                                16
                            ],
                            "type": "doc.type.name",
                            "view": "xyz"
                        }
                    ],
                    "view": "xyz"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    566,
                    19
                ],
                "name": "right",
                "rawdesc": "Cartesian triple (XYZ)\n",
                "start": [
                    566,
                    10
                ],
                "type": "doc.field",
                "view": "xyz",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Cartesian triple (XYZ)\n",
                "extends": {
                    "desc": "Cartesian triple (XYZ)\n",
                    "finish": [
                        567,
                        29
                    ],
                    "rawdesc": "Cartesian triple (XYZ)\n",
                    "start": [
                        567,
                        26
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "desc": "Cartesian triple (XYZ)\n",
                            "finish": [
                                567,
                                29
                            ],
                            "rawdesc": "Cartesian triple (XYZ)\n",
                            "start": [
                                567,
                                26
                            ],
                            "type": "doc.type.name",
                            "view": "xyz"
                        }
                    ],
                    "view": "xyz"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    567,
                    29
                ],
                "name": "topFrustumPlane",
                "rawdesc": "Cartesian triple (XYZ)\n",
                "start": [
                    567,
                    10
                ],
                "type": "doc.field",
                "view": "xyz",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Cartesian triple (XYZ)\n",
                "extends": {
                    "desc": "Cartesian triple (XYZ)\n",
                    "finish": [
                        565,
                        16
                    ],
                    "rawdesc": "Cartesian triple (XYZ)\n",
                    "start": [
                        565,
                        13
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "desc": "Cartesian triple (XYZ)\n",
                            "finish": [
                                565,
                                16
                            ],
                            "rawdesc": "Cartesian triple (XYZ)\n",
                            "start": [
                                565,
                                13
                            ],
                            "type": "doc.type.name",
                            "view": "xyz"
                        }
                    ],
                    "view": "xyz"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    565,
                    16
                ],
                "name": "up",
                "rawdesc": "Cartesian triple (XYZ)\n",
                "start": [
                    565,
                    10
                ],
                "type": "doc.field",
                "view": "xyz",
                "visible": "public"
            }
        ],
        "name": "CameraVectors",
        "type": "type",
        "view": "CameraVectors"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Used when assigning multiple commands at once\n",
                "file": "/Types.lua",
                "finish": [
                    87,
                    17
                ],
                "rawdesc": "Used when assigning multiple commands at once\n",
                "start": [
                    87,
                    10
                ],
                "type": "doc.class",
                "view": "Command",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        88,
                        23
                    ],
                    "start": [
                        88,
                        16
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                88,
                                23
                            ],
                            "start": [
                                88,
                                16
                            ],
                            "type": "doc.type.name",
                            "view": "integer"
                        }
                    ],
                    "view": "integer"
                },
                "file": "/Types.lua",
                "finish": [
                    88,
                    23
                ],
                "name": "cmdID",
                "start": [
                    88,
                    10
                ],
                "type": "doc.field",
                "view": "integer",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Parameters for command options\n",
                "extends": {
                    "desc": "Parameters for command options\n",
                    "finish": [
                        90,
                        33
                    ],
                    "rawdesc": "Parameters for command options\n",
                    "start": [
                        90,
                        18
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "desc": "Parameters for command options\n",
                            "finish": [
                                90,
                                32
                            ],
                            "rawdesc": "Parameters for command options\n",
                            "start": [
                                90,
                                18
                            ],
                            "type": "doc.type.name",
                            "view": "CommandOptions"
                        }
                    ],
                    "view": "CommandOptions?"
                },
                "file": "/Types.lua",
                "finish": [
                    90,
                    33
                ],
                "name": "options",
                "rawdesc": "Parameters for command options\n",
                "start": [
                    90,
                    10
                ],
                "type": "doc.field",
                "view": "CommandOptions?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        89,
                        26
                    ],
                    "start": [
                        89,
                        17
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                89,
                                25
                            ],
                            "start": [
                                89,
                                17
                            ],
                            "type": "doc.type.array",
                            "view": "number[]"
                        }
                    ],
                    "view": "number[]?"
                },
                "file": "/Types.lua",
                "finish": [
                    89,
                    26
                ],
                "name": "params",
                "start": [
                    89,
                    10
                ],
                "type": "doc.field",
                "view": "number[]?",
                "visible": "public"
            }
        ],
        "name": "Command",
        "type": "type",
        "view": "Command"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Command Description\n\nContains data about a command.\n",
                "file": "/Types.lua",
                "finish": [
                    96,
                    28
                ],
                "rawdesc": "Command Description\n\nContains data about a command.\n",
                "start": [
                    96,
                    10
                ],
                "type": "doc.class",
                "view": "CommandDescription",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        100,
                        24
                    ],
                    "start": [
                        100,
                        17
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                100,
                                23
                            ],
                            "start": [
                                100,
                                17
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string?"
                },
                "file": "/Types.lua",
                "finish": [
                    100,
                    24
                ],
                "name": "action",
                "start": [
                    100,
                    10
                ],
                "type": "doc.field",
                "view": "string?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        103,
                        24
                    ],
                    "start": [
                        103,
                        17
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                103,
                                23
                            ],
                            "start": [
                                103,
                                17
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string?"
                },
                "file": "/Types.lua",
                "finish": [
                    103,
                    24
                ],
                "name": "cursor",
                "start": [
                    103,
                    10
                ],
                "type": "doc.field",
                "view": "string?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        106,
                        27
                    ],
                    "start": [
                        106,
                        19
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                106,
                                26
                            ],
                            "start": [
                                106,
                                19
                            ],
                            "type": "doc.type.name",
                            "view": "boolean"
                        }
                    ],
                    "view": "boolean?"
                },
                "file": "/Types.lua",
                "finish": [
                    106,
                    27
                ],
                "name": "disabled",
                "start": [
                    106,
                    10
                ],
                "type": "doc.field",
                "view": "boolean?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        105,
                        25
                    ],
                    "start": [
                        105,
                        17
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                105,
                                24
                            ],
                            "start": [
                                105,
                                17
                            ],
                            "type": "doc.type.name",
                            "view": "boolean"
                        }
                    ],
                    "view": "boolean?"
                },
                "file": "/Types.lua",
                "finish": [
                    105,
                    25
                ],
                "name": "hidden",
                "start": [
                    105,
                    10
                ],
                "type": "doc.field",
                "view": "boolean?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        97,
                        21
                    ],
                    "start": [
                        97,
                        13
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                97,
                                20
                            ],
                            "start": [
                                97,
                                13
                            ],
                            "type": "doc.type.name",
                            "view": "integer"
                        }
                    ],
                    "view": "integer?"
                },
                "file": "/Types.lua",
                "finish": [
                    97,
                    21
                ],
                "name": "id",
                "start": [
                    97,
                    10
                ],
                "type": "doc.field",
                "view": "integer?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        99,
                        22
                    ],
                    "start": [
                        99,
                        15
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                99,
                                21
                            ],
                            "start": [
                                99,
                                15
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string?"
                },
                "file": "/Types.lua",
                "finish": [
                    99,
                    22
                ],
                "name": "name",
                "start": [
                    99,
                    10
                ],
                "type": "doc.field",
                "view": "string?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        108,
                        30
                    ],
                    "start": [
                        108,
                        22
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                108,
                                29
                            ],
                            "start": [
                                108,
                                22
                            ],
                            "type": "doc.type.name",
                            "view": "boolean"
                        }
                    ],
                    "view": "boolean?"
                },
                "file": "/Types.lua",
                "finish": [
                    108,
                    30
                ],
                "name": "onlyTexture",
                "start": [
                    108,
                    10
                ],
                "type": "doc.field",
                "view": "boolean?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        109,
                        39
                    ],
                    "start": [
                        109,
                        17
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                109,
                                38
                            ],
                            "start": [
                                109,
                                17
                            ],
                            "type": "doc.type.sign",
                            "view": "table<string, string>"
                        }
                    ],
                    "view": "table<string, string>?"
                },
                "file": "/Types.lua",
                "finish": [
                    109,
                    39
                ],
                "name": "params",
                "start": [
                    109,
                    10
                ],
                "type": "doc.field",
                "view": "table<string, string>?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        104,
                        27
                    ],
                    "start": [
                        104,
                        19
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                104,
                                26
                            ],
                            "start": [
                                104,
                                19
                            ],
                            "type": "doc.type.name",
                            "view": "boolean"
                        }
                    ],
                    "view": "boolean?"
                },
                "file": "/Types.lua",
                "finish": [
                    104,
                    27
                ],
                "name": "queueing",
                "start": [
                    104,
                    10
                ],
                "type": "doc.field",
                "view": "boolean?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        107,
                        29
                    ],
                    "start": [
                        107,
                        21
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                107,
                                28
                            ],
                            "start": [
                                107,
                                21
                            ],
                            "type": "doc.type.name",
                            "view": "boolean"
                        }
                    ],
                    "view": "boolean?"
                },
                "file": "/Types.lua",
                "finish": [
                    107,
                    29
                ],
                "name": "showUnique",
                "start": [
                    107,
                    10
                ],
                "type": "doc.field",
                "view": "boolean?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        102,
                        25
                    ],
                    "start": [
                        102,
                        18
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                102,
                                24
                            ],
                            "start": [
                                102,
                                18
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string?"
                },
                "file": "/Types.lua",
                "finish": [
                    102,
                    25
                ],
                "name": "texture",
                "start": [
                    102,
                    10
                ],
                "type": "doc.field",
                "view": "string?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        101,
                        25
                    ],
                    "start": [
                        101,
                        18
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                101,
                                24
                            ],
                            "start": [
                                101,
                                18
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string?"
                },
                "file": "/Types.lua",
                "finish": [
                    101,
                    25
                ],
                "name": "tooltip",
                "start": [
                    101,
                    10
                ],
                "type": "doc.field",
                "view": "string?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        98,
                        23
                    ],
                    "start": [
                        98,
                        15
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                98,
                                22
                            ],
                            "start": [
                                98,
                                15
                            ],
                            "type": "doc.type.name",
                            "view": "integer"
                        }
                    ],
                    "view": "integer?"
                },
                "file": "/Types.lua",
                "finish": [
                    98,
                    23
                ],
                "name": "type",
                "start": [
                    98,
                    10
                ],
                "type": "doc.field",
                "view": "integer?",
                "visible": "public"
            }
        ],
        "name": "CommandDescription",
        "type": "type",
        "view": "CommandDescription"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Called when the unit reaches an unknown command in its queue (i.e. one not handled by the engine).\n\n@*return* `whether` — to remove the command from the queue",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                74,
                                31
                            ],
                            "name": "unitID",
                            "start": [
                                74,
                                25
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                74,
                                42
                            ],
                            "name": "unitDefID",
                            "start": [
                                74,
                                33
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                74,
                                52
                            ],
                            "name": "unitTeam",
                            "start": [
                                74,
                                44
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                74,
                                59
                            ],
                            "name": "cmdID",
                            "start": [
                                74,
                                54
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                74,
                                70
                            ],
                            "name": "cmdParams",
                            "start": [
                                74,
                                61
                            ],
                            "type": "local",
                            "view": "number[]"
                        },
                        {
                            "desc": "Parameters for command options\n",
                            "finish": [
                                74,
                                82
                            ],
                            "name": "cmdOptions",
                            "rawdesc": "Parameters for command options\n",
                            "start": [
                                74,
                                72
                            ],
                            "type": "local",
                            "view": "CommandOptions"
                        },
                        {
                            "finish": [
                                74,
                                90
                            ],
                            "name": "cmdTag",
                            "start": [
                                74,
                                84
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "Called when the unit reaches an unknown command in its queue (i.e. one not handled by the engine).\n\n@*return* `whether` — to remove the command from the queue",
                    "finish": [
                        74,
                        95
                    ],
                    "rawdesc": "Called when the unit reaches an unknown command in its queue (i.e. one not handled by the engine).",
                    "returns": [
                        {
                            "desc": "to remove the command from the queue",
                            "name": "whether",
                            "rawdesc": "to remove the command from the queue",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        74,
                        0
                    ],
                    "type": "function",
                    "view": "function CommandFallback(unitID: integer, unitDefID: integer, unitTeam: integer, cmdID: integer, cmdParams: number[], cmdOptions: CommandOptions, cmdTag: number)\n  -> whether: boolean"
                },
                "file": "/generated/LuaHandleSynced.lua",
                "finish": [
                    74,
                    24
                ],
                "rawdesc": "Called when the unit reaches an unknown command in its queue (i.e. one not handled by the engine).",
                "start": [
                    74,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "CommandFallback",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Called when a command is issued.\n\n@*return* `Returning` — true deletes the command and does not send it through the network.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                757,
                                28
                            ],
                            "name": "cmdID",
                            "start": [
                                757,
                                23
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                757,
                                39
                            ],
                            "name": "cmdParams",
                            "start": [
                                757,
                                30
                            ],
                            "type": "local",
                            "view": "table"
                        },
                        {
                            "desc": "Parameters for command options\n",
                            "finish": [
                                757,
                                48
                            ],
                            "name": "options",
                            "rawdesc": "Parameters for command options\n",
                            "start": [
                                757,
                                41
                            ],
                            "type": "local",
                            "view": "CommandOptions"
                        }
                    ],
                    "desc": "Called when a command is issued.\n\n@*return* `Returning` — true deletes the command and does not send it through the network.",
                    "finish": [
                        757,
                        53
                    ],
                    "rawdesc": "Called when a command is issued.",
                    "returns": [
                        {
                            "desc": "true deletes the command and does not send it through the network.",
                            "name": "Returning",
                            "rawdesc": "true deletes the command and does not send it through the network.",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        757,
                        0
                    ],
                    "type": "function",
                    "view": "function CommandNotify(cmdID: integer, cmdParams: table, options: CommandOptions)\n  -> Returning: boolean"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    757,
                    22
                ],
                "rawdesc": "Called when a command is issued.",
                "start": [
                    757,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "CommandNotify",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Parameters for command options\n",
                "file": "/Types.lua",
                "finish": [
                    76,
                    24
                ],
                "rawdesc": "Parameters for command options\n",
                "start": [
                    76,
                    10
                ],
                "type": "doc.class",
                "view": "CommandOptions",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Alt key pressed",
                "extends": {
                    "finish": [
                        78,
                        21
                    ],
                    "start": [
                        78,
                        14
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                78,
                                21
                            ],
                            "start": [
                                78,
                                14
                            ],
                            "type": "doc.type.name",
                            "view": "boolean"
                        }
                    ],
                    "view": "boolean"
                },
                "file": "/Types.lua",
                "finish": [
                    78,
                    21
                ],
                "name": "alt",
                "rawdesc": "Alt key pressed",
                "start": [
                    78,
                    10
                ],
                "type": "doc.field",
                "view": "boolean",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        77,
                        23
                    ],
                    "start": [
                        77,
                        16
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                77,
                                23
                            ],
                            "start": [
                                77,
                                16
                            ],
                            "type": "doc.type.name",
                            "view": "integer"
                        }
                    ],
                    "view": "integer"
                },
                "file": "/Types.lua",
                "finish": [
                    77,
                    23
                ],
                "name": "coded",
                "start": [
                    77,
                    10
                ],
                "type": "doc.field",
                "view": "integer",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Ctrl key pressed",
                "extends": {
                    "finish": [
                        79,
                        22
                    ],
                    "start": [
                        79,
                        15
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                79,
                                22
                            ],
                            "start": [
                                79,
                                15
                            ],
                            "type": "doc.type.name",
                            "view": "boolean"
                        }
                    ],
                    "view": "boolean"
                },
                "file": "/Types.lua",
                "finish": [
                    79,
                    22
                ],
                "name": "ctrl",
                "rawdesc": "Ctrl key pressed",
                "start": [
                    79,
                    10
                ],
                "type": "doc.field",
                "view": "boolean",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        83,
                        26
                    ],
                    "start": [
                        83,
                        19
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                83,
                                26
                            ],
                            "start": [
                                83,
                                19
                            ],
                            "type": "doc.type.name",
                            "view": "boolean"
                        }
                    ],
                    "view": "boolean"
                },
                "file": "/Types.lua",
                "finish": [
                    83,
                    26
                ],
                "name": "internal",
                "start": [
                    83,
                    10
                ],
                "type": "doc.field",
                "view": "boolean",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Meta key pressed (space)",
                "extends": {
                    "finish": [
                        82,
                        22
                    ],
                    "start": [
                        82,
                        15
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                82,
                                22
                            ],
                            "start": [
                                82,
                                15
                            ],
                            "type": "doc.type.name",
                            "view": "boolean"
                        }
                    ],
                    "view": "boolean"
                },
                "file": "/Types.lua",
                "finish": [
                    82,
                    22
                ],
                "name": "meta",
                "rawdesc": "Meta key pressed (space)",
                "start": [
                    82,
                    10
                ],
                "type": "doc.field",
                "view": "boolean",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Right mouse key pressed",
                "extends": {
                    "finish": [
                        81,
                        23
                    ],
                    "start": [
                        81,
                        16
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                81,
                                23
                            ],
                            "start": [
                                81,
                                16
                            ],
                            "type": "doc.type.name",
                            "view": "boolean"
                        }
                    ],
                    "view": "boolean"
                },
                "file": "/Types.lua",
                "finish": [
                    81,
                    23
                ],
                "name": "right",
                "rawdesc": "Right mouse key pressed",
                "start": [
                    81,
                    10
                ],
                "type": "doc.field",
                "view": "boolean",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Shift key pressed",
                "extends": {
                    "finish": [
                        80,
                        23
                    ],
                    "start": [
                        80,
                        16
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                80,
                                23
                            ],
                            "start": [
                                80,
                                16
                            ],
                            "type": "doc.type.name",
                            "view": "boolean"
                        }
                    ],
                    "view": "boolean"
                },
                "file": "/Types.lua",
                "finish": [
                    80,
                    23
                ],
                "name": "shift",
                "rawdesc": "Shift key pressed",
                "start": [
                    80,
                    10
                ],
                "type": "doc.field",
                "view": "boolean",
                "visible": "public"
            }
        ],
        "name": "CommandOptions",
        "type": "type",
        "view": "CommandOptions"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Configuration\n\nContains data about a configuration, only name and type are guaranteed\n",
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    901,
                    23
                ],
                "rawdesc": "Configuration\n\nContains data about a configuration, only name and type are guaranteed\n",
                "start": [
                    901,
                    10
                ],
                "type": "doc.class",
                "view": "Configuration",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        909,
                        32
                    ],
                    "start": [
                        909,
                        26
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                909,
                                32
                            ],
                            "start": [
                                909,
                                26
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    909,
                    32
                ],
                "name": "declarationFile",
                "start": [
                    909,
                    10
                ],
                "type": "doc.field",
                "view": "string",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        910,
                        32
                    ],
                    "start": [
                        910,
                        26
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                910,
                                32
                            ],
                            "start": [
                                910,
                                26
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    910,
                    32
                ],
                "name": "declarationLine",
                "start": [
                    910,
                    10
                ],
                "type": "doc.field",
                "view": "string",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        905,
                        29
                    ],
                    "start": [
                        905,
                        23
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                905,
                                29
                            ],
                            "start": [
                                905,
                                23
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    905,
                    29
                ],
                "name": "defaultValue",
                "start": [
                    905,
                    10
                ],
                "type": "doc.field",
                "view": "string",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        904,
                        28
                    ],
                    "start": [
                        904,
                        22
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                904,
                                28
                            ],
                            "start": [
                                904,
                                22
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    904,
                    28
                ],
                "name": "description",
                "start": [
                    904,
                    10
                ],
                "type": "doc.field",
                "view": "string",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        907,
                        29
                    ],
                    "start": [
                        907,
                        23
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                907,
                                29
                            ],
                            "start": [
                                907,
                                23
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    907,
                    29
                ],
                "name": "maximumValue",
                "start": [
                    907,
                    10
                ],
                "type": "doc.field",
                "view": "string",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        906,
                        29
                    ],
                    "start": [
                        906,
                        23
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                906,
                                29
                            ],
                            "start": [
                                906,
                                23
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    906,
                    29
                ],
                "name": "minimumValue",
                "start": [
                    906,
                    10
                ],
                "type": "doc.field",
                "view": "string",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        902,
                        21
                    ],
                    "start": [
                        902,
                        15
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                902,
                                21
                            ],
                            "start": [
                                902,
                                15
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    902,
                    21
                ],
                "name": "name",
                "start": [
                    902,
                    10
                ],
                "type": "doc.field",
                "view": "string",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        911,
                        26
                    ],
                    "start": [
                        911,
                        19
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                911,
                                26
                            ],
                            "start": [
                                911,
                                19
                            ],
                            "type": "doc.type.name",
                            "view": "boolean"
                        }
                    ],
                    "view": "boolean"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    911,
                    26
                ],
                "name": "readOnly",
                "start": [
                    911,
                    10
                ],
                "type": "doc.field",
                "view": "boolean",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        908,
                        30
                    ],
                    "start": [
                        908,
                        24
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                908,
                                30
                            ],
                            "start": [
                                908,
                                24
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    908,
                    30
                ],
                "name": "safemodeValue",
                "start": [
                    908,
                    10
                ],
                "type": "doc.field",
                "view": "string",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        903,
                        21
                    ],
                    "start": [
                        903,
                        15
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                903,
                                21
                            ],
                            "start": [
                                903,
                                15
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    903,
                    21
                ],
                "name": "type",
                "start": [
                    903,
                    10
                ],
                "type": "doc.field",
                "view": "string",
                "visible": "public"
            }
        ],
        "name": "Configuration",
        "type": "type",
        "view": "Configuration"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [],
                    "finish": [
                        9,
                        30
                    ],
                    "start": [
                        9,
                        0
                    ],
                    "type": "function",
                    "view": "function ConfigureLayout()"
                },
                "file": "/generated/LuaUI.lua",
                "finish": [
                    9,
                    24
                ],
                "start": [
                    9,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "ConfigureLayout",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "file": "/generated/LuaRBOs.lua",
                "finish": [
                    24,
                    23
                ],
                "start": [
                    24,
                    10
                ],
                "type": "doc.class",
                "view": "CreateRBOData",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        26,
                        19
                    ],
                    "start": [
                        26,
                        17
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                26,
                                19
                            ],
                            "start": [
                                26,
                                17
                            ],
                            "type": "doc.type.name",
                            "view": "GL"
                        }
                    ],
                    "view": "GL"
                },
                "file": "/generated/LuaRBOs.lua",
                "finish": [
                    26,
                    19
                ],
                "name": "format",
                "start": [
                    26,
                    10
                ],
                "type": "doc.field",
                "view": "GL",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "any number here will result in creation of multisampled RBO",
                "extends": {
                    "finish": [
                        27,
                        25
                    ],
                    "start": [
                        27,
                        18
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                27,
                                24
                            ],
                            "start": [
                                27,
                                18
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number?"
                },
                "file": "/generated/LuaRBOs.lua",
                "finish": [
                    27,
                    25
                ],
                "name": "samples",
                "rawdesc": "any number here will result in creation of multisampled RBO",
                "start": [
                    27,
                    10
                ],
                "type": "doc.field",
                "view": "number?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        25,
                        19
                    ],
                    "start": [
                        25,
                        17
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                25,
                                19
                            ],
                            "start": [
                                25,
                                17
                            ],
                            "type": "doc.type.name",
                            "view": "GL"
                        }
                    ],
                    "view": "GL"
                },
                "file": "/generated/LuaRBOs.lua",
                "finish": [
                    25,
                    19
                ],
                "name": "target",
                "start": [
                    25,
                    10
                ],
                "type": "doc.field",
                "view": "GL",
                "visible": "public"
            }
        ],
        "name": "CreateRBOData",
        "type": "type",
        "view": "CreateRBOData"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Used to set the default command when a unit is selected. First parameter is the type of the object pointed at (either \"unit or \"feature\") and the second is its unitID or featureID respectively.\n\n@*param* `type` — unit\n\n@*param* `id` — unitID | featureID",
                "extends": {
                    "args": [
                        {
                            "desc": "unit",
                            "finish": [
                                536,
                                28
                            ],
                            "name": "type",
                            "rawdesc": "unit",
                            "start": [
                                536,
                                24
                            ],
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "desc": "unitID | featureID",
                            "finish": [
                                536,
                                32
                            ],
                            "name": "id",
                            "rawdesc": "unitID | featureID",
                            "start": [
                                536,
                                30
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Used to set the default command when a unit is selected. First parameter is the type of the object pointed at (either \"unit or \"feature\") and the second is its unitID or featureID respectively.\n\n@*param* `type` — unit\n\n@*param* `id` — unitID | featureID",
                    "finish": [
                        536,
                        37
                    ],
                    "rawdesc": "Used to set the default command when a unit is selected. First parameter is the type of the object pointed at (either \"unit or \"feature\") and the second is its unitID or featureID respectively.",
                    "start": [
                        536,
                        0
                    ],
                    "type": "function",
                    "view": "function DefaultCommand(type: string, id: integer)"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    536,
                    23
                ],
                "rawdesc": "Used to set the default command when a unit is selected. First parameter is the type of the object pointed at (either \"unit or \"feature\") and the second is its unitID or featureID respectively.",
                "start": [
                    536,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "DefaultCommand",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Called when a Pr-downloader download fails to complete.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                823,
                                26
                            ],
                            "name": "id",
                            "start": [
                                823,
                                24
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                823,
                                35
                            ],
                            "name": "errorID",
                            "start": [
                                823,
                                28
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "Called when a Pr-downloader download fails to complete.",
                    "finish": [
                        823,
                        40
                    ],
                    "rawdesc": "Called when a Pr-downloader download fails to complete.",
                    "start": [
                        823,
                        0
                    ],
                    "type": "function",
                    "view": "function DownloadFailed(id: number, errorID: number)"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    823,
                    23
                ],
                "rawdesc": "Called when a Pr-downloader download fails to complete.",
                "start": [
                    823,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "DownloadFailed",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Called when a Pr-downloader download finishes successfully.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                817,
                                28
                            ],
                            "name": "id",
                            "start": [
                                817,
                                26
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "Called when a Pr-downloader download finishes successfully.",
                    "finish": [
                        817,
                        33
                    ],
                    "rawdesc": "Called when a Pr-downloader download finishes successfully.",
                    "start": [
                        817,
                        0
                    ],
                    "type": "function",
                    "view": "function DownloadFinished(id: number)"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    817,
                    25
                ],
                "rawdesc": "Called when a Pr-downloader download finishes successfully.",
                "start": [
                    817,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "DownloadFinished",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Called incrementally during a Pr-downloader download.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                830,
                                28
                            ],
                            "name": "id",
                            "start": [
                                830,
                                26
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                830,
                                40
                            ],
                            "name": "downloaded",
                            "start": [
                                830,
                                30
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                830,
                                47
                            ],
                            "name": "total",
                            "start": [
                                830,
                                42
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "Called incrementally during a Pr-downloader download.",
                    "finish": [
                        830,
                        52
                    ],
                    "rawdesc": "Called incrementally during a Pr-downloader download.",
                    "start": [
                        830,
                        0
                    ],
                    "type": "function",
                    "view": "function DownloadProgress(id: number, downloaded: number, total: number)"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    830,
                    25
                ],
                "rawdesc": "Called incrementally during a Pr-downloader download.",
                "start": [
                    830,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "DownloadProgress",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Called when a Pr-downloader download is queued",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                807,
                                26
                            ],
                            "name": "id",
                            "start": [
                                807,
                                24
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                807,
                                32
                            ],
                            "name": "name",
                            "start": [
                                807,
                                28
                            ],
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": [
                                807,
                                38
                            ],
                            "name": "type",
                            "start": [
                                807,
                                34
                            ],
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "desc": "Called when a Pr-downloader download is queued",
                    "finish": [
                        807,
                        43
                    ],
                    "rawdesc": "Called when a Pr-downloader download is queued",
                    "start": [
                        807,
                        0
                    ],
                    "type": "function",
                    "view": "function DownloadQueued(id: number, name: string, type: string)"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    807,
                    23
                ],
                "rawdesc": "Called when a Pr-downloader download is queued",
                "start": [
                    807,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "DownloadQueued",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Called when a Pr-downloader download is started via VFS.DownloadArchive.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                812,
                                27
                            ],
                            "name": "id",
                            "start": [
                                812,
                                25
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "Called when a Pr-downloader download is started via VFS.DownloadArchive.",
                    "finish": [
                        812,
                        32
                    ],
                    "rawdesc": "Called when a Pr-downloader download is started via VFS.DownloadArchive.",
                    "start": [
                        812,
                        0
                    ],
                    "type": "function",
                    "view": "function DownloadStarted(id: number)"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    812,
                    24
                ],
                "rawdesc": "Called when a Pr-downloader download is started via VFS.DownloadArchive.",
                "start": [
                    812,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "DownloadStarted",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "For custom rendering of features",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                42,
                                30
                            ],
                            "name": "featureID",
                            "start": [
                                42,
                                21
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                42,
                                40
                            ],
                            "name": "drawMode",
                            "start": [
                                42,
                                32
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "For custom rendering of features",
                    "finish": [
                        42,
                        45
                    ],
                    "rawdesc": "For custom rendering of features",
                    "returns": [
                        {
                            "name": "suppressEngineDraw",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        42,
                        0
                    ],
                    "type": "function",
                    "view": "function DrawFeature(featureID: integer, drawMode: number)\n  -> suppressEngineDraw: boolean"
                },
                "file": "/generated/LuaHandleSynced.lua",
                "finish": [
                    42,
                    20
                ],
                "rawdesc": "For custom rendering of features",
                "start": [
                    42,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "DrawFeature",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Runs at the end of the feature deferred pass to inform Lua code it should make use of the $model_gbuffer_* textures before another pass overwrites them (and to allow proper blending with e.g. cloaked objects which are drawn between these events and DrawWorld via gl.CopyToTexture). N.B. The *PostDeferred events are only sent (and only have a real purpose) if forward drawing is disabled.",
                "extends": {
                    "args": [],
                    "desc": "Runs at the end of the feature deferred pass to inform Lua code it should make use of the $model_gbuffer_* textures before another pass overwrites them (and to allow proper blending with e.g. cloaked objects which are drawn between these events and DrawWorld via gl.CopyToTexture). N.B. The *PostDeferred events are only sent (and only have a real purpose) if forward drawing is disabled.",
                    "finish": [
                        595,
                        39
                    ],
                    "rawdesc": "Runs at the end of the feature deferred pass to inform Lua code it should make use of the $model_gbuffer_* textures before another pass overwrites them (and to allow proper blending with e.g. cloaked objects which are drawn between these events and DrawWorld via gl.CopyToTexture). N.B. The *PostDeferred events are only sent (and only have a real purpose) if forward drawing is disabled.",
                    "start": [
                        595,
                        0
                    ],
                    "type": "function",
                    "view": "function DrawFeaturesPostDeferred()"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    595,
                    33
                ],
                "rawdesc": "Runs at the end of the feature deferred pass to inform Lua code it should make use of the $model_gbuffer_* textures before another pass overwrites them (and to allow proper blending with e.g. cloaked objects which are drawn between these events and DrawWorld via gl.CopyToTexture). N.B. The *PostDeferred events are only sent (and only have a real purpose) if forward drawing is disabled.",
                "start": [
                    595,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "DrawFeaturesPostDeferred",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Use this callin to update textures, shaders, etc.\n\nDoesn't render to screen!\nAlso available to LuaMenu.",
                "extends": {
                    "args": [],
                    "desc": "Use this callin to update textures, shaders, etc.\n\nDoesn't render to screen!\nAlso available to LuaMenu.",
                    "finish": [
                        550,
                        26
                    ],
                    "rawdesc": "Use this callin to update textures, shaders, etc.\n\nDoesn't render to screen!\nAlso available to LuaMenu.",
                    "start": [
                        550,
                        0
                    ],
                    "type": "function",
                    "view": "function DrawGenesis()"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    550,
                    20
                ],
                "rawdesc": "Use this callin to update textures, shaders, etc.\n\nDoesn't render to screen!\nAlso available to LuaMenu.",
                "start": [
                    550,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "DrawGenesis",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [],
                    "finish": [
                        582,
                        33
                    ],
                    "start": [
                        582,
                        0
                    ],
                    "type": "function",
                    "view": "function DrawGroundDeferred()"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    582,
                    27
                ],
                "start": [
                    582,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "DrawGroundDeferred",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "This runs at the end of its respective deferred pass.\n\nAllows proper frame compositing (with ground flashes/decals/foliage/etc, which are drawn between it and `DrawWorldPreUnit`) via `gl.CopyToTexture`.",
                "extends": {
                    "args": [],
                    "desc": "This runs at the end of its respective deferred pass.\n\nAllows proper frame compositing (with ground flashes/decals/foliage/etc, which are drawn between it and `DrawWorldPreUnit`) via `gl.CopyToTexture`.",
                    "finish": [
                        587,
                        37
                    ],
                    "rawdesc": "This runs at the end of its respective deferred pass.\n\nAllows proper frame compositing (with ground flashes/decals/foliage/etc, which are drawn between it and `DrawWorldPreUnit`) via `gl.CopyToTexture`.",
                    "start": [
                        587,
                        0
                    ],
                    "type": "function",
                    "view": "function DrawGroundPostDeferred()"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    587,
                    31
                ],
                "rawdesc": "This runs at the end of its respective deferred pass.\n\nAllows proper frame compositing (with ground flashes/decals/foliage/etc, which are drawn between it and `DrawWorldPreUnit`) via `gl.CopyToTexture`.",
                "start": [
                    587,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "DrawGroundPostDeferred",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [],
                    "finish": [
                        577,
                        36
                    ],
                    "start": [
                        577,
                        0
                    ],
                    "type": "function",
                    "view": "function DrawGroundPostForward()"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    577,
                    30
                ],
                "start": [
                    577,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "DrawGroundPostForward",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Runs at the start of the deferred pass when a custom map shader has been assigned via `Spring.SetMapShader` (convenient for setting uniforms).",
                "extends": {
                    "args": [],
                    "desc": "Runs at the start of the deferred pass when a custom map shader has been assigned via `Spring.SetMapShader` (convenient for setting uniforms).",
                    "finish": [
                        580,
                        36
                    ],
                    "rawdesc": "Runs at the start of the deferred pass when a custom map shader has been assigned via `Spring.SetMapShader` (convenient for setting uniforms).",
                    "start": [
                        580,
                        0
                    ],
                    "type": "function",
                    "view": "function DrawGroundPreDeferred()"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    580,
                    30
                ],
                "rawdesc": "Runs at the start of the deferred pass when a custom map shader has been assigned via `Spring.SetMapShader` (convenient for setting uniforms).",
                "start": [
                    580,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "DrawGroundPreDeferred",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Runs at the start of the forward pass when a custom map shader has been assigned via `Spring.SetMapShader` (convenient for setting uniforms).",
                "extends": {
                    "args": [],
                    "desc": "Runs at the start of the forward pass when a custom map shader has been assigned via `Spring.SetMapShader` (convenient for setting uniforms).",
                    "finish": [
                        575,
                        35
                    ],
                    "rawdesc": "Runs at the start of the forward pass when a custom map shader has been assigned via `Spring.SetMapShader` (convenient for setting uniforms).",
                    "start": [
                        575,
                        0
                    ],
                    "type": "function",
                    "view": "function DrawGroundPreForward()"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    575,
                    29
                ],
                "rawdesc": "Runs at the start of the forward pass when a custom map shader has been assigned via `Spring.SetMapShader` (convenient for setting uniforms).",
                "start": [
                    575,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "DrawGroundPreForward",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `sx` — relative to the minimap's position and scale.\n\n@*param* `sy` — relative to the minimap's position and scale.",
                "extends": {
                    "args": [
                        {
                            "desc": "relative to the minimap's position and scale.",
                            "finish": [
                                628,
                                25
                            ],
                            "name": "sx",
                            "rawdesc": "relative to the minimap's position and scale.",
                            "start": [
                                628,
                                23
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "desc": "relative to the minimap's position and scale.",
                            "finish": [
                                628,
                                29
                            ],
                            "name": "sy",
                            "rawdesc": "relative to the minimap's position and scale.",
                            "start": [
                                628,
                                27
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "@*param* `sx` — relative to the minimap's position and scale.\n\n@*param* `sy` — relative to the minimap's position and scale.",
                    "finish": [
                        628,
                        34
                    ],
                    "start": [
                        628,
                        0
                    ],
                    "type": "function",
                    "view": "function DrawInMiniMap(sx: number, sy: number)"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    628,
                    22
                ],
                "start": [
                    628,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "DrawInMiniMap",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `sx` — relative to the minimap's position and scale.\n\n@*param* `sy` — relative to the minimap's position and scale.",
                "extends": {
                    "args": [
                        {
                            "desc": "relative to the minimap's position and scale.",
                            "finish": [
                                632,
                                35
                            ],
                            "name": "sx",
                            "rawdesc": "relative to the minimap's position and scale.",
                            "start": [
                                632,
                                33
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "desc": "relative to the minimap's position and scale.",
                            "finish": [
                                632,
                                39
                            ],
                            "name": "sy",
                            "rawdesc": "relative to the minimap's position and scale.",
                            "start": [
                                632,
                                37
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "@*param* `sx` — relative to the minimap's position and scale.\n\n@*param* `sy` — relative to the minimap's position and scale.",
                    "finish": [
                        632,
                        44
                    ],
                    "start": [
                        632,
                        0
                    ],
                    "type": "function",
                    "view": "function DrawInMinimapBackground(sx: number, sy: number)"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    632,
                    32
                ],
                "start": [
                    632,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "DrawInMinimapBackground",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Draws custom load screens.",
                "extends": {
                    "args": [],
                    "desc": "Draws custom load screens.",
                    "finish": [
                        10,
                        29
                    ],
                    "rawdesc": "Draws custom load screens.",
                    "start": [
                        10,
                        0
                    ],
                    "type": "function",
                    "view": "function DrawLoadScreen()"
                },
                "file": "/generated/LuaIntro.lua",
                "finish": [
                    10,
                    23
                ],
                "rawdesc": "Draws custom load screens.",
                "start": [
                    10,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "DrawLoadScreen",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                62,
                                26
                            ],
                            "name": "uuid",
                            "start": [
                                62,
                                22
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                62,
                                36
                            ],
                            "name": "drawMode",
                            "start": [
                                62,
                                28
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "finish": [
                        62,
                        41
                    ],
                    "returns": [
                        {
                            "name": "suppressEngineDraw",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        62,
                        0
                    ],
                    "type": "function",
                    "view": "function DrawMaterial(uuid: number, drawMode: number)\n  -> suppressEngineDraw: boolean"
                },
                "file": "/generated/LuaHandleSynced.lua",
                "finish": [
                    62,
                    21
                ],
                "start": [
                    62,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "DrawMaterial",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Called before decals are drawn",
                "extends": {
                    "args": [],
                    "desc": "Called before decals are drawn",
                    "finish": [
                        559,
                        28
                    ],
                    "rawdesc": "Called before decals are drawn",
                    "start": [
                        559,
                        0
                    ],
                    "type": "function",
                    "view": "function DrawPreDecals()"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    559,
                    22
                ],
                "rawdesc": "Called before decals are drawn",
                "start": [
                    559,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "DrawPreDecals",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "For custom rendering of weapon (& other) projectiles",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                57,
                                36
                            ],
                            "name": "projectileID",
                            "start": [
                                57,
                                24
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                57,
                                46
                            ],
                            "name": "drawMode",
                            "start": [
                                57,
                                38
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "For custom rendering of weapon (& other) projectiles",
                    "finish": [
                        57,
                        51
                    ],
                    "rawdesc": "For custom rendering of weapon (& other) projectiles",
                    "returns": [
                        {
                            "name": "suppressEngineDraw",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        57,
                        0
                    ],
                    "type": "function",
                    "view": "function DrawProjectile(projectileID: integer, drawMode: number)\n  -> suppressEngineDraw: boolean"
                },
                "file": "/generated/LuaHandleSynced.lua",
                "finish": [
                    57,
                    23
                ],
                "rawdesc": "For custom rendering of weapon (& other) projectiles",
                "start": [
                    57,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "DrawProjectile",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Also available to LuaMenu.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                614,
                                29
                            ],
                            "name": "viewSizeX",
                            "start": [
                                614,
                                20
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                614,
                                40
                            ],
                            "name": "viewSizeY",
                            "start": [
                                614,
                                31
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "Also available to LuaMenu.",
                    "finish": [
                        614,
                        45
                    ],
                    "rawdesc": "Also available to LuaMenu.",
                    "start": [
                        614,
                        0
                    ],
                    "type": "function",
                    "view": "function DrawScreen(viewSizeX: number, viewSizeY: number)"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    614,
                    19
                ],
                "rawdesc": "Also available to LuaMenu.",
                "start": [
                    614,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "DrawScreen",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                618,
                                36
                            ],
                            "name": "viewSizeX",
                            "start": [
                                618,
                                27
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                618,
                                47
                            ],
                            "name": "viewSizeY",
                            "start": [
                                618,
                                38
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "finish": [
                        618,
                        52
                    ],
                    "start": [
                        618,
                        0
                    ],
                    "type": "function",
                    "view": "function DrawScreenEffects(viewSizeX: number, viewSizeY: number)"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    618,
                    26
                ],
                "start": [
                    618,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "DrawScreenEffects",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Similar to DrawScreenEffects, this can be used to alter the contents of a frame after it has been completely rendered (i.e. World, MiniMap, Menu, UI).",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                624,
                                33
                            ],
                            "name": "viewSizeX",
                            "start": [
                                624,
                                24
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                624,
                                44
                            ],
                            "name": "viewSizeY",
                            "start": [
                                624,
                                35
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "Similar to DrawScreenEffects, this can be used to alter the contents of a frame after it has been completely rendered (i.e. World, MiniMap, Menu, UI).",
                    "finish": [
                        624,
                        49
                    ],
                    "rawdesc": "Similar to DrawScreenEffects, this can be used to alter the contents of a frame after it has been completely rendered (i.e. World, MiniMap, Menu, UI).",
                    "start": [
                        624,
                        0
                    ],
                    "type": "function",
                    "view": "function DrawScreenPost(viewSizeX: number, viewSizeY: number)"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    624,
                    23
                ],
                "rawdesc": "Similar to DrawScreenEffects, this can be used to alter the contents of a frame after it has been completely rendered (i.e. World, MiniMap, Menu, UI).",
                "start": [
                    624,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "DrawScreenPost",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [],
                    "finish": [
                        599,
                        36
                    ],
                    "start": [
                        599,
                        0
                    ],
                    "type": "function",
                    "view": "function DrawShadowFeaturesLua()"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    599,
                    30
                ],
                "start": [
                    599,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "DrawShadowFeaturesLua",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Invoked after semi-transparent shadows pass is about to conclude\n\nThis callin has depth and color buffer of shadowmap bound via FBO as well as the FFP state to do \"semi-transparent\" shadows pass (traditionally only used to draw shadows of shadow casting semi-transparent particles). Can be used to draw nice colored shadows.",
                "extends": {
                    "args": [],
                    "desc": "Invoked after semi-transparent shadows pass is about to conclude\n\nThis callin has depth and color buffer of shadowmap bound via FBO as well as the FFP state to do \"semi-transparent\" shadows pass (traditionally only used to draw shadows of shadow casting semi-transparent particles). Can be used to draw nice colored shadows.",
                    "finish": [
                        566,
                        40
                    ],
                    "rawdesc": "Invoked after semi-transparent shadows pass is about to conclude\n\nThis callin has depth and color buffer of shadowmap bound via FBO as well as the FFP state to do \"semi-transparent\" shadows pass (traditionally only used to draw shadows of shadow casting semi-transparent particles). Can be used to draw nice colored shadows.",
                    "start": [
                        566,
                        0
                    ],
                    "type": "function",
                    "view": "function DrawShadowPassTransparent()"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    566,
                    34
                ],
                "rawdesc": "Invoked after semi-transparent shadows pass is about to conclude\n\nThis callin has depth and color buffer of shadowmap bound via FBO as well as the FFP state to do \"semi-transparent\" shadows pass (traditionally only used to draw shadows of shadow casting semi-transparent particles). Can be used to draw nice colored shadows.",
                "start": [
                    566,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "DrawShadowPassTransparent",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [],
                    "finish": [
                        597,
                        33
                    ],
                    "start": [
                        597,
                        0
                    ],
                    "type": "function",
                    "view": "function DrawShadowUnitsLua()"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    597,
                    27
                ],
                "start": [
                    597,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "DrawShadowUnitsLua",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "For custom rendering of shields.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                50,
                                29
                            ],
                            "name": "featureID",
                            "start": [
                                50,
                                20
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                50,
                                39
                            ],
                            "name": "weaponID",
                            "start": [
                                50,
                                31
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                50,
                                49
                            ],
                            "name": "drawMode",
                            "start": [
                                50,
                                41
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "For custom rendering of shields.",
                    "finish": [
                        50,
                        54
                    ],
                    "rawdesc": "For custom rendering of shields.",
                    "returns": [
                        {
                            "name": "suppressEngineDraw",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        50,
                        0
                    ],
                    "type": "function",
                    "view": "function DrawShield(featureID: integer, weaponID: integer, drawMode: number)\n  -> suppressEngineDraw: boolean"
                },
                "file": "/generated/LuaHandleSynced.lua",
                "finish": [
                    50,
                    19
                ],
                "rawdesc": "For custom rendering of shields.",
                "start": [
                    50,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "DrawShield",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "For custom rendering of units",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                35,
                                24
                            ],
                            "name": "unitID",
                            "start": [
                                35,
                                18
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                35,
                                34
                            ],
                            "name": "drawMode",
                            "start": [
                                35,
                                26
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "For custom rendering of units",
                    "finish": [
                        35,
                        39
                    ],
                    "rawdesc": "For custom rendering of units",
                    "returns": [
                        {
                            "name": "suppressEngineDraw",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        35,
                        0
                    ],
                    "type": "function",
                    "view": "function DrawUnit(unitID: integer, drawMode: number)\n  -> suppressEngineDraw: boolean"
                },
                "file": "/generated/LuaHandleSynced.lua",
                "finish": [
                    35,
                    17
                ],
                "rawdesc": "For custom rendering of units",
                "start": [
                    35,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "DrawUnit",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Runs at the end of the unit deferred pass.\n\nInforms Lua code it should make use of the $model_gbuffer_* textures before another pass overwrites them (and to allow proper blending with e.g. cloaked objects which are drawn between these events and DrawWorld via gl.CopyToTexture). N.B. The *PostDeferred events are only sent (and only have a real purpose) if forward drawing is disabled.",
                "extends": {
                    "args": [],
                    "desc": "Runs at the end of the unit deferred pass.\n\nInforms Lua code it should make use of the $model_gbuffer_* textures before another pass overwrites them (and to allow proper blending with e.g. cloaked objects which are drawn between these events and DrawWorld via gl.CopyToTexture). N.B. The *PostDeferred events are only sent (and only have a real purpose) if forward drawing is disabled.",
                    "finish": [
                        592,
                        36
                    ],
                    "rawdesc": "Runs at the end of the unit deferred pass.\n\nInforms Lua code it should make use of the $model_gbuffer_* textures before another pass overwrites them (and to allow proper blending with e.g. cloaked objects which are drawn between these events and DrawWorld via gl.CopyToTexture). N.B. The *PostDeferred events are only sent (and only have a real purpose) if forward drawing is disabled.",
                    "start": [
                        592,
                        0
                    ],
                    "type": "function",
                    "view": "function DrawUnitsPostDeferred()"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    592,
                    30
                ],
                "rawdesc": "Runs at the end of the unit deferred pass.\n\nInforms Lua code it should make use of the $model_gbuffer_* textures before another pass overwrites them (and to allow proper blending with e.g. cloaked objects which are drawn between these events and DrawWorld via gl.CopyToTexture). N.B. The *PostDeferred events are only sent (and only have a real purpose) if forward drawing is disabled.",
                "start": [
                    592,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "DrawUnitsPostDeferred",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [],
                    "finish": [
                        561,
                        28
                    ],
                    "start": [
                        561,
                        0
                    ],
                    "type": "function",
                    "view": "function DrawWaterPost()"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    561,
                    22
                ],
                "start": [
                    561,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "DrawWaterPost",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Spring draws command queues, 'map stuff', and map marks.",
                "extends": {
                    "args": [],
                    "desc": "Spring draws command queues, 'map stuff', and map marks.",
                    "finish": [
                        553,
                        24
                    ],
                    "rawdesc": "Spring draws command queues, 'map stuff', and map marks.",
                    "start": [
                        553,
                        0
                    ],
                    "type": "function",
                    "view": "function DrawWorld()"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    553,
                    18
                ],
                "rawdesc": "Spring draws command queues, 'map stuff', and map marks.",
                "start": [
                    553,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "DrawWorld",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "DrawWorldPreParticles is called multiples times per draw frame.\nEach call has a different permutation of values for drawAboveWater, drawBelowWater, drawReflection, and drawRefraction.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                608,
                                45
                            ],
                            "name": "drawAboveWater",
                            "start": [
                                608,
                                31
                            ],
                            "type": "local",
                            "view": "boolean"
                        },
                        {
                            "finish": [
                                608,
                                61
                            ],
                            "name": "drawBelowWater",
                            "start": [
                                608,
                                47
                            ],
                            "type": "local",
                            "view": "boolean"
                        },
                        {
                            "finish": [
                                608,
                                77
                            ],
                            "name": "drawReflection",
                            "start": [
                                608,
                                63
                            ],
                            "type": "local",
                            "view": "boolean"
                        },
                        {
                            "finish": [
                                608,
                                93
                            ],
                            "name": "drawRefraction",
                            "start": [
                                608,
                                79
                            ],
                            "type": "local",
                            "view": "boolean"
                        }
                    ],
                    "desc": "DrawWorldPreParticles is called multiples times per draw frame.\nEach call has a different permutation of values for drawAboveWater, drawBelowWater, drawReflection, and drawRefraction.",
                    "finish": [
                        608,
                        98
                    ],
                    "rawdesc": "DrawWorldPreParticles is called multiples times per draw frame.\nEach call has a different permutation of values for drawAboveWater, drawBelowWater, drawReflection, and drawRefraction.",
                    "start": [
                        608,
                        0
                    ],
                    "type": "function",
                    "view": "function DrawWorldPreParticles(drawAboveWater: boolean, drawBelowWater: boolean, drawReflection: boolean, drawRefraction: boolean)"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    608,
                    30
                ],
                "rawdesc": "DrawWorldPreParticles is called multiples times per draw frame.\nEach call has a different permutation of values for drawAboveWater, drawBelowWater, drawReflection, and drawRefraction.",
                "start": [
                    608,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "DrawWorldPreParticles",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Spring draws units, features, some water types, cloaked units, and the sun.",
                "extends": {
                    "args": [],
                    "desc": "Spring draws units, features, some water types, cloaked units, and the sun.",
                    "finish": [
                        556,
                        31
                    ],
                    "rawdesc": "Spring draws units, features, some water types, cloaked units, and the sun.",
                    "start": [
                        556,
                        0
                    ],
                    "type": "function",
                    "view": "function DrawWorldPreUnit()"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    556,
                    25
                ],
                "rawdesc": "Spring draws units, features, some water types, cloaked units, and the sun.",
                "start": [
                    556,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "DrawWorldPreUnit",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [],
                    "finish": [
                        570,
                        34
                    ],
                    "start": [
                        570,
                        0
                    ],
                    "type": "function",
                    "view": "function DrawWorldReflection()"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    570,
                    28
                ],
                "start": [
                    570,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "DrawWorldReflection",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [],
                    "finish": [
                        572,
                        34
                    ],
                    "start": [
                        572,
                        0
                    ],
                    "type": "function",
                    "view": "function DrawWorldRefraction()"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    572,
                    28
                ],
                "start": [
                    572,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "DrawWorldRefraction",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [],
                    "finish": [
                        568,
                        30
                    ],
                    "start": [
                        568,
                        0
                    ],
                    "type": "function",
                    "view": "function DrawWorldShadow()"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    568,
                    24
                ],
                "start": [
                    568,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "DrawWorldShadow",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Engine specific information.",
                "extends": {
                    "finish": [
                        47,
                        1
                    ],
                    "start": [
                        20,
                        9
                    ],
                    "type": "table",
                    "view": "table"
                },
                "file": "/generated/LuaConstEngine.lua",
                "finish": [
                    20,
                    6
                ],
                "rawdesc": "Engine specific information.",
                "start": [
                    20,
                    0
                ],
                "type": "setglobal",
                "view": "table",
                "visible": "public"
            }
        ],
        "name": "Engine",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Called when an explosion occurs.\n\n@*return* `noGfx` — if then no graphical effects are drawn by the engine for this explosion.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                482,
                                30
                            ],
                            "name": "weaponDefID",
                            "start": [
                                482,
                                19
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                482,
                                34
                            ],
                            "name": "px",
                            "start": [
                                482,
                                32
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                482,
                                38
                            ],
                            "name": "py",
                            "start": [
                                482,
                                36
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                482,
                                42
                            ],
                            "name": "pz",
                            "start": [
                                482,
                                40
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                482,
                                54
                            ],
                            "name": "attackerID",
                            "start": [
                                482,
                                44
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                482,
                                68
                            ],
                            "name": "projectileID",
                            "start": [
                                482,
                                56
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "Called when an explosion occurs.\n\n@*return* `noGfx` — if then no graphical effects are drawn by the engine for this explosion.",
                    "finish": [
                        482,
                        73
                    ],
                    "rawdesc": "Called when an explosion occurs.",
                    "returns": [
                        {
                            "desc": "if then no graphical effects are drawn by the engine for this explosion.",
                            "name": "noGfx",
                            "rawdesc": "if then no graphical effects are drawn by the engine for this explosion.",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        482,
                        0
                    ],
                    "type": "function",
                    "view": "function Explosion(weaponDefID: number, px: number, py: number, pz: number, attackerID: number, projectileID: number)\n  -> noGfx: boolean"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    482,
                    18
                ],
                "rawdesc": "Called when an explosion occurs.",
                "start": [
                    482,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Explosion",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Parameters for explosion.\n\nPlease note the explosion defaults to 1 damage regardless of what it's defined in the weaponDef.\nThe weapondefID is only used for visuals and for passing into callins like UnitDamaged.\n",
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    1556,
                    25
                ],
                "rawdesc": "Parameters for explosion.\n\nPlease note the explosion defaults to 1 damage regardless of what it's defined in the weaponDef.\nThe weapondefID is only used for visuals and for passing into callins like UnitDamaged.\n",
                "start": [
                    1556,
                    10
                ],
                "type": "doc.class",
                "view": "ExplosionParams",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        1561,
                        35
                    ],
                    "start": [
                        1561,
                        29
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                1561,
                                35
                            ],
                            "start": [
                                1561,
                                29
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    1561,
                    35
                ],
                "name": "craterAreaOfEffect",
                "start": [
                    1561,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        1562,
                        35
                    ],
                    "start": [
                        1562,
                        29
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                1562,
                                35
                            ],
                            "start": [
                                1562,
                                29
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    1562,
                    35
                ],
                "name": "damageAreaOfEffect",
                "start": [
                    1562,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        1568,
                        30
                    ],
                    "start": [
                        1568,
                        23
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                1568,
                                30
                            ],
                            "start": [
                                1568,
                                23
                            ],
                            "type": "doc.type.name",
                            "view": "boolean"
                        }
                    ],
                    "view": "boolean"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    1568,
                    30
                ],
                "name": "damageGround",
                "start": [
                    1568,
                    10
                ],
                "type": "doc.field",
                "view": "boolean",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        1563,
                        34
                    ],
                    "start": [
                        1563,
                        28
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                1563,
                                34
                            ],
                            "start": [
                                1563,
                                28
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    1563,
                    34
                ],
                "name": "edgeEffectiveness",
                "start": [
                    1563,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        1564,
                        31
                    ],
                    "start": [
                        1564,
                        25
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                1564,
                                31
                            ],
                            "start": [
                                1564,
                                25
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    1564,
                    31
                ],
                "name": "explosionSpeed",
                "start": [
                    1564,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        1565,
                        23
                    ],
                    "start": [
                        1565,
                        17
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                1565,
                                23
                            ],
                            "start": [
                                1565,
                                17
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    1565,
                    23
                ],
                "name": "gfxMod",
                "start": [
                    1565,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        1560,
                        27
                    ],
                    "start": [
                        1560,
                        21
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                1560,
                                27
                            ],
                            "start": [
                                1560,
                                21
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    1560,
                    27
                ],
                "name": "hitFeature",
                "start": [
                    1560,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        1559,
                        24
                    ],
                    "start": [
                        1559,
                        18
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                1559,
                                24
                            ],
                            "start": [
                                1559,
                                18
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    1559,
                    24
                ],
                "name": "hitUnit",
                "start": [
                    1559,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        1567,
                        29
                    ],
                    "start": [
                        1567,
                        22
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                1567,
                                29
                            ],
                            "start": [
                                1567,
                                22
                            ],
                            "type": "doc.type.name",
                            "view": "boolean"
                        }
                    ],
                    "view": "boolean"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    1567,
                    29
                ],
                "name": "ignoreOwner",
                "start": [
                    1567,
                    10
                ],
                "type": "doc.field",
                "view": "boolean",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        1566,
                        28
                    ],
                    "start": [
                        1566,
                        21
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                1566,
                                28
                            ],
                            "start": [
                                1566,
                                21
                            ],
                            "type": "doc.type.name",
                            "view": "boolean"
                        }
                    ],
                    "view": "boolean"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    1566,
                    28
                ],
                "name": "impactOnly",
                "start": [
                    1566,
                    10
                ],
                "type": "doc.field",
                "view": "boolean",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        1558,
                        22
                    ],
                    "start": [
                        1558,
                        16
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                1558,
                                22
                            ],
                            "start": [
                                1558,
                                16
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    1558,
                    22
                ],
                "name": "owner",
                "start": [
                    1558,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        1557,
                        26
                    ],
                    "start": [
                        1557,
                        20
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                1557,
                                26
                            ],
                            "start": [
                                1557,
                                20
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    1557,
                    26
                ],
                "name": "weaponDef",
                "start": [
                    1557,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            }
        ],
        "name": "ExplosionParams",
        "type": "type",
        "view": "ExplosionParams"
    },
    {
        "defines": [
            {
                "desc": "```lua\nFacing:\n    | 0 -- South\n    | 1 -- East\n    | 2 -- North\n    | 3 -- West\n    | 0 -- South\n    | 1 -- East\n    | 2 -- North\n    | 3 -- West\n    | \"s\" -- South\n    | \"e\" -- East\n    | \"n\" -- North\n    | \"w\" -- West\n    | \"south\" -- South\n    | \"east\" -- East\n    | \"north\" -- North\n    | \"west\" -- West\n```",
                "finish": [
                    21,
                    11
                ],
                "rawdesc": "```lua\nFacing:\n    | 0 -- South\n    | 1 -- East\n    | 2 -- North\n    | 3 -- West\n    | 0 -- South\n    | 1 -- East\n    | 2 -- North\n    | 3 -- West\n    | \"s\" -- South\n    | \"e\" -- East\n    | \"n\" -- North\n    | \"w\" -- West\n    | \"south\" -- South\n    | \"east\" -- East\n    | \"north\" -- North\n    | \"west\" -- West\n```",
                "start": [
                    9,
                    10
                ],
                "type": "doc.alias",
                "view": "\"e\"|\"east\"|\"n\"|\"north\"|\"s\"...(+7)"
            },
            {
                "desc": "```lua\nFacing:\n    | 0 -- South\n    | 1 -- East\n    | 2 -- North\n    | 3 -- West\n    | 0 -- South\n    | 1 -- East\n    | 2 -- North\n    | 3 -- West\n    | \"s\" -- South\n    | \"e\" -- East\n    | \"n\" -- North\n    | \"w\" -- West\n    | \"south\" -- South\n    | \"east\" -- East\n    | \"north\" -- North\n    | \"west\" -- West\n```",
                "finish": [
                    700,
                    6
                ],
                "rawdesc": "```lua\nFacing:\n    | 0 -- South\n    | 1 -- East\n    | 2 -- North\n    | 3 -- West\n    | 0 -- South\n    | 1 -- East\n    | 2 -- North\n    | 3 -- West\n    | \"s\" -- South\n    | \"e\" -- East\n    | \"n\" -- North\n    | \"w\" -- West\n    | \"south\" -- South\n    | \"east\" -- East\n    | \"north\" -- North\n    | \"west\" -- West\n```",
                "start": [
                    696,
                    10
                ],
                "type": "doc.alias",
                "view": "\"e\"|\"east\"|\"n\"|\"north\"|\"s\"...(+7)"
            }
        ],
        "fields": [],
        "name": "Facing",
        "type": "type",
        "view": "Facing"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "User Data FBO\n",
                "file": "/generated/LuaFBOs.lua",
                "finish": [
                    24,
                    13
                ],
                "rawdesc": "User Data FBO\n",
                "start": [
                    24,
                    10
                ],
                "type": "doc.class",
                "view": "Fbo",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "desc": "attachment ::= luaTex or `RBO.rbo` or nil or { luaTex [, num target [, num level ] ] }\n",
                "extends": {
                    "desc": "attachment ::= luaTex or `RBO.rbo` or nil or { luaTex [, num target [, num level ] ] }\n",
                    "finish": [
                        27,
                        27
                    ],
                    "rawdesc": "attachment ::= luaTex or `RBO.rbo` or nil or { luaTex [, num target [, num level ] ] }\n",
                    "start": [
                        27,
                        17
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "desc": "attachment ::= luaTex or `RBO.rbo` or nil or { luaTex [, num target [, num level ] ] }\n",
                            "finish": [
                                27,
                                27
                            ],
                            "rawdesc": "attachment ::= luaTex or `RBO.rbo` or nil or { luaTex [, num target [, num level ] ] }\n",
                            "start": [
                                27,
                                17
                            ],
                            "type": "doc.type.name",
                            "view": "attachment"
                        }
                    ],
                    "view": "attachment"
                },
                "file": "/generated/LuaFBOs.lua",
                "finish": [
                    27,
                    27
                ],
                "name": "color0",
                "rawdesc": "attachment ::= luaTex or `RBO.rbo` or nil or { luaTex [, num target [, num level ] ] }\n",
                "start": [
                    27,
                    10
                ],
                "type": "doc.field",
                "view": "attachment",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "attachment ::= luaTex or `RBO.rbo` or nil or { luaTex [, num target [, num level ] ] }\n",
                "extends": {
                    "desc": "attachment ::= luaTex or `RBO.rbo` or nil or { luaTex [, num target [, num level ] ] }\n",
                    "finish": [
                        28,
                        27
                    ],
                    "rawdesc": "attachment ::= luaTex or `RBO.rbo` or nil or { luaTex [, num target [, num level ] ] }\n",
                    "start": [
                        28,
                        17
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "desc": "attachment ::= luaTex or `RBO.rbo` or nil or { luaTex [, num target [, num level ] ] }\n",
                            "finish": [
                                28,
                                27
                            ],
                            "rawdesc": "attachment ::= luaTex or `RBO.rbo` or nil or { luaTex [, num target [, num level ] ] }\n",
                            "start": [
                                28,
                                17
                            ],
                            "type": "doc.type.name",
                            "view": "attachment"
                        }
                    ],
                    "view": "attachment"
                },
                "file": "/generated/LuaFBOs.lua",
                "finish": [
                    28,
                    27
                ],
                "name": "color1",
                "rawdesc": "attachment ::= luaTex or `RBO.rbo` or nil or { luaTex [, num target [, num level ] ] }\n",
                "start": [
                    28,
                    10
                ],
                "type": "doc.field",
                "view": "attachment",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "attachment ::= luaTex or `RBO.rbo` or nil or { luaTex [, num target [, num level ] ] }\n",
                "extends": {
                    "desc": "attachment ::= luaTex or `RBO.rbo` or nil or { luaTex [, num target [, num level ] ] }\n",
                    "finish": [
                        31,
                        28
                    ],
                    "rawdesc": "attachment ::= luaTex or `RBO.rbo` or nil or { luaTex [, num target [, num level ] ] }\n",
                    "start": [
                        31,
                        18
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "desc": "attachment ::= luaTex or `RBO.rbo` or nil or { luaTex [, num target [, num level ] ] }\n",
                            "finish": [
                                31,
                                28
                            ],
                            "rawdesc": "attachment ::= luaTex or `RBO.rbo` or nil or { luaTex [, num target [, num level ] ] }\n",
                            "start": [
                                31,
                                18
                            ],
                            "type": "doc.type.name",
                            "view": "attachment"
                        }
                    ],
                    "view": "attachment"
                },
                "file": "/generated/LuaFBOs.lua",
                "finish": [
                    31,
                    28
                ],
                "name": "color15",
                "rawdesc": "attachment ::= luaTex or `RBO.rbo` or nil or { luaTex [, num target [, num level ] ] }\n",
                "start": [
                    31,
                    10
                ],
                "type": "doc.field",
                "view": "attachment",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "attachment ::= luaTex or `RBO.rbo` or nil or { luaTex [, num target [, num level ] ] }\n",
                "extends": {
                    "desc": "attachment ::= luaTex or `RBO.rbo` or nil or { luaTex [, num target [, num level ] ] }\n",
                    "finish": [
                        29,
                        27
                    ],
                    "rawdesc": "attachment ::= luaTex or `RBO.rbo` or nil or { luaTex [, num target [, num level ] ] }\n",
                    "start": [
                        29,
                        17
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "desc": "attachment ::= luaTex or `RBO.rbo` or nil or { luaTex [, num target [, num level ] ] }\n",
                            "finish": [
                                29,
                                27
                            ],
                            "rawdesc": "attachment ::= luaTex or `RBO.rbo` or nil or { luaTex [, num target [, num level ] ] }\n",
                            "start": [
                                29,
                                17
                            ],
                            "type": "doc.type.name",
                            "view": "attachment"
                        }
                    ],
                    "view": "attachment"
                },
                "file": "/generated/LuaFBOs.lua",
                "finish": [
                    29,
                    27
                ],
                "name": "color2",
                "rawdesc": "attachment ::= luaTex or `RBO.rbo` or nil or { luaTex [, num target [, num level ] ] }\n",
                "start": [
                    29,
                    10
                ],
                "type": "doc.field",
                "view": "attachment",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "attachment ::= luaTex or `RBO.rbo` or nil or { luaTex [, num target [, num level ] ] }\n",
                "extends": {
                    "desc": "attachment ::= luaTex or `RBO.rbo` or nil or { luaTex [, num target [, num level ] ] }\n",
                    "finish": [
                        30,
                        27
                    ],
                    "rawdesc": "attachment ::= luaTex or `RBO.rbo` or nil or { luaTex [, num target [, num level ] ] }\n",
                    "start": [
                        30,
                        17
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "desc": "attachment ::= luaTex or `RBO.rbo` or nil or { luaTex [, num target [, num level ] ] }\n",
                            "finish": [
                                30,
                                27
                            ],
                            "rawdesc": "attachment ::= luaTex or `RBO.rbo` or nil or { luaTex [, num target [, num level ] ] }\n",
                            "start": [
                                30,
                                17
                            ],
                            "type": "doc.type.name",
                            "view": "attachment"
                        }
                    ],
                    "view": "attachment"
                },
                "file": "/generated/LuaFBOs.lua",
                "finish": [
                    30,
                    27
                ],
                "name": "colorn",
                "rawdesc": "attachment ::= luaTex or `RBO.rbo` or nil or { luaTex [, num target [, num level ] ] }\n",
                "start": [
                    30,
                    10
                ],
                "type": "doc.field",
                "view": "attachment",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "attachment ::= luaTex or `RBO.rbo` or nil or { luaTex [, num target [, num level ] ] }\n",
                "extends": {
                    "desc": "attachment ::= luaTex or `RBO.rbo` or nil or { luaTex [, num target [, num level ] ] }\n",
                    "finish": [
                        25,
                        26
                    ],
                    "rawdesc": "attachment ::= luaTex or `RBO.rbo` or nil or { luaTex [, num target [, num level ] ] }\n",
                    "start": [
                        25,
                        16
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "desc": "attachment ::= luaTex or `RBO.rbo` or nil or { luaTex [, num target [, num level ] ] }\n",
                            "finish": [
                                25,
                                26
                            ],
                            "rawdesc": "attachment ::= luaTex or `RBO.rbo` or nil or { luaTex [, num target [, num level ] ] }\n",
                            "start": [
                                25,
                                16
                            ],
                            "type": "doc.type.name",
                            "view": "attachment"
                        }
                    ],
                    "view": "attachment"
                },
                "file": "/generated/LuaFBOs.lua",
                "finish": [
                    25,
                    26
                ],
                "name": "depth",
                "rawdesc": "attachment ::= luaTex or `RBO.rbo` or nil or { luaTex [, num target [, num level ] ] }\n",
                "start": [
                    25,
                    10
                ],
                "type": "doc.field",
                "view": "attachment",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "`{ GL_COLOR_ATTACHMENT0_EXT, GL_COLOR_ATTACHMENT3_EXT, ..}`",
                "extends": {
                    "finish": [
                        32,
                        27
                    ],
                    "start": [
                        32,
                        22
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                32,
                                27
                            ],
                            "start": [
                                32,
                                22
                            ],
                            "type": "doc.type.name",
                            "view": "table"
                        }
                    ],
                    "view": "table"
                },
                "file": "/generated/LuaFBOs.lua",
                "finish": [
                    32,
                    27
                ],
                "name": "drawbuffers",
                "rawdesc": "`{ GL_COLOR_ATTACHMENT0_EXT, GL_COLOR_ATTACHMENT3_EXT, ..}`",
                "start": [
                    32,
                    10
                ],
                "type": "doc.field",
                "view": "table",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "`GL_COLOR_ATTACHMENT0_EXT`",
                "extends": {
                    "finish": [
                        33,
                        26
                    ],
                    "start": [
                        33,
                        21
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                33,
                                26
                            ],
                            "start": [
                                33,
                                21
                            ],
                            "type": "doc.type.name",
                            "view": "table"
                        }
                    ],
                    "view": "table"
                },
                "file": "/generated/LuaFBOs.lua",
                "finish": [
                    33,
                    26
                ],
                "name": "readbuffer",
                "rawdesc": "`GL_COLOR_ATTACHMENT0_EXT`",
                "start": [
                    33,
                    10
                ],
                "type": "doc.field",
                "view": "table",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "attachment ::= luaTex or `RBO.rbo` or nil or { luaTex [, num target [, num level ] ] }\n",
                "extends": {
                    "desc": "attachment ::= luaTex or `RBO.rbo` or nil or { luaTex [, num target [, num level ] ] }\n",
                    "finish": [
                        26,
                        28
                    ],
                    "rawdesc": "attachment ::= luaTex or `RBO.rbo` or nil or { luaTex [, num target [, num level ] ] }\n",
                    "start": [
                        26,
                        18
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "desc": "attachment ::= luaTex or `RBO.rbo` or nil or { luaTex [, num target [, num level ] ] }\n",
                            "finish": [
                                26,
                                28
                            ],
                            "rawdesc": "attachment ::= luaTex or `RBO.rbo` or nil or { luaTex [, num target [, num level ] ] }\n",
                            "start": [
                                26,
                                18
                            ],
                            "type": "doc.type.name",
                            "view": "attachment"
                        }
                    ],
                    "view": "attachment"
                },
                "file": "/generated/LuaFBOs.lua",
                "finish": [
                    26,
                    28
                ],
                "name": "stencil",
                "rawdesc": "attachment ::= luaTex or `RBO.rbo` or nil or { luaTex [, num target [, num level ] ] }\n",
                "start": [
                    26,
                    10
                ],
                "type": "doc.field",
                "view": "attachment",
                "visible": "public"
            }
        ],
        "name": "Fbo",
        "type": "type",
        "view": "Fbo"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Called when a feature is created.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                430,
                                33
                            ],
                            "name": "featureID",
                            "start": [
                                430,
                                24
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                430,
                                45
                            ],
                            "name": "allyTeamID",
                            "start": [
                                430,
                                35
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "Called when a feature is created.",
                    "finish": [
                        430,
                        50
                    ],
                    "rawdesc": "Called when a feature is created.",
                    "start": [
                        430,
                        0
                    ],
                    "type": "function",
                    "view": "function FeatureCreated(featureID: number, allyTeamID: number)"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    430,
                    23
                ],
                "rawdesc": "Called when a feature is created.",
                "start": [
                    430,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "FeatureCreated",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Called when a feature is damaged.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                449,
                                33
                            ],
                            "name": "featureID",
                            "start": [
                                449,
                                24
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                449,
                                47
                            ],
                            "name": "featureDefID",
                            "start": [
                                449,
                                35
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                449,
                                60
                            ],
                            "name": "featureTeam",
                            "start": [
                                449,
                                49
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                449,
                                68
                            ],
                            "name": "damage",
                            "start": [
                                449,
                                62
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                449,
                                81
                            ],
                            "name": "weaponDefID",
                            "start": [
                                449,
                                70
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                449,
                                95
                            ],
                            "name": "projectileID",
                            "start": [
                                449,
                                83
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                449,
                                107
                            ],
                            "name": "attackerID",
                            "start": [
                                449,
                                97
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                449,
                                122
                            ],
                            "name": "attackerDefID",
                            "start": [
                                449,
                                109
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                449,
                                136
                            ],
                            "name": "attackerTeam",
                            "start": [
                                449,
                                124
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "Called when a feature is damaged.",
                    "finish": [
                        449,
                        141
                    ],
                    "rawdesc": "Called when a feature is damaged.",
                    "start": [
                        449,
                        0
                    ],
                    "type": "function",
                    "view": "function FeatureDamaged(featureID: number, featureDefID: number, featureTeam: number, damage: number, weaponDefID: number, projectileID: number, attackerID: number, attackerDefID: number, attackerTeam: number)"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    449,
                    23
                ],
                "rawdesc": "Called when a feature is damaged.",
                "start": [
                    449,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "FeatureDamaged",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Called when a feature is destroyed.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                436,
                                35
                            ],
                            "name": "featureID",
                            "start": [
                                436,
                                26
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                436,
                                47
                            ],
                            "name": "allyTeamID",
                            "start": [
                                436,
                                37
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "Called when a feature is destroyed.",
                    "finish": [
                        436,
                        52
                    ],
                    "rawdesc": "Called when a feature is destroyed.",
                    "start": [
                        436,
                        0
                    ],
                    "type": "function",
                    "view": "function FeatureDestroyed(featureID: number, allyTeamID: number)"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    436,
                    25
                ],
                "rawdesc": "Called when a feature is destroyed.",
                "start": [
                    436,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "FeatureDestroyed",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Called before damage is applied to the feature.\n\nAllows fine control over how much damage and impulse is applied.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                340,
                                36
                            ],
                            "name": "featureID",
                            "start": [
                                340,
                                27
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                340,
                                50
                            ],
                            "name": "featureDefID",
                            "start": [
                                340,
                                38
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                340,
                                63
                            ],
                            "name": "featureTeam",
                            "start": [
                                340,
                                52
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                340,
                                71
                            ],
                            "name": "damage",
                            "start": [
                                340,
                                65
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                340,
                                84
                            ],
                            "name": "weaponDefID",
                            "start": [
                                340,
                                73
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                340,
                                98
                            ],
                            "name": "projectileID",
                            "start": [
                                340,
                                86
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                340,
                                110
                            ],
                            "name": "attackerID",
                            "start": [
                                340,
                                100
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                340,
                                125
                            ],
                            "name": "attackerDefID",
                            "start": [
                                340,
                                112
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                340,
                                139
                            ],
                            "name": "attackerTeam",
                            "start": [
                                340,
                                127
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Called before damage is applied to the feature.\n\nAllows fine control over how much damage and impulse is applied.",
                    "finish": [
                        340,
                        144
                    ],
                    "rawdesc": "Called before damage is applied to the feature.\n\nAllows fine control over how much damage and impulse is applied.",
                    "returns": [
                        {
                            "name": "newDamage",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "impulseMult",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        340,
                        0
                    ],
                    "type": "function",
                    "view": "function FeaturePreDamaged(featureID: integer, featureDefID: integer, featureTeam: integer, damage: number, weaponDefID: integer, projectileID: integer, attackerID: integer, attackerDefID: integer, attackerTeam: integer)\n  -> newDamage: number\n  2. impulseMult: number"
                },
                "file": "/generated/LuaHandleSynced.lua",
                "finish": [
                    340,
                    26
                ],
                "rawdesc": "Called before damage is applied to the feature.\n\nAllows fine control over how much damage and impulse is applied.",
                "start": [
                    340,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "FeaturePreDamaged",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "file": "/generated/LuaConstEngine.lua",
                "finish": [
                    13,
                    24
                ],
                "start": [
                    13,
                    10
                ],
                "type": "doc.class",
                "view": "FeatureSupport",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        14,
                        47
                    ],
                    "start": [
                        14,
                        40
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                14,
                                47
                            ],
                            "start": [
                                14,
                                40
                            ],
                            "type": "doc.type.name",
                            "view": "boolean"
                        }
                    ],
                    "view": "boolean"
                },
                "file": "/generated/LuaConstEngine.lua",
                "finish": [
                    14,
                    47
                ],
                "name": "NegativeGetUnitCurrentCommand",
                "start": [
                    14,
                    10
                ],
                "type": "doc.field",
                "view": "boolean",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        15,
                        37
                    ],
                    "start": [
                        15,
                        30
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                15,
                                37
                            ],
                            "start": [
                                15,
                                30
                            ],
                            "type": "doc.type.name",
                            "view": "boolean"
                        }
                    ],
                    "view": "boolean"
                },
                "file": "/generated/LuaConstEngine.lua",
                "finish": [
                    15,
                    37
                ],
                "name": "hasExitOnlyYardmaps",
                "start": [
                    15,
                    10
                ],
                "type": "doc.field",
                "view": "boolean",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        16,
                        33
                    ],
                    "start": [
                        16,
                        26
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                16,
                                33
                            ],
                            "start": [
                                16,
                                26
                            ],
                            "type": "doc.type.name",
                            "view": "integer"
                        }
                    ],
                    "view": "integer"
                },
                "file": "/generated/LuaConstEngine.lua",
                "finish": [
                    16,
                    33
                ],
                "name": "rmlUiApiVersion",
                "start": [
                    16,
                    10
                ],
                "type": "doc.field",
                "view": "integer",
                "visible": "public"
            }
        ],
        "name": "FeatureSupport",
        "type": "type",
        "view": "FeatureSupport"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Called whenever fonts are updated. Signals the game display lists\nand other caches should be discarded.\n\nGets called before other Update and Draw callins.",
                "extends": {
                    "args": [],
                    "desc": "Called whenever fonts are updated. Signals the game display lists\nand other caches should be discarded.\n\nGets called before other Update and Draw callins.",
                    "finish": [
                        528,
                        27
                    ],
                    "rawdesc": "Called whenever fonts are updated. Signals the game display lists\nand other caches should be discarded.\n\nGets called before other Update and Draw callins.",
                    "start": [
                        528,
                        0
                    ],
                    "type": "function",
                    "view": "function FontsChanged()"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    528,
                    21
                ],
                "rawdesc": "Called whenever fonts are updated. Signals the game display lists\nand other caches should be discarded.\n\nGets called before other Update and Draw callins.",
                "start": [
                    528,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "FontsChanged",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        525,
                        1
                    ],
                    "start": [
                        18,
                        5
                    ],
                    "type": "table",
                    "view": "enum GL"
                },
                "file": "/generated/LuaConstGL.lua",
                "finish": [
                    18,
                    2
                ],
                "start": [
                    18,
                    0
                ],
                "type": "setglobal",
                "view": "enum GL",
                "visible": "public"
            }
        ],
        "name": "GL",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "finish": [
                    15,
                    29
                ],
                "start": [
                    11,
                    10
                ],
                "type": "doc.alias",
                "view": "GL.ARRAY_BUFFER|GL.ELEMENT_ARRAY_BUFFER|GL.SHADER_STORAGE_BUFFER|GL.UNIFORM_BUFFER"
            }
        ],
        "fields": [],
        "name": "GLBufferType",
        "type": "type",
        "view": "GLBufferType"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Game specific information",
                "extends": {
                    "finish": [
                        201,
                        1
                    ],
                    "start": [
                        14,
                        7
                    ],
                    "type": "table",
                    "view": "table"
                },
                "file": "/generated/LuaConstGame.lua",
                "finish": [
                    14,
                    4
                ],
                "rawdesc": "Game specific information",
                "start": [
                    14,
                    0
                ],
                "type": "setglobal",
                "view": "table",
                "visible": "public"
            }
        ],
        "name": "Game",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Called for every game simulation frame (30 per second).\n\n@*param* `frame` — Starts at frame 1",
                "extends": {
                    "args": [
                        {
                            "desc": "Starts at frame 1",
                            "finish": [
                                82,
                                24
                            ],
                            "name": "frame",
                            "rawdesc": "Starts at frame 1",
                            "start": [
                                82,
                                19
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "Called for every game simulation frame (30 per second).\n\n@*param* `frame` — Starts at frame 1",
                    "finish": [
                        82,
                        29
                    ],
                    "rawdesc": "Called for every game simulation frame (30 per second).",
                    "start": [
                        82,
                        0
                    ],
                    "type": "function",
                    "view": "function GameFrame(frame: number)"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    82,
                    18
                ],
                "rawdesc": "Called for every game simulation frame (30 per second).",
                "start": [
                    82,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "GameFrame",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Called at the end of every game simulation frame\n\n@*param* `frame` — Starts at frame 1",
                "extends": {
                    "args": [
                        {
                            "desc": "Starts at frame 1",
                            "finish": [
                                87,
                                28
                            ],
                            "name": "frame",
                            "rawdesc": "Starts at frame 1",
                            "start": [
                                87,
                                23
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "Called at the end of every game simulation frame\n\n@*param* `frame` — Starts at frame 1",
                    "finish": [
                        87,
                        33
                    ],
                    "rawdesc": "Called at the end of every game simulation frame",
                    "start": [
                        87,
                        0
                    ],
                    "type": "function",
                    "view": "function GameFramePost(frame: number)"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    87,
                    22
                ],
                "rawdesc": "Called at the end of every game simulation frame",
                "start": [
                    87,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "GameFramePost",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Called once to deliver the gameID\n\n@*param* `gameID` — encoded in hex.",
                "extends": {
                    "args": [
                        {
                            "desc": "encoded in hex.",
                            "finish": [
                                92,
                                22
                            ],
                            "name": "gameID",
                            "rawdesc": "encoded in hex.",
                            "start": [
                                92,
                                16
                            ],
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "desc": "Called once to deliver the gameID\n\n@*param* `gameID` — encoded in hex.",
                    "finish": [
                        92,
                        27
                    ],
                    "rawdesc": "Called once to deliver the gameID",
                    "start": [
                        92,
                        0
                    ],
                    "type": "function",
                    "view": "function GameID(gameID: string)"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    92,
                    15
                ],
                "rawdesc": "Called once to deliver the gameID",
                "start": [
                    92,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "GameID",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Called when the game ends\n\n@*param* `winningAllyTeams` — list of winning allyTeams, if empty the game result was undecided (like when dropping from an host).",
                "extends": {
                    "args": [
                        {
                            "desc": "list of winning allyTeams, if empty the game result was undecided (like when dropping from an host).",
                            "finish": [
                                71,
                                34
                            ],
                            "name": "winningAllyTeams",
                            "rawdesc": "list of winning allyTeams, if empty the game result was undecided (like when dropping from an host).",
                            "start": [
                                71,
                                18
                            ],
                            "type": "local",
                            "view": "number[]"
                        }
                    ],
                    "desc": "Called when the game ends\n\n@*param* `winningAllyTeams` — list of winning allyTeams, if empty the game result was undecided (like when dropping from an host).",
                    "finish": [
                        71,
                        39
                    ],
                    "rawdesc": "Called when the game ends",
                    "start": [
                        71,
                        0
                    ],
                    "type": "function",
                    "view": "function GameOver(winningAllyTeams: number[])"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    71,
                    17
                ],
                "rawdesc": "Called when the game ends",
                "start": [
                    71,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "GameOver",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Called when the game is paused.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                77,
                                28
                            ],
                            "name": "playerID",
                            "start": [
                                77,
                                20
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                77,
                                36
                            ],
                            "name": "paused",
                            "start": [
                                77,
                                30
                            ],
                            "type": "local",
                            "view": "boolean"
                        }
                    ],
                    "desc": "Called when the game is paused.",
                    "finish": [
                        77,
                        41
                    ],
                    "rawdesc": "Called when the game is paused.",
                    "start": [
                        77,
                        0
                    ],
                    "type": "function",
                    "view": "function GamePaused(playerID: number, paused: boolean)"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    77,
                    19
                ],
                "rawdesc": "Called when the game is paused.",
                "start": [
                    77,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "GamePaused",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Called before the 0 gameframe.\n\nIs not called when a saved game is loaded.",
                "extends": {
                    "args": [],
                    "desc": "Called before the 0 gameframe.\n\nIs not called when a saved game is loaded.",
                    "finish": [
                        61,
                        26
                    ],
                    "rawdesc": "Called before the 0 gameframe.\n\nIs not called when a saved game is loaded.",
                    "start": [
                        61,
                        0
                    ],
                    "type": "function",
                    "view": "function GamePreload()"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    61,
                    20
                ],
                "rawdesc": "Called before the 0 gameframe.\n\nIs not called when a saved game is loaded.",
                "start": [
                    61,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "GamePreload",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Called every 60 frames, calculating delta between `GameFrame` and `GameProgress`.\n\nCan give an ETA about catching up with simulation for mid-game join players.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                639,
                                36
                            ],
                            "name": "serverFrameNum",
                            "start": [
                                639,
                                22
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Called every 60 frames, calculating delta between `GameFrame` and `GameProgress`.\n\nCan give an ETA about catching up with simulation for mid-game join players.",
                    "finish": [
                        639,
                        41
                    ],
                    "rawdesc": "Called every 60 frames, calculating delta between `GameFrame` and `GameProgress`.\n\nCan give an ETA about catching up with simulation for mid-game join players.",
                    "start": [
                        639,
                        0
                    ],
                    "type": "function",
                    "view": "function GameProgress(serverFrameNum: integer)"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    639,
                    21
                ],
                "rawdesc": "Called every 60 frames, calculating delta between `GameFrame` and `GameProgress`.\n\nCan give an ETA about catching up with simulation for mid-game join players.",
                "start": [
                    639,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "GameProgress",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                792,
                                24
                            ],
                            "name": "state",
                            "start": [
                                792,
                                19
                            ],
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": [
                                792,
                                31
                            ],
                            "name": "ready",
                            "start": [
                                792,
                                26
                            ],
                            "type": "local",
                            "view": "boolean"
                        },
                        {
                            "finish": [
                                792,
                                45
                            ],
                            "name": "playerStates",
                            "start": [
                                792,
                                33
                            ],
                            "type": "local",
                            "view": "table"
                        }
                    ],
                    "finish": [
                        792,
                        50
                    ],
                    "returns": [
                        {
                            "name": "success",
                            "type": "function.return",
                            "view": "boolean"
                        },
                        {
                            "name": "newReady",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        792,
                        0
                    ],
                    "type": "function",
                    "view": "function GameSetup(state: string, ready: boolean, playerStates: table)\n  -> success: boolean\n  2. newReady: boolean"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    792,
                    18
                ],
                "start": [
                    792,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "GameSetup",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Called upon the start of the game.\n\nIs not called when a saved game is loaded.",
                "extends": {
                    "args": [],
                    "desc": "Called upon the start of the game.\n\nIs not called when a saved game is loaded.",
                    "finish": [
                        66,
                        24
                    ],
                    "rawdesc": "Called upon the start of the game.\n\nIs not called when a saved game is loaded.",
                    "start": [
                        66,
                        0
                    ],
                    "type": "function",
                    "view": "function GameStart()"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    66,
                    18
                ],
                "rawdesc": "Called upon the start of the game.\n\nIs not called when a saved game is loaded.",
                "start": [
                    66,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "GameStart",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Called when `Spring.IsAbove` returns true.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                743,
                                21
                            ],
                            "name": "x",
                            "start": [
                                743,
                                20
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                743,
                                24
                            ],
                            "name": "y",
                            "start": [
                                743,
                                23
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "Called when `Spring.IsAbove` returns true.",
                    "finish": [
                        743,
                        29
                    ],
                    "rawdesc": "Called when `Spring.IsAbove` returns true.",
                    "returns": [
                        {
                            "name": "tooltip",
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": [
                        743,
                        0
                    ],
                    "type": "function",
                    "view": "function GetTooltip(x: number, y: number)\n  -> tooltip: string"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    743,
                    19
                ],
                "rawdesc": "Called when `Spring.IsAbove` returns true.",
                "start": [
                    743,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "GetTooltip",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Called when a player issues a UI command e.g. types /foo or /luarules foo.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                47,
                                23
                            ],
                            "name": "msg",
                            "start": [
                                47,
                                20
                            ],
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": [
                                47,
                                33
                            ],
                            "name": "playerID",
                            "start": [
                                47,
                                25
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "Called when a player issues a UI command e.g. types /foo or /luarules foo.",
                    "finish": [
                        47,
                        38
                    ],
                    "rawdesc": "Called when a player issues a UI command e.g. types /foo or /luarules foo.",
                    "start": [
                        47,
                        0
                    ],
                    "type": "function",
                    "view": "function GotChatMsg(msg: string, playerID: number)"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    47,
                    19
                ],
                "rawdesc": "Called when a player issues a UI command e.g. types /foo or /luarules foo.",
                "start": [
                    47,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "GotChatMsg",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Called when a unit is added to or removed from a control group.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                768,
                                29
                            ],
                            "name": "groupID",
                            "start": [
                                768,
                                22
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "Called when a unit is added to or removed from a control group.",
                    "finish": [
                        768,
                        34
                    ],
                    "rawdesc": "Called when a unit is added to or removed from a control group.",
                    "start": [
                        768,
                        0
                    ],
                    "type": "function",
                    "view": "function GroupChanged(groupID: number)"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    768,
                    21
                ],
                "rawdesc": "Called when a unit is added to or removed from a control group.",
                "start": [
                    768,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "GroupChanged",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Called when the addon is (re)loaded.",
                "extends": {
                    "args": [],
                    "desc": "Called when the addon is (re)loaded.",
                    "finish": [
                        33,
                        25
                    ],
                    "rawdesc": "Called when the addon is (re)loaded.",
                    "start": [
                        33,
                        0
                    ],
                    "type": "function",
                    "view": "function Initialize()"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    33,
                    19
                ],
                "rawdesc": "Called when the addon is (re)loaded.",
                "start": [
                    33,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Initialize",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Called every `Update`.\n\nMust return true for `Mouse*` events and `Spring.GetToolTip` to be called.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                736,
                                18
                            ],
                            "name": "x",
                            "start": [
                                736,
                                17
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                736,
                                21
                            ],
                            "name": "y",
                            "start": [
                                736,
                                20
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "Called every `Update`.\n\nMust return true for `Mouse*` events and `Spring.GetToolTip` to be called.",
                    "finish": [
                        736,
                        26
                    ],
                    "rawdesc": "Called every `Update`.\n\nMust return true for `Mouse*` events and `Spring.GetToolTip` to be called.",
                    "returns": [
                        {
                            "name": "isAbove",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        736,
                        0
                    ],
                    "type": "function",
                    "view": "function IsAbove(x: number, y: number)\n  -> isAbove: boolean"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    736,
                    16
                ],
                "rawdesc": "Called every `Update`.\n\nMust return true for `Mouse*` events and `Spring.GetToolTip` to be called.",
                "start": [
                    736,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "IsAbove",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Keybinding\n\nContains data about a keybinding\n",
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    812,
                    20
                ],
                "rawdesc": "Keybinding\n\nContains data about a keybinding\n",
                "start": [
                    812,
                    10
                ],
                "type": "doc.class",
                "view": "KeyBinding",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        815,
                        26
                    ],
                    "start": [
                        815,
                        20
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                815,
                                26
                            ],
                            "start": [
                                815,
                                20
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    815,
                    26
                ],
                "name": "boundWith",
                "start": [
                    815,
                    10
                ],
                "type": "doc.field",
                "view": "string",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        813,
                        24
                    ],
                    "start": [
                        813,
                        18
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                813,
                                24
                            ],
                            "start": [
                                813,
                                18
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    813,
                    24
                ],
                "name": "command",
                "start": [
                    813,
                    10
                ],
                "type": "doc.field",
                "view": "string",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        814,
                        22
                    ],
                    "start": [
                        814,
                        16
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                814,
                                22
                            ],
                            "start": [
                                814,
                                16
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    814,
                    22
                ],
                "name": "extra",
                "start": [
                    814,
                    10
                ],
                "type": "doc.field",
                "view": "string",
                "visible": "public"
            }
        ],
        "name": "KeyBinding",
        "type": "type",
        "view": "KeyBinding"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Called when the keymap changes\n\nCan be caused due to a change in language or keyboard",
                "extends": {
                    "args": [],
                    "desc": "Called when the keymap changes\n\nCan be caused due to a change in language or keyboard",
                    "finish": [
                        644,
                        28
                    ],
                    "rawdesc": "Called when the keymap changes\n\nCan be caused due to a change in language or keyboard",
                    "start": [
                        644,
                        0
                    ],
                    "type": "function",
                    "view": "function KeyMapChanged()"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    644,
                    22
                ],
                "rawdesc": "Called when the keymap changes\n\nCan be caused due to a change in language or keyboard",
                "start": [
                    644,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "KeyMapChanged",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Key Modifier Params\n",
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    652,
                    22
                ],
                "rawdesc": "Key Modifier Params\n",
                "start": [
                    652,
                    10
                ],
                "type": "doc.class",
                "view": "KeyModifiers",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Alt key pressed",
                "extends": {
                    "finish": [
                        654,
                        21
                    ],
                    "start": [
                        654,
                        14
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                654,
                                21
                            ],
                            "start": [
                                654,
                                14
                            ],
                            "type": "doc.type.name",
                            "view": "boolean"
                        }
                    ],
                    "view": "boolean"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    654,
                    21
                ],
                "name": "alt",
                "rawdesc": "Alt key pressed",
                "start": [
                    654,
                    10
                ],
                "type": "doc.field",
                "view": "boolean",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Ctrl key pressed",
                "extends": {
                    "finish": [
                        655,
                        22
                    ],
                    "start": [
                        655,
                        15
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                655,
                                22
                            ],
                            "start": [
                                655,
                                15
                            ],
                            "type": "doc.type.name",
                            "view": "boolean"
                        }
                    ],
                    "view": "boolean"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    655,
                    22
                ],
                "name": "ctrl",
                "rawdesc": "Ctrl key pressed",
                "start": [
                    655,
                    10
                ],
                "type": "doc.field",
                "view": "boolean",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Right mouse key pressed",
                "extends": {
                    "finish": [
                        653,
                        23
                    ],
                    "start": [
                        653,
                        16
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                653,
                                23
                            ],
                            "start": [
                                653,
                                16
                            ],
                            "type": "doc.type.name",
                            "view": "boolean"
                        }
                    ],
                    "view": "boolean"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    653,
                    23
                ],
                "name": "right",
                "rawdesc": "Right mouse key pressed",
                "start": [
                    653,
                    10
                ],
                "type": "doc.field",
                "view": "boolean",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Shift key pressed",
                "extends": {
                    "finish": [
                        656,
                        23
                    ],
                    "start": [
                        656,
                        16
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                656,
                                23
                            ],
                            "start": [
                                656,
                                16
                            ],
                            "type": "doc.type.name",
                            "view": "boolean"
                        }
                    ],
                    "view": "boolean"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    656,
                    23
                ],
                "name": "shift",
                "rawdesc": "Shift key pressed",
                "start": [
                    656,
                    10
                ],
                "type": "doc.field",
                "view": "boolean",
                "visible": "public"
            }
        ],
        "name": "KeyModifiers",
        "type": "type",
        "view": "KeyModifiers"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Called repeatedly when a key is pressed down.\n\nReturn true if you don't want other callins or the engine to also receive this keypress. A list of key codes can be seen at the SDL wiki.\n\n@*param* `isRepeat` — If you want an action to occur only once check for isRepeat == false.\n\n@*param* `label` — the name of the key\n\n@*param* `utf32char` — (deprecated) always 0\n\n@*param* `actionList` — the list of actions for this keypress\n\n@*return* `halt` — whether to halt the chain for consumers of the keypress",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                671,
                                25
                            ],
                            "name": "keyCode",
                            "start": [
                                671,
                                18
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "desc": "Key Modifier Params\n",
                            "finish": [
                                671,
                                31
                            ],
                            "name": "mods",
                            "rawdesc": "Key Modifier Params\n",
                            "start": [
                                671,
                                27
                            ],
                            "type": "local",
                            "view": "KeyModifiers"
                        },
                        {
                            "desc": "If you want an action to occur only once check for isRepeat == false.",
                            "finish": [
                                671,
                                41
                            ],
                            "name": "isRepeat",
                            "rawdesc": "If you want an action to occur only once check for isRepeat == false.",
                            "start": [
                                671,
                                33
                            ],
                            "type": "local",
                            "view": "boolean"
                        },
                        {
                            "desc": "the name of the key",
                            "finish": [
                                671,
                                48
                            ],
                            "name": "label",
                            "rawdesc": "the name of the key",
                            "start": [
                                671,
                                43
                            ],
                            "type": "local",
                            "view": "boolean"
                        },
                        {
                            "desc": "(deprecated) always 0",
                            "finish": [
                                671,
                                59
                            ],
                            "name": "utf32char",
                            "rawdesc": "(deprecated) always 0",
                            "start": [
                                671,
                                50
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                671,
                                69
                            ],
                            "name": "scanCode",
                            "start": [
                                671,
                                61
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "desc": "the list of actions for this keypress",
                            "finish": [
                                671,
                                81
                            ],
                            "name": "actionList",
                            "rawdesc": "the list of actions for this keypress",
                            "start": [
                                671,
                                71
                            ],
                            "type": "local",
                            "view": "table"
                        }
                    ],
                    "desc": "Called repeatedly when a key is pressed down.\n\nReturn true if you don't want other callins or the engine to also receive this keypress. A list of key codes can be seen at the SDL wiki.\n\n@*param* `isRepeat` — If you want an action to occur only once check for isRepeat == false.\n\n@*param* `label` — the name of the key\n\n@*param* `utf32char` — (deprecated) always 0\n\n@*param* `actionList` — the list of actions for this keypress\n\n@*return* `halt` — whether to halt the chain for consumers of the keypress",
                    "finish": [
                        671,
                        86
                    ],
                    "rawdesc": "Called repeatedly when a key is pressed down.\n\nReturn true if you don't want other callins or the engine to also receive this keypress. A list of key codes can be seen at the SDL wiki.",
                    "returns": [
                        {
                            "desc": "whether to halt the chain for consumers of the keypress",
                            "name": "halt",
                            "rawdesc": "whether to halt the chain for consumers of the keypress",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        671,
                        0
                    ],
                    "type": "function",
                    "view": "function KeyPress(keyCode: number, mods: KeyModifiers, isRepeat: boolean, label: boolean, utf32char: number, scanCode: number, actionList: table)\n  -> halt: boolean"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    671,
                    17
                ],
                "rawdesc": "Called repeatedly when a key is pressed down.\n\nReturn true if you don't want other callins or the engine to also receive this keypress. A list of key codes can be seen at the SDL wiki.",
                "start": [
                    671,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "KeyPress",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Called when the key is released.\n\n@*param* `label` — the name of the key\n\n@*param* `utf32char` — (deprecated) always 0\n\n@*param* `actionList` — the list of actions for this keyrelease",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                682,
                                27
                            ],
                            "name": "keyCode",
                            "start": [
                                682,
                                20
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "desc": "Key Modifier Params\n",
                            "finish": [
                                682,
                                33
                            ],
                            "name": "mods",
                            "rawdesc": "Key Modifier Params\n",
                            "start": [
                                682,
                                29
                            ],
                            "type": "local",
                            "view": "KeyModifiers"
                        },
                        {
                            "desc": "the name of the key",
                            "finish": [
                                682,
                                40
                            ],
                            "name": "label",
                            "rawdesc": "the name of the key",
                            "start": [
                                682,
                                35
                            ],
                            "type": "local",
                            "view": "boolean"
                        },
                        {
                            "desc": "(deprecated) always 0",
                            "finish": [
                                682,
                                51
                            ],
                            "name": "utf32char",
                            "rawdesc": "(deprecated) always 0",
                            "start": [
                                682,
                                42
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                682,
                                61
                            ],
                            "name": "scanCode",
                            "start": [
                                682,
                                53
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "desc": "the list of actions for this keyrelease",
                            "finish": [
                                682,
                                73
                            ],
                            "name": "actionList",
                            "rawdesc": "the list of actions for this keyrelease",
                            "start": [
                                682,
                                63
                            ],
                            "type": "local",
                            "view": "table"
                        }
                    ],
                    "desc": "Called when the key is released.\n\n@*param* `label` — the name of the key\n\n@*param* `utf32char` — (deprecated) always 0\n\n@*param* `actionList` — the list of actions for this keyrelease",
                    "finish": [
                        682,
                        78
                    ],
                    "rawdesc": "Called when the key is released.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        682,
                        0
                    ],
                    "type": "function",
                    "view": "function KeyRelease(keyCode: number, mods: KeyModifiers, label: boolean, utf32char: number, scanCode: number, actionList: table)\n  -> boolean"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    682,
                    19
                ],
                "rawdesc": "Called when the key is released.",
                "start": [
                    682,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "KeyRelease",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Parameters for lighting\n",
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    357,
                    21
                ],
                "rawdesc": "Parameters for lighting\n",
                "start": [
                    357,
                    10
                ],
                "type": "doc.class",
                "view": "LightParams",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        360,
                        67
                    ],
                    "start": [
                        360,
                        23
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "fields": [
                                {
                                    "finish": [
                                        360,
                                        36
                                    ],
                                    "name": {
                                        "[1]": "red",
                                        "finish": [
                                            360,
                                            28
                                        ],
                                        "start": [
                                            360,
                                            25
                                        ],
                                        "type": "doc.field.name",
                                        "view": "red"
                                    },
                                    "start": [
                                        360,
                                        25
                                    ],
                                    "type": "doc.type.field",
                                    "view": "number"
                                },
                                {
                                    "finish": [
                                        360,
                                        51
                                    ],
                                    "name": {
                                        "[1]": "green",
                                        "finish": [
                                            360,
                                            43
                                        ],
                                        "start": [
                                            360,
                                            38
                                        ],
                                        "type": "doc.field.name",
                                        "view": "green"
                                    },
                                    "start": [
                                        360,
                                        38
                                    ],
                                    "type": "doc.type.field",
                                    "view": "number"
                                },
                                {
                                    "finish": [
                                        360,
                                        65
                                    ],
                                    "name": {
                                        "[1]": "blue",
                                        "finish": [
                                            360,
                                            57
                                        ],
                                        "start": [
                                            360,
                                            53
                                        ],
                                        "type": "doc.field.name",
                                        "view": "blue"
                                    },
                                    "start": [
                                        360,
                                        53
                                    ],
                                    "type": "doc.type.field",
                                    "view": "number"
                                }
                            ],
                            "finish": [
                                360,
                                67
                            ],
                            "start": [
                                360,
                                23
                            ],
                            "type": "doc.type.table",
                            "view": "{ red: number, green: number, blue: number }"
                        }
                    ],
                    "view": "{ red: number, green: number, blue: number }"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    360,
                    67
                ],
                "name": "ambientColor",
                "start": [
                    360,
                    10
                ],
                "type": "doc.field",
                "view": "{ red: number, green: number, blue: number }",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        364,
                        107
                    ],
                    "start": [
                        364,
                        27
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "fields": [
                                {
                                    "finish": [
                                        364,
                                        52
                                    ],
                                    "name": {
                                        "[1]": "ambientRedDecay",
                                        "finish": [
                                            364,
                                            44
                                        ],
                                        "start": [
                                            364,
                                            29
                                        ],
                                        "type": "doc.field.name",
                                        "view": "ambientRedDecay"
                                    },
                                    "start": [
                                        364,
                                        29
                                    ],
                                    "type": "doc.type.field",
                                    "view": "number"
                                },
                                {
                                    "finish": [
                                        364,
                                        79
                                    ],
                                    "name": {
                                        "[1]": "ambientGreenDecay",
                                        "finish": [
                                            364,
                                            71
                                        ],
                                        "start": [
                                            364,
                                            54
                                        ],
                                        "type": "doc.field.name",
                                        "view": "ambientGreenDecay"
                                    },
                                    "start": [
                                        364,
                                        54
                                    ],
                                    "type": "doc.type.field",
                                    "view": "number"
                                },
                                {
                                    "finish": [
                                        364,
                                        105
                                    ],
                                    "name": {
                                        "[1]": "ambientBlueDecay",
                                        "finish": [
                                            364,
                                            97
                                        ],
                                        "start": [
                                            364,
                                            81
                                        ],
                                        "type": "doc.field.name",
                                        "view": "ambientBlueDecay"
                                    },
                                    "start": [
                                        364,
                                        81
                                    ],
                                    "type": "doc.type.field",
                                    "view": "number"
                                }
                            ],
                            "finish": [
                                364,
                                107
                            ],
                            "start": [
                                364,
                                27
                            ],
                            "type": "doc.type.table",
                            "view": "{ ambientRedDecay: number, ambientGreenDecay: number, ambientBlueDecay: number }"
                        }
                    ],
                    "view": "{ ambientRedDecay: number, ambientGreenDecay: number, ambientBlueDecay: number }"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    364,
                    107
                ],
                "name": "ambientDecayRate",
                "start": [
                    364,
                    10
                ],
                "type": "doc.field",
                "view": "{ ambientRedDecay: number, ambientGreenDecay: number, ambientBlueDecay: number }",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Per-frame decay of `specularColor` (spread over TTL frames)",
                "extends": {
                    "finish": [
                        370,
                        109
                    ],
                    "start": [
                        370,
                        28
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "fields": [
                                {
                                    "finish": [
                                        370,
                                        54
                                    ],
                                    "name": {
                                        "[1]": "ambientDecayType",
                                        "finish": [
                                            370,
                                            46
                                        ],
                                        "start": [
                                            370,
                                            30
                                        ],
                                        "type": "doc.field.name",
                                        "view": "ambientDecayType"
                                    },
                                    "start": [
                                        370,
                                        30
                                    ],
                                    "type": "doc.type.field",
                                    "view": "number"
                                },
                                {
                                    "finish": [
                                        370,
                                        80
                                    ],
                                    "name": {
                                        "[1]": "diffuseDecayType",
                                        "finish": [
                                            370,
                                            72
                                        ],
                                        "start": [
                                            370,
                                            56
                                        ],
                                        "type": "doc.field.name",
                                        "view": "diffuseDecayType"
                                    },
                                    "start": [
                                        370,
                                        56
                                    ],
                                    "type": "doc.type.field",
                                    "view": "number"
                                },
                                {
                                    "finish": [
                                        370,
                                        107
                                    ],
                                    "name": {
                                        "[1]": "specularDecayType",
                                        "finish": [
                                            370,
                                            99
                                        ],
                                        "start": [
                                            370,
                                            82
                                        ],
                                        "type": "doc.field.name",
                                        "view": "specularDecayType"
                                    },
                                    "start": [
                                        370,
                                        82
                                    ],
                                    "type": "doc.type.field",
                                    "view": "number"
                                }
                            ],
                            "finish": [
                                370,
                                109
                            ],
                            "start": [
                                370,
                                28
                            ],
                            "type": "doc.type.table",
                            "view": "{ ambientDecayType: number, diffuseDecayType: number, specularDecayType: number }"
                        }
                    ],
                    "view": "{ ambientDecayType: number, diffuseDecayType: number, specularDecayType: number }"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    370,
                    109
                ],
                "name": "decayFunctionType",
                "rawdesc": "Per-frame decay of `specularColor` (spread over TTL frames)",
                "start": [
                    370,
                    10
                ],
                "type": "doc.field",
                "view": "{ ambientDecayType: number, diffuseDecayType: number, specularDecayType: number }",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        361,
                        67
                    ],
                    "start": [
                        361,
                        23
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "fields": [
                                {
                                    "finish": [
                                        361,
                                        36
                                    ],
                                    "name": {
                                        "[1]": "red",
                                        "finish": [
                                            361,
                                            28
                                        ],
                                        "start": [
                                            361,
                                            25
                                        ],
                                        "type": "doc.field.name",
                                        "view": "red"
                                    },
                                    "start": [
                                        361,
                                        25
                                    ],
                                    "type": "doc.type.field",
                                    "view": "number"
                                },
                                {
                                    "finish": [
                                        361,
                                        51
                                    ],
                                    "name": {
                                        "[1]": "green",
                                        "finish": [
                                            361,
                                            43
                                        ],
                                        "start": [
                                            361,
                                            38
                                        ],
                                        "type": "doc.field.name",
                                        "view": "green"
                                    },
                                    "start": [
                                        361,
                                        38
                                    ],
                                    "type": "doc.type.field",
                                    "view": "number"
                                },
                                {
                                    "finish": [
                                        361,
                                        65
                                    ],
                                    "name": {
                                        "[1]": "blue",
                                        "finish": [
                                            361,
                                            57
                                        ],
                                        "start": [
                                            361,
                                            53
                                        ],
                                        "type": "doc.field.name",
                                        "view": "blue"
                                    },
                                    "start": [
                                        361,
                                        53
                                    ],
                                    "type": "doc.type.field",
                                    "view": "number"
                                }
                            ],
                            "finish": [
                                361,
                                67
                            ],
                            "start": [
                                361,
                                23
                            ],
                            "type": "doc.type.table",
                            "view": "{ red: number, green: number, blue: number }"
                        }
                    ],
                    "view": "{ red: number, green: number, blue: number }"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    361,
                    67
                ],
                "name": "diffuseColor",
                "start": [
                    361,
                    10
                ],
                "type": "doc.field",
                "view": "{ red: number, green: number, blue: number }",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Per-frame decay of `ambientColor` (spread over TTL frames)",
                "extends": {
                    "finish": [
                        366,
                        107
                    ],
                    "start": [
                        366,
                        27
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "fields": [
                                {
                                    "finish": [
                                        366,
                                        52
                                    ],
                                    "name": {
                                        "[1]": "diffuseRedDecay",
                                        "finish": [
                                            366,
                                            44
                                        ],
                                        "start": [
                                            366,
                                            29
                                        ],
                                        "type": "doc.field.name",
                                        "view": "diffuseRedDecay"
                                    },
                                    "start": [
                                        366,
                                        29
                                    ],
                                    "type": "doc.type.field",
                                    "view": "number"
                                },
                                {
                                    "finish": [
                                        366,
                                        79
                                    ],
                                    "name": {
                                        "[1]": "diffuseGreenDecay",
                                        "finish": [
                                            366,
                                            71
                                        ],
                                        "start": [
                                            366,
                                            54
                                        ],
                                        "type": "doc.field.name",
                                        "view": "diffuseGreenDecay"
                                    },
                                    "start": [
                                        366,
                                        54
                                    ],
                                    "type": "doc.type.field",
                                    "view": "number"
                                },
                                {
                                    "finish": [
                                        366,
                                        105
                                    ],
                                    "name": {
                                        "[1]": "diffuseBlueDecay",
                                        "finish": [
                                            366,
                                            97
                                        ],
                                        "start": [
                                            366,
                                            81
                                        ],
                                        "type": "doc.field.name",
                                        "view": "diffuseBlueDecay"
                                    },
                                    "start": [
                                        366,
                                        81
                                    ],
                                    "type": "doc.type.field",
                                    "view": "number"
                                }
                            ],
                            "finish": [
                                366,
                                107
                            ],
                            "start": [
                                366,
                                27
                            ],
                            "type": "doc.type.table",
                            "view": "{ diffuseRedDecay: number, diffuseGreenDecay: number, diffuseBlueDecay: number }"
                        }
                    ],
                    "view": "{ diffuseRedDecay: number, diffuseGreenDecay: number, diffuseBlueDecay: number }"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    366,
                    107
                ],
                "name": "diffuseDecayRate",
                "rawdesc": "Per-frame decay of `ambientColor` (spread over TTL frames)",
                "start": [
                    366,
                    10
                ],
                "type": "doc.field",
                "view": "{ diffuseRedDecay: number, diffuseGreenDecay: number, diffuseBlueDecay: number }",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        359,
                        58
                    ],
                    "start": [
                        359,
                        20
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "fields": [
                                {
                                    "finish": [
                                        359,
                                        32
                                    ],
                                    "name": {
                                        "[1]": "dx",
                                        "finish": [
                                            359,
                                            24
                                        ],
                                        "start": [
                                            359,
                                            22
                                        ],
                                        "type": "doc.field.name",
                                        "view": "dx"
                                    },
                                    "start": [
                                        359,
                                        22
                                    ],
                                    "type": "doc.type.field",
                                    "view": "number"
                                },
                                {
                                    "finish": [
                                        359,
                                        44
                                    ],
                                    "name": {
                                        "[1]": "dy",
                                        "finish": [
                                            359,
                                            36
                                        ],
                                        "start": [
                                            359,
                                            34
                                        ],
                                        "type": "doc.field.name",
                                        "view": "dy"
                                    },
                                    "start": [
                                        359,
                                        34
                                    ],
                                    "type": "doc.type.field",
                                    "view": "number"
                                },
                                {
                                    "finish": [
                                        359,
                                        56
                                    ],
                                    "name": {
                                        "[1]": "dz",
                                        "finish": [
                                            359,
                                            48
                                        ],
                                        "start": [
                                            359,
                                            46
                                        ],
                                        "type": "doc.field.name",
                                        "view": "dz"
                                    },
                                    "start": [
                                        359,
                                        46
                                    ],
                                    "type": "doc.type.field",
                                    "view": "number"
                                }
                            ],
                            "finish": [
                                359,
                                58
                            ],
                            "start": [
                                359,
                                20
                            ],
                            "type": "doc.type.table",
                            "view": "{ dx: number, dy: number, dz: number }"
                        }
                    ],
                    "view": "{ dx: number, dy: number, dz: number }"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    359,
                    58
                ],
                "name": "direction",
                "start": [
                    359,
                    10
                ],
                "type": "doc.field",
                "view": "{ dx: number, dy: number, dz: number }",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        373,
                        20
                    ],
                    "start": [
                        373,
                        14
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                373,
                                20
                            ],
                            "start": [
                                373,
                                14
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    373,
                    20
                ],
                "name": "fov",
                "start": [
                    373,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        376,
                        27
                    ],
                    "start": [
                        376,
                        20
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                376,
                                27
                            ],
                            "start": [
                                376,
                                20
                            ],
                            "type": "doc.type.name",
                            "view": "boolean"
                        }
                    ],
                    "view": "boolean"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    376,
                    27
                ],
                "name": "ignoreLOS",
                "start": [
                    376,
                    10
                ],
                "type": "doc.field",
                "view": "boolean",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        363,
                        98
                    ],
                    "start": [
                        363,
                        26
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "fields": [
                                {
                                    "finish": [
                                        363,
                                        49
                                    ],
                                    "name": {
                                        "[1]": "ambientWeight",
                                        "finish": [
                                            363,
                                            41
                                        ],
                                        "start": [
                                            363,
                                            28
                                        ],
                                        "type": "doc.field.name",
                                        "view": "ambientWeight"
                                    },
                                    "start": [
                                        363,
                                        28
                                    ],
                                    "type": "doc.type.field",
                                    "view": "number"
                                },
                                {
                                    "finish": [
                                        363,
                                        72
                                    ],
                                    "name": {
                                        "[1]": "diffuseWeight",
                                        "finish": [
                                            363,
                                            64
                                        ],
                                        "start": [
                                            363,
                                            51
                                        ],
                                        "type": "doc.field.name",
                                        "view": "diffuseWeight"
                                    },
                                    "start": [
                                        363,
                                        51
                                    ],
                                    "type": "doc.type.field",
                                    "view": "number"
                                },
                                {
                                    "finish": [
                                        363,
                                        96
                                    ],
                                    "name": {
                                        "[1]": "specularWeight",
                                        "finish": [
                                            363,
                                            88
                                        ],
                                        "start": [
                                            363,
                                            74
                                        ],
                                        "type": "doc.field.name",
                                        "view": "specularWeight"
                                    },
                                    "start": [
                                        363,
                                        74
                                    ],
                                    "type": "doc.type.field",
                                    "view": "number"
                                }
                            ],
                            "finish": [
                                363,
                                98
                            ],
                            "start": [
                                363,
                                26
                            ],
                            "type": "doc.type.table",
                            "view": "{ ambientWeight: number, diffuseWeight: number, specularWeight: number }"
                        }
                    ],
                    "view": "{ ambientWeight: number, diffuseWeight: number, specularWeight: number }"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    363,
                    98
                ],
                "name": "intensityWeight",
                "start": [
                    363,
                    10
                ],
                "type": "doc.field",
                "view": "{ ambientWeight: number, diffuseWeight: number, specularWeight: number }",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        358,
                        57
                    ],
                    "start": [
                        358,
                        19
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "fields": [
                                {
                                    "finish": [
                                        358,
                                        31
                                    ],
                                    "name": {
                                        "[1]": "px",
                                        "finish": [
                                            358,
                                            23
                                        ],
                                        "start": [
                                            358,
                                            21
                                        ],
                                        "type": "doc.field.name",
                                        "view": "px"
                                    },
                                    "start": [
                                        358,
                                        21
                                    ],
                                    "type": "doc.type.field",
                                    "view": "number"
                                },
                                {
                                    "finish": [
                                        358,
                                        43
                                    ],
                                    "name": {
                                        "[1]": "py",
                                        "finish": [
                                            358,
                                            35
                                        ],
                                        "start": [
                                            358,
                                            33
                                        ],
                                        "type": "doc.field.name",
                                        "view": "py"
                                    },
                                    "start": [
                                        358,
                                        33
                                    ],
                                    "type": "doc.type.field",
                                    "view": "number"
                                },
                                {
                                    "finish": [
                                        358,
                                        55
                                    ],
                                    "name": {
                                        "[1]": "pz",
                                        "finish": [
                                            358,
                                            47
                                        ],
                                        "start": [
                                            358,
                                            45
                                        ],
                                        "type": "doc.field.name",
                                        "view": "pz"
                                    },
                                    "start": [
                                        358,
                                        45
                                    ],
                                    "type": "doc.type.field",
                                    "view": "number"
                                }
                            ],
                            "finish": [
                                358,
                                57
                            ],
                            "start": [
                                358,
                                19
                            ],
                            "type": "doc.type.table",
                            "view": "{ px: number, py: number, pz: number }"
                        }
                    ],
                    "view": "{ px: number, py: number, pz: number }"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    358,
                    57
                ],
                "name": "position",
                "start": [
                    358,
                    10
                ],
                "type": "doc.field",
                "view": "{ px: number, py: number, pz: number }",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        375,
                        25
                    ],
                    "start": [
                        375,
                        19
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                375,
                                25
                            ],
                            "start": [
                                375,
                                19
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    375,
                    25
                ],
                "name": "priority",
                "start": [
                    375,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "If value is `0.0` then the `*DecayRate` values will be interpreted as linear, otherwise exponential.",
                "extends": {
                    "finish": [
                        372,
                        23
                    ],
                    "start": [
                        372,
                        17
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                372,
                                23
                            ],
                            "start": [
                                372,
                                17
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    372,
                    23
                ],
                "name": "radius",
                "rawdesc": "If value is `0.0` then the `*DecayRate` values will be interpreted as linear, otherwise exponential.",
                "start": [
                    372,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        362,
                        68
                    ],
                    "start": [
                        362,
                        24
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "fields": [
                                {
                                    "finish": [
                                        362,
                                        37
                                    ],
                                    "name": {
                                        "[1]": "red",
                                        "finish": [
                                            362,
                                            29
                                        ],
                                        "start": [
                                            362,
                                            26
                                        ],
                                        "type": "doc.field.name",
                                        "view": "red"
                                    },
                                    "start": [
                                        362,
                                        26
                                    ],
                                    "type": "doc.type.field",
                                    "view": "number"
                                },
                                {
                                    "finish": [
                                        362,
                                        52
                                    ],
                                    "name": {
                                        "[1]": "green",
                                        "finish": [
                                            362,
                                            44
                                        ],
                                        "start": [
                                            362,
                                            39
                                        ],
                                        "type": "doc.field.name",
                                        "view": "green"
                                    },
                                    "start": [
                                        362,
                                        39
                                    ],
                                    "type": "doc.type.field",
                                    "view": "number"
                                },
                                {
                                    "finish": [
                                        362,
                                        66
                                    ],
                                    "name": {
                                        "[1]": "blue",
                                        "finish": [
                                            362,
                                            58
                                        ],
                                        "start": [
                                            362,
                                            54
                                        ],
                                        "type": "doc.field.name",
                                        "view": "blue"
                                    },
                                    "start": [
                                        362,
                                        54
                                    ],
                                    "type": "doc.type.field",
                                    "view": "number"
                                }
                            ],
                            "finish": [
                                362,
                                68
                            ],
                            "start": [
                                362,
                                24
                            ],
                            "type": "doc.type.table",
                            "view": "{ red: number, green: number, blue: number }"
                        }
                    ],
                    "view": "{ red: number, green: number, blue: number }"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    362,
                    68
                ],
                "name": "specularColor",
                "start": [
                    362,
                    10
                ],
                "type": "doc.field",
                "view": "{ red: number, green: number, blue: number }",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Per-frame decay of `diffuseColor` (spread over TTL frames)",
                "extends": {
                    "finish": [
                        368,
                        111
                    ],
                    "start": [
                        368,
                        28
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "fields": [
                                {
                                    "finish": [
                                        368,
                                        54
                                    ],
                                    "name": {
                                        "[1]": "specularRedDecay",
                                        "finish": [
                                            368,
                                            46
                                        ],
                                        "start": [
                                            368,
                                            30
                                        ],
                                        "type": "doc.field.name",
                                        "view": "specularRedDecay"
                                    },
                                    "start": [
                                        368,
                                        30
                                    ],
                                    "type": "doc.type.field",
                                    "view": "number"
                                },
                                {
                                    "finish": [
                                        368,
                                        82
                                    ],
                                    "name": {
                                        "[1]": "specularGreenDecay",
                                        "finish": [
                                            368,
                                            74
                                        ],
                                        "start": [
                                            368,
                                            56
                                        ],
                                        "type": "doc.field.name",
                                        "view": "specularGreenDecay"
                                    },
                                    "start": [
                                        368,
                                        56
                                    ],
                                    "type": "doc.type.field",
                                    "view": "number"
                                },
                                {
                                    "finish": [
                                        368,
                                        109
                                    ],
                                    "name": {
                                        "[1]": "specularBlueDecay",
                                        "finish": [
                                            368,
                                            101
                                        ],
                                        "start": [
                                            368,
                                            84
                                        ],
                                        "type": "doc.field.name",
                                        "view": "specularBlueDecay"
                                    },
                                    "start": [
                                        368,
                                        84
                                    ],
                                    "type": "doc.type.field",
                                    "view": "number"
                                }
                            ],
                            "finish": [
                                368,
                                111
                            ],
                            "start": [
                                368,
                                28
                            ],
                            "type": "doc.type.table",
                            "view": "{ specularRedDecay: number, specularGreenDecay: number, specularBlueDecay: number }"
                        }
                    ],
                    "view": "{ specularRedDecay: number, specularGreenDecay: number, specularBlueDecay: number }"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    368,
                    111
                ],
                "name": "specularDecayRate",
                "rawdesc": "Per-frame decay of `diffuseColor` (spread over TTL frames)",
                "start": [
                    368,
                    10
                ],
                "type": "doc.field",
                "view": "{ specularRedDecay: number, specularGreenDecay: number, specularBlueDecay: number }",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        374,
                        20
                    ],
                    "start": [
                        374,
                        14
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                374,
                                20
                            ],
                            "start": [
                                374,
                                14
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    374,
                    20
                ],
                "name": "ttl",
                "start": [
                    374,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            }
        ],
        "name": "LightParams",
        "type": "type",
        "view": "LightParams"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Called after `GamePreload` and before `GameStart`. See Lua_SaveLoad.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                52,
                                23
                            ],
                            "name": "zipReader",
                            "start": [
                                52,
                                14
                            ],
                            "type": "local",
                            "view": "table"
                        }
                    ],
                    "desc": "Called after `GamePreload` and before `GameStart`. See Lua_SaveLoad.",
                    "finish": [
                        52,
                        28
                    ],
                    "rawdesc": "Called after `GamePreload` and before `GameStart`. See Lua_SaveLoad.",
                    "start": [
                        52,
                        0
                    ],
                    "type": "function",
                    "view": "function Load(zipReader: table)"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    52,
                    13
                ],
                "rawdesc": "Called after `GamePreload` and before `GameStart`. See Lua_SaveLoad.",
                "start": [
                    52,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Load",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Called when the game is (re)loaded.",
                "extends": {
                    "args": [],
                    "desc": "Called when the game is (re)loaded.",
                    "finish": [
                        36,
                        23
                    ],
                    "rawdesc": "Called when the game is (re)loaded.",
                    "start": [
                        36,
                        0
                    ],
                    "type": "function",
                    "view": "function LoadCode()"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    36,
                    17
                ],
                "rawdesc": "Called when the game is (re)loaded.",
                "start": [
                    36,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "LoadCode",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                14,
                                29
                            ],
                            "name": "message",
                            "start": [
                                14,
                                22
                            ],
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": [
                                14,
                                46
                            ],
                            "name": "replaceLastLine",
                            "start": [
                                14,
                                31
                            ],
                            "type": "local",
                            "view": "boolean"
                        }
                    ],
                    "finish": [
                        14,
                        51
                    ],
                    "start": [
                        14,
                        0
                    ],
                    "type": "function",
                    "view": "function LoadProgress(message: string, replaceLastLine: boolean)"
                },
                "file": "/generated/LuaIntro.lua",
                "finish": [
                    14,
                    21
                ],
                "start": [
                    14,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "LoadProgress",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "desc": "```lua\nLogLevel:\n    | \"debug\" -- LOG.DEBUG\n    | \"info\" -- LOG.INFO\n    | \"notice\" -- LOG.NOTICE (engine default)\n    | \"warning\" -- LOG.WARNING\n    | \"deprecated\" -- LOG.DEPRECATED\n    | \"error\" -- LOG.ERROR\n    | \"fatal\" -- LOG.FATAL\n```",
                "finish": [
                    41,
                    12
                ],
                "rawdesc": "```lua\nLogLevel:\n    | \"debug\" -- LOG.DEBUG\n    | \"info\" -- LOG.INFO\n    | \"notice\" -- LOG.NOTICE (engine default)\n    | \"warning\" -- LOG.WARNING\n    | \"deprecated\" -- LOG.DEPRECATED\n    | \"error\" -- LOG.ERROR\n    | \"fatal\" -- LOG.FATAL\n```",
                "start": [
                    33,
                    10
                ],
                "type": "doc.alias",
                "view": "integer|\"debug\"|\"deprecated\"|\"error\"|\"fatal\"...(+3)"
            }
        ],
        "fields": [],
        "name": "LogLevel",
        "type": "type",
        "view": "LogLevel"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "file": "/generated/LuaZip.lua",
                "finish": [
                    23,
                    26
                ],
                "start": [
                    23,
                    10
                ],
                "type": "doc.class",
                "view": "LuaZipFileReader",
                "visible": "public"
            }
        ],
        "fields": [],
        "name": "LuaZipFileReader",
        "type": "type",
        "view": "LuaZipFileReader"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "file": "/generated/LuaZip.lua",
                "finish": [
                    13,
                    26
                ],
                "start": [
                    13,
                    10
                ],
                "type": "doc.class",
                "view": "LuaZipFileWriter",
                "visible": "public"
            }
        ],
        "fields": [],
        "name": "LuaZipFileWriter",
        "type": "type",
        "view": "LuaZipFileWriter"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `type` — point\n\n@*param* `data4` — point: label, erase: radius, line: pos2X\n\n@*param* `pos2Y` — when type is line\n\n@*param* `pos2Z` — when type is line",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                785,
                                28
                            ],
                            "name": "playerID",
                            "start": [
                                785,
                                20
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "desc": "point",
                            "finish": [
                                785,
                                34
                            ],
                            "name": "type",
                            "rawdesc": "point",
                            "start": [
                                785,
                                30
                            ],
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": [
                                785,
                                40
                            ],
                            "name": "posX",
                            "start": [
                                785,
                                36
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                785,
                                46
                            ],
                            "name": "posY",
                            "start": [
                                785,
                                42
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                785,
                                52
                            ],
                            "name": "posZ",
                            "start": [
                                785,
                                48
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "desc": "point: label, erase: radius, line: pos2X",
                            "finish": [
                                785,
                                59
                            ],
                            "name": "data4",
                            "rawdesc": "point: label, erase: radius, line: pos2X",
                            "start": [
                                785,
                                54
                            ],
                            "type": "local",
                            "view": "string|number"
                        },
                        {
                            "desc": "when type is line",
                            "finish": [
                                785,
                                66
                            ],
                            "name": "pos2Y",
                            "rawdesc": "when type is line",
                            "start": [
                                785,
                                61
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "desc": "when type is line",
                            "finish": [
                                785,
                                73
                            ],
                            "name": "pos2Z",
                            "rawdesc": "when type is line",
                            "start": [
                                785,
                                68
                            ],
                            "type": "local",
                            "view": "number?"
                        }
                    ],
                    "desc": "@*param* `type` — point\n\n@*param* `data4` — point: label, erase: radius, line: pos2X\n\n@*param* `pos2Y` — when type is line\n\n@*param* `pos2Z` — when type is line",
                    "finish": [
                        785,
                        78
                    ],
                    "start": [
                        785,
                        0
                    ],
                    "type": "function",
                    "view": "function MapDrawCmd(playerID: number, type: string, posX: number, posY: number, posZ: number, data4: string|number, pos2Y?: number, pos2Z?: number)"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    785,
                    19
                ],
                "start": [
                    785,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "MapDrawCmd",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Map rendering params\n",
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    945,
                    28
                ],
                "rawdesc": "Map rendering params\n",
                "start": [
                    945,
                    10
                ],
                "type": "doc.class",
                "view": "MapRenderingParams",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        950,
                        47
                    ],
                    "start": [
                        950,
                        40
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                950,
                                47
                            ],
                            "start": [
                                950,
                                40
                            ],
                            "type": "doc.type.name",
                            "view": "boolean"
                        }
                    ],
                    "view": "boolean"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    950,
                    47
                ],
                "name": "splatDetailNormalDiffuseAlpha",
                "start": [
                    950,
                    10
                ],
                "type": "doc.field",
                "view": "boolean",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Color quadruple (RGBA)\n",
                "extends": {
                    "desc": "Color quadruple (RGBA)\n",
                    "finish": [
                        946,
                        28
                    ],
                    "rawdesc": "Color quadruple (RGBA)\n",
                    "start": [
                        946,
                        24
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "desc": "Color quadruple (RGBA)\n",
                            "finish": [
                                946,
                                28
                            ],
                            "rawdesc": "Color quadruple (RGBA)\n",
                            "start": [
                                946,
                                24
                            ],
                            "type": "doc.type.name",
                            "view": "rgba"
                        }
                    ],
                    "view": "rgba"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    946,
                    28
                ],
                "name": "splatTexMults",
                "rawdesc": "Color quadruple (RGBA)\n",
                "start": [
                    946,
                    10
                ],
                "type": "doc.field",
                "view": "rgba",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Color quadruple (RGBA)\n",
                "extends": {
                    "desc": "Color quadruple (RGBA)\n",
                    "finish": [
                        947,
                        29
                    ],
                    "rawdesc": "Color quadruple (RGBA)\n",
                    "start": [
                        947,
                        25
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "desc": "Color quadruple (RGBA)\n",
                            "finish": [
                                947,
                                29
                            ],
                            "rawdesc": "Color quadruple (RGBA)\n",
                            "start": [
                                947,
                                25
                            ],
                            "type": "doc.type.name",
                            "view": "rgba"
                        }
                    ],
                    "view": "rgba"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    947,
                    29
                ],
                "name": "splatTexScales",
                "rawdesc": "Color quadruple (RGBA)\n",
                "start": [
                    947,
                    10
                ],
                "type": "doc.field",
                "view": "rgba",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        949,
                        28
                    ],
                    "start": [
                        949,
                        21
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                949,
                                28
                            ],
                            "start": [
                                949,
                                21
                            ],
                            "type": "doc.type.name",
                            "view": "boolean"
                        }
                    ],
                    "view": "boolean"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    949,
                    28
                ],
                "name": "voidGround",
                "start": [
                    949,
                    10
                ],
                "type": "doc.field",
                "view": "boolean",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        948,
                        27
                    ],
                    "start": [
                        948,
                        20
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                948,
                                27
                            ],
                            "start": [
                                948,
                                20
                            ],
                            "type": "doc.type.name",
                            "view": "boolean"
                        }
                    ],
                    "view": "boolean"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    948,
                    27
                ],
                "name": "voidWater",
                "start": [
                    948,
                    10
                ],
                "type": "doc.field",
                "view": "boolean",
                "visible": "public"
            }
        ],
        "name": "MapRenderingParams",
        "type": "type",
        "view": "MapRenderingParams"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Called when the mouse is moved.\n\n@*param* `x` — final x position\n\n@*param* `y` — final y position\n\n@*param* `dx` — distance travelled in x\n\n@*param* `dy` — distance travelled in y",
                "extends": {
                    "args": [
                        {
                            "desc": "final x position",
                            "finish": [
                                721,
                                20
                            ],
                            "name": "x",
                            "rawdesc": "final x position",
                            "start": [
                                721,
                                19
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "desc": "final y position",
                            "finish": [
                                721,
                                23
                            ],
                            "name": "y",
                            "rawdesc": "final y position",
                            "start": [
                                721,
                                22
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "desc": "distance travelled in x",
                            "finish": [
                                721,
                                27
                            ],
                            "name": "dx",
                            "rawdesc": "distance travelled in x",
                            "start": [
                                721,
                                25
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "desc": "distance travelled in y",
                            "finish": [
                                721,
                                31
                            ],
                            "name": "dy",
                            "rawdesc": "distance travelled in y",
                            "start": [
                                721,
                                29
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                721,
                                39
                            ],
                            "name": "button",
                            "start": [
                                721,
                                33
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "Called when the mouse is moved.\n\n@*param* `x` — final x position\n\n@*param* `y` — final y position\n\n@*param* `dx` — distance travelled in x\n\n@*param* `dy` — distance travelled in y",
                    "finish": [
                        721,
                        44
                    ],
                    "rawdesc": "Called when the mouse is moved.",
                    "start": [
                        721,
                        0
                    ],
                    "type": "function",
                    "view": "function MouseMove(x: number, y: number, dx: number, dy: number, button: number)"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    721,
                    18
                ],
                "rawdesc": "Called when the mouse is moved.",
                "start": [
                    721,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "MouseMove",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Called when a mouse button is pressed.\n\nThe button parameter supports up to 7 buttons. Must return true for `MouseRelease` and other functions to be called.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                702,
                                21
                            ],
                            "name": "x",
                            "start": [
                                702,
                                20
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                702,
                                24
                            ],
                            "name": "y",
                            "start": [
                                702,
                                23
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                702,
                                32
                            ],
                            "name": "button",
                            "start": [
                                702,
                                26
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "Called when a mouse button is pressed.\n\nThe button parameter supports up to 7 buttons. Must return true for `MouseRelease` and other functions to be called.",
                    "finish": [
                        702,
                        37
                    ],
                    "rawdesc": "Called when a mouse button is pressed.\n\nThe button parameter supports up to 7 buttons. Must return true for `MouseRelease` and other functions to be called.",
                    "returns": [
                        {
                            "name": "becomeMouseOwner",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        702,
                        0
                    ],
                    "type": "function",
                    "view": "function MousePress(x: number, y: number, button: number)\n  -> becomeMouseOwner: boolean"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    702,
                    19
                ],
                "rawdesc": "Called when a mouse button is pressed.\n\nThe button parameter supports up to 7 buttons. Must return true for `MouseRelease` and other functions to be called.",
                "start": [
                    702,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "MousePress",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Called when a mouse button is released.\n\nPlease note that in order to have Spring call `Spring.MouseRelease`, you need to have a `Spring.MousePress` call-in in the same addon that returns true.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                712,
                                23
                            ],
                            "name": "x",
                            "start": [
                                712,
                                22
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                712,
                                26
                            ],
                            "name": "y",
                            "start": [
                                712,
                                25
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                712,
                                34
                            ],
                            "name": "button",
                            "start": [
                                712,
                                28
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "Called when a mouse button is released.\n\nPlease note that in order to have Spring call `Spring.MouseRelease`, you need to have a `Spring.MousePress` call-in in the same addon that returns true.",
                    "finish": [
                        712,
                        39
                    ],
                    "rawdesc": "Called when a mouse button is released.\n\nPlease note that in order to have Spring call `Spring.MouseRelease`, you need to have a `Spring.MousePress` call-in in the same addon that returns true.",
                    "returns": [
                        {
                            "name": "becomeMouseOwner",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        712,
                        0
                    ],
                    "type": "function",
                    "view": "function MouseRelease(x: number, y: number, button: number)\n  -> becomeMouseOwner: boolean"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    712,
                    21
                ],
                "rawdesc": "Called when a mouse button is released.\n\nPlease note that in order to have Spring call `Spring.MouseRelease`, you need to have a `Spring.MousePress` call-in in the same addon that returns true.",
                "start": [
                    712,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "MouseRelease",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Called when the mouse wheel is moved.\n\n@*param* `up` — the direction\n\n@*param* `value` — the amount travelled",
                "extends": {
                    "args": [
                        {
                            "desc": "the direction",
                            "finish": [
                                727,
                                22
                            ],
                            "name": "up",
                            "rawdesc": "the direction",
                            "start": [
                                727,
                                20
                            ],
                            "type": "local",
                            "view": "boolean"
                        },
                        {
                            "desc": "the amount travelled",
                            "finish": [
                                727,
                                29
                            ],
                            "name": "value",
                            "rawdesc": "the amount travelled",
                            "start": [
                                727,
                                24
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "Called when the mouse wheel is moved.\n\n@*param* `up` — the direction\n\n@*param* `value` — the amount travelled",
                    "finish": [
                        727,
                        34
                    ],
                    "rawdesc": "Called when the mouse wheel is moved.",
                    "start": [
                        727,
                        0
                    ],
                    "type": "function",
                    "view": "function MouseWheel(up: boolean, value: number)"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    727,
                    19
                ],
                "rawdesc": "Called when the mouse wheel is moved.",
                "start": [
                    727,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "MouseWheel",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Enable both Spring.MoveCtrl.SetCollideStop and Spring.MoveCtrl.SetTrackGround to enable this call-in.\n\n@*param* `data` — was supposed to indicate the type of notification but currently never has a value other than 1 (\"unit hit the ground\").\n\n@*return* `whether` — or not the unit should remain script-controlled (false) or return to engine controlled movement (true).",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                279,
                                30
                            ],
                            "name": "unitID",
                            "start": [
                                279,
                                24
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                279,
                                41
                            ],
                            "name": "unitDefID",
                            "start": [
                                279,
                                32
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                279,
                                51
                            ],
                            "name": "unitTeam",
                            "start": [
                                279,
                                43
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "desc": "was supposed to indicate the type of notification but currently never has a value other than 1 (\"unit hit the ground\").",
                            "finish": [
                                279,
                                57
                            ],
                            "name": "data",
                            "rawdesc": "was supposed to indicate the type of notification but currently never has a value other than 1 (\"unit hit the ground\").",
                            "start": [
                                279,
                                53
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "Enable both Spring.MoveCtrl.SetCollideStop and Spring.MoveCtrl.SetTrackGround to enable this call-in.\n\n@*param* `data` — was supposed to indicate the type of notification but currently never has a value other than 1 (\"unit hit the ground\").\n\n@*return* `whether` — or not the unit should remain script-controlled (false) or return to engine controlled movement (true).",
                    "finish": [
                        279,
                        62
                    ],
                    "rawdesc": "Enable both Spring.MoveCtrl.SetCollideStop and Spring.MoveCtrl.SetTrackGround to enable this call-in.",
                    "returns": [
                        {
                            "desc": "or not the unit should remain script-controlled (false) or return to engine controlled movement (true).",
                            "name": "whether",
                            "rawdesc": "or not the unit should remain script-controlled (false) or return to engine controlled movement (true).",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        279,
                        0
                    ],
                    "type": "function",
                    "view": "function MoveCtrlNotify(unitID: integer, unitDefID: integer, unitTeam: integer, data: number)\n  -> whether: boolean"
                },
                "file": "/generated/LuaHandleSynced.lua",
                "finish": [
                    279,
                    23
                ],
                "rawdesc": "Enable both Spring.MoveCtrl.SetCollideStop and Spring.MoveCtrl.SetTrackGround to enable this call-in.",
                "start": [
                    279,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "MoveCtrlNotify",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1547,
                    19
                ],
                "start": [
                    1547,
                    10
                ],
                "type": "doc.class",
                "view": "PieceInfo",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "desc": "names",
                "extends": {
                    "finish": [
                        1550,
                        27
                    ],
                    "start": [
                        1550,
                        19
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                1550,
                                27
                            ],
                            "start": [
                                1550,
                                19
                            ],
                            "type": "doc.type.array",
                            "view": "string[]"
                        }
                    ],
                    "view": "string[]"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1550,
                    27
                ],
                "name": "children",
                "rawdesc": "names",
                "start": [
                    1550,
                    10
                ],
                "type": "doc.field",
                "view": "string[]",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        1551,
                        23
                    ],
                    "start": [
                        1551,
                        16
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                1551,
                                23
                            ],
                            "start": [
                                1551,
                                16
                            ],
                            "type": "doc.type.name",
                            "view": "boolean"
                        }
                    ],
                    "view": "boolean"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1551,
                    23
                ],
                "name": "empty",
                "start": [
                    1551,
                    10
                ],
                "type": "doc.field",
                "view": "boolean",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "(x,y,z)",
                "extends": {
                    "finish": [
                        1553,
                        36
                    ],
                    "start": [
                        1553,
                        14
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "fields": [
                                {
                                    "finish": [
                                        1553,
                                        21
                                    ],
                                    "name": {
                                        "finish": [
                                            1553,
                                            15
                                        ],
                                        "start": [
                                            1553,
                                            15
                                        ],
                                        "type": "doc.type",
                                        "types": [
                                            {
                                                "finish": [
                                                    1553,
                                                    15
                                                ],
                                                "start": [
                                                    1553,
                                                    15
                                                ],
                                                "type": "doc.type.integer",
                                                "view": "1"
                                            }
                                        ],
                                        "view": "1"
                                    },
                                    "start": [
                                        1553,
                                        15
                                    ],
                                    "type": "doc.type.field",
                                    "view": "number"
                                },
                                {
                                    "finish": [
                                        1553,
                                        28
                                    ],
                                    "name": {
                                        "finish": [
                                            1553,
                                            22
                                        ],
                                        "start": [
                                            1553,
                                            22
                                        ],
                                        "type": "doc.type",
                                        "types": [
                                            {
                                                "finish": [
                                                    1553,
                                                    22
                                                ],
                                                "start": [
                                                    1553,
                                                    22
                                                ],
                                                "type": "doc.type.integer",
                                                "view": "2"
                                            }
                                        ],
                                        "view": "2"
                                    },
                                    "start": [
                                        1553,
                                        22
                                    ],
                                    "type": "doc.type.field",
                                    "view": "number"
                                },
                                {
                                    "finish": [
                                        1553,
                                        35
                                    ],
                                    "name": {
                                        "finish": [
                                            1553,
                                            29
                                        ],
                                        "start": [
                                            1553,
                                            29
                                        ],
                                        "type": "doc.type",
                                        "types": [
                                            {
                                                "finish": [
                                                    1553,
                                                    29
                                                ],
                                                "start": [
                                                    1553,
                                                    29
                                                ],
                                                "type": "doc.type.integer",
                                                "view": "3"
                                            }
                                        ],
                                        "view": "3"
                                    },
                                    "start": [
                                        1553,
                                        29
                                    ],
                                    "type": "doc.type.field",
                                    "view": "number"
                                }
                            ],
                            "finish": [
                                1553,
                                36
                            ],
                            "start": [
                                1553,
                                14
                            ],
                            "type": "doc.type.table",
                            "view": "[number, number, number]"
                        }
                    ],
                    "view": "[number, number, number]"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1553,
                    36
                ],
                "name": "max",
                "rawdesc": "(x,y,z)",
                "start": [
                    1553,
                    10
                ],
                "type": "doc.field",
                "view": "[number, number, number]",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "(x,y,z)",
                "extends": {
                    "finish": [
                        1552,
                        36
                    ],
                    "start": [
                        1552,
                        14
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "fields": [
                                {
                                    "finish": [
                                        1552,
                                        21
                                    ],
                                    "name": {
                                        "finish": [
                                            1552,
                                            15
                                        ],
                                        "start": [
                                            1552,
                                            15
                                        ],
                                        "type": "doc.type",
                                        "types": [
                                            {
                                                "finish": [
                                                    1552,
                                                    15
                                                ],
                                                "start": [
                                                    1552,
                                                    15
                                                ],
                                                "type": "doc.type.integer",
                                                "view": "1"
                                            }
                                        ],
                                        "view": "1"
                                    },
                                    "start": [
                                        1552,
                                        15
                                    ],
                                    "type": "doc.type.field",
                                    "view": "number"
                                },
                                {
                                    "finish": [
                                        1552,
                                        28
                                    ],
                                    "name": {
                                        "finish": [
                                            1552,
                                            22
                                        ],
                                        "start": [
                                            1552,
                                            22
                                        ],
                                        "type": "doc.type",
                                        "types": [
                                            {
                                                "finish": [
                                                    1552,
                                                    22
                                                ],
                                                "start": [
                                                    1552,
                                                    22
                                                ],
                                                "type": "doc.type.integer",
                                                "view": "2"
                                            }
                                        ],
                                        "view": "2"
                                    },
                                    "start": [
                                        1552,
                                        22
                                    ],
                                    "type": "doc.type.field",
                                    "view": "number"
                                },
                                {
                                    "finish": [
                                        1552,
                                        35
                                    ],
                                    "name": {
                                        "finish": [
                                            1552,
                                            29
                                        ],
                                        "start": [
                                            1552,
                                            29
                                        ],
                                        "type": "doc.type",
                                        "types": [
                                            {
                                                "finish": [
                                                    1552,
                                                    29
                                                ],
                                                "start": [
                                                    1552,
                                                    29
                                                ],
                                                "type": "doc.type.integer",
                                                "view": "3"
                                            }
                                        ],
                                        "view": "3"
                                    },
                                    "start": [
                                        1552,
                                        29
                                    ],
                                    "type": "doc.type.field",
                                    "view": "number"
                                }
                            ],
                            "finish": [
                                1552,
                                36
                            ],
                            "start": [
                                1552,
                                14
                            ],
                            "type": "doc.type.table",
                            "view": "[number, number, number]"
                        }
                    ],
                    "view": "[number, number, number]"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1552,
                    36
                ],
                "name": "min",
                "rawdesc": "(x,y,z)",
                "start": [
                    1552,
                    10
                ],
                "type": "doc.field",
                "view": "[number, number, number]",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        1548,
                        21
                    ],
                    "start": [
                        1548,
                        15
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                1548,
                                21
                            ],
                            "start": [
                                1548,
                                15
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1548,
                    21
                ],
                "name": "name",
                "start": [
                    1548,
                    10
                ],
                "type": "doc.field",
                "view": "string",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "(x,y,z)",
                "extends": {
                    "finish": [
                        1554,
                        39
                    ],
                    "start": [
                        1554,
                        17
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "fields": [
                                {
                                    "finish": [
                                        1554,
                                        24
                                    ],
                                    "name": {
                                        "finish": [
                                            1554,
                                            18
                                        ],
                                        "start": [
                                            1554,
                                            18
                                        ],
                                        "type": "doc.type",
                                        "types": [
                                            {
                                                "finish": [
                                                    1554,
                                                    18
                                                ],
                                                "start": [
                                                    1554,
                                                    18
                                                ],
                                                "type": "doc.type.integer",
                                                "view": "1"
                                            }
                                        ],
                                        "view": "1"
                                    },
                                    "start": [
                                        1554,
                                        18
                                    ],
                                    "type": "doc.type.field",
                                    "view": "number"
                                },
                                {
                                    "finish": [
                                        1554,
                                        31
                                    ],
                                    "name": {
                                        "finish": [
                                            1554,
                                            25
                                        ],
                                        "start": [
                                            1554,
                                            25
                                        ],
                                        "type": "doc.type",
                                        "types": [
                                            {
                                                "finish": [
                                                    1554,
                                                    25
                                                ],
                                                "start": [
                                                    1554,
                                                    25
                                                ],
                                                "type": "doc.type.integer",
                                                "view": "2"
                                            }
                                        ],
                                        "view": "2"
                                    },
                                    "start": [
                                        1554,
                                        25
                                    ],
                                    "type": "doc.type.field",
                                    "view": "number"
                                },
                                {
                                    "finish": [
                                        1554,
                                        38
                                    ],
                                    "name": {
                                        "finish": [
                                            1554,
                                            32
                                        ],
                                        "start": [
                                            1554,
                                            32
                                        ],
                                        "type": "doc.type",
                                        "types": [
                                            {
                                                "finish": [
                                                    1554,
                                                    32
                                                ],
                                                "start": [
                                                    1554,
                                                    32
                                                ],
                                                "type": "doc.type.integer",
                                                "view": "3"
                                            }
                                        ],
                                        "view": "3"
                                    },
                                    "start": [
                                        1554,
                                        32
                                    ],
                                    "type": "doc.type.field",
                                    "view": "number"
                                }
                            ],
                            "finish": [
                                1554,
                                39
                            ],
                            "start": [
                                1554,
                                17
                            ],
                            "type": "doc.type.table",
                            "view": "[number, number, number]"
                        }
                    ],
                    "view": "[number, number, number]"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1554,
                    39
                ],
                "name": "offset",
                "rawdesc": "(x,y,z)",
                "start": [
                    1554,
                    10
                ],
                "type": "doc.field",
                "view": "[number, number, number]",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        1549,
                        23
                    ],
                    "start": [
                        1549,
                        17
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                1549,
                                23
                            ],
                            "start": [
                                1549,
                                17
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1549,
                    23
                ],
                "name": "parent",
                "start": [
                    1549,
                    10
                ],
                "type": "doc.field",
                "view": "string",
                "visible": "public"
            }
        ],
        "name": "PieceInfo",
        "type": "type",
        "view": "PieceInfo"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    464,
                    15
                ],
                "start": [
                    464,
                    10
                ],
                "type": "doc.class",
                "view": "Plane",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        468,
                        18
                    ],
                    "start": [
                        468,
                        12
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                468,
                                18
                            ],
                            "start": [
                                468,
                                12
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    468,
                    18
                ],
                "name": "d",
                "start": [
                    468,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        465,
                        27
                    ],
                    "start": [
                        465,
                        21
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                465,
                                27
                            ],
                            "start": [
                                465,
                                21
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    465,
                    27
                ],
                "name": "normalVecX",
                "start": [
                    465,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        466,
                        27
                    ],
                    "start": [
                        466,
                        21
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                466,
                                27
                            ],
                            "start": [
                                466,
                                21
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    466,
                    27
                ],
                "name": "normalVecY",
                "start": [
                    466,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        467,
                        27
                    ],
                    "start": [
                        467,
                        21
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                467,
                                27
                            ],
                            "start": [
                                467,
                                21
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    467,
                    27
                ],
                "name": "normalVecZ",
                "start": [
                    467,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            }
        ],
        "name": "Plane",
        "type": "type",
        "view": "Plane"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Platform specific information",
                "extends": {
                    "finish": [
                        92,
                        1
                    ],
                    "start": [
                        14,
                        11
                    ],
                    "type": "table",
                    "view": "table"
                },
                "file": "/generated/LuaConstPlatform.lua",
                "finish": [
                    14,
                    8
                ],
                "rawdesc": "Platform specific information",
                "start": [
                    14,
                    0
                ],
                "type": "setglobal",
                "view": "table",
                "visible": "public"
            }
        ],
        "name": "Platform",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Called whenever a new player joins the game.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                114,
                                29
                            ],
                            "name": "playerID",
                            "start": [
                                114,
                                21
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "Called whenever a new player joins the game.",
                    "finish": [
                        114,
                        34
                    ],
                    "rawdesc": "Called whenever a new player joins the game.",
                    "start": [
                        114,
                        0
                    ],
                    "type": "function",
                    "view": "function PlayerAdded(playerID: number)"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    114,
                    20
                ],
                "rawdesc": "Called whenever a new player joins the game.",
                "start": [
                    114,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "PlayerAdded",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Called whenever a player's status changes e.g. becoming a spectator.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                109,
                                31
                            ],
                            "name": "playerID",
                            "start": [
                                109,
                                23
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "Called whenever a player's status changes e.g. becoming a spectator.",
                    "finish": [
                        109,
                        36
                    ],
                    "rawdesc": "Called whenever a player's status changes e.g. becoming a spectator.",
                    "start": [
                        109,
                        0
                    ],
                    "type": "function",
                    "view": "function PlayerChanged(playerID: number)"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    109,
                    22
                ],
                "rawdesc": "Called whenever a player's status changes e.g. becoming a spectator.",
                "start": [
                    109,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "PlayerChanged",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Called whenever a player is removed from the game.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                120,
                                31
                            ],
                            "name": "playerID",
                            "start": [
                                120,
                                23
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                120,
                                39
                            ],
                            "name": "reason",
                            "start": [
                                120,
                                33
                            ],
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "desc": "Called whenever a player is removed from the game.",
                    "finish": [
                        120,
                        44
                    ],
                    "rawdesc": "Called whenever a player is removed from the game.",
                    "start": [
                        120,
                        0
                    ],
                    "type": "function",
                    "view": "function PlayerRemoved(playerID: number, reason: string)"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    120,
                    22
                ],
                "rawdesc": "Called whenever a player is removed from the game.",
                "start": [
                    120,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "PlayerRemoved",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Called when the projectile is created.\n\nNote that weaponDefID is missing if the projectile is spawned as part of a burst, but `Spring.GetProjectileDefID` and `Spring.GetProjectileName` still work in callin scope using proID.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                464,
                                32
                            ],
                            "name": "proID",
                            "start": [
                                464,
                                27
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                464,
                                44
                            ],
                            "name": "proOwnerID",
                            "start": [
                                464,
                                34
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                464,
                                57
                            ],
                            "name": "weaponDefID",
                            "start": [
                                464,
                                46
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "Called when the projectile is created.\n\nNote that weaponDefID is missing if the projectile is spawned as part of a burst, but `Spring.GetProjectileDefID` and `Spring.GetProjectileName` still work in callin scope using proID.",
                    "finish": [
                        464,
                        62
                    ],
                    "rawdesc": "Called when the projectile is created.\n\nNote that weaponDefID is missing if the projectile is spawned as part of a burst, but `Spring.GetProjectileDefID` and `Spring.GetProjectileName` still work in callin scope using proID.",
                    "start": [
                        464,
                        0
                    ],
                    "type": "function",
                    "view": "function ProjectileCreated(proID: number, proOwnerID: number, weaponDefID: number)"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    464,
                    26
                ],
                "rawdesc": "Called when the projectile is created.\n\nNote that weaponDefID is missing if the projectile is spawned as part of a burst, but `Spring.GetProjectileDefID` and `Spring.GetProjectileName` still work in callin scope using proID.",
                "start": [
                    464,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "ProjectileCreated",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Called when the projectile is destroyed.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                471,
                                34
                            ],
                            "name": "proID",
                            "start": [
                                471,
                                29
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                471,
                                43
                            ],
                            "name": "ownerID",
                            "start": [
                                471,
                                36
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                471,
                                59
                            ],
                            "name": "proWeaponDefID",
                            "start": [
                                471,
                                45
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "Called when the projectile is destroyed.",
                    "finish": [
                        471,
                        64
                    ],
                    "rawdesc": "Called when the projectile is destroyed.",
                    "start": [
                        471,
                        0
                    ],
                    "type": "function",
                    "view": "function ProjectileDestroyed(proID: number, ownerID: number, proWeaponDefID: number)"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    471,
                    28
                ],
                "rawdesc": "Called when the projectile is destroyed.",
                "start": [
                    471,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "ProjectileDestroyed",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    1126,
                    26
                ],
                "start": [
                    1126,
                    10
                ],
                "type": "doc.class",
                "view": "ProjectileParams",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        1140,
                        23
                    ],
                    "start": [
                        1140,
                        17
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                1140,
                                23
                            ],
                            "start": [
                                1140,
                                17
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    1140,
                    23
                ],
                "name": "cegTag",
                "start": [
                    1140,
                    10
                ],
                "type": "doc.field",
                "view": "string",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        1138,
                        25
                    ],
                    "start": [
                        1138,
                        19
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                1138,
                                25
                            ],
                            "start": [
                                1138,
                                19
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    1138,
                    25
                ],
                "name": "endAlpha",
                "start": [
                    1138,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Cartesian triple (XYZ)\n",
                "extends": {
                    "desc": "Cartesian triple (XYZ)\n",
                    "finish": [
                        1130,
                        22
                    ],
                    "rawdesc": "Cartesian triple (XYZ)\n",
                    "start": [
                        1130,
                        16
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "desc": "Cartesian triple (XYZ)\n",
                            "finish": [
                                1130,
                                22
                            ],
                            "rawdesc": "Cartesian triple (XYZ)\n",
                            "start": [
                                1130,
                                16
                            ],
                            "type": "doc.type.name",
                            "view": "xyz"
                        }
                    ],
                    "view": "xyz"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    1130,
                    22
                ],
                "name": "error",
                "rawdesc": "Cartesian triple (XYZ)\n",
                "start": [
                    1130,
                    10
                ],
                "type": "doc.field",
                "view": "xyz",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        1134,
                        24
                    ],
                    "start": [
                        1134,
                        18
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                1134,
                                24
                            ],
                            "start": [
                                1134,
                                18
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    1134,
                    24
                ],
                "name": "gravity",
                "start": [
                    1134,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        1136,
                        25
                    ],
                    "start": [
                        1136,
                        19
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                1136,
                                25
                            ],
                            "start": [
                                1136,
                                19
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    1136,
                    25
                ],
                "name": "maxRange",
                "start": [
                    1136,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        1139,
                        22
                    ],
                    "start": [
                        1139,
                        16
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                1139,
                                22
                            ],
                            "start": [
                                1139,
                                16
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    1139,
                    22
                ],
                "name": "model",
                "start": [
                    1139,
                    10
                ],
                "type": "doc.field",
                "view": "string",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        1131,
                        23
                    ],
                    "start": [
                        1131,
                        16
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                1131,
                                23
                            ],
                            "start": [
                                1131,
                                16
                            ],
                            "type": "doc.type.name",
                            "view": "integer"
                        }
                    ],
                    "view": "integer"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    1131,
                    23
                ],
                "name": "owner",
                "start": [
                    1131,
                    10
                ],
                "type": "doc.field",
                "view": "integer",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Cartesian triple (XYZ)\n",
                "extends": {
                    "desc": "Cartesian triple (XYZ)\n",
                    "finish": [
                        1127,
                        20
                    ],
                    "rawdesc": "Cartesian triple (XYZ)\n",
                    "start": [
                        1127,
                        14
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "desc": "Cartesian triple (XYZ)\n",
                            "finish": [
                                1127,
                                20
                            ],
                            "rawdesc": "Cartesian triple (XYZ)\n",
                            "start": [
                                1127,
                                14
                            ],
                            "type": "doc.type.name",
                            "view": "xyz"
                        }
                    ],
                    "view": "xyz"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    1127,
                    20
                ],
                "name": "pos",
                "rawdesc": "Cartesian triple (XYZ)\n",
                "start": [
                    1127,
                    10
                ],
                "type": "doc.field",
                "view": "xyz",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Cartesian triple (XYZ)\n",
                "extends": {
                    "desc": "Cartesian triple (XYZ)\n",
                    "finish": [
                        1128,
                        22
                    ],
                    "rawdesc": "Cartesian triple (XYZ)\n",
                    "start": [
                        1128,
                        16
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "desc": "Cartesian triple (XYZ)\n",
                            "finish": [
                                1128,
                                22
                            ],
                            "rawdesc": "Cartesian triple (XYZ)\n",
                            "start": [
                                1128,
                                16
                            ],
                            "type": "doc.type.name",
                            "view": "xyz"
                        }
                    ],
                    "view": "xyz"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    1128,
                    22
                ],
                "name": "speed",
                "rawdesc": "Cartesian triple (XYZ)\n",
                "start": [
                    1128,
                    10
                ],
                "type": "doc.field",
                "view": "xyz",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Cartesian triple (XYZ)\n",
                "extends": {
                    "desc": "Cartesian triple (XYZ)\n",
                    "finish": [
                        1129,
                        23
                    ],
                    "rawdesc": "Cartesian triple (XYZ)\n",
                    "start": [
                        1129,
                        17
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "desc": "Cartesian triple (XYZ)\n",
                            "finish": [
                                1129,
                                23
                            ],
                            "rawdesc": "Cartesian triple (XYZ)\n",
                            "start": [
                                1129,
                                17
                            ],
                            "type": "doc.type.name",
                            "view": "xyz"
                        }
                    ],
                    "view": "xyz"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    1129,
                    23
                ],
                "name": "spread",
                "rawdesc": "Cartesian triple (XYZ)\n",
                "start": [
                    1129,
                    10
                ],
                "type": "doc.field",
                "view": "xyz",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        1137,
                        27
                    ],
                    "start": [
                        1137,
                        21
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                1137,
                                27
                            ],
                            "start": [
                                1137,
                                21
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    1137,
                    27
                ],
                "name": "startAlpha",
                "start": [
                    1137,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        1132,
                        22
                    ],
                    "start": [
                        1132,
                        15
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                1132,
                                22
                            ],
                            "start": [
                                1132,
                                15
                            ],
                            "type": "doc.type.name",
                            "view": "integer"
                        }
                    ],
                    "view": "integer"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    1132,
                    22
                ],
                "name": "team",
                "start": [
                    1132,
                    10
                ],
                "type": "doc.field",
                "view": "integer",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        1135,
                        25
                    ],
                    "start": [
                        1135,
                        19
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                1135,
                                25
                            ],
                            "start": [
                                1135,
                                19
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    1135,
                    25
                ],
                "name": "tracking",
                "start": [
                    1135,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        1133,
                        20
                    ],
                    "start": [
                        1133,
                        14
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                1133,
                                20
                            ],
                            "start": [
                                1133,
                                14
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    1133,
                    20
                ],
                "name": "ttl",
                "start": [
                    1133,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            }
        ],
        "name": "ProjectileParams",
        "type": "type",
        "view": "ProjectileParams"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "User Data RBO\n",
                "file": "/generated/LuaRBOs.lua",
                "finish": [
                    15,
                    13
                ],
                "rawdesc": "User Data RBO\n",
                "start": [
                    15,
                    10
                ],
                "type": "doc.class",
                "view": "RBO",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        17,
                        19
                    ],
                    "start": [
                        17,
                        17
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                17,
                                19
                            ],
                            "start": [
                                17,
                                17
                            ],
                            "type": "doc.type.name",
                            "view": "GL"
                        }
                    ],
                    "view": "GL"
                },
                "file": "/generated/LuaRBOs.lua",
                "finish": [
                    17,
                    19
                ],
                "name": "format",
                "start": [
                    17,
                    10
                ],
                "type": "doc.field",
                "view": "GL",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "will return globalRendering->msaaLevel for multisampled RBO or 0 otherwise",
                "extends": {
                    "finish": [
                        21,
                        25
                    ],
                    "start": [
                        21,
                        18
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                21,
                                25
                            ],
                            "start": [
                                21,
                                18
                            ],
                            "type": "doc.type.name",
                            "view": "integer"
                        }
                    ],
                    "view": "integer"
                },
                "file": "/generated/LuaRBOs.lua",
                "finish": [
                    21,
                    25
                ],
                "name": "samples",
                "rawdesc": "will return globalRendering->msaaLevel for multisampled RBO or 0 otherwise",
                "start": [
                    21,
                    10
                ],
                "type": "doc.field",
                "view": "integer",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        16,
                        19
                    ],
                    "start": [
                        16,
                        17
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                16,
                                19
                            ],
                            "start": [
                                16,
                                17
                            ],
                            "type": "doc.type.name",
                            "view": "GL"
                        }
                    ],
                    "view": "GL"
                },
                "file": "/generated/LuaRBOs.lua",
                "finish": [
                    16,
                    19
                ],
                "name": "target",
                "start": [
                    16,
                    10
                ],
                "type": "doc.field",
                "view": "GL",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        20,
                        23
                    ],
                    "start": [
                        20,
                        16
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                20,
                                23
                            ],
                            "start": [
                                20,
                                16
                            ],
                            "type": "doc.type.name",
                            "view": "boolean"
                        }
                    ],
                    "view": "boolean"
                },
                "file": "/generated/LuaRBOs.lua",
                "finish": [
                    20,
                    23
                ],
                "name": "valid",
                "start": [
                    20,
                    10
                ],
                "type": "doc.field",
                "view": "boolean",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        18,
                        23
                    ],
                    "start": [
                        18,
                        16
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                18,
                                23
                            ],
                            "start": [
                                18,
                                16
                            ],
                            "type": "doc.type.name",
                            "view": "integer"
                        }
                    ],
                    "view": "integer"
                },
                "file": "/generated/LuaRBOs.lua",
                "finish": [
                    18,
                    23
                ],
                "name": "xsize",
                "start": [
                    18,
                    10
                ],
                "type": "doc.field",
                "view": "integer",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        19,
                        23
                    ],
                    "start": [
                        19,
                        16
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                19,
                                23
                            ],
                            "start": [
                                19,
                                16
                            ],
                            "type": "doc.type.name",
                            "view": "integer"
                        }
                    ],
                    "view": "integer"
                },
                "file": "/generated/LuaRBOs.lua",
                "finish": [
                    19,
                    23
                ],
                "name": "ysize",
                "start": [
                    19,
                    10
                ],
                "type": "doc.field",
                "view": "integer",
                "visible": "public"
            }
        ],
        "name": "RBO",
        "type": "type",
        "view": "RBO"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Receives data sent via `SendToUnsynced` callout.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                22,
                                28
                            ],
                            "name": "arg1",
                            "start": [
                                22,
                                24
                            ],
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": [
                                22,
                                34
                            ],
                            "name": "arg2",
                            "start": [
                                22,
                                30
                            ],
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": [
                                22,
                                40
                            ],
                            "name": "argn",
                            "start": [
                                22,
                                36
                            ],
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "desc": "Receives data sent via `SendToUnsynced` callout.",
                    "finish": [
                        22,
                        45
                    ],
                    "rawdesc": "Receives data sent via `SendToUnsynced` callout.",
                    "start": [
                        22,
                        0
                    ],
                    "type": "function",
                    "view": "function RecvFromSynced(arg1: any, arg2: any, argn: any)"
                },
                "file": "/generated/LuaHandleSynced.lua",
                "finish": [
                    22,
                    23
                ],
                "rawdesc": "Receives data sent via `SendToUnsynced` callout.",
                "start": [
                    22,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "RecvFromSynced",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Receives messages from unsynced sent via `Spring.SendLuaRulesMsg` or `Spring.SendLuaUIMsg`.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                498,
                                23
                            ],
                            "name": "msg",
                            "start": [
                                498,
                                20
                            ],
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": [
                                498,
                                33
                            ],
                            "name": "playerID",
                            "start": [
                                498,
                                25
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "Receives messages from unsynced sent via `Spring.SendLuaRulesMsg` or `Spring.SendLuaUIMsg`.",
                    "finish": [
                        498,
                        38
                    ],
                    "rawdesc": "Receives messages from unsynced sent via `Spring.SendLuaRulesMsg` or `Spring.SendLuaUIMsg`.",
                    "start": [
                        498,
                        0
                    ],
                    "type": "function",
                    "view": "function RecvLuaMsg(msg: string, playerID: number)"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    498,
                    19
                ],
                "rawdesc": "Receives messages from unsynced sent via `Spring.SendLuaRulesMsg` or `Spring.SendLuaUIMsg`.",
                "start": [
                    498,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "RecvLuaMsg",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                796,
                                37
                            ],
                            "name": "aiTeam",
                            "start": [
                                796,
                                31
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                796,
                                46
                            ],
                            "name": "dataStr",
                            "start": [
                                796,
                                39
                            ],
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "finish": [
                        796,
                        51
                    ],
                    "start": [
                        796,
                        0
                    ],
                    "type": "function",
                    "view": "function RecvSkirmishAIMessage(aiTeam: integer, dataStr: string)"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    796,
                    30
                ],
                "start": [
                    796,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "RecvSkirmishAIMessage",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Called just before a unit is invalid, after it finishes its death animation.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                420,
                                35
                            ],
                            "name": "unitID",
                            "start": [
                                420,
                                29
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                420,
                                46
                            ],
                            "name": "unitDefID",
                            "start": [
                                420,
                                37
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                420,
                                56
                            ],
                            "name": "unitTeam",
                            "start": [
                                420,
                                48
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Called just before a unit is invalid, after it finishes its death animation.",
                    "finish": [
                        420,
                        61
                    ],
                    "rawdesc": "Called just before a unit is invalid, after it finishes its death animation.",
                    "start": [
                        420,
                        0
                    ],
                    "type": "function",
                    "view": "function RenderUnitDestroyed(unitID: integer, unitDefID: integer, unitTeam: integer)"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    420,
                    28
                ],
                "rawdesc": "Called just before a unit is invalid, after it finishes its death animation.",
                "start": [
                    420,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "RenderUnitDestroyed",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    692,
                    22
                ],
                "start": [
                    692,
                    10
                ],
                "type": "doc.class",
                "view": "ResourceCost",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        694,
                        23
                    ],
                    "start": [
                        694,
                        17
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                694,
                                23
                            ],
                            "start": [
                                694,
                                17
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    694,
                    23
                ],
                "name": "energy",
                "start": [
                    694,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        693,
                        22
                    ],
                    "start": [
                        693,
                        16
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                693,
                                22
                            ],
                            "start": [
                                693,
                                16
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    693,
                    22
                ],
                "name": "metal",
                "start": [
                    693,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            }
        ],
        "name": "ResourceCost",
        "type": "type",
        "view": "ResourceCost"
    },
    {
        "defines": [
            {
                "desc": "```lua\nResourceName:\n    | \"metal\"\n    | \"energy\"\n    | \"m\"\n    | \"e\"\n```",
                "finish": [
                    115,
                    47
                ],
                "rawdesc": "```lua\nResourceName:\n    | \"metal\"\n    | \"energy\"\n    | \"m\"\n    | \"e\"\n```",
                "start": [
                    115,
                    10
                ],
                "type": "doc.alias",
                "view": "\"e\"|\"energy\"|\"m\"|\"metal\""
            }
        ],
        "fields": [],
        "name": "ResourceName",
        "type": "type",
        "view": "ResourceName"
    },
    {
        "defines": [
            {
                "finish": [
                    119,
                    51
                ],
                "start": [
                    119,
                    10
                ],
                "type": "doc.alias",
                "view": "table<\"e\"|\"energy\"|\"m\"|\"metal\", number>"
            }
        ],
        "fields": [],
        "name": "ResourceUsage",
        "type": "type",
        "view": "ResourceUsage"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Roster\n\nContains data about a player\n",
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    865,
                    16
                ],
                "rawdesc": "Roster\n\nContains data about a player\n",
                "start": [
                    865,
                    10
                ],
                "type": "doc.class",
                "view": "Roster",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        869,
                        28
                    ],
                    "start": [
                        869,
                        21
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                869,
                                28
                            ],
                            "start": [
                                869,
                                21
                            ],
                            "type": "doc.type.name",
                            "view": "integer"
                        }
                    ],
                    "view": "integer"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    869,
                    28
                ],
                "name": "allyTeamID",
                "start": [
                    869,
                    10
                ],
                "type": "doc.field",
                "view": "integer",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "in order to find the progress, use: cpuUsage&0x1 if it's PC or BO, cpuUsage& 0xFE to get path res, (cpuUsage>>8)*1000 for the progress",
                "extends": {
                    "finish": [
                        871,
                        25
                    ],
                    "start": [
                        871,
                        19
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                871,
                                25
                            ],
                            "start": [
                                871,
                                19
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    871,
                    25
                ],
                "name": "cpuUsage",
                "rawdesc": "in order to find the progress, use: cpuUsage&0x1 if it's PC or BO, cpuUsage& 0xFE to get path res, (cpuUsage>>8)*1000 for the progress",
                "start": [
                    871,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        866,
                        21
                    ],
                    "start": [
                        866,
                        15
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                866,
                                21
                            ],
                            "start": [
                                866,
                                15
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    866,
                    21
                ],
                "name": "name",
                "start": [
                    866,
                    10
                ],
                "type": "doc.field",
                "view": "string",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "if -1, the player is pathfinding",
                "extends": {
                    "finish": [
                        872,
                        25
                    ],
                    "start": [
                        872,
                        19
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                872,
                                25
                            ],
                            "start": [
                                872,
                                19
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    872,
                    25
                ],
                "name": "pingTime",
                "rawdesc": "if -1, the player is pathfinding",
                "start": [
                    872,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        867,
                        26
                    ],
                    "start": [
                        867,
                        19
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                867,
                                26
                            ],
                            "start": [
                                867,
                                19
                            ],
                            "type": "doc.type.name",
                            "view": "integer"
                        }
                    ],
                    "view": "integer"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    867,
                    26
                ],
                "name": "playerID",
                "start": [
                    867,
                    10
                ],
                "type": "doc.field",
                "view": "integer",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        870,
                        27
                    ],
                    "start": [
                        870,
                        20
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                870,
                                27
                            ],
                            "start": [
                                870,
                                20
                            ],
                            "type": "doc.type.name",
                            "view": "boolean"
                        }
                    ],
                    "view": "boolean"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    870,
                    27
                ],
                "name": "spectator",
                "start": [
                    870,
                    10
                ],
                "type": "doc.field",
                "view": "boolean",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        868,
                        24
                    ],
                    "start": [
                        868,
                        17
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                868,
                                24
                            ],
                            "start": [
                                868,
                                17
                            ],
                            "type": "doc.type.name",
                            "view": "integer"
                        }
                    ],
                    "view": "integer"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    868,
                    24
                ],
                "name": "teamID",
                "start": [
                    868,
                    10
                ],
                "type": "doc.field",
                "view": "integer",
                "visible": "public"
            }
        ],
        "name": "Roster",
        "type": "type",
        "view": "Roster"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": [
                    {
                        "finish": [
                            73,
                            29
                        ],
                        "start": [
                            73,
                            24
                        ],
                        "type": "doc.extends.name",
                        "view": "table"
                    }
                ],
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    73,
                    29
                ],
                "start": [
                    73,
                    10
                ],
                "type": "doc.class",
                "view": "RulesParams",
                "visible": "public"
            }
        ],
        "fields": [],
        "name": "RulesParams",
        "type": "type",
        "view": "RulesParams"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        328,
                        1
                    ],
                    "start": [
                        248,
                        6
                    ],
                    "type": "table",
                    "view": "enum SFX"
                },
                "file": "/generated/LuaConstCOB.lua",
                "finish": [
                    248,
                    3
                ],
                "start": [
                    248,
                    0
                ],
                "type": "setglobal",
                "view": "enum SFX",
                "visible": "public"
            }
        ],
        "name": "SFX",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Called when a chat command '/save' or '/savegame' is received.\n\n@*param* `zip` — a userdatum representing the savegame zip file. See Lua_SaveLoad.",
                "extends": {
                    "args": [
                        {
                            "desc": "a userdatum representing the savegame zip file. See Lua_SaveLoad.",
                            "finish": [
                                503,
                                17
                            ],
                            "name": "zip",
                            "rawdesc": "a userdatum representing the savegame zip file. See Lua_SaveLoad.",
                            "start": [
                                503,
                                14
                            ],
                            "type": "local",
                            "view": "table"
                        }
                    ],
                    "desc": "Called when a chat command '/save' or '/savegame' is received.\n\n@*param* `zip` — a userdatum representing the savegame zip file. See Lua_SaveLoad.",
                    "finish": [
                        503,
                        22
                    ],
                    "rawdesc": "Called when a chat command '/save' or '/savegame' is received.",
                    "start": [
                        503,
                        0
                    ],
                    "type": "function",
                    "view": "function Save(zip: table)"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    503,
                    13
                ],
                "rawdesc": "Called when a chat command '/save' or '/savegame' is received.",
                "start": [
                    503,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Save",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Sets the window title for the process (default: \"Spring <version>\").\n\nThe shortTitle is displayed in the OS task-bar (default: \"Spring <version>\").\n\nNOTE: shortTitle is only ever possibly used under X11 (Linux & OS X), but not with QT (KDE) and never under Windows.\n\n@*param* `titleShort` — (Default: title)",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1294,
                                27
                            ],
                            "name": "title",
                            "start": [
                                1294,
                                22
                            ],
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "desc": "(Default: title)",
                            "finish": [
                                1294,
                                39
                            ],
                            "name": "titleShort",
                            "rawdesc": "(Default: title)",
                            "start": [
                                1294,
                                29
                            ],
                            "type": "local",
                            "view": "string?"
                        }
                    ],
                    "desc": "Sets the window title for the process (default: \"Spring <version>\").\n\nThe shortTitle is displayed in the OS task-bar (default: \"Spring <version>\").\n\nNOTE: shortTitle is only ever possibly used under X11 (Linux & OS X), but not with QT (KDE) and never under Windows.\n\n@*param* `titleShort` — (Default: title)",
                    "finish": [
                        1294,
                        44
                    ],
                    "rawdesc": "Sets the window title for the process (default: \"Spring <version>\").\n\nThe shortTitle is displayed in the OS task-bar (default: \"Spring <version>\").\n\nNOTE: shortTitle is only ever possibly used under X11 (Linux & OS X), but not with QT (KDE) and never under Windows.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        1294,
                        0
                    ],
                    "type": "function",
                    "view": "function SetWMCaption(title: string, titleShort?: string)\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    1294,
                    21
                ],
                "rawdesc": "Sets the window title for the process (default: \"Spring <version>\").\n\nThe shortTitle is displayed in the OS task-bar (default: \"Spring <version>\").\n\nNOTE: shortTitle is only ever possibly used under X11 (Linux & OS X), but not with QT (KDE) and never under Windows.",
                "start": [
                    1294,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "SetWMCaption",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "file": "/generated/LuaShaders.lua",
                "finish": [
                    38,
                    22
                ],
                "start": [
                    38,
                    10
                ],
                "type": "doc.class",
                "view": "ShaderParams",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "desc": "string of shader #defines\"",
                "extends": {
                    "finish": [
                        79,
                        29
                    ],
                    "start": [
                        79,
                        22
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                79,
                                28
                            ],
                            "start": [
                                79,
                                22
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string?"
                },
                "file": "/generated/LuaShaders.lua",
                "finish": [
                    79,
                    29
                ],
                "name": "definitions",
                "rawdesc": "string of shader #defines\"",
                "start": [
                    79,
                    10
                ],
                "type": "doc.field",
                "view": "string?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nThe \"Geometry\" or Geometry-shader can create new vertices and vertice-stripes\nfrom points.",
                "extends": {
                    "finish": [
                        63,
                        26
                    ],
                    "start": [
                        63,
                        19
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                63,
                                25
                            ],
                            "start": [
                                63,
                                19
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string?"
                },
                "file": "/generated/LuaShaders.lua",
                "finish": [
                    63,
                    26
                ],
                "name": "fragment",
                "rawdesc": "\nThe \"Geometry\" or Geometry-shader can create new vertices and vertice-stripes\nfrom points.",
                "start": [
                    63,
                    10
                ],
                "type": "doc.field",
                "view": "string?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "inType",
                "extends": {
                    "finish": [
                        76,
                        31
                    ],
                    "start": [
                        76,
                        23
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                76,
                                30
                            ],
                            "start": [
                                76,
                                23
                            ],
                            "type": "doc.type.name",
                            "view": "integer"
                        }
                    ],
                    "view": "integer?"
                },
                "file": "/generated/LuaShaders.lua",
                "finish": [
                    76,
                    31
                ],
                "name": "geoInputType",
                "rawdesc": "inType",
                "start": [
                    76,
                    10
                ],
                "type": "doc.field",
                "view": "integer?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "outType",
                "extends": {
                    "finish": [
                        77,
                        32
                    ],
                    "start": [
                        77,
                        24
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                77,
                                31
                            ],
                            "start": [
                                77,
                                24
                            ],
                            "type": "doc.type.name",
                            "view": "integer"
                        }
                    ],
                    "view": "integer?"
                },
                "file": "/generated/LuaShaders.lua",
                "finish": [
                    77,
                    32
                ],
                "name": "geoOutputType",
                "rawdesc": "outType",
                "start": [
                    77,
                    10
                ],
                "type": "doc.field",
                "view": "integer?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "maxVerts",
                "extends": {
                    "finish": [
                        78,
                        33
                    ],
                    "start": [
                        78,
                        25
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                78,
                                32
                            ],
                            "start": [
                                78,
                                25
                            ],
                            "type": "doc.type.name",
                            "view": "integer"
                        }
                    ],
                    "view": "integer?"
                },
                "file": "/generated/LuaShaders.lua",
                "finish": [
                    78,
                    33
                ],
                "name": "geoOutputVerts",
                "rawdesc": "maxVerts",
                "start": [
                    78,
                    10
                ],
                "type": "doc.field",
                "view": "integer?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nThe \"TES\" or Tesselation Evaluation Shader takes the abstract patch generated\nby the tessellation primitive generation stage, as well as the actual vertex\ndata for the entire patch, and generates a particular vertex from it. Each\nTES invocation generates a single vertex. It can also take per-patch data\nprovided by the Tessellation Control Shader.",
                "extends": {
                    "finish": [
                        59,
                        26
                    ],
                    "start": [
                        59,
                        19
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                59,
                                25
                            ],
                            "start": [
                                59,
                                19
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string?"
                },
                "file": "/generated/LuaShaders.lua",
                "finish": [
                    59,
                    26
                ],
                "name": "geometry",
                "rawdesc": "\nThe \"TES\" or Tesselation Evaluation Shader takes the abstract patch generated\nby the tessellation primitive generation stage, as well as the actual vertex\ndata for the entire patch, and generates a particular vertex from it. Each\nTES invocation generates a single vertex. It can also take per-patch data\nprovided by the Tessellation Control Shader.",
                "start": [
                    59,
                    10
                ],
                "type": "doc.field",
                "view": "string?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nThe \"Vertex\" or vertex-shader is your GLSL-Code as string, its written in a\nC-Dialect.  This shader is busy deforming the geometry of a unit but it can\nnot create new polygons. Use it for waves, wobbling surfaces etc.",
                "extends": {
                    "finish": [
                        44,
                        21
                    ],
                    "start": [
                        44,
                        14
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                44,
                                20
                            ],
                            "start": [
                                44,
                                14
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string?"
                },
                "file": "/generated/LuaShaders.lua",
                "finish": [
                    44,
                    21
                ],
                "name": "tcs",
                "rawdesc": "\nThe \"Vertex\" or vertex-shader is your GLSL-Code as string, its written in a\nC-Dialect.  This shader is busy deforming the geometry of a unit but it can\nnot create new polygons. Use it for waves, wobbling surfaces etc.",
                "start": [
                    44,
                    10
                ],
                "type": "doc.field",
                "view": "string?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nThe \"TCS\" or Tesselation Control Shader controls how much tessellation a\nparticular patch gets; it also defines the size of a patch, thus allowing it\nto augment data. It can also filter vertex data taken from the vertex shader.\nThe main purpose of the TCS is to feed the tessellation levels to the\nTessellation primitive generator stage, as well as to feed patch data (as its\noutput values) to the Tessellation Evaluation Shader stage.",
                "extends": {
                    "finish": [
                        52,
                        21
                    ],
                    "start": [
                        52,
                        14
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                52,
                                20
                            ],
                            "start": [
                                52,
                                14
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string?"
                },
                "file": "/generated/LuaShaders.lua",
                "finish": [
                    52,
                    21
                ],
                "name": "tes",
                "rawdesc": "\nThe \"TCS\" or Tesselation Control Shader controls how much tessellation a\nparticular patch gets; it also defines the size of a patch, thus allowing it\nto augment data. It can also filter vertex data taken from the vertex shader.\nThe main purpose of the TCS is to feed the tessellation levels to the\nTessellation primitive generator stage, as well as to feed patch data (as its\noutput values) to the Tessellation Evaluation Shader stage.",
                "start": [
                    52,
                    10
                ],
                "type": "doc.field",
                "view": "string?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nThe \"Fragment\" or Fragment-shader (sometimes called pixel-Shader) is post\nprocessing the already rendered picture (for example drawing stars on the\nsky).\n\nRemember textures are not always 2 dimensional pictures. They can contain\ninformation about the depth, or the third value marks areas and the strength\nat which these are processed.",
                "extends": {
                    "finish": [
                        72,
                        39
                    ],
                    "start": [
                        72,
                        18
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                72,
                                38
                            ],
                            "start": [
                                72,
                                18
                            ],
                            "type": "doc.type.sign",
                            "view": "UniformParam<number>"
                        }
                    ],
                    "view": "UniformParam<number>?"
                },
                "file": "/generated/LuaShaders.lua",
                "finish": [
                    72,
                    39
                ],
                "name": "uniform",
                "rawdesc": "\nThe \"Fragment\" or Fragment-shader (sometimes called pixel-Shader) is post\nprocessing the already rendered picture (for example drawing stars on the\nsky).\n\nRemember textures are not always 2 dimensional pictures. They can contain\ninformation about the depth, or the third value marks areas and the strength\nat which these are processed.",
                "start": [
                    72,
                    10
                ],
                "type": "doc.field",
                "view": "UniformParam<number>?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        74,
                        44
                    ],
                    "start": [
                        74,
                        23
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                74,
                                43
                            ],
                            "start": [
                                74,
                                23
                            ],
                            "type": "doc.type.sign",
                            "view": "UniformParam<number>"
                        }
                    ],
                    "view": "UniformParam<number>?"
                },
                "file": "/generated/LuaShaders.lua",
                "finish": [
                    74,
                    44
                ],
                "name": "uniformFloat",
                "start": [
                    74,
                    10
                ],
                "type": "doc.field",
                "view": "UniformParam<number>?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        73,
                        43
                    ],
                    "start": [
                        73,
                        21
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                73,
                                42
                            ],
                            "start": [
                                73,
                                21
                            ],
                            "type": "doc.type.sign",
                            "view": "UniformParam<integer>"
                        }
                    ],
                    "view": "UniformParam<integer>?"
                },
                "file": "/generated/LuaShaders.lua",
                "finish": [
                    73,
                    43
                ],
                "name": "uniformInt",
                "start": [
                    73,
                    10
                ],
                "type": "doc.field",
                "view": "UniformParam<integer>?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        75,
                        45
                    ],
                    "start": [
                        75,
                        24
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                75,
                                44
                            ],
                            "start": [
                                75,
                                24
                            ],
                            "type": "doc.type.sign",
                            "view": "UniformParam<number>"
                        }
                    ],
                    "view": "UniformParam<number>?"
                },
                "file": "/generated/LuaShaders.lua",
                "finish": [
                    75,
                    45
                ],
                "name": "uniformMatrix",
                "start": [
                    75,
                    10
                ],
                "type": "doc.field",
                "view": "UniformParam<number>?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        39,
                        24
                    ],
                    "start": [
                        39,
                        17
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                39,
                                23
                            ],
                            "start": [
                                39,
                                17
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string?"
                },
                "file": "/generated/LuaShaders.lua",
                "finish": [
                    39,
                    24
                ],
                "name": "vertex",
                "start": [
                    39,
                    10
                ],
                "type": "doc.field",
                "view": "string?",
                "visible": "public"
            }
        ],
        "name": "ShaderParams",
        "type": "type",
        "view": "ShaderParams"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Called before any engine shield-vs-projectile logic executes.\n\nIf the weapon is a hitscan type (BeamLaser or LightningCanon) then proID is nil and beamEmitterWeaponNum and beamEmitterUnitID are populated instead.\n\n@*return* `if` — true the gadget handles the collision event and the engine does not remove the projectile",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                360,
                                38
                            ],
                            "name": "projectileID",
                            "start": [
                                360,
                                26
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                360,
                                57
                            ],
                            "name": "projectileOwnerID",
                            "start": [
                                360,
                                40
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                360,
                                74
                            ],
                            "name": "shieldWeaponNum",
                            "start": [
                                360,
                                59
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                360,
                                91
                            ],
                            "name": "shieldCarrierID",
                            "start": [
                                360,
                                76
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                360,
                                109
                            ],
                            "name": "bounceProjectile",
                            "start": [
                                360,
                                93
                            ],
                            "type": "local",
                            "view": "boolean"
                        },
                        {
                            "finish": [
                                360,
                                131
                            ],
                            "name": "beamEmitterWeaponNum",
                            "start": [
                                360,
                                111
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                360,
                                150
                            ],
                            "name": "beamEmitterUnitID",
                            "start": [
                                360,
                                133
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                360,
                                158
                            ],
                            "name": "startX",
                            "start": [
                                360,
                                152
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                360,
                                166
                            ],
                            "name": "startY",
                            "start": [
                                360,
                                160
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                360,
                                174
                            ],
                            "name": "startZ",
                            "start": [
                                360,
                                168
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                360,
                                180
                            ],
                            "name": "hitX",
                            "start": [
                                360,
                                176
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                360,
                                186
                            ],
                            "name": "hitY",
                            "start": [
                                360,
                                182
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                360,
                                192
                            ],
                            "name": "hitZ",
                            "start": [
                                360,
                                188
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "Called before any engine shield-vs-projectile logic executes.\n\nIf the weapon is a hitscan type (BeamLaser or LightningCanon) then proID is nil and beamEmitterWeaponNum and beamEmitterUnitID are populated instead.\n\n@*return* `if` — true the gadget handles the collision event and the engine does not remove the projectile",
                    "finish": [
                        360,
                        197
                    ],
                    "rawdesc": "Called before any engine shield-vs-projectile logic executes.\n\nIf the weapon is a hitscan type (BeamLaser or LightningCanon) then proID is nil and beamEmitterWeaponNum and beamEmitterUnitID are populated instead.",
                    "returns": [
                        {
                            "desc": "true the gadget handles the collision event and the engine does not remove the projectile",
                            "name": "if",
                            "rawdesc": "true the gadget handles the collision event and the engine does not remove the projectile",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        360,
                        0
                    ],
                    "type": "function",
                    "view": "function ShieldPreDamaged(projectileID: integer, projectileOwnerID: integer, shieldWeaponNum: integer, shieldCarrierID: integer, bounceProjectile: boolean, beamEmitterWeaponNum: integer, beamEmitterUnitID: integer, startX: number, startY: number, startZ: number, hitX: number, hitY: number, hitZ: number)\n  -> if: boolean"
                },
                "file": "/generated/LuaHandleSynced.lua",
                "finish": [
                    360,
                    25
                ],
                "rawdesc": "Called before any engine shield-vs-projectile logic executes.\n\nIf the weapon is a hitscan type (BeamLaser or LightningCanon) then proID is nil and beamEmitterWeaponNum and beamEmitterUnitID are populated instead.",
                "start": [
                    360,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "ShieldPreDamaged",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Called when the addon or the game is shutdown.",
                "extends": {
                    "args": [],
                    "desc": "Called when the addon or the game is shutdown.",
                    "finish": [
                        41,
                        23
                    ],
                    "rawdesc": "Called when the addon or the game is shutdown.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        41,
                        0
                    ],
                    "type": "function",
                    "view": "function Shutdown()\n  -> nil"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    41,
                    17
                ],
                "rawdesc": "Called when the addon or the game is shutdown.",
                "start": [
                    41,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Shutdown",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Side spec\n",
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    175,
                    18
                ],
                "rawdesc": "Side spec\n",
                "start": [
                    175,
                    10
                ],
                "type": "doc.class",
                "view": "SideSpec",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        180,
                        25
                    ],
                    "start": [
                        180,
                        19
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                180,
                                25
                            ],
                            "start": [
                                180,
                                19
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    180,
                    25
                ],
                "name": "caseName",
                "start": [
                    180,
                    10
                ],
                "type": "doc.field",
                "view": "string",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nUsed when returning arrays of side specifications, is itself an array with\npositional values as below:",
                "extends": {
                    "finish": [
                        179,
                        25
                    ],
                    "start": [
                        179,
                        19
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                179,
                                25
                            ],
                            "start": [
                                179,
                                19
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    179,
                    25
                ],
                "name": "sideName",
                "rawdesc": "\nUsed when returning arrays of side specifications, is itself an array with\npositional values as below:",
                "start": [
                    179,
                    10
                ],
                "type": "doc.field",
                "view": "string",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        181,
                        26
                    ],
                    "start": [
                        181,
                        20
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                181,
                                26
                            ],
                            "start": [
                                181,
                                20
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    181,
                    26
                ],
                "name": "startUnit",
                "start": [
                    181,
                    10
                ],
                "type": "doc.field",
                "view": "string",
                "visible": "public"
            }
        ],
        "name": "SideSpec",
        "type": "type",
        "view": "SideSpec"
    },
    {
        "defines": [
            {
                "desc": "```lua\nSoundChannel:\n    | \"general\" -- 0\n    | \"battle\" -- Same as `\"sfx\" | 1`\n    | \"sfx\" -- Same as `\"battle\" | 1`\n    | \"unitreply\" -- Same as `\"voice\" | 2`\n    | \"voice\" -- Same as `\"unitreply\" | 2`\n    | \"userinterface\" -- Same as \"ui\" | 3`\n    | \"ui\" -- Same as \"userinterface\" | 3`\n    | 0 -- General\n    | 1 -- SFX\n    | 2 -- Voice\n    | 3 -- User interface\n```",
                "finish": [
                    104,
                    6
                ],
                "rawdesc": "```lua\nSoundChannel:\n    | \"general\" -- 0\n    | \"battle\" -- Same as `\"sfx\" | 1`\n    | \"sfx\" -- Same as `\"battle\" | 1`\n    | \"unitreply\" -- Same as `\"voice\" | 2`\n    | \"voice\" -- Same as `\"unitreply\" | 2`\n    | \"userinterface\" -- Same as \"ui\" | 3`\n    | \"ui\" -- Same as \"userinterface\" | 3`\n    | 0 -- General\n    | 1 -- SFX\n    | 2 -- Voice\n    | 3 -- User interface\n```",
                "start": [
                    93,
                    10
                ],
                "type": "doc.alias",
                "view": "\"battle\"|\"general\"|\"sfx\"|\"ui\"|\"unitreply\"...(+6)"
            }
        ],
        "fields": [],
        "name": "SoundChannel",
        "type": "type",
        "view": "SoundChannel"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    635,
                    25
                ],
                "start": [
                    635,
                    10
                ],
                "type": "doc.class",
                "view": "SoundDeviceSpec",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nContains data about a sound device.",
                "extends": {
                    "finish": [
                        638,
                        21
                    ],
                    "start": [
                        638,
                        15
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                638,
                                21
                            ],
                            "start": [
                                638,
                                15
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    638,
                    21
                ],
                "name": "name",
                "rawdesc": "\nContains data about a sound device.",
                "start": [
                    638,
                    10
                ],
                "type": "doc.field",
                "view": "string",
                "visible": "public"
            }
        ],
        "name": "SoundDeviceSpec",
        "type": "type",
        "view": "SoundDeviceSpec"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                890,
                                26
                            ],
                            "name": "x",
                            "start": [
                                890,
                                25
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                890,
                                29
                            ],
                            "name": "z",
                            "start": [
                                890,
                                28
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "finish": [
                        890,
                        34
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        890,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.AddGrass(x: number, z: number)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    890,
                    24
                ],
                "name": "AddGrass",
                "start": [
                    890,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.AddGrass",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Can only be called in `Spring.SetHeightMapFunc`",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1323,
                                30
                            ],
                            "name": "x",
                            "start": [
                                1323,
                                29
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1323,
                                33
                            ],
                            "name": "z",
                            "start": [
                                1323,
                                32
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1323,
                                41
                            ],
                            "name": "height",
                            "start": [
                                1323,
                                35
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "Can only be called in `Spring.SetHeightMapFunc`",
                    "finish": [
                        1323,
                        46
                    ],
                    "rawdesc": "Can only be called in `Spring.SetHeightMapFunc`",
                    "returns": [
                        {
                            "name": "newHeight",
                            "type": "function.return",
                            "view": "integer?"
                        }
                    ],
                    "start": [
                        1323,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.AddHeightMap(x: number, z: number, height: number)\n  -> newHeight: integer?"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    1323,
                    28
                ],
                "name": "AddHeightMap",
                "rawdesc": "Can only be called in `Spring.SetHeightMapFunc`",
                "start": [
                    1323,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.AddHeightMap",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [],
                    "finish": [
                        403,
                        44
                    ],
                    "start": [
                        403,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.AddLightTrackingTarget()"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    403,
                    38
                ],
                "name": "AddLightTrackingTarget",
                "start": [
                    403,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.AddLightTrackingTarget",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nrequires MaxDynamicMapLights > 0",
                "extends": {
                    "args": [
                        {
                            "desc": "Parameters for lighting\n",
                            "finish": [
                                384,
                                39
                            ],
                            "name": "lightParams",
                            "rawdesc": "Parameters for lighting\n",
                            "start": [
                                384,
                                28
                            ],
                            "type": "local",
                            "view": "LightParams"
                        }
                    ],
                    "desc": "\nrequires MaxDynamicMapLights > 0",
                    "finish": [
                        384,
                        44
                    ],
                    "rawdesc": "\nrequires MaxDynamicMapLights > 0",
                    "returns": [
                        {
                            "name": "lightHandle",
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": [
                        384,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.AddMapLight(lightParams: LightParams)\n  -> lightHandle: integer"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    384,
                    27
                ],
                "name": "AddMapLight",
                "rawdesc": "\nrequires MaxDynamicMapLights > 0",
                "start": [
                    384,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.AddMapLight",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nrequires MaxDynamicMapLights > 0",
                "extends": {
                    "args": [
                        {
                            "desc": "Parameters for lighting\n",
                            "finish": [
                                391,
                                41
                            ],
                            "name": "lightParams",
                            "rawdesc": "Parameters for lighting\n",
                            "start": [
                                391,
                                30
                            ],
                            "type": "local",
                            "view": "LightParams"
                        }
                    ],
                    "desc": "\nrequires MaxDynamicMapLights > 0",
                    "finish": [
                        391,
                        46
                    ],
                    "rawdesc": "\nrequires MaxDynamicMapLights > 0",
                    "returns": [
                        {
                            "name": "lightHandle",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        391,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.AddModelLight(lightParams: LightParams)\n  -> lightHandle: number"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    391,
                    29
                ],
                "name": "AddModelLight",
                "rawdesc": "\nrequires MaxDynamicMapLights > 0",
                "start": [
                    391,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.AddModelLight",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                877,
                                37
                            ],
                            "name": "unitID",
                            "start": [
                                877,
                                31
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        877,
                        42
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        877,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.AddObjectDecal(unitID: integer)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    877,
                    30
                ],
                "name": "AddObjectDecal",
                "start": [
                    877,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.AddObjectDecal",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nCan only be called in `Spring.SetOriginalHeightMapFunc`",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1395,
                                38
                            ],
                            "name": "x",
                            "start": [
                                1395,
                                37
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1395,
                                41
                            ],
                            "name": "y",
                            "start": [
                                1395,
                                40
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1395,
                                49
                            ],
                            "name": "height",
                            "start": [
                                1395,
                                43
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nCan only be called in `Spring.SetOriginalHeightMapFunc`",
                    "finish": [
                        1395,
                        54
                    ],
                    "rawdesc": "\nCan only be called in `Spring.SetOriginalHeightMapFunc`",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        1395,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.AddOriginalHeightMap(x: number, y: number, height: number)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    1395,
                    36
                ],
                "name": "AddOriginalHeightMap",
                "rawdesc": "\nCan only be called in `Spring.SetOriginalHeightMapFunc`",
                "start": [
                    1395,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.AddOriginalHeightMap",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Can only be called in `Spring.SetSmoothMeshFunc`.\n\n@*return* `The` — new height, or `nil` if coordinates are invalid.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1451,
                                31
                            ],
                            "name": "x",
                            "start": [
                                1451,
                                30
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1451,
                                34
                            ],
                            "name": "z",
                            "start": [
                                1451,
                                33
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1451,
                                42
                            ],
                            "name": "height",
                            "start": [
                                1451,
                                36
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "Can only be called in `Spring.SetSmoothMeshFunc`.\n\n@*return* `The` — new height, or `nil` if coordinates are invalid.",
                    "finish": [
                        1451,
                        47
                    ],
                    "rawdesc": "Can only be called in `Spring.SetSmoothMeshFunc`.",
                    "returns": [
                        {
                            "desc": "new height, or `nil` if coordinates are invalid.",
                            "name": "The",
                            "rawdesc": "new height, or `nil` if coordinates are invalid.",
                            "type": "function.return",
                            "view": "number?"
                        }
                    ],
                    "start": [
                        1451,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.AddSmoothMesh(x: number, z: number, height: number)\n  -> The: number?"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    1451,
                    29
                ],
                "name": "AddSmoothMesh",
                "rawdesc": "Can only be called in `Spring.SetSmoothMeshFunc`.",
                "start": [
                    1451,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.AddSmoothMesh",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Adds metal or energy resources to the specified team.\n\n\n```lua\ntype:\n    | \"metal\"\n    | \"energy\"\n    | \"m\"\n    | \"e\"\n```",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                94,
                                38
                            ],
                            "name": "teamID",
                            "start": [
                                94,
                                32
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                94,
                                44
                            ],
                            "name": "type",
                            "start": [
                                94,
                                40
                            ],
                            "type": "local",
                            "view": "\"e\"|\"energy\"|\"m\"|\"metal\""
                        },
                        {
                            "finish": [
                                94,
                                52
                            ],
                            "name": "amount",
                            "start": [
                                94,
                                46
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "Adds metal or energy resources to the specified team.\n\n\n```lua\ntype:\n    | \"metal\"\n    | \"energy\"\n    | \"m\"\n    | \"e\"\n```",
                    "finish": [
                        94,
                        57
                    ],
                    "rawdesc": "Adds metal or energy resources to the specified team.\n\n\n```lua\ntype:\n    | \"metal\"\n    | \"energy\"\n    | \"m\"\n    | \"e\"\n```",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        94,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.AddTeamResource(teamID: integer, type: \"e\"|\"energy\"|\"m\"|\"metal\", amount: number)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    94,
                    31
                ],
                "name": "AddTeamResource",
                "rawdesc": "Adds metal or energy resources to the specified team.\n\n\n```lua\ntype:\n    | \"metal\"\n    | \"energy\"\n    | \"m\"\n    | \"e\"\n```",
                "start": [
                    94,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.AddTeamResource",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `paralyze` — (Default: 0) equals to the paralyzetime in the WeaponDef.\n\n@*param* `attackerID` — (Default: -1)\n\n@*param* `weaponID` — (Default: -1)",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                839,
                                36
                            ],
                            "name": "unitID",
                            "start": [
                                839,
                                30
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                839,
                                44
                            ],
                            "name": "damage",
                            "start": [
                                839,
                                38
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "desc": "(Default: 0) equals to the paralyzetime in the WeaponDef.",
                            "finish": [
                                839,
                                54
                            ],
                            "name": "paralyze",
                            "rawdesc": "(Default: 0) equals to the paralyzetime in the WeaponDef.",
                            "start": [
                                839,
                                46
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "desc": "(Default: -1)",
                            "finish": [
                                839,
                                66
                            ],
                            "name": "attackerID",
                            "rawdesc": "(Default: -1)",
                            "start": [
                                839,
                                56
                            ],
                            "type": "local",
                            "view": "integer?"
                        },
                        {
                            "desc": "(Default: -1)",
                            "finish": [
                                839,
                                76
                            ],
                            "name": "weaponID",
                            "rawdesc": "(Default: -1)",
                            "start": [
                                839,
                                68
                            ],
                            "type": "local",
                            "view": "integer?"
                        },
                        {
                            "finish": [
                                839,
                                86
                            ],
                            "name": "impulseX",
                            "start": [
                                839,
                                78
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "finish": [
                                839,
                                96
                            ],
                            "name": "impulseY",
                            "start": [
                                839,
                                88
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "finish": [
                                839,
                                106
                            ],
                            "name": "impulseZ",
                            "start": [
                                839,
                                98
                            ],
                            "type": "local",
                            "view": "number?"
                        }
                    ],
                    "desc": "@*param* `paralyze` — (Default: 0) equals to the paralyzetime in the WeaponDef.\n\n@*param* `attackerID` — (Default: -1)\n\n@*param* `weaponID` — (Default: -1)",
                    "finish": [
                        839,
                        111
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        839,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.AddUnitDamage(unitID: integer, damage: number, paralyze?: number, attackerID?: integer, weaponID?: integer, impulseX?: number, impulseY?: number, impulseZ?: number)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    839,
                    29
                ],
                "name": "AddUnitDamage",
                "start": [
                    839,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.AddUnitDamage",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `deltaExperience` — Can be negative to subtract, but the unit will never have negative total afterwards\n\nSee:\n  * [Spring.SetUnitExperience](file:///home/runner/work/spring/spring/rts/Lua/library/generated/LuaSyncedCtrl.lua#389#9)\n  * [Spring.GetUnitExperience](file:///home/runner/work/spring/spring/rts/Lua/library/generated/LuaSyncedRead.lua#710#9)",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                395,
                                40
                            ],
                            "name": "unitID",
                            "start": [
                                395,
                                34
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "desc": "Can be negative to subtract, but the unit will never have negative total afterwards",
                            "finish": [
                                395,
                                57
                            ],
                            "name": "deltaExperience",
                            "rawdesc": "Can be negative to subtract, but the unit will never have negative total afterwards",
                            "start": [
                                395,
                                42
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "@*param* `deltaExperience` — Can be negative to subtract, but the unit will never have negative total afterwards\n\nSee:\n  * [Spring.SetUnitExperience](file:///home/runner/work/spring/spring/rts/Lua/library/generated/LuaSyncedCtrl.lua#389#9)\n  * [Spring.GetUnitExperience](file:///home/runner/work/spring/spring/rts/Lua/library/generated/LuaSyncedRead.lua#710#9)",
                    "finish": [
                        395,
                        62
                    ],
                    "rawdesc": "See:\n  * [Spring.SetUnitExperience](file:///home/runner/work/spring/spring/rts/Lua/library/generated/LuaSyncedCtrl.lua#389#9)\n  * [Spring.GetUnitExperience](file:///home/runner/work/spring/spring/rts/Lua/library/generated/LuaSyncedRead.lua#710#9)",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        395,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.AddUnitExperience(unitID: integer, deltaExperience: number)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    395,
                    33
                ],
                "name": "AddUnitExperience",
                "rawdesc": "See:\n  * [Spring.SetUnitExperience](file:///home/runner/work/spring/spring/rts/Lua/library/generated/LuaSyncedCtrl.lua#389#9)\n  * [Spring.GetUnitExperience](file:///home/runner/work/spring/spring/rts/Lua/library/generated/LuaSyncedRead.lua#710#9)",
                "start": [
                    395,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.AddUnitExperience",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                554,
                                36
                            ],
                            "name": "iconName",
                            "start": [
                                554,
                                28
                            ],
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": [
                                554,
                                45
                            ],
                            "name": "texFile",
                            "start": [
                                554,
                                38
                            ],
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": [
                                554,
                                51
                            ],
                            "name": "size",
                            "start": [
                                554,
                                47
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "finish": [
                                554,
                                57
                            ],
                            "name": "dist",
                            "start": [
                                554,
                                53
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "finish": [
                                554,
                                68
                            ],
                            "name": "radAdjust",
                            "start": [
                                554,
                                59
                            ],
                            "type": "local",
                            "view": "number?"
                        }
                    ],
                    "finish": [
                        554,
                        73
                    ],
                    "returns": [
                        {
                            "name": "added",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        554,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.AddUnitIcon(iconName: string, texFile: string, size?: number, dist?: number, radAdjust?: number)\n  -> added: boolean"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    554,
                    27
                ],
                "name": "AddUnitIcon",
                "start": [
                    554,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.AddUnitIcon",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                847,
                                37
                            ],
                            "name": "unitID",
                            "start": [
                                847,
                                31
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                847,
                                40
                            ],
                            "name": "x",
                            "start": [
                                847,
                                39
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                847,
                                43
                            ],
                            "name": "y",
                            "start": [
                                847,
                                42
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                847,
                                46
                            ],
                            "name": "z",
                            "start": [
                                847,
                                45
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                847,
                                57
                            ],
                            "name": "decayRate",
                            "start": [
                                847,
                                48
                            ],
                            "type": "local",
                            "view": "number?"
                        }
                    ],
                    "finish": [
                        847,
                        62
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        847,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.AddUnitImpulse(unitID: integer, x: number, y: number, z: number, decayRate?: number)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    847,
                    30
                ],
                "name": "AddUnitImpulse",
                "start": [
                    847,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.AddUnitImpulse",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `resource` — m",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                858,
                                38
                            ],
                            "name": "unitID",
                            "start": [
                                858,
                                32
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "desc": "m",
                            "finish": [
                                858,
                                48
                            ],
                            "name": "resource",
                            "rawdesc": "m",
                            "start": [
                                858,
                                40
                            ],
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": [
                                858,
                                56
                            ],
                            "name": "amount",
                            "start": [
                                858,
                                50
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "@*param* `resource` — m",
                    "finish": [
                        858,
                        61
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        858,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.AddUnitResource(unitID: integer, resource: string, amount: number)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    858,
                    31
                ],
                "name": "AddUnitResource",
                "start": [
                    858,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.AddUnitResource",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                852,
                                41
                            ],
                            "name": "unitID",
                            "start": [
                                852,
                                35
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                852,
                                51
                            ],
                            "name": "pindSize",
                            "start": [
                                852,
                                43
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "finish": [
                        852,
                        56
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        852,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.AddUnitSeismicPing(unitID: integer, pindSize: number)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    852,
                    34
                ],
                "name": "AddUnitSeismicPing",
                "start": [
                    852,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.AddUnitSeismicPing",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                151,
                                34
                            ],
                            "name": "cmdID",
                            "start": [
                                151,
                                29
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                151,
                                40
                            ],
                            "name": "posX",
                            "start": [
                                151,
                                36
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                151,
                                46
                            ],
                            "name": "posY",
                            "start": [
                                151,
                                42
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                151,
                                52
                            ],
                            "name": "posZ",
                            "start": [
                                151,
                                48
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "finish": [
                        151,
                        57
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        151,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.AddWorldIcon(cmdID: integer, posX: number, posY: number, posZ: number)\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    151,
                    28
                ],
                "name": "AddWorldIcon",
                "start": [
                    151,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.AddWorldIcon",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                158,
                                33
                            ],
                            "name": "text",
                            "start": [
                                158,
                                29
                            ],
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": [
                                158,
                                39
                            ],
                            "name": "posX",
                            "start": [
                                158,
                                35
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                158,
                                45
                            ],
                            "name": "posY",
                            "start": [
                                158,
                                41
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                158,
                                51
                            ],
                            "name": "posZ",
                            "start": [
                                158,
                                47
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "finish": [
                        158,
                        56
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        158,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.AddWorldText(text: string, posX: number, posY: number, posZ: number)\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    158,
                    28
                ],
                "name": "AddWorldText",
                "start": [
                    158,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.AddWorldText",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                167,
                                38
                            ],
                            "name": "unitDefID",
                            "start": [
                                167,
                                29
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                167,
                                44
                            ],
                            "name": "posX",
                            "start": [
                                167,
                                40
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                167,
                                50
                            ],
                            "name": "posY",
                            "start": [
                                167,
                                46
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                167,
                                56
                            ],
                            "name": "posZ",
                            "start": [
                                167,
                                52
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                167,
                                64
                            ],
                            "name": "teamID",
                            "start": [
                                167,
                                58
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                167,
                                72
                            ],
                            "name": "facing",
                            "start": [
                                167,
                                66
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "finish": [
                        167,
                        77
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        167,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.AddWorldUnit(unitDefID: integer, posX: number, posY: number, posZ: number, teamID: integer, facing: number)\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    167,
                    28
                ],
                "name": "AddWorldUnit",
                "start": [
                    167,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.AddWorldUnit",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Add a certain height to a point or rectangle area on the world\n\n@*param* `x2_height` — if y2 and height are nil then this parameter is the height",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1305,
                                34
                            ],
                            "name": "x1",
                            "start": [
                                1305,
                                32
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1305,
                                38
                            ],
                            "name": "y1",
                            "start": [
                                1305,
                                36
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "desc": "if y2 and height are nil then this parameter is the height",
                            "finish": [
                                1305,
                                49
                            ],
                            "name": "x2_height",
                            "rawdesc": "if y2 and height are nil then this parameter is the height",
                            "start": [
                                1305,
                                40
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1305,
                                53
                            ],
                            "name": "y2",
                            "start": [
                                1305,
                                51
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "finish": [
                                1305,
                                61
                            ],
                            "name": "height",
                            "start": [
                                1305,
                                55
                            ],
                            "type": "local",
                            "view": "number?"
                        }
                    ],
                    "desc": "Add a certain height to a point or rectangle area on the world\n\n@*param* `x2_height` — if y2 and height are nil then this parameter is the height",
                    "finish": [
                        1305,
                        66
                    ],
                    "rawdesc": "Add a certain height to a point or rectangle area on the world",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        1305,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.AdjustHeightMap(x1: number, y1: number, x2_height: number, y2?: number, height?: number)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    1305,
                    31
                ],
                "name": "AdjustHeightMap",
                "rawdesc": "Add a certain height to a point or rectangle area on the world",
                "start": [
                    1305,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.AdjustHeightMap",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Add height to a point or rectangle area to the original map height cache\n\n@*param* `x2_height` — if y2 and height are nil then this parameter is the height",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1376,
                                42
                            ],
                            "name": "x1",
                            "start": [
                                1376,
                                40
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1376,
                                46
                            ],
                            "name": "y1",
                            "start": [
                                1376,
                                44
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "desc": "if y2 and height are nil then this parameter is the height",
                            "finish": [
                                1376,
                                57
                            ],
                            "name": "x2_height",
                            "rawdesc": "if y2 and height are nil then this parameter is the height",
                            "start": [
                                1376,
                                48
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1376,
                                61
                            ],
                            "name": "y2",
                            "start": [
                                1376,
                                59
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "finish": [
                                1376,
                                69
                            ],
                            "name": "height",
                            "start": [
                                1376,
                                63
                            ],
                            "type": "local",
                            "view": "number?"
                        }
                    ],
                    "desc": "Add height to a point or rectangle area to the original map height cache\n\n@*param* `x2_height` — if y2 and height are nil then this parameter is the height",
                    "finish": [
                        1376,
                        74
                    ],
                    "rawdesc": "Add height to a point or rectangle area to the original map height cache",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        1376,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.AdjustOriginalHeightMap(x1: number, y1: number, x2_height: number, y2?: number, height?: number)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    1376,
                    39
                ],
                "name": "AdjustOriginalHeightMap",
                "rawdesc": "Add height to a point or rectangle area to the original map height cache",
                "start": [
                    1376,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.AdjustOriginalHeightMap",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1435,
                                35
                            ],
                            "name": "x1",
                            "start": [
                                1435,
                                33
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1435,
                                39
                            ],
                            "name": "z1",
                            "start": [
                                1435,
                                37
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1435,
                                43
                            ],
                            "name": "x2",
                            "start": [
                                1435,
                                41
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "finish": [
                                1435,
                                47
                            ],
                            "name": "z2",
                            "start": [
                                1435,
                                45
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "finish": [
                                1435,
                                55
                            ],
                            "name": "height",
                            "start": [
                                1435,
                                49
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "finish": [
                        1435,
                        60
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        1435,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.AdjustSmoothMesh(x1: number, z1: number, x2?: number, z2?: number, height: number)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    1435,
                    32
                ],
                "name": "AdjustSmoothMesh",
                "start": [
                    1435,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.AdjustSmoothMesh",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [],
                    "finish": [
                        37,
                        41
                    ],
                    "returns": [
                        {
                            "name": "enabled",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        37,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.AreHelperAIsEnabled()\n  -> enabled: boolean"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    37,
                    35
                ],
                "name": "AreHelperAIsEnabled",
                "start": [
                    37,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.AreHelperAIsEnabled",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                383,
                                42
                            ],
                            "name": "playerID1",
                            "start": [
                                383,
                                33
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                383,
                                53
                            ],
                            "name": "playerID2",
                            "start": [
                                383,
                                44
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "finish": [
                        383,
                        58
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean|nil"
                        }
                    ],
                    "start": [
                        383,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.ArePlayersAllied(playerID1: number, playerID2: number)\n  -> boolean|nil"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    383,
                    32
                ],
                "name": "ArePlayersAllied",
                "start": [
                    383,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.ArePlayersAllied",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                378,
                                38
                            ],
                            "name": "teamID1",
                            "start": [
                                378,
                                31
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                378,
                                47
                            ],
                            "name": "teamID2",
                            "start": [
                                378,
                                40
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "finish": [
                        378,
                        52
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean|nil"
                        }
                    ],
                    "start": [
                        378,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.AreTeamsAllied(teamID1: number, teamID2: number)\n  -> boolean|nil"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    378,
                    30
                ],
                "name": "AreTeamsAllied",
                "start": [
                    378,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.AreTeamsAllied",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Changes/creates the cursor of a single CursorCmd.\n\n@*param* `iconFileName` — not the full filename, instead it is like this:\n\nWanted filename: Anims/cursorattack_0.bmp\n=> iconFileName: cursorattack\n\n@*param* `overwrite` — (Default: true)\n\n@*param* `hotSpotTopLeft` — (Default: false)",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                655,
                                41
                            ],
                            "name": "cmdName",
                            "start": [
                                655,
                                34
                            ],
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "desc": "not the full filename, instead it is like this:",
                            "finish": [
                                655,
                                55
                            ],
                            "name": "iconFileName",
                            "rawdesc": "not the full filename, instead it is like this:",
                            "start": [
                                655,
                                43
                            ],
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "desc": "(Default: true)",
                            "finish": [
                                655,
                                66
                            ],
                            "name": "overwrite",
                            "rawdesc": "(Default: true)",
                            "start": [
                                655,
                                57
                            ],
                            "type": "local",
                            "view": "boolean?"
                        },
                        {
                            "desc": "(Default: false)",
                            "finish": [
                                655,
                                82
                            ],
                            "name": "hotSpotTopLeft",
                            "rawdesc": "(Default: false)",
                            "start": [
                                655,
                                68
                            ],
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "Changes/creates the cursor of a single CursorCmd.\n\n@*param* `iconFileName` — not the full filename, instead it is like this:\n\nWanted filename: Anims/cursorattack_0.bmp\n=> iconFileName: cursorattack\n\n@*param* `overwrite` — (Default: true)\n\n@*param* `hotSpotTopLeft` — (Default: false)",
                    "finish": [
                        655,
                        87
                    ],
                    "rawdesc": "Changes/creates the cursor of a single CursorCmd.\n\nWanted filename: Anims/cursorattack_0.bmp\n=> iconFileName: cursorattack",
                    "returns": [
                        {
                            "name": "assigned",
                            "type": "function.return",
                            "view": "boolean?"
                        }
                    ],
                    "start": [
                        655,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.AssignMouseCursor(cmdName: string, iconFileName: string, overwrite?: boolean, hotSpotTopLeft?: boolean)\n  -> assigned: boolean?"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    655,
                    33
                ],
                "name": "AssignMouseCursor",
                "rawdesc": "Changes/creates the cursor of a single CursorCmd.\n\nWanted filename: Anims/cursorattack_0.bmp\n=> iconFileName: cursorattack",
                "start": [
                    655,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.AssignMouseCursor",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Assigns a player to a team.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                40,
                                43
                            ],
                            "name": "playerID",
                            "start": [
                                40,
                                35
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                40,
                                51
                            ],
                            "name": "teamID",
                            "start": [
                                40,
                                45
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Assigns a player to a team.",
                    "finish": [
                        40,
                        56
                    ],
                    "rawdesc": "Assigns a player to a team.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        40,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.AssignPlayerToTeam(playerID: integer, teamID: integer)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    40,
                    34
                ],
                "name": "AssignPlayerToTeam",
                "rawdesc": "Assigns a player to a team.",
                "start": [
                    40,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.AssignPlayerToTeam",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `z` — uses ground height when unspecified\n\n@*param* `spherical` — (Default: true)\n\n@*param* `forced` — (Default: true)",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                828,
                                27
                            ],
                            "name": "x",
                            "start": [
                                828,
                                26
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                828,
                                30
                            ],
                            "name": "y",
                            "start": [
                                828,
                                29
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "desc": "uses ground height when unspecified",
                            "finish": [
                                828,
                                33
                            ],
                            "name": "z",
                            "rawdesc": "uses ground height when unspecified",
                            "start": [
                                828,
                                32
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "finish": [
                                828,
                                41
                            ],
                            "name": "radius",
                            "start": [
                                828,
                                35
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                828,
                                49
                            ],
                            "name": "teamID",
                            "start": [
                                828,
                                43
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "desc": "(Default: true)",
                            "finish": [
                                828,
                                60
                            ],
                            "name": "spherical",
                            "rawdesc": "(Default: true)",
                            "start": [
                                828,
                                51
                            ],
                            "type": "local",
                            "view": "boolean?"
                        },
                        {
                            "desc": "(Default: true)",
                            "finish": [
                                828,
                                68
                            ],
                            "name": "forced",
                            "rawdesc": "(Default: true)",
                            "start": [
                                828,
                                62
                            ],
                            "type": "local",
                            "view": "boolean?"
                        },
                        {
                            "finish": [
                                828,
                                83
                            ],
                            "name": "excludeUnitID",
                            "start": [
                                828,
                                70
                            ],
                            "type": "local",
                            "view": "integer?"
                        },
                        {
                            "finish": [
                                828,
                                102
                            ],
                            "name": "excludeUnitDefIDs",
                            "start": [
                                828,
                                85
                            ],
                            "type": "local",
                            "view": "number[]?"
                        }
                    ],
                    "desc": "@*param* `z` — uses ground height when unspecified\n\n@*param* `spherical` — (Default: true)\n\n@*param* `forced` — (Default: true)",
                    "finish": [
                        828,
                        107
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        828,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.BuggerOff(x: number, y: number, z?: number, radius: number, teamID: integer, spherical?: boolean, forced?: boolean, excludeUnitID?: integer, excludeUnitDefIDs?: number[])\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    828,
                    25
                ],
                "name": "BuggerOff",
                "start": [
                    828,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.BuggerOff",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `funcName` — Function ID or name.\n\n@*param* `retArgs` — Number of values to return.\n\n@*param* `...` — Arguments",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                203,
                                36
                            ],
                            "name": "unitID",
                            "start": [
                                203,
                                30
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "desc": "Function ID or name.",
                            "finish": [
                                203,
                                46
                            ],
                            "name": "funcName",
                            "rawdesc": "Function ID or name.",
                            "start": [
                                203,
                                38
                            ],
                            "type": "local",
                            "view": "(string|integer)?"
                        },
                        {
                            "desc": "Number of values to return.",
                            "finish": [
                                203,
                                55
                            ],
                            "name": "retArgs",
                            "rawdesc": "Number of values to return.",
                            "start": [
                                203,
                                48
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "desc": "Arguments",
                            "finish": [
                                203,
                                60
                            ],
                            "rawdesc": "Arguments",
                            "start": [
                                203,
                                57
                            ],
                            "type": "...",
                            "view": "any"
                        }
                    ],
                    "desc": "@*param* `funcName` — Function ID or name.\n\n@*param* `retArgs` — Number of values to return.\n\n@*param* `...` — Arguments",
                    "finish": [
                        203,
                        65
                    ],
                    "returns": [
                        {
                            "name": "...",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        203,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.CallCOBScript(unitID: integer, funcName?: string|integer, retArgs: integer, ...any)\n  -> ...number"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    203,
                    29
                ],
                "name": "CallCOBScript",
                "start": [
                    203,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.CallCOBScript",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [],
                    "finish": [
                        427,
                        51
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        427,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.ClearFeaturesPreviousDrawFlag()\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    427,
                    45
                ],
                "name": "ClearFeaturesPreviousDrawFlag",
                "start": [
                    427,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.ClearFeaturesPreviousDrawFlag",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                731,
                                36
                            ],
                            "name": "unitID",
                            "start": [
                                731,
                                30
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        731,
                        41
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        731,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.ClearUnitGoal(unitID: integer)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    731,
                    29
                ],
                "name": "ClearUnitGoal",
                "start": [
                    731,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.ClearUnitGoal",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [],
                    "finish": [
                        424,
                        48
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        424,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.ClearUnitsPreviousDrawFlag()\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    424,
                    42
                ],
                "name": "ClearUnitsPreviousDrawFlag",
                "start": [
                    424,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.ClearUnitsPreviousDrawFlag",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `threadName` — (Default: main)",
                "extends": {
                    "args": [
                        {
                            "desc": "(Default: main)",
                            "finish": [
                                1298,
                                45
                            ],
                            "name": "threadName",
                            "rawdesc": "(Default: main)",
                            "start": [
                                1298,
                                35
                            ],
                            "type": "local",
                            "view": "string?"
                        }
                    ],
                    "desc": "@*param* `threadName` — (Default: main)",
                    "finish": [
                        1298,
                        50
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        1298,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.ClearWatchDogTimer(threadName?: string)\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    1298,
                    34
                ],
                "name": "ClearWatchDogTimer",
                "start": [
                    1298,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.ClearWatchDogTimer",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `buildFacing` — one of SOUTH = 0, EAST = 1, NORTH = 2, WEST  = 3",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1466,
                                38
                            ],
                            "name": "teamID",
                            "start": [
                                1466,
                                32
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                1466,
                                49
                            ],
                            "name": "unitDefID",
                            "start": [
                                1466,
                                40
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                1466,
                                55
                            ],
                            "name": "posX",
                            "start": [
                                1466,
                                51
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1466,
                                61
                            ],
                            "name": "posY",
                            "start": [
                                1466,
                                57
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1466,
                                67
                            ],
                            "name": "posZ",
                            "start": [
                                1466,
                                63
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1466,
                                81
                            ],
                            "name": "searchRadius",
                            "start": [
                                1466,
                                69
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1466,
                                94
                            ],
                            "name": "minDistance",
                            "start": [
                                1466,
                                83
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "desc": "one of SOUTH = 0, EAST = 1, NORTH = 2, WEST  = 3",
                            "finish": [
                                1466,
                                107
                            ],
                            "name": "buildFacing",
                            "rawdesc": "one of SOUTH = 0, EAST = 1, NORTH = 2, WEST  = 3",
                            "start": [
                                1466,
                                96
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "@*param* `buildFacing` — one of SOUTH = 0, EAST = 1, NORTH = 2, WEST  = 3",
                    "finish": [
                        1466,
                        112
                    ],
                    "returns": [
                        {
                            "name": "buildPosX",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "buildPosY",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "buildPosZ",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        1466,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.ClosestBuildPos(teamID: integer, unitDefID: integer, posX: number, posY: number, posZ: number, searchRadius: number, minDistance: number, buildFacing: number)\n  -> buildPosX: number\n  2. buildPosY: number\n  3. buildPosZ: number"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1466,
                    31
                ],
                "name": "ClosestBuildPos",
                "start": [
                    1466,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.ClosestBuildPos",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                596,
                                30
                            ],
                            "name": "path",
                            "start": [
                                596,
                                26
                            ],
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "finish": [
                        596,
                        35
                    ],
                    "returns": [
                        {
                            "name": "dirCreated",
                            "type": "function.return",
                            "view": "boolean?"
                        }
                    ],
                    "start": [
                        596,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.CreateDir(path: string)\n  -> dirCreated: boolean?"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    596,
                    25
                ],
                "name": "CreateDir",
                "start": [
                    596,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.CreateDir",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `featureDef` — name or id",
                "extends": {
                    "args": [
                        {
                            "desc": "name or id",
                            "finish": [
                                909,
                                40
                            ],
                            "name": "featureDef",
                            "rawdesc": "name or id",
                            "start": [
                                909,
                                30
                            ],
                            "type": "local",
                            "view": "string|number"
                        },
                        {
                            "finish": [
                                909,
                                43
                            ],
                            "name": "x",
                            "start": [
                                909,
                                42
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                909,
                                46
                            ],
                            "name": "y",
                            "start": [
                                909,
                                45
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                909,
                                49
                            ],
                            "name": "z",
                            "start": [
                                909,
                                48
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                909,
                                58
                            ],
                            "name": "heading",
                            "start": [
                                909,
                                51
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "finish": [
                                909,
                                70
                            ],
                            "name": "AllyTeamID",
                            "start": [
                                909,
                                60
                            ],
                            "type": "local",
                            "view": "integer?"
                        },
                        {
                            "finish": [
                                909,
                                81
                            ],
                            "name": "featureID",
                            "start": [
                                909,
                                72
                            ],
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "@*param* `featureDef` — name or id",
                    "finish": [
                        909,
                        86
                    ],
                    "returns": [
                        {
                            "name": "featureID",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        909,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.CreateFeature(featureDef: string|number, x: number, y: number, z: number, heading?: number, AllyTeamID?: integer, featureID?: integer)\n  -> featureID: number"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    909,
                    29
                ],
                "name": "CreateFeature",
                "start": [
                    909,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.CreateFeature",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [],
                    "finish": [
                        1113,
                        39
                    ],
                    "returns": [
                        {
                            "name": "decalID",
                            "type": "function.return",
                            "view": "number|nil"
                        }
                    ],
                    "start": [
                        1113,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.CreateGroundDecal()\n  -> decalID: number|nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    1113,
                    33
                ],
                "name": "CreateGroundDecal",
                "start": [
                    1113,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.CreateGroundDecal",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nOffmap positions are clamped! Use MoveCtrl to move to such positions.\n\n@*param* `unitDefName` — or unitDefID\n\n@*param* `build` — (Default: false) the unit is created in \"being built\" state with buildProgress = 0\n\n@*param* `flattenGround` — (Default: true) the unit flattens ground, if it normally does so\n\n@*param* `unitID` — requests specific unitID\n\n@*return* `unitID` — meaning unit was created\n\n```lua\nfacing:\n    | 0 -- South\n    | 1 -- East\n    | 2 -- North\n    | 3 -- West\n    | 0 -- South\n    | 1 -- East\n    | 2 -- North\n    | 3 -- West\n    | \"s\" -- South\n    | \"e\" -- East\n    | \"n\" -- North\n    | \"w\" -- West\n    | \"south\" -- South\n    | \"east\" -- East\n    | \"north\" -- North\n    | \"west\" -- West\n```\n\nSee: [Spring.DestroyUnit](file:///home/runner/work/spring/spring/rts/Lua/library/generated/LuaSyncedCtrl.lua#238#9)",
                "extends": {
                    "args": [
                        {
                            "desc": "or unitDefID",
                            "finish": [
                                228,
                                38
                            ],
                            "name": "unitDefName",
                            "rawdesc": "or unitDefID",
                            "start": [
                                228,
                                27
                            ],
                            "type": "local",
                            "view": "string|number"
                        },
                        {
                            "finish": [
                                228,
                                41
                            ],
                            "name": "x",
                            "start": [
                                228,
                                40
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                228,
                                44
                            ],
                            "name": "y",
                            "start": [
                                228,
                                43
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                228,
                                47
                            ],
                            "name": "z",
                            "start": [
                                228,
                                46
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                228,
                                55
                            ],
                            "name": "facing",
                            "start": [
                                228,
                                49
                            ],
                            "type": "local",
                            "view": "\"e\"|\"east\"|\"n\"|\"north\"|\"s\"...(+7)"
                        },
                        {
                            "finish": [
                                228,
                                63
                            ],
                            "name": "teamID",
                            "start": [
                                228,
                                57
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "desc": "(Default: false) the unit is created in \"being built\" state with buildProgress = 0",
                            "finish": [
                                228,
                                70
                            ],
                            "name": "build",
                            "rawdesc": "(Default: false) the unit is created in \"being built\" state with buildProgress = 0",
                            "start": [
                                228,
                                65
                            ],
                            "type": "local",
                            "view": "boolean?"
                        },
                        {
                            "desc": "(Default: true) the unit flattens ground, if it normally does so",
                            "finish": [
                                228,
                                85
                            ],
                            "name": "flattenGround",
                            "rawdesc": "(Default: true) the unit flattens ground, if it normally does so",
                            "start": [
                                228,
                                72
                            ],
                            "type": "local",
                            "view": "boolean?"
                        },
                        {
                            "desc": "requests specific unitID",
                            "finish": [
                                228,
                                93
                            ],
                            "name": "unitID",
                            "rawdesc": "requests specific unitID",
                            "start": [
                                228,
                                87
                            ],
                            "type": "local",
                            "view": "integer?"
                        },
                        {
                            "finish": [
                                228,
                                104
                            ],
                            "name": "builderID",
                            "start": [
                                228,
                                95
                            ],
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nOffmap positions are clamped! Use MoveCtrl to move to such positions.\n\n@*param* `unitDefName` — or unitDefID\n\n@*param* `build` — (Default: false) the unit is created in \"being built\" state with buildProgress = 0\n\n@*param* `flattenGround` — (Default: true) the unit flattens ground, if it normally does so\n\n@*param* `unitID` — requests specific unitID\n\n@*return* `unitID` — meaning unit was created\n\n```lua\nfacing:\n    | 0 -- South\n    | 1 -- East\n    | 2 -- North\n    | 3 -- West\n    | 0 -- South\n    | 1 -- East\n    | 2 -- North\n    | 3 -- West\n    | \"s\" -- South\n    | \"e\" -- East\n    | \"n\" -- North\n    | \"w\" -- West\n    | \"south\" -- South\n    | \"east\" -- East\n    | \"north\" -- North\n    | \"west\" -- West\n```\n\nSee: [Spring.DestroyUnit](file:///home/runner/work/spring/spring/rts/Lua/library/generated/LuaSyncedCtrl.lua#238#9)",
                    "finish": [
                        228,
                        109
                    ],
                    "rawdesc": "\nOffmap positions are clamped! Use MoveCtrl to move to such positions.\n\n```lua\nfacing:\n    | 0 -- South\n    | 1 -- East\n    | 2 -- North\n    | 3 -- West\n    | 0 -- South\n    | 1 -- East\n    | 2 -- North\n    | 3 -- West\n    | \"s\" -- South\n    | \"e\" -- East\n    | \"n\" -- North\n    | \"w\" -- West\n    | \"south\" -- South\n    | \"east\" -- East\n    | \"north\" -- North\n    | \"west\" -- West\n```\n\nSee: [Spring.DestroyUnit](file:///home/runner/work/spring/spring/rts/Lua/library/generated/LuaSyncedCtrl.lua#238#9)",
                    "returns": [
                        {
                            "desc": "meaning unit was created",
                            "name": "unitID",
                            "rawdesc": "meaning unit was created",
                            "type": "function.return",
                            "view": "number|nil"
                        }
                    ],
                    "start": [
                        228,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.CreateUnit(unitDefName: string|number, x: number, y: number, z: number, facing: \"e\"|\"east\"|\"n\"|\"north\"|\"s\"...(+7), teamID: integer, build?: boolean, flattenGround?: boolean, unitID?: integer, builderID?: integer)\n  -> unitID: number|nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    228,
                    26
                ],
                "name": "CreateUnit",
                "rawdesc": "\nOffmap positions are clamped! Use MoveCtrl to move to such positions.\n\n```lua\nfacing:\n    | 0 -- South\n    | 1 -- East\n    | 2 -- North\n    | 3 -- West\n    | 0 -- South\n    | 1 -- East\n    | 2 -- North\n    | 3 -- West\n    | \"s\" -- South\n    | \"e\" -- East\n    | \"n\" -- North\n    | \"w\" -- West\n    | \"south\" -- South\n    | \"east\" -- East\n    | \"north\" -- North\n    | \"west\" -- West\n```\n\nSee: [Spring.DestroyUnit](file:///home/runner/work/spring/spring/rts/Lua/library/generated/LuaSyncedCtrl.lua#238#9)",
                "start": [
                    228,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.CreateUnit",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Silently removes projectiles (no explosion).",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1549,
                                45
                            ],
                            "name": "projectileID",
                            "start": [
                                1549,
                                33
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Silently removes projectiles (no explosion).",
                    "finish": [
                        1549,
                        50
                    ],
                    "rawdesc": "Silently removes projectiles (no explosion).",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        1549,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.DeleteProjectile(projectileID: integer)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    1549,
                    32
                ],
                "name": "DeleteProjectile",
                "rawdesc": "Silently removes projectiles (no explosion).",
                "start": [
                    1549,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.DeleteProjectile",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                323,
                                35
                            ],
                            "name": "unitID",
                            "start": [
                                323,
                                29
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        323,
                        40
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        323,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.DeselectUnit(unitID: integer)\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    323,
                    28
                ],
                "name": "DeselectUnit",
                "start": [
                    323,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.DeselectUnit",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Deselects multiple units.\n\n@*param* `unitIDs` — Table with unit IDs as value.",
                "extends": {
                    "args": [
                        {
                            "desc": "Table with unit IDs as value.",
                            "finish": [
                                329,
                                41
                            ],
                            "name": "unitIDs",
                            "rawdesc": "Table with unit IDs as value.",
                            "start": [
                                329,
                                34
                            ],
                            "type": "local",
                            "view": "table<any, integer>"
                        }
                    ],
                    "desc": "Deselects multiple units.\n\n@*param* `unitIDs` — Table with unit IDs as value.",
                    "finish": [
                        329,
                        46
                    ],
                    "rawdesc": "Deselects multiple units.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        329,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.DeselectUnitArray(unitIDs: table<any, integer>)\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    329,
                    33
                ],
                "name": "DeselectUnitArray",
                "rawdesc": "Deselects multiple units.",
                "start": [
                    329,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.DeselectUnitArray",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Deselects multiple units.\n\n@*param* `unitMap` — Table with unit IDs as keys.",
                "extends": {
                    "args": [
                        {
                            "desc": "Table with unit IDs as keys.",
                            "finish": [
                                335,
                                39
                            ],
                            "name": "unitMap",
                            "rawdesc": "Table with unit IDs as keys.",
                            "start": [
                                335,
                                32
                            ],
                            "type": "local",
                            "view": "table<integer, any>"
                        }
                    ],
                    "desc": "Deselects multiple units.\n\n@*param* `unitMap` — Table with unit IDs as keys.",
                    "finish": [
                        335,
                        44
                    ],
                    "rawdesc": "Deselects multiple units.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        335,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.DeselectUnitMap(unitMap: table<integer, any>)\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    335,
                    31
                ],
                "name": "DeselectUnitMap",
                "rawdesc": "Deselects multiple units.",
                "start": [
                    335,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.DeselectUnitMap",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                913,
                                43
                            ],
                            "name": "featureDefID",
                            "start": [
                                913,
                                31
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        913,
                        48
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        913,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.DestroyFeature(featureDefID: integer)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    913,
                    30
                ],
                "name": "DestroyFeature",
                "start": [
                    913,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.DestroyFeature",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1117,
                                42
                            ],
                            "name": "decalID",
                            "start": [
                                1117,
                                35
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        1117,
                        47
                    ],
                    "returns": [
                        {
                            "name": "delSuccess",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        1117,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.DestroyGroundDecal(decalID: integer)\n  -> delSuccess: boolean"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    1117,
                    34
                ],
                "name": "DestroyGroundDecal",
                "start": [
                    1117,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.DestroyGroundDecal",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `selfd` — (Default: false) makes the unit act like it self-destructed.\n\n@*param* `reclaimed` — (Default: false) don't show any DeathSequences, don't leave a wreckage. This does not give back the resources to the team!\n\n@*param* `cleanupImmediately` — (Default: false) stronger version of reclaimed, removes the unit unconditionally and makes its ID available for immediate reuse (otherwise it takes a few frames)\n\nSee: [Spring.CreateUnit](file:///home/runner/work/spring/spring/rts/Lua/library/generated/LuaSyncedCtrl.lua#229#9)",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                237,
                                34
                            ],
                            "name": "unitID",
                            "start": [
                                237,
                                28
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "desc": "(Default: false) makes the unit act like it self-destructed.",
                            "finish": [
                                237,
                                41
                            ],
                            "name": "selfd",
                            "rawdesc": "(Default: false) makes the unit act like it self-destructed.",
                            "start": [
                                237,
                                36
                            ],
                            "type": "local",
                            "view": "boolean?"
                        },
                        {
                            "desc": "(Default: false) don't show any DeathSequences, don't leave a wreckage. This does not give back the resources to the team!",
                            "finish": [
                                237,
                                52
                            ],
                            "name": "reclaimed",
                            "rawdesc": "(Default: false) don't show any DeathSequences, don't leave a wreckage. This does not give back the resources to the team!",
                            "start": [
                                237,
                                43
                            ],
                            "type": "local",
                            "view": "boolean?"
                        },
                        {
                            "finish": [
                                237,
                                64
                            ],
                            "name": "attackerID",
                            "start": [
                                237,
                                54
                            ],
                            "type": "local",
                            "view": "integer?"
                        },
                        {
                            "desc": "(Default: false) stronger version of reclaimed, removes the unit unconditionally and makes its ID available for immediate reuse (otherwise it takes a few frames)",
                            "finish": [
                                237,
                                84
                            ],
                            "name": "cleanupImmediately",
                            "rawdesc": "(Default: false) stronger version of reclaimed, removes the unit unconditionally and makes its ID available for immediate reuse (otherwise it takes a few frames)",
                            "start": [
                                237,
                                66
                            ],
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "@*param* `selfd` — (Default: false) makes the unit act like it self-destructed.\n\n@*param* `reclaimed` — (Default: false) don't show any DeathSequences, don't leave a wreckage. This does not give back the resources to the team!\n\n@*param* `cleanupImmediately` — (Default: false) stronger version of reclaimed, removes the unit unconditionally and makes its ID available for immediate reuse (otherwise it takes a few frames)\n\nSee: [Spring.CreateUnit](file:///home/runner/work/spring/spring/rts/Lua/library/generated/LuaSyncedCtrl.lua#229#9)",
                    "finish": [
                        237,
                        89
                    ],
                    "rawdesc": "See: [Spring.CreateUnit](file:///home/runner/work/spring/spring/rts/Lua/library/generated/LuaSyncedCtrl.lua#229#9)",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        237,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.DestroyUnit(unitID: integer, selfd?: boolean, reclaimed?: boolean, attackerID?: integer, cleanupImmediately?: boolean)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    237,
                    27
                ],
                "name": "DestroyUnit",
                "rawdesc": "See: [Spring.CreateUnit](file:///home/runner/work/spring/spring/rts/Lua/library/generated/LuaSyncedCtrl.lua#229#9)",
                "start": [
                    237,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.DestroyUnit",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `returnMs` — (Default: false) whether to return `timeAmount` in milliseconds as opposed to seconds\n\n@*param* `fromMicroSecs` — (Default: false) whether timers are in microseconds instead of milliseconds",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                87,
                                35
                            ],
                            "name": "endTimer",
                            "start": [
                                87,
                                27
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                87,
                                47
                            ],
                            "name": "startTimer",
                            "start": [
                                87,
                                37
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "desc": "(Default: false) whether to return `timeAmount` in milliseconds as opposed to seconds",
                            "finish": [
                                87,
                                57
                            ],
                            "name": "returnMs",
                            "rawdesc": "(Default: false) whether to return `timeAmount` in milliseconds as opposed to seconds",
                            "start": [
                                87,
                                49
                            ],
                            "type": "local",
                            "view": "boolean?"
                        },
                        {
                            "desc": "(Default: false) whether timers are in microseconds instead of milliseconds",
                            "finish": [
                                87,
                                72
                            ],
                            "name": "fromMicroSecs",
                            "rawdesc": "(Default: false) whether timers are in microseconds instead of milliseconds",
                            "start": [
                                87,
                                59
                            ],
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "@*param* `returnMs` — (Default: false) whether to return `timeAmount` in milliseconds as opposed to seconds\n\n@*param* `fromMicroSecs` — (Default: false) whether timers are in microseconds instead of milliseconds",
                    "finish": [
                        87,
                        77
                    ],
                    "returns": [
                        {
                            "name": "timeAmount",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        87,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.DiffTimers(endTimer: integer, startTimer: integer, returnMs?: boolean, fromMicroSecs?: boolean)\n  -> timeAmount: number"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    87,
                    26
                ],
                "name": "DiffTimers",
                "start": [
                    87,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.DiffTimers",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                171,
                                39
                            ],
                            "name": "unitID",
                            "start": [
                                171,
                                33
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        171,
                        44
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        171,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.DrawUnitCommands(unitID: integer)\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    171,
                    32
                ],
                "name": "DrawUnitCommands",
                "start": [
                    171,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `units` — array of unit ids\n\n@*param* `tableOrArray` — (Default: false] when true `units` is interpreted as a table in the format `{ [unitID) = arg1, ... }`",
                "extends": {
                    "args": [
                        {
                            "desc": "array of unit ids",
                            "finish": [
                                176,
                                38
                            ],
                            "name": "units",
                            "rawdesc": "array of unit ids",
                            "start": [
                                176,
                                33
                            ],
                            "type": "local",
                            "view": "table"
                        },
                        {
                            "desc": "(Default: false] when true `units` is interpreted as a table in the format `{ [unitID) = arg1, ... }`",
                            "finish": [
                                176,
                                52
                            ],
                            "name": "tableOrArray",
                            "rawdesc": "(Default: false] when true `units` is interpreted as a table in the format `{ [unitID) = arg1, ... }`",
                            "start": [
                                176,
                                40
                            ],
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "@*param* `units` — array of unit ids\n\n@*param* `tableOrArray` — (Default: false] when true `units` is interpreted as a table in the format `{ [unitID) = arg1, ... }`",
                    "finish": [
                        176,
                        57
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        176,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.DrawUnitCommands(units: table, tableOrArray?: boolean)\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    176,
                    32
                ],
                "name": "DrawUnitCommands",
                "start": [
                    176,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.DrawUnitCommands",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Useful for debugging.\n\nPrints values in the spring chat console.\nHint: the default print() writes to STDOUT.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                31,
                                24
                            ],
                            "name": "arg",
                            "start": [
                                31,
                                21
                            ],
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": [
                                31,
                                29
                            ],
                            "start": [
                                31,
                                26
                            ],
                            "type": "...",
                            "view": "any"
                        }
                    ],
                    "desc": "Useful for debugging.\n\nPrints values in the spring chat console.\nHint: the default print() writes to STDOUT.",
                    "finish": [
                        31,
                        34
                    ],
                    "rawdesc": "Useful for debugging.\n\nPrints values in the spring chat console.\nHint: the default print() writes to STDOUT.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        31,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.Echo(arg: any, ...any)\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    31,
                    20
                ],
                "name": "Echo",
                "rawdesc": "Useful for debugging.\n\nPrints values in the spring chat console.\nHint: the default print() writes to STDOUT.",
                "start": [
                    31,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.Echo",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1642,
                                38
                            ],
                            "name": "unitID",
                            "start": [
                                1642,
                                32
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                1642,
                                49
                            ],
                            "name": "cmdDescID",
                            "start": [
                                1642,
                                40
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "desc": "Command Description\n\nContains data about a command.\n",
                            "finish": [
                                1642,
                                59
                            ],
                            "name": "cmdArray",
                            "rawdesc": "Command Description\n\nContains data about a command.\n",
                            "start": [
                                1642,
                                51
                            ],
                            "type": "local",
                            "view": "CommandDescription"
                        }
                    ],
                    "finish": [
                        1642,
                        64
                    ],
                    "start": [
                        1642,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.EditUnitCmdDesc(unitID: integer, cmdDescID: integer, cmdArray: CommandDescription)"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    1642,
                    31
                ],
                "name": "EditUnitCmdDesc",
                "start": [
                    1642,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.EditUnitCmdDesc",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                592,
                                45
                            ],
                            "name": "modfile",
                            "start": [
                                592,
                                38
                            ],
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "finish": [
                        592,
                        50
                    ],
                    "returns": [
                        {
                            "name": "extracted",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        592,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.ExtractModArchiveFile(modfile: string)\n  -> extracted: boolean"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    592,
                    37
                ],
                "name": "ExtractModArchiveFile",
                "start": [
                    592,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.ExtractModArchiveFile",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1118,
                                38
                            ],
                            "name": "unitID",
                            "start": [
                                1118,
                                32
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        1118,
                        43
                    ],
                    "start": [
                        1118,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.FindUnitCmdDesc(unitID: integer)"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1118,
                    31
                ],
                "name": "FindUnitCmdDesc",
                "start": [
                    1118,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.FindUnitCmdDesc",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [],
                    "finish": [
                        40,
                        33
                    ],
                    "returns": [
                        {
                            "name": "enabled",
                            "type": "function.return",
                            "view": "boolean|nil"
                        }
                    ],
                    "start": [
                        40,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.FixedAllies()\n  -> enabled: boolean|nil"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    40,
                    27
                ],
                "name": "FixedAllies",
                "start": [
                    40,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.FixedAllies",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [],
                    "finish": [
                        627,
                        39
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        627,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.ForceLayoutUpdate()\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    627,
                    33
                ],
                "name": "ForceLayoutUpdate",
                "start": [
                    627,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.ForceLayoutUpdate",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `normal` — (Default: true)\n\n@*param* `shadow` — (Default: false)",
                "extends": {
                    "args": [
                        {
                            "desc": "(Default: true)",
                            "finish": [
                                962,
                                45
                            ],
                            "name": "normal",
                            "rawdesc": "(Default: true)",
                            "start": [
                                962,
                                39
                            ],
                            "type": "local",
                            "view": "boolean?"
                        },
                        {
                            "desc": "(Default: false)",
                            "finish": [
                                962,
                                53
                            ],
                            "name": "shadow",
                            "rawdesc": "(Default: false)",
                            "start": [
                                962,
                                47
                            ],
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "@*param* `normal` — (Default: true)\n\n@*param* `shadow` — (Default: false)",
                    "finish": [
                        962,
                        58
                    ],
                    "returns": [
                        {
                            "name": "updated",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        962,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.ForceTesselationUpdate(normal?: boolean, shadow?: boolean)\n  -> updated: boolean"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    962,
                    38
                ],
                "name": "ForceTesselationUpdate",
                "start": [
                    962,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.ForceTesselationUpdate",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Prevent collision checks from working on outdated data\n\nThere's a rare edge case that requires units to be in specific positions\nand being shot by specific weapons but which can result in shots ghosting\nthrough the unit. This is because the unit's collision volume is stale.\nThe `movement.unitQuadPositionUpdateRate` modrule controls this behaviour\nand can guarantee 100% correctness if set to 1, but the default value is 3\nand large-scale games generally don't want to set it so low. This function\nlets you guarantee success for important weapons regardless of how high\nthe normal update rate is set.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1517,
                                47
                            ],
                            "name": "unitID",
                            "start": [
                                1517,
                                41
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Prevent collision checks from working on outdated data\n\nThere's a rare edge case that requires units to be in specific positions\nand being shot by specific weapons but which can result in shots ghosting\nthrough the unit. This is because the unit's collision volume is stale.\nThe `movement.unitQuadPositionUpdateRate` modrule controls this behaviour\nand can guarantee 100% correctness if set to 1, but the default value is 3\nand large-scale games generally don't want to set it so low. This function\nlets you guarantee success for important weapons regardless of how high\nthe normal update rate is set.",
                    "finish": [
                        1517,
                        52
                    ],
                    "rawdesc": "Prevent collision checks from working on outdated data\n\nThere's a rare edge case that requires units to be in specific positions\nand being shot by specific weapons but which can result in shots ghosting\nthrough the unit. This is because the unit's collision volume is stale.\nThe `movement.unitQuadPositionUpdateRate` modrule controls this behaviour\nand can guarantee 100% correctness if set to 1, but the default value is 3\nand large-scale games generally don't want to set it so low. This function\nlets you guarantee success for important weapons regardless of how high\nthe normal update rate is set.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        1517,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.ForceUnitCollisionUpdate(unitID: integer)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    1517,
                    40
                ],
                "name": "ForceUnitCollisionUpdate",
                "rawdesc": "Prevent collision checks from working on outdated data\n\nThere's a rare edge case that requires units to be in specific positions\nand being shot by specific weapons but which can result in shots ghosting\nthrough the unit. This is because the unit's collision volume is stale.\nThe `movement.unitQuadPositionUpdateRate` modrule controls this behaviour\nand can guarantee 100% correctness if set to 1, but the default value is 3\nand large-scale games generally don't want to set it so low. This function\nlets you guarantee success for important weapons regardless of how high\nthe normal update rate is set.",
                "start": [
                    1517,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.ForceUnitCollisionUpdate",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                558,
                                37
                            ],
                            "name": "iconName",
                            "start": [
                                558,
                                29
                            ],
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "finish": [
                        558,
                        42
                    ],
                    "returns": [
                        {
                            "name": "freed",
                            "type": "function.return",
                            "view": "boolean?"
                        }
                    ],
                    "start": [
                        558,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.FreeUnitIcon(iconName: string)\n  -> freed: boolean?"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    558,
                    28
                ],
                "name": "FreeUnitIcon",
                "start": [
                    558,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.FreeUnitIcon",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Will declare game over.\n\nA list of winning allyteams can be passed, if undecided (like when dropped from the host) it should be empty (no winner), in the case of a draw with multiple winners, all should be listed.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                69,
                                36
                            ],
                            "name": "allyTeamID1",
                            "start": [
                                69,
                                25
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "finish": [
                                69,
                                49
                            ],
                            "name": "allyTeamID2",
                            "start": [
                                69,
                                38
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "finish": [
                                69,
                                62
                            ],
                            "name": "allyTeamIDn",
                            "start": [
                                69,
                                51
                            ],
                            "type": "local",
                            "view": "number?"
                        }
                    ],
                    "desc": "Will declare game over.\n\nA list of winning allyteams can be passed, if undecided (like when dropped from the host) it should be empty (no winner), in the case of a draw with multiple winners, all should be listed.",
                    "finish": [
                        69,
                        67
                    ],
                    "rawdesc": "Will declare game over.\n\nA list of winning allyteams can be passed, if undecided (like when dropped from the host) it should be empty (no winner), in the case of a draw with multiple winners, all should be listed.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        69,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GameOver(allyTeamID1?: number, allyTeamID2?: number, allyTeamIDn?: number)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    69,
                    24
                ],
                "name": "GameOver",
                "rawdesc": "Will declare game over.\n\nA list of winning allyteams can be passed, if undecided (like when dropped from the host) it should be empty (no winner), in the case of a draw with multiple winners, all should be listed.",
                "start": [
                    69,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GameOver",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                991,
                                48
                            ],
                            "name": "itersPerBatch",
                            "start": [
                                991,
                                35
                            ],
                            "type": "local",
                            "view": "integer?"
                        },
                        {
                            "finish": [
                                991,
                                65
                            ],
                            "name": "numStepsPerIter",
                            "start": [
                                991,
                                50
                            ],
                            "type": "local",
                            "view": "integer?"
                        },
                        {
                            "finish": [
                                991,
                                82
                            ],
                            "name": "minStepsPerIter",
                            "start": [
                                991,
                                67
                            ],
                            "type": "local",
                            "view": "integer?"
                        },
                        {
                            "finish": [
                                991,
                                99
                            ],
                            "name": "maxStepsPerIter",
                            "start": [
                                991,
                                84
                            ],
                            "type": "local",
                            "view": "integer?"
                        },
                        {
                            "finish": [
                                991,
                                115
                            ],
                            "name": "minLoopRunTime",
                            "start": [
                                991,
                                101
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "finish": [
                                991,
                                131
                            ],
                            "name": "maxLoopRunTime",
                            "start": [
                                991,
                                117
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "finish": [
                                991,
                                148
                            ],
                            "name": "baseRunTimeMult",
                            "start": [
                                991,
                                133
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "finish": [
                                991,
                                165
                            ],
                            "name": "baseMemLoadMult",
                            "start": [
                                991,
                                150
                            ],
                            "type": "local",
                            "view": "number?"
                        }
                    ],
                    "finish": [
                        991,
                        170
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        991,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GarbageCollectCtrl(itersPerBatch?: integer, numStepsPerIter?: integer, minStepsPerIter?: integer, maxStepsPerIter?: integer, minLoopRunTime?: number, maxLoopRunTime?: number, baseRunTimeMult?: number, baseMemLoadMult?: number)\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    991,
                    34
                ],
                "name": "GarbageCollectCtrl",
                "start": [
                    991,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GarbageCollectCtrl",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*return* `skirmishAIID`\n\n@*return* `name`\n\n@*return* `hostingPlayerID`\n\n@*return* `shortName` — when synced \"SYNCED_NOSHORTNAME\", otherwise the AI shortname or \"UNKNOWN\"\n\n@*return* `version` — when synced \"SYNCED_NOVERSION\", otherwise the AI version or \"UNKNOWN\"\n\n@*return* `options`",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                369,
                                32
                            ],
                            "name": "teamID",
                            "start": [
                                369,
                                26
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "@*return* `skirmishAIID`\n\n@*return* `name`\n\n@*return* `hostingPlayerID`\n\n@*return* `shortName` — when synced \"SYNCED_NOSHORTNAME\", otherwise the AI shortname or \"UNKNOWN\"\n\n@*return* `version` — when synced \"SYNCED_NOVERSION\", otherwise the AI version or \"UNKNOWN\"\n\n@*return* `options`",
                    "finish": [
                        369,
                        37
                    ],
                    "returns": [
                        {
                            "name": "skirmishAIID",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "name",
                            "type": "function.return",
                            "view": "string"
                        },
                        {
                            "name": "hostingPlayerID",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "desc": "when synced \"SYNCED_NOSHORTNAME\", otherwise the AI shortname or \"UNKNOWN\"",
                            "name": "shortName",
                            "rawdesc": "when synced \"SYNCED_NOSHORTNAME\", otherwise the AI shortname or \"UNKNOWN\"",
                            "type": "function.return",
                            "view": "string"
                        },
                        {
                            "desc": "when synced \"SYNCED_NOVERSION\", otherwise the AI version or \"UNKNOWN\"",
                            "name": "version",
                            "rawdesc": "when synced \"SYNCED_NOVERSION\", otherwise the AI version or \"UNKNOWN\"",
                            "type": "function.return",
                            "view": "string"
                        },
                        {
                            "name": "options",
                            "type": "function.return",
                            "view": "table<string, string>"
                        }
                    ],
                    "start": [
                        369,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetAIInfo(teamID: integer)\n  -> skirmishAIID: number\n  2. name: string\n  3. hostingPlayerID: number\n  4. shortName: string\n  5. version: string\n  6. options: table<string, string>"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    369,
                    25
                ],
                "name": "GetAIInfo",
                "start": [
                    369,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetAIInfo",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                825,
                                43
                            ],
                            "name": "actionName",
                            "start": [
                                825,
                                33
                            ],
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "finish": [
                        825,
                        48
                    ],
                    "returns": [
                        {
                            "name": "hotkeys",
                            "type": "function.return",
                            "view": "string[]?"
                        }
                    ],
                    "start": [
                        825,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetActionHotKeys(actionName: string)\n  -> hotkeys: string[]?"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    825,
                    32
                ],
                "name": "GetActionHotKeys",
                "start": [
                    825,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetActionHotKeys",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                690,
                                41
                            ],
                            "name": "cmdIndex",
                            "start": [
                                690,
                                33
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        690,
                        46
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "CommandDescription?"
                        }
                    ],
                    "start": [
                        690,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetActiveCmdDesc(cmdIndex: integer)\n  -> CommandDescription?"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    690,
                    32
                ],
                "name": "GetActiveCmdDesc",
                "start": [
                    690,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetActiveCmdDesc",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [],
                    "finish": [
                        686,
                        39
                    ],
                    "returns": [
                        {
                            "name": "cmdDescs",
                            "type": "function.return",
                            "view": "CommandDescription[]"
                        }
                    ],
                    "start": [
                        686,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetActiveCmdDescs()\n  -> cmdDescs: CommandDescription[]"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    686,
                    33
                ],
                "name": "GetActiveCmdDescs",
                "start": [
                    686,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetActiveCmdDescs",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [],
                    "finish": [
                        677,
                        38
                    ],
                    "returns": [
                        {
                            "name": "cmdIndex",
                            "type": "function.return",
                            "view": "number?"
                        },
                        {
                            "name": "cmdID",
                            "type": "function.return",
                            "view": "number?"
                        },
                        {
                            "name": "cmdType",
                            "type": "function.return",
                            "view": "number?"
                        },
                        {
                            "name": "cmdName",
                            "type": "function.return",
                            "view": "string|nil"
                        }
                    ],
                    "start": [
                        677,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetActiveCommand()\n  -> cmdIndex: number?\n  2. cmdID: number?\n  3. cmdType: number?\n  4. cmdName: string|nil"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    677,
                    32
                ],
                "name": "GetActiveCommand",
                "start": [
                    677,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetActiveCommand",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [],
                    "finish": [
                        713,
                        35
                    ],
                    "returns": [
                        {
                            "name": "activePage",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "maxPage",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        713,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetActivePage()\n  -> activePage: number\n  2. maxPage: number"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    713,
                    29
                ],
                "name": "GetActivePage",
                "start": [
                    713,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetActivePage",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [],
                    "finish": [
                        1124,
                        36
                    ],
                    "start": [
                        1124,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetAllFeatures()"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1124,
                    30
                ],
                "name": "GetAllFeatures",
                "start": [
                    1124,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetAllFeatures",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [],
                    "finish": [
                        940,
                        40
                    ],
                    "returns": [
                        {
                            "name": "decalIDs",
                            "type": "function.return",
                            "view": "number[]"
                        }
                    ],
                    "start": [
                        940,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetAllGroundDecals()\n  -> decalIDs: number[]"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    940,
                    34
                ],
                "name": "GetAllGroundDecals",
                "start": [
                    940,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetAllGroundDecals",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Get a list of all unitIDs\n\nNote that when called from a widget, this also returns units that are only\nradar blips.\n\nFor units that are radar blips, you may want to check if they are in los,\nas GetUnitDefID() will still return true if they have previously been seen.\n\nSee: ~UnsyncedRead.GetVisibleUnits~",
                "extends": {
                    "args": [],
                    "desc": "Get a list of all unitIDs\n\nNote that when called from a widget, this also returns units that are only\nradar blips.\n\nFor units that are radar blips, you may want to check if they are in los,\nas GetUnitDefID() will still return true if they have previously been seen.\n\nSee: ~UnsyncedRead.GetVisibleUnits~",
                    "finish": [
                        399,
                        33
                    ],
                    "rawdesc": "Get a list of all unitIDs\n\nNote that when called from a widget, this also returns units that are only\nradar blips.\n\nFor units that are radar blips, you may want to check if they are in los,\nas GetUnitDefID() will still return true if they have previously been seen.\n\nSee: ~UnsyncedRead.GetVisibleUnits~",
                    "returns": [
                        {
                            "name": "unitIDs",
                            "type": "function.return",
                            "view": "number[]"
                        }
                    ],
                    "start": [
                        399,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetAllUnits()\n  -> unitIDs: number[]"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    399,
                    27
                ],
                "name": "GetAllUnits",
                "rawdesc": "Get a list of all unitIDs\n\nNote that when called from a widget, this also returns units that are only\nradar blips.\n\nFor units that are radar blips, you may want to check if they are in los,\nas GetUnitDefID() will still return true if they have previously been seen.\n\nSee: ~UnsyncedRead.GetVisibleUnits~",
                "start": [
                    399,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetAllUnits",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                373,
                                42
                            ],
                            "name": "allyTeamID",
                            "start": [
                                373,
                                32
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        373,
                        47
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "table<string, string>|nil"
                        }
                    ],
                    "start": [
                        373,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetAllyTeamInfo(allyTeamID: integer)\n  -> table<string, string>|nil"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    373,
                    31
                ],
                "name": "GetAllyTeamInfo",
                "start": [
                    373,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetAllyTeamInfo",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*return* `list` — of allyTeamIDs",
                "extends": {
                    "args": [],
                    "desc": "@*return* `list` — of allyTeamIDs",
                    "finish": [
                        222,
                        37
                    ],
                    "returns": [
                        {
                            "desc": "of allyTeamIDs",
                            "name": "list",
                            "rawdesc": "of allyTeamIDs",
                            "type": "function.return",
                            "view": "number[]"
                        }
                    ],
                    "start": [
                        222,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetAllyTeamList()\n  -> list: number[]"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    222,
                    31
                ],
                "name": "GetAllyTeamList",
                "start": [
                    222,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetAllyTeamList",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                210,
                                42
                            ],
                            "name": "allyID",
                            "start": [
                                210,
                                36
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        210,
                        47
                    ],
                    "returns": [
                        {
                            "name": "xMin",
                            "type": "function.return",
                            "view": "number?"
                        },
                        {
                            "name": "zMin",
                            "type": "function.return",
                            "view": "number?"
                        },
                        {
                            "name": "xMax",
                            "type": "function.return",
                            "view": "number?"
                        },
                        {
                            "name": "zMax",
                            "type": "function.return",
                            "view": "number?"
                        }
                    ],
                    "start": [
                        210,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetAllyTeamStartBox(allyID: integer)\n  -> xMin: number?\n  2. zMin: number?\n  3. xMax: number?\n  4. zMax: number?"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    210,
                    35
                ],
                "name": "GetAllyTeamStartBox",
                "start": [
                    210,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetAllyTeamStartBox",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Get if selection box is handled by engine\n\n@*return* `when` — true engine won't select units inside selection box when released\n\nSee:\n  * [Spring.GetSelectionBox](file:///home/runner/work/spring/spring/rts/Lua/library/generated/LuaUnsyncedRead.lua#178#9)\n  * [Spring.SetBoxSelectionByEngine](file:///home/runner/work/spring/spring/rts/Lua/library/generated/LuaUnsyncedCtrl.lua#638#9)",
                "extends": {
                    "args": [],
                    "desc": "Get if selection box is handled by engine\n\n@*return* `when` — true engine won't select units inside selection box when released\n\nSee:\n  * [Spring.GetSelectionBox](file:///home/runner/work/spring/spring/rts/Lua/library/generated/LuaUnsyncedRead.lua#178#9)\n  * [Spring.SetBoxSelectionByEngine](file:///home/runner/work/spring/spring/rts/Lua/library/generated/LuaUnsyncedCtrl.lua#638#9)",
                    "finish": [
                        487,
                        45
                    ],
                    "rawdesc": "Get if selection box is handled by engine\n\nSee:\n  * [Spring.GetSelectionBox](file:///home/runner/work/spring/spring/rts/Lua/library/generated/LuaUnsyncedRead.lua#178#9)\n  * [Spring.SetBoxSelectionByEngine](file:///home/runner/work/spring/spring/rts/Lua/library/generated/LuaUnsyncedCtrl.lua#638#9)",
                    "returns": [
                        {
                            "desc": "true engine won't select units inside selection box when released",
                            "name": "when",
                            "rawdesc": "true engine won't select units inside selection box when released",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        487,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetBoxSelectionByEngine()\n  -> when: boolean"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    487,
                    39
                ],
                "name": "GetBoxSelectionByEngine",
                "rawdesc": "Get if selection box is handled by engine\n\nSee:\n  * [Spring.GetSelectionBox](file:///home/runner/work/spring/spring/rts/Lua/library/generated/LuaUnsyncedRead.lua#178#9)\n  * [Spring.SetBoxSelectionByEngine](file:///home/runner/work/spring/spring/rts/Lua/library/generated/LuaUnsyncedCtrl.lua#638#9)",
                "start": [
                    487,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetBoxSelectionByEngine",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "```lua\nbuildFacing:\n    | 0 -- South\n    | 1 -- East\n    | 2 -- North\n    | 3 -- West\n    | 0 -- South\n    | 1 -- East\n    | 2 -- North\n    | 3 -- West\n    | \"s\" -- South\n    | \"e\" -- East\n    | \"n\" -- North\n    | \"w\" -- West\n    | \"south\" -- South\n    | \"east\" -- East\n    | \"north\" -- North\n    | \"west\" -- West\n```",
                "extends": {
                    "args": [],
                    "desc": "```lua\nbuildFacing:\n    | 0 -- South\n    | 1 -- East\n    | 2 -- North\n    | 3 -- West\n    | 0 -- South\n    | 1 -- East\n    | 2 -- North\n    | 3 -- West\n    | \"s\" -- South\n    | \"e\" -- East\n    | \"n\" -- North\n    | \"w\" -- West\n    | \"south\" -- South\n    | \"east\" -- East\n    | \"north\" -- North\n    | \"west\" -- West\n```",
                    "finish": [
                        703,
                        36
                    ],
                    "rawdesc": "```lua\nbuildFacing:\n    | 0 -- South\n    | 1 -- East\n    | 2 -- North\n    | 3 -- West\n    | 0 -- South\n    | 1 -- East\n    | 2 -- North\n    | 3 -- West\n    | \"s\" -- South\n    | \"e\" -- East\n    | \"n\" -- North\n    | \"w\" -- West\n    | \"south\" -- South\n    | \"east\" -- East\n    | \"north\" -- North\n    | \"west\" -- West\n```",
                    "returns": [
                        {
                            "name": "buildFacing",
                            "type": "function.return",
                            "view": "\"e\"|\"east\"|\"n\"|\"north\"|\"s\"...(+7)"
                        }
                    ],
                    "start": [
                        703,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetBuildFacing()\n  -> buildFacing: \"e\"|\"east\"|\"n\"|\"north\"|\"s\"...(+7)"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    703,
                    30
                ],
                "name": "GetBuildFacing",
                "rawdesc": "```lua\nbuildFacing:\n    | 0 -- South\n    | 1 -- East\n    | 2 -- North\n    | 3 -- West\n    | 0 -- South\n    | 1 -- East\n    | 2 -- North\n    | 3 -- West\n    | \"s\" -- South\n    | \"e\" -- East\n    | \"n\" -- North\n    | \"w\" -- West\n    | \"south\" -- South\n    | \"east\" -- East\n    | \"north\" -- North\n    | \"west\" -- West\n```",
                "start": [
                    703,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetBuildFacing",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [],
                    "finish": [
                        706,
                        37
                    ],
                    "returns": [
                        {
                            "name": "buildSpacing",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        706,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetBuildSpacing()\n  -> buildSpacing: number"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    706,
                    31
                ],
                "name": "GetBuildSpacing",
                "start": [
                    706,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetBuildSpacing",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [],
                    "finish": [
                        1024,
                        30
                    ],
                    "start": [
                        1024,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetCEGID()"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1024,
                    24
                ],
                "name": "GetCEGID",
                "start": [
                    1024,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetCEGID",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                208,
                                37
                            ],
                            "name": "unitID",
                            "start": [
                                208,
                                31
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                208,
                                47
                            ],
                            "name": "funcName",
                            "start": [
                                208,
                                39
                            ],
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "finish": [
                        208,
                        52
                    ],
                    "returns": [
                        {
                            "name": "funcID",
                            "type": "function.return",
                            "view": "integer?"
                        }
                    ],
                    "start": [
                        208,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetCOBScriptID(unitID: integer, funcName: string)\n  -> funcID: integer?"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    208,
                    30
                ],
                "name": "GetCOBScriptID",
                "start": [
                    208,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetCOBScriptID",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [],
                    "finish": [
                        552,
                        40
                    ],
                    "returns": [
                        {
                            "name": "dirX",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "dirY",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "dirZ",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        552,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetCameraDirection()\n  -> dirX: number\n  2. dirY: number\n  3. dirZ: number"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    552,
                    34
                ],
                "name": "GetCameraDirection",
                "start": [
                    552,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetCameraDirection",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [],
                    "finish": [
                        561,
                        34
                    ],
                    "returns": [
                        {
                            "name": "vFOV",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "hFOV",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        561,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetCameraFOV()\n  -> vFOV: number\n  2. hFOV: number"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    561,
                    28
                ],
                "name": "GetCameraFOV",
                "start": [
                    561,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetCameraFOV",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Get available cameras.\n\n@*return* `Table` — where where keys are names and values are indices.",
                "extends": {
                    "args": [],
                    "desc": "Get available cameras.\n\n@*return* `Table` — where where keys are names and values are indices.",
                    "finish": [
                        533,
                        36
                    ],
                    "rawdesc": "Get available cameras.",
                    "returns": [
                        {
                            "desc": "where where keys are names and values are indices.",
                            "name": "Table",
                            "rawdesc": "where where keys are names and values are indices.",
                            "type": "function.return",
                            "view": "table<string, number>"
                        }
                    ],
                    "start": [
                        533,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetCameraNames()\n  -> Table: table<string, number>"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    533,
                    30
                ],
                "name": "GetCameraNames",
                "rawdesc": "Get available cameras.",
                "start": [
                    533,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetCameraNames",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [],
                    "finish": [
                        547,
                        39
                    ],
                    "returns": [
                        {
                            "name": "posX",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "posY",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "posZ",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        547,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetCameraPosition()\n  -> posX: number\n  2. posY: number\n  3. posZ: number"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    547,
                    33
                ],
                "name": "GetCameraPosition",
                "start": [
                    547,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetCameraPosition",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*return* `rotX` — in radians\n\n@*return* `rotY` — in radians\n\n@*return* `rotZ` — in radians",
                "extends": {
                    "args": [],
                    "desc": "@*return* `rotX` — in radians\n\n@*return* `rotY` — in radians\n\n@*return* `rotZ` — in radians",
                    "finish": [
                        557,
                        39
                    ],
                    "returns": [
                        {
                            "desc": "in radians",
                            "name": "rotX",
                            "rawdesc": "in radians",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "desc": "in radians",
                            "name": "rotY",
                            "rawdesc": "in radians",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "desc": "in radians",
                            "name": "rotZ",
                            "rawdesc": "in radians",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        557,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetCameraRotation()\n  -> rotX: number\n  2. rotY: number\n  3. rotZ: number"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    557,
                    33
                ],
                "name": "GetCameraRotation",
                "start": [
                    557,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetCameraRotation",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "```lua\nuseReturns:\n    | false\n```",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                537,
                                41
                            ],
                            "name": "useReturns",
                            "start": [
                                537,
                                31
                            ],
                            "type": "local",
                            "view": "false"
                        }
                    ],
                    "desc": "```lua\nuseReturns:\n    | false\n```",
                    "finish": [
                        537,
                        46
                    ],
                    "rawdesc": "```lua\nuseReturns:\n    | false\n```",
                    "returns": [
                        {
                            "name": "cameraState",
                            "type": "function.return",
                            "view": "CameraState"
                        }
                    ],
                    "start": [
                        537,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetCameraState(useReturns: false)\n  -> cameraState: CameraState"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    537,
                    30
                ],
                "name": "GetCameraState",
                "rawdesc": "```lua\nuseReturns:\n    | false\n```",
                "start": [
                    537,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `useReturns` — (Default: `true`) Return multiple values instead of a table.\n\n@*return* `name`\n\n@*return* `Fields` — depending on current controller mode.\n\n```lua\nuseReturns:\n    | true\n\nname:\n    | \"ta\"\n    | \"spring\"\n    | \"rot\"\n    | \"ov\"\n    | \"free\"\n    | \"fps\"\n    | \"dummy\"\n```",
                "extends": {
                    "args": [
                        {
                            "desc": "(Default: `true`) Return multiple values instead of a table.",
                            "finish": [
                                542,
                                41
                            ],
                            "name": "useReturns",
                            "rawdesc": "(Default: `true`) Return multiple values instead of a table.",
                            "start": [
                                542,
                                31
                            ],
                            "type": "local",
                            "view": "true?"
                        }
                    ],
                    "desc": "@*param* `useReturns` — (Default: `true`) Return multiple values instead of a table.\n\n@*return* `name`\n\n@*return* `Fields` — depending on current controller mode.\n\n```lua\nuseReturns:\n    | true\n\nname:\n    | \"ta\"\n    | \"spring\"\n    | \"rot\"\n    | \"ov\"\n    | \"free\"\n    | \"fps\"\n    | \"dummy\"\n```",
                    "finish": [
                        542,
                        46
                    ],
                    "rawdesc": "```lua\nuseReturns:\n    | true\n\nname:\n    | \"ta\"\n    | \"spring\"\n    | \"rot\"\n    | \"ov\"\n    | \"free\"\n    | \"fps\"\n    | \"dummy\"\n```",
                    "returns": [
                        {
                            "name": "name",
                            "type": "function.return",
                            "view": "\"dummy\"|\"fps\"|\"free\"|\"ov\"|\"rot\"...(+2)"
                        },
                        {
                            "desc": "depending on current controller mode.",
                            "name": "Fields",
                            "rawdesc": "depending on current controller mode.",
                            "type": "function.return",
                            "view": "any"
                        }
                    ],
                    "start": [
                        542,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetCameraState(useReturns?: true)\n  -> name: \"dummy\"|\"fps\"|\"free\"|\"ov\"|\"rot\"...(+2)\n  2. Fields: any"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    542,
                    30
                ],
                "name": "GetCameraState",
                "rawdesc": "```lua\nuseReturns:\n    | true\n\nname:\n    | \"ta\"\n    | \"spring\"\n    | \"rot\"\n    | \"ov\"\n    | \"free\"\n    | \"fps\"\n    | \"dummy\"\n```",
                "start": [
                    542,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetCameraState",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [],
                    "finish": [
                        574,
                        38
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "CameraVectors"
                        }
                    ],
                    "start": [
                        574,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetCameraVectors()\n  -> CameraVectors"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    574,
                    32
                ],
                "name": "GetCameraVectors",
                "start": [
                    574,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetCameraVectors",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [],
                    "finish": [
                        748,
                        34
                    ],
                    "returns": [
                        {
                            "name": "text",
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": [
                        748,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetClipboard()\n  -> text: string"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    748,
                    28
                ],
                "name": "GetClipboard",
                "start": [
                    748,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetClipboard",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                694,
                                37
                            ],
                            "name": "cmdID",
                            "start": [
                                694,
                                32
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        694,
                        42
                    ],
                    "returns": [
                        {
                            "name": "cmdDescIndex",
                            "type": "function.return",
                            "view": "integer?"
                        }
                    ],
                    "start": [
                        694,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetCmdDescIndex(cmdID: integer)\n  -> cmdDescIndex: integer?"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    694,
                    31
                ],
                "name": "GetCmdDescIndex",
                "start": [
                    694,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetCmdDescIndex",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Get the commands for a unit.\n\nSame as `Spring.GetUnitCommands`\n\n@*param* `count` — Number of commands to return, `-1` returns all commands, `0` returns command count.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1091,
                                38
                            ],
                            "name": "unitID",
                            "start": [
                                1091,
                                32
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "desc": "Number of commands to return, `-1` returns all commands, `0` returns command count.",
                            "finish": [
                                1091,
                                45
                            ],
                            "name": "count",
                            "rawdesc": "Number of commands to return, `-1` returns all commands, `0` returns command count.",
                            "start": [
                                1091,
                                40
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Get the commands for a unit.\n\nSame as `Spring.GetUnitCommands`\n\n@*param* `count` — Number of commands to return, `-1` returns all commands, `0` returns command count.",
                    "finish": [
                        1091,
                        50
                    ],
                    "rawdesc": "Get the commands for a unit.\n\nSame as `Spring.GetUnitCommands`",
                    "returns": [
                        {
                            "name": "commands",
                            "type": "function.return",
                            "view": "Command[]"
                        }
                    ],
                    "start": [
                        1091,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetCommandQueue(unitID: integer, count: integer)\n  -> commands: Command[]"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1091,
                    31
                ],
                "name": "GetCommandQueue",
                "rawdesc": "Get the commands for a unit.\n\nSame as `Spring.GetUnitCommands`",
                "start": [
                    1091,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Get the count of commands for a unit.\n\nSame as `Spring.GetUnitCommands`\n\n@*param* `count` — Returns the number of commands in the units queue.\n\n@*return* `The` — number of commands in the unit queue.\n\n```lua\ncount:\n    | 0\n```",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1100,
                                38
                            ],
                            "name": "unitID",
                            "start": [
                                1100,
                                32
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "desc": "Returns the number of commands in the units queue.",
                            "finish": [
                                1100,
                                45
                            ],
                            "name": "count",
                            "rawdesc": "Returns the number of commands in the units queue.",
                            "start": [
                                1100,
                                40
                            ],
                            "type": "local",
                            "view": "0"
                        }
                    ],
                    "desc": "Get the count of commands for a unit.\n\nSame as `Spring.GetUnitCommands`\n\n@*param* `count` — Returns the number of commands in the units queue.\n\n@*return* `The` — number of commands in the unit queue.\n\n```lua\ncount:\n    | 0\n```",
                    "finish": [
                        1100,
                        50
                    ],
                    "rawdesc": "Get the count of commands for a unit.\n\nSame as `Spring.GetUnitCommands`\n\n\n```lua\ncount:\n    | 0\n```",
                    "returns": [
                        {
                            "desc": "number of commands in the unit queue.",
                            "name": "The",
                            "rawdesc": "number of commands in the unit queue.",
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": [
                        1100,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetCommandQueue(unitID: integer, count: 0)\n  -> The: integer"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1100,
                    31
                ],
                "name": "GetCommandQueue",
                "rawdesc": "Get the count of commands for a unit.\n\nSame as `Spring.GetUnitCommands`\n\n\n```lua\ncount:\n    | 0\n```",
                "start": [
                    1100,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetCommandQueue",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `default` — (Default: `0`)",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                925,
                                35
                            ],
                            "name": "name",
                            "start": [
                                925,
                                31
                            ],
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "desc": "(Default: `0`)",
                            "finish": [
                                925,
                                44
                            ],
                            "name": "default",
                            "rawdesc": "(Default: `0`)",
                            "start": [
                                925,
                                37
                            ],
                            "type": "local",
                            "view": "number?"
                        }
                    ],
                    "desc": "@*param* `default` — (Default: `0`)",
                    "finish": [
                        925,
                        49
                    ],
                    "returns": [
                        {
                            "name": "configFloat",
                            "type": "function.return",
                            "view": "number?"
                        }
                    ],
                    "start": [
                        925,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetConfigFloat(name: string, default?: number)\n  -> configFloat: number?"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    925,
                    30
                ],
                "name": "GetConfigFloat",
                "start": [
                    925,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetConfigFloat",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `default` — (Default: `0`)",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                920,
                                33
                            ],
                            "name": "name",
                            "start": [
                                920,
                                29
                            ],
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "desc": "(Default: `0`)",
                            "finish": [
                                920,
                                42
                            ],
                            "name": "default",
                            "rawdesc": "(Default: `0`)",
                            "start": [
                                920,
                                35
                            ],
                            "type": "local",
                            "view": "number?"
                        }
                    ],
                    "desc": "@*param* `default` — (Default: `0`)",
                    "finish": [
                        920,
                        47
                    ],
                    "returns": [
                        {
                            "name": "configInt",
                            "type": "function.return",
                            "view": "number?"
                        }
                    ],
                    "start": [
                        920,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetConfigInt(name: string, default?: number)\n  -> configInt: number?"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    920,
                    28
                ],
                "name": "GetConfigInt",
                "start": [
                    920,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetConfigInt",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [],
                    "finish": [
                        915,
                        37
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "Configuration[]"
                        }
                    ],
                    "start": [
                        915,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetConfigParams()\n  -> Configuration[]"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    915,
                    31
                ],
                "name": "GetConfigParams",
                "start": [
                    915,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetConfigParams",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `default` — (Default: `\"\"`)",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                930,
                                36
                            ],
                            "name": "name",
                            "start": [
                                930,
                                32
                            ],
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "desc": "(Default: `\"\"`)",
                            "finish": [
                                930,
                                45
                            ],
                            "name": "default",
                            "rawdesc": "(Default: `\"\"`)",
                            "start": [
                                930,
                                38
                            ],
                            "type": "local",
                            "view": "string?"
                        }
                    ],
                    "desc": "@*param* `default` — (Default: `\"\"`)",
                    "finish": [
                        930,
                        50
                    ],
                    "returns": [
                        {
                            "name": "configString",
                            "type": "function.return",
                            "view": "number?"
                        }
                    ],
                    "start": [
                        930,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetConfigString(name: string, default?: string)\n  -> configString: number?"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    930,
                    31
                ],
                "name": "GetConfigString",
                "start": [
                    930,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetConfigString",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                762,
                                41
                            ],
                            "name": "maxLines",
                            "start": [
                                762,
                                33
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "finish": [
                        762,
                        46
                    ],
                    "returns": [
                        {
                            "name": "buffer",
                            "type": "function.return",
                            "view": "{ text: string, priority: integer }[]"
                        }
                    ],
                    "start": [
                        762,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetConsoleBuffer(maxLines: number)\n  -> buffer: { text: string, priority: integer }[]"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    762,
                    32
                ],
                "name": "GetConsoleBuffer",
                "start": [
                    762,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetConsoleBuffer",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [],
                    "finish": [
                        765,
                        39
                    ],
                    "returns": [
                        {
                            "name": "tooltip",
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": [
                        765,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetCurrentTooltip()\n  -> tooltip: string"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    765,
                    33
                ],
                "name": "GetCurrentTooltip",
                "start": [
                    765,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetCurrentTooltip",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                956,
                                39
                            ],
                            "name": "decalID",
                            "start": [
                                956,
                                32
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        956,
                        44
                    ],
                    "returns": [
                        {
                            "name": "posTL.x",
                            "type": "function.return",
                            "view": "number?"
                        },
                        {
                            "name": "posTL.z",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "posTR.x",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "posTR.z",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "posBR.x",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "posBR.z",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "posBL.x",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "posBL.z",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        956,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetDecalQuadPos(decalID: integer)\n  -> posTL.x: number?\n  2. posTL.z: number\n  3. posTR.x: number\n  4. posTR.z: number\n  5. posBR.x: number\n  6. posBR.z: number\n  7. posBL.x: number\n  8. posBL.z: number"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    956,
                    31
                ],
                "name": "GetDecalQuadPos",
                "start": [
                    956,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetDecalQuadPos",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `isMainTex` — (Default: true) If false, it gets the texture for normals/glow maps\n\n@*return* `textureNames` — All textures on the atlas and available for use in SetGroundDecalTexture",
                "extends": {
                    "args": [
                        {
                            "desc": "(Default: true) If false, it gets the texture for normals/glow maps",
                            "finish": [
                                975,
                                42
                            ],
                            "name": "isMainTex",
                            "rawdesc": "(Default: true) If false, it gets the texture for normals/glow maps",
                            "start": [
                                975,
                                33
                            ],
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "@*param* `isMainTex` — (Default: true) If false, it gets the texture for normals/glow maps\n\n@*return* `textureNames` — All textures on the atlas and available for use in SetGroundDecalTexture",
                    "finish": [
                        975,
                        47
                    ],
                    "returns": [
                        {
                            "desc": "All textures on the atlas and available for use in SetGroundDecalTexture",
                            "name": "textureNames",
                            "rawdesc": "All textures on the atlas and available for use in SetGroundDecalTexture",
                            "type": "function.return",
                            "view": "string[]"
                        }
                    ],
                    "start": [
                        975,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetDecalTextures(isMainTex?: boolean)\n  -> textureNames: string[]"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    975,
                    32
                ],
                "name": "GetDecalTextures",
                "start": [
                    975,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetDecalTextures",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [],
                    "finish": [
                        683,
                        39
                    ],
                    "returns": [
                        {
                            "name": "cmdIndex",
                            "type": "function.return",
                            "view": "number?"
                        },
                        {
                            "name": "cmdID",
                            "type": "function.return",
                            "view": "number?"
                        },
                        {
                            "name": "cmdType",
                            "type": "function.return",
                            "view": "number?"
                        },
                        {
                            "name": "cmdName",
                            "type": "function.return",
                            "view": "string|nil"
                        }
                    ],
                    "start": [
                        683,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetDefaultCommand()\n  -> cmdIndex: number?\n  2. cmdID: number?\n  3. cmdType: number?\n  4. cmdName: string|nil"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    683,
                    33
                ],
                "name": "GetDefaultCommand",
                "start": [
                    683,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetDefaultCommand",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [],
                    "finish": [
                        189,
                        34
                    ],
                    "returns": [
                        {
                            "name": "low_16bit",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "high_16bit",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        189,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetDrawFrame()\n  -> low_16bit: number\n  2. high_16bit: number"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    189,
                    28
                ],
                "name": "GetDrawFrame",
                "start": [
                    189,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetDrawFrame",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*return* `Time` — in seconds",
                "extends": {
                    "args": [],
                    "desc": "@*return* `Time` — in seconds",
                    "finish": [
                        629,
                        36
                    ],
                    "returns": [
                        {
                            "desc": "in seconds",
                            "name": "Time",
                            "rawdesc": "in seconds",
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": [
                        629,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetDrawSeconds()\n  -> Time: integer"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    629,
                    30
                ],
                "name": "GetDrawSeconds",
                "start": [
                    629,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetDrawSeconds",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [],
                    "finish": [
                        180,
                        42
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        180,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetDrawSelectionInfo()\n  -> boolean"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    180,
                    36
                ],
                "name": "GetDrawSelectionInfo",
                "start": [
                    180,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetDrawSelectionInfo",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Get dual view geometry (minimap when enabled)\n\n@*return* `dualViewSizeX` — in px\n\n@*return* `dualViewSizeY` — in px\n\n@*return* `dualViewPosX` — offset from leftmost screen left border in px\n\n@*return* `dualViewPosY` — offset from bottommost screen bottom border in px",
                "extends": {
                    "args": [],
                    "desc": "Get dual view geometry (minimap when enabled)\n\n@*return* `dualViewSizeX` — in px\n\n@*return* `dualViewSizeY` — in px\n\n@*return* `dualViewPosX` — offset from leftmost screen left border in px\n\n@*return* `dualViewPosY` — offset from bottommost screen bottom border in px",
                    "finish": [
                        110,
                        41
                    ],
                    "rawdesc": "Get dual view geometry (minimap when enabled)",
                    "returns": [
                        {
                            "desc": "in px",
                            "name": "dualViewSizeX",
                            "rawdesc": "in px",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "desc": "in px",
                            "name": "dualViewSizeY",
                            "rawdesc": "in px",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "desc": "offset from leftmost screen left border in px",
                            "name": "dualViewPosX",
                            "rawdesc": "offset from leftmost screen left border in px",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "desc": "offset from bottommost screen bottom border in px",
                            "name": "dualViewPosY",
                            "rawdesc": "offset from bottommost screen bottom border in px",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        110,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetDualViewGeometry()\n  -> dualViewSizeX: number\n  2. dualViewSizeY: number\n  3. dualViewPosX: number\n  4. dualViewPosY: number"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    110,
                    35
                ],
                "name": "GetDualViewGeometry",
                "rawdesc": "Get dual view geometry (minimap when enabled)",
                "start": [
                    110,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetDualViewGeometry",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [],
                    "finish": [
                        655,
                        28
                    ],
                    "returns": [
                        {
                            "name": "fps",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        655,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetFPS()\n  -> fps: number"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    655,
                    22
                ],
                "name": "GetFPS",
                "start": [
                    655,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetFPS",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                163,
                                44
                            ],
                            "name": "heading",
                            "start": [
                                163,
                                37
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "finish": [
                        163,
                        49
                    ],
                    "returns": [
                        {
                            "name": "facing",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        163,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetFacingFromHeading(heading: number)\n  -> facing: number"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    163,
                    36
                ],
                "name": "GetFacingFromHeading",
                "start": [
                    163,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetFacingFromHeading",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1074,
                                42
                            ],
                            "name": "unitID",
                            "start": [
                                1074,
                                36
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        1074,
                        47
                    ],
                    "start": [
                        1074,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetFactoryBuggerOff(unitID: integer)"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1074,
                    35
                ],
                "name": "GetFactoryBuggerOff",
                "start": [
                    1074,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetFactoryBuggerOff",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Get the number or list of commands for a factory\n\n@*param* `count` — when 0 returns the number of commands in the units queue, when -1 returns all commands, number of commands to return otherwise",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1067,
                                41
                            ],
                            "name": "unitID",
                            "start": [
                                1067,
                                35
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "desc": "when 0 returns the number of commands in the units queue, when -1 returns all commands, number of commands to return otherwise",
                            "finish": [
                                1067,
                                48
                            ],
                            "name": "count",
                            "rawdesc": "when 0 returns the number of commands in the units queue, when -1 returns all commands, number of commands to return otherwise",
                            "start": [
                                1067,
                                43
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "Get the number or list of commands for a factory\n\n@*param* `count` — when 0 returns the number of commands in the units queue, when -1 returns all commands, number of commands to return otherwise",
                    "finish": [
                        1067,
                        53
                    ],
                    "rawdesc": "Get the number or list of commands for a factory",
                    "returns": [
                        {
                            "name": "commands",
                            "type": "function.return",
                            "view": "number|Command[]"
                        }
                    ],
                    "start": [
                        1067,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetFactoryCommands(unitID: integer, count: number)\n  -> commands: number|Command[]"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1067,
                    34
                ],
                "name": "GetFactoryCommands",
                "rawdesc": "Get the number or list of commands for a factory",
                "start": [
                    1067,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetFactoryCommands",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Gets the build queue of a factory\n\n@*param* `count` — (Default: -1) Number of commands to retrieve, `-1` for all.\n\n@*param* `addCmds` — (Default: false) Retrieve commands other than buildunit\n\n@*return* `counts` — Build queue count by `unitDefID` or `-cmdID`, or `nil` if unit is not found.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1082,
                                39
                            ],
                            "name": "unitID",
                            "start": [
                                1082,
                                33
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "desc": "(Default: -1) Number of commands to retrieve, `-1` for all.",
                            "finish": [
                                1082,
                                46
                            ],
                            "name": "count",
                            "rawdesc": "(Default: -1) Number of commands to retrieve, `-1` for all.",
                            "start": [
                                1082,
                                41
                            ],
                            "type": "local",
                            "view": "integer?"
                        },
                        {
                            "desc": "(Default: false) Retrieve commands other than buildunit",
                            "finish": [
                                1082,
                                55
                            ],
                            "name": "addCmds",
                            "rawdesc": "(Default: false) Retrieve commands other than buildunit",
                            "start": [
                                1082,
                                48
                            ],
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "Gets the build queue of a factory\n\n@*param* `count` — (Default: -1) Number of commands to retrieve, `-1` for all.\n\n@*param* `addCmds` — (Default: false) Retrieve commands other than buildunit\n\n@*return* `counts` — Build queue count by `unitDefID` or `-cmdID`, or `nil` if unit is not found.",
                    "finish": [
                        1082,
                        60
                    ],
                    "rawdesc": "Gets the build queue of a factory",
                    "returns": [
                        {
                            "desc": "Build queue count by `unitDefID` or `-cmdID`, or `nil` if unit is not found.",
                            "name": "counts",
                            "rawdesc": "Build queue count by `unitDefID` or `-cmdID`, or `nil` if unit is not found.",
                            "type": "function.return",
                            "view": "table<number, number>?"
                        }
                    ],
                    "start": [
                        1082,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetFactoryCounts(unitID: integer, count?: integer, addCmds?: boolean)\n  -> counts: table<number, number>?"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1082,
                    32
                ],
                "name": "GetFactoryCounts",
                "rawdesc": "Gets the build queue of a factory",
                "start": [
                    1082,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetFactoryCounts",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1136,
                                44
                            ],
                            "name": "featureID",
                            "start": [
                                1136,
                                35
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        1136,
                        49
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number?"
                        }
                    ],
                    "start": [
                        1136,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetFeatureAllyTeam(featureID: integer)\n  -> number?"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1136,
                    34
                ],
                "name": "GetFeatureAllyTeam",
                "start": [
                    1136,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetFeatureAllyTeam",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*return* `nil` — when featureID cannot be parsed",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                293,
                                54
                            ],
                            "name": "featureID",
                            "start": [
                                293,
                                45
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "@*return* `nil` — when featureID cannot be parsed",
                    "finish": [
                        293,
                        59
                    ],
                    "returns": [
                        {
                            "desc": "when featureID cannot be parsed",
                            "name": "nil",
                            "rawdesc": "when featureID cannot be parsed",
                            "type": "function.return",
                            "view": "boolean?"
                        }
                    ],
                    "start": [
                        293,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetFeatureAlwaysUpdateMatrix(featureID: integer)\n  -> nil: boolean?"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    293,
                    44
                ],
                "name": "GetFeatureAlwaysUpdateMatrix",
                "start": [
                    293,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetFeatureAlwaysUpdateMatrix",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1200,
                                44
                            ],
                            "name": "featureID",
                            "start": [
                                1200,
                                35
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        1200,
                        49
                    ],
                    "returns": [
                        {
                            "name": "isBlocking",
                            "type": "function.return",
                            "view": "boolean|nil"
                        },
                        {
                            "name": "isSolidObjectCollidable",
                            "type": "function.return",
                            "view": "boolean"
                        },
                        {
                            "name": "isProjectileCollidable",
                            "type": "function.return",
                            "view": "boolean"
                        },
                        {
                            "name": "isRaySegmentCollidable",
                            "type": "function.return",
                            "view": "boolean"
                        },
                        {
                            "name": "crushable",
                            "type": "function.return",
                            "view": "boolean"
                        },
                        {
                            "name": "blockEnemyPushing",
                            "type": "function.return",
                            "view": "boolean"
                        },
                        {
                            "name": "blockHeightChanges",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        1200,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetFeatureBlocking(featureID: integer)\n  -> isBlocking: boolean|nil\n  2. isSolidObjectCollidable: boolean\n  3. isProjectileCollidable: boolean\n  4. isRaySegmentCollidable: boolean\n  5. crushable: boolean\n  6. blockEnemyPushing: boolean\n  7. blockHeightChanges: boolean"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1200,
                    34
                ],
                "name": "GetFeatureBlocking",
                "start": [
                    1200,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetFeatureBlocking",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1213,
                                55
                            ],
                            "name": "featureID",
                            "start": [
                                1213,
                                46
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        1213,
                        60
                    ],
                    "start": [
                        1213,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetFeatureCollisionVolumeData(featureID: integer)"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1213,
                    45
                ],
                "name": "GetFeatureCollisionVolumeData",
                "start": [
                    1213,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetFeatureCollisionVolumeData",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1128,
                                41
                            ],
                            "name": "featureID",
                            "start": [
                                1128,
                                32
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        1128,
                        46
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number?"
                        }
                    ],
                    "start": [
                        1128,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetFeatureDefID(featureID: integer)\n  -> number?"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1128,
                    31
                ],
                "name": "GetFeatureDefID",
                "start": [
                    1128,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetFeatureDefID",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1175,
                                45
                            ],
                            "name": "featureID",
                            "start": [
                                1175,
                                36
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        1175,
                        50
                    ],
                    "returns": [
                        {
                            "name": "dirX",
                            "type": "function.return",
                            "view": "number?"
                        },
                        {
                            "name": "dirY",
                            "type": "function.return",
                            "view": "number?"
                        },
                        {
                            "name": "dirZ",
                            "type": "function.return",
                            "view": "number?"
                        }
                    ],
                    "start": [
                        1175,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetFeatureDirection(featureID: integer)\n  -> dirX: number?\n  2. dirY: number?\n  3. dirZ: number?"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1175,
                    35
                ],
                "name": "GetFeatureDirection",
                "start": [
                    1175,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetFeatureDirection",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*return* `nil` — when featureID cannot be parsed",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                297,
                                44
                            ],
                            "name": "featureID",
                            "start": [
                                297,
                                35
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "@*return* `nil` — when featureID cannot be parsed",
                    "finish": [
                        297,
                        49
                    ],
                    "returns": [
                        {
                            "desc": "when featureID cannot be parsed",
                            "name": "nil",
                            "rawdesc": "when featureID cannot be parsed",
                            "type": "function.return",
                            "view": "number?"
                        }
                    ],
                    "start": [
                        297,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetFeatureDrawFlag(featureID: integer)\n  -> nil: number?"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    297,
                    34
                ],
                "name": "GetFeatureDrawFlag",
                "start": [
                    297,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetFeatureDrawFlag",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*return* `nil` — when featureID cannot be parsed",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                289,
                                50
                            ],
                            "name": "featureID",
                            "start": [
                                289,
                                41
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "@*return* `nil` — when featureID cannot be parsed",
                    "finish": [
                        289,
                        55
                    ],
                    "returns": [
                        {
                            "desc": "when featureID cannot be parsed",
                            "name": "nil",
                            "rawdesc": "when featureID cannot be parsed",
                            "type": "function.return",
                            "view": "boolean?"
                        }
                    ],
                    "start": [
                        289,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetFeatureEngineDrawMask(featureID: integer)\n  -> nil: boolean?"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    289,
                    40
                ],
                "name": "GetFeatureEngineDrawMask",
                "start": [
                    289,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetFeatureEngineDrawMask",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1181,
                                43
                            ],
                            "name": "featureID",
                            "start": [
                                1181,
                                34
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        1181,
                        48
                    ],
                    "start": [
                        1181,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetFeatureHeading(featureID: integer)"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1181,
                    33
                ],
                "name": "GetFeatureHeading",
                "start": [
                    1181,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetFeatureHeading",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1142,
                                42
                            ],
                            "name": "featureID",
                            "start": [
                                1142,
                                33
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        1142,
                        47
                    ],
                    "returns": [
                        {
                            "name": "health",
                            "type": "function.return",
                            "view": "number?"
                        },
                        {
                            "name": "defHealth",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "resurrectProgress",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        1142,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetFeatureHealth(featureID: integer)\n  -> health: number?\n  2. defHealth: number\n  3. resurrectProgress: number"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1142,
                    32
                ],
                "name": "GetFeatureHealth",
                "start": [
                    1142,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetFeatureHealth",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1146,
                                42
                            ],
                            "name": "featureID",
                            "start": [
                                1146,
                                33
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        1146,
                        47
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number?"
                        }
                    ],
                    "start": [
                        1146,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetFeatureHeight(featureID: integer)\n  -> number?"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1146,
                    32
                ],
                "name": "GetFeatureHeight",
                "start": [
                    1146,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetFeatureHeight",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1210,
                                53
                            ],
                            "name": "featureID",
                            "start": [
                                1210,
                                44
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        1210,
                        58
                    ],
                    "start": [
                        1210,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetFeatureLastAttackedPiece(featureID: integer)"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1210,
                    43
                ],
                "name": "GetFeatureLastAttackedPiece",
                "start": [
                    1210,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetFeatureLastAttackedPiece",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*return* `nil` — when featureID cannot be parsed",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                281,
                                43
                            ],
                            "name": "featureID",
                            "start": [
                                281,
                                34
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "@*return* `nil` — when featureID cannot be parsed",
                    "finish": [
                        281,
                        48
                    ],
                    "returns": [
                        {
                            "desc": "when featureID cannot be parsed",
                            "name": "nil",
                            "rawdesc": "when featureID cannot be parsed",
                            "type": "function.return",
                            "view": "boolean?"
                        }
                    ],
                    "start": [
                        281,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetFeatureLuaDraw(featureID: integer)\n  -> nil: boolean?"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    281,
                    33
                ],
                "name": "GetFeatureLuaDraw",
                "start": [
                    281,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetFeatureLuaDraw",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1154,
                                40
                            ],
                            "name": "featureID",
                            "start": [
                                1154,
                                31
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        1154,
                        45
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number?"
                        }
                    ],
                    "start": [
                        1154,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetFeatureMass(featureID: integer)\n  -> number?"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1154,
                    30
                ],
                "name": "GetFeatureMass",
                "start": [
                    1154,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetFeatureMass",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*return* `nil` — when featureID cannot be parsed",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                285,
                                42
                            ],
                            "name": "featureID",
                            "start": [
                                285,
                                33
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "@*return* `nil` — when featureID cannot be parsed",
                    "finish": [
                        285,
                        47
                    ],
                    "returns": [
                        {
                            "desc": "when featureID cannot be parsed",
                            "name": "nil",
                            "rawdesc": "when featureID cannot be parsed",
                            "type": "function.return",
                            "view": "boolean?"
                        }
                    ],
                    "start": [
                        285,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetFeatureNoDraw(featureID: integer)\n  -> nil: boolean?"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    285,
                    32
                ],
                "name": "GetFeatureNoDraw",
                "start": [
                    285,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetFeatureNoDraw",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1204,
                                44
                            ],
                            "name": "featureID",
                            "start": [
                                1204,
                                35
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        1204,
                        49
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean|nil"
                        }
                    ],
                    "start": [
                        1204,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetFeatureNoSelect(featureID: integer)\n  -> boolean|nil"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1204,
                    34
                ],
                "name": "GetFeatureNoSelect",
                "start": [
                    1204,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetFeatureNoSelect",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1216,
                                60
                            ],
                            "name": "featureID",
                            "start": [
                                1216,
                                51
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        1216,
                        65
                    ],
                    "start": [
                        1216,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetFeaturePieceCollisionVolumeData(featureID: integer)"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1216,
                    50
                ],
                "name": "GetFeaturePieceCollisionVolumeData",
                "start": [
                    1216,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetFeaturePieceCollisionVolumeData",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1668,
                                50
                            ],
                            "name": "featureID",
                            "start": [
                                1668,
                                41
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                1668,
                                62
                            ],
                            "name": "pieceIndex",
                            "start": [
                                1668,
                                52
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        1668,
                        67
                    ],
                    "returns": [
                        {
                            "name": "dirX",
                            "type": "function.return",
                            "view": "number|nil"
                        },
                        {
                            "name": "dirY",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "dirZ",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        1668,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetFeaturePieceDirection(featureID: integer, pieceIndex: integer)\n  -> dirX: number|nil\n  2. dirY: number\n  3. dirZ: number"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1668,
                    40
                ],
                "name": "GetFeaturePieceDirection",
                "start": [
                    1668,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetFeaturePieceDirection",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1644,
                                45
                            ],
                            "name": "featureID",
                            "start": [
                                1644,
                                36
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                1644,
                                57
                            ],
                            "name": "pieceIndex",
                            "start": [
                                1644,
                                47
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        1644,
                        62
                    ],
                    "returns": [
                        {
                            "name": "pieceInfo",
                            "type": "function.return",
                            "view": "PieceInfo?"
                        }
                    ],
                    "start": [
                        1644,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetFeaturePieceInfo(featureID: integer, pieceIndex: integer)\n  -> pieceInfo: PieceInfo?"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1644,
                    35
                ],
                "name": "GetFeaturePieceInfo",
                "start": [
                    1644,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetFeaturePieceInfo",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1639,
                                45
                            ],
                            "name": "featureID",
                            "start": [
                                1639,
                                36
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        1639,
                        50
                    ],
                    "returns": [
                        {
                            "name": "pieceNames",
                            "type": "function.return",
                            "view": "string[]"
                        }
                    ],
                    "start": [
                        1639,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetFeaturePieceList(featureID: integer)\n  -> pieceNames: string[]"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1639,
                    35
                ],
                "name": "GetFeaturePieceList",
                "start": [
                    1639,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetFeaturePieceList",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*return* `pieceInfos` — where keys are piece names and values are indices",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1635,
                                44
                            ],
                            "name": "featureID",
                            "start": [
                                1635,
                                35
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "@*return* `pieceInfos` — where keys are piece names and values are indices",
                    "finish": [
                        1635,
                        49
                    ],
                    "returns": [
                        {
                            "desc": "where keys are piece names and values are indices",
                            "name": "pieceInfos",
                            "rawdesc": "where keys are piece names and values are indices",
                            "type": "function.return",
                            "view": "table<string, number>"
                        }
                    ],
                    "start": [
                        1635,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetFeaturePieceMap(featureID: integer)\n  -> pieceInfos: table<string, number>"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1635,
                    34
                ],
                "name": "GetFeaturePieceMap",
                "start": [
                    1635,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetFeaturePieceMap",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1687,
                                47
                            ],
                            "name": "featureID",
                            "start": [
                                1687,
                                38
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        1687,
                        52
                    ],
                    "returns": [
                        {
                            "name": "m11",
                            "type": "function.return",
                            "view": "number|nil"
                        },
                        {
                            "name": "m12",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "m13",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "m14",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "m21",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "m22",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "m23",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "m24",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "m31",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "m32",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "m33",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "m34",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "m41",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "m42",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "m43",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "m44",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        1687,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetFeaturePieceMatrix(featureID: integer)\n  -> m11: number|nil\n  2. m12: number\n  3. m13: number\n  4. m14: number\n  5. m21: number\n  6. m22: number\n  7. m23: number\n  8. m24: number\n  9. m31: number\n 10. m32: number\n 11. m33: number\n 12. m34: number\n 13. m41: number\n 14. m42: number\n 15. m43: number\n 16. m44: number"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1687,
                    37
                ],
                "name": "GetFeaturePieceMatrix",
                "start": [
                    1687,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetFeaturePieceMatrix",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1654,
                                47
                            ],
                            "name": "featureID",
                            "start": [
                                1654,
                                38
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                1654,
                                59
                            ],
                            "name": "pieceIndex",
                            "start": [
                                1654,
                                49
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        1654,
                        64
                    ],
                    "returns": [
                        {
                            "name": "posX",
                            "type": "function.return",
                            "view": "number|nil"
                        },
                        {
                            "name": "posY",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "posZ",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "dirX",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "dirY",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "dirZ",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        1654,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetFeaturePiecePosDir(featureID: integer, pieceIndex: integer)\n  -> posX: number|nil\n  2. posY: number\n  3. posZ: number\n  4. dirX: number\n  5. dirY: number\n  6. dirZ: number"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1654,
                    37
                ],
                "name": "GetFeaturePiecePosDir",
                "start": [
                    1654,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetFeaturePiecePosDir",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1661,
                                49
                            ],
                            "name": "featureID",
                            "start": [
                                1661,
                                40
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                1661,
                                61
                            ],
                            "name": "pieceIndex",
                            "start": [
                                1661,
                                51
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        1661,
                        66
                    ],
                    "returns": [
                        {
                            "name": "posX",
                            "type": "function.return",
                            "view": "number|nil"
                        },
                        {
                            "name": "posY",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "posZ",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        1661,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetFeaturePiecePosition(featureID: integer, pieceIndex: integer)\n  -> posX: number|nil\n  2. posY: number\n  3. posZ: number"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1661,
                    39
                ],
                "name": "GetFeaturePiecePosition",
                "start": [
                    1661,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetFeaturePiecePosition",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1157,
                                44
                            ],
                            "name": "featureID",
                            "start": [
                                1157,
                                35
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        1157,
                        49
                    ],
                    "start": [
                        1157,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetFeaturePosition(featureID: integer)"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1157,
                    34
                ],
                "name": "GetFeaturePosition",
                "start": [
                    1157,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetFeaturePosition",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1150,
                                42
                            ],
                            "name": "featureID",
                            "start": [
                                1150,
                                33
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        1150,
                        47
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number?"
                        }
                    ],
                    "start": [
                        1150,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetFeatureRadius(featureID: integer)\n  -> number?"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1150,
                    32
                ],
                "name": "GetFeatureRadius",
                "start": [
                    1150,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetFeatureRadius",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1190,
                                45
                            ],
                            "name": "featureID",
                            "start": [
                                1190,
                                36
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        1190,
                        50
                    ],
                    "returns": [
                        {
                            "name": "metal",
                            "type": "function.return",
                            "view": "number?"
                        },
                        {
                            "name": "defMetal",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "energy",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "defEnergy",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "reclaimLeft",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "reclaimTime",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        1190,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetFeatureResources(featureID: integer)\n  -> metal: number?\n  2. defMetal: number\n  3. energy: number\n  4. defEnergy: number\n  5. reclaimLeft: number\n  6. reclaimTime: number"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1190,
                    35
                ],
                "name": "GetFeatureResources",
                "start": [
                    1190,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetFeatureResources",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1207,
                                45
                            ],
                            "name": "featureID",
                            "start": [
                                1207,
                                36
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        1207,
                        50
                    ],
                    "start": [
                        1207,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetFeatureResurrect(featureID: integer)"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1207,
                    35
                ],
                "name": "GetFeatureResurrect",
                "start": [
                    1207,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetFeatureResurrect",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*return* `index` — of the root piece",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1631,
                                45
                            ],
                            "name": "featureID",
                            "start": [
                                1631,
                                36
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "@*return* `index` — of the root piece",
                    "finish": [
                        1631,
                        50
                    ],
                    "returns": [
                        {
                            "desc": "of the root piece",
                            "name": "index",
                            "rawdesc": "of the root piece",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        1631,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetFeatureRootPiece(featureID: integer)\n  -> index: number"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1631,
                    35
                ],
                "name": "GetFeatureRootPiece",
                "start": [
                    1631,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetFeatureRootPiece",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*return* `pitch` — Rotation in X axis\n\n@*return* `yaw` — Rotation in Y axis\n\n@*return* `roll` — Rotation in Z axis",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1169,
                                44
                            ],
                            "name": "featureID",
                            "start": [
                                1169,
                                35
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "@*return* `pitch` — Rotation in X axis\n\n@*return* `yaw` — Rotation in Y axis\n\n@*return* `roll` — Rotation in Z axis",
                    "finish": [
                        1169,
                        49
                    ],
                    "returns": [
                        {
                            "desc": "Rotation in X axis",
                            "name": "pitch",
                            "rawdesc": "Rotation in X axis",
                            "type": "function.return",
                            "view": "number?"
                        },
                        {
                            "desc": "Rotation in Y axis",
                            "name": "yaw",
                            "rawdesc": "Rotation in Y axis",
                            "type": "function.return",
                            "view": "number?"
                        },
                        {
                            "desc": "Rotation in Z axis",
                            "name": "roll",
                            "rawdesc": "Rotation in Z axis",
                            "type": "function.return",
                            "view": "number?"
                        }
                    ],
                    "start": [
                        1169,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetFeatureRotation(featureID: integer)\n  -> pitch: number?\n  2. yaw: number?\n  3. roll: number?"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1169,
                    34
                ],
                "name": "GetFeatureRotation",
                "start": [
                    1169,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetFeatureRotation",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `ruleRef` — the rule index or name",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                117,
                                46
                            ],
                            "name": "featureID",
                            "start": [
                                117,
                                37
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "desc": "the rule index or name",
                            "finish": [
                                117,
                                55
                            ],
                            "name": "ruleRef",
                            "rawdesc": "the rule index or name",
                            "start": [
                                117,
                                48
                            ],
                            "type": "local",
                            "view": "string|number"
                        }
                    ],
                    "desc": "@*param* `ruleRef` — the rule index or name",
                    "finish": [
                        117,
                        60
                    ],
                    "returns": [
                        {
                            "name": "value",
                            "type": "function.return",
                            "view": "string|number|nil"
                        }
                    ],
                    "start": [
                        117,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetFeatureRulesParam(featureID: integer, ruleRef: string|number)\n  -> value: string|number|nil"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    117,
                    36
                ],
                "name": "GetFeatureRulesParam",
                "start": [
                    117,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetFeatureRulesParam",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*return* `rulesParams` — map with rules names as key and values as values",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                93,
                                47
                            ],
                            "name": "featureID",
                            "start": [
                                93,
                                38
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "@*return* `rulesParams` — map with rules names as key and values as values",
                    "finish": [
                        93,
                        52
                    ],
                    "returns": [
                        {
                            "desc": "map with rules names as key and values as values",
                            "name": "rulesParams",
                            "rawdesc": "map with rules names as key and values as values",
                            "type": "function.return",
                            "view": "RulesParams"
                        }
                    ],
                    "start": [
                        93,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetFeatureRulesParams(featureID: integer)\n  -> rulesParams: RulesParams"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    93,
                    37
                ],
                "name": "GetFeatureRulesParams",
                "start": [
                    93,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetFeatureRulesParams",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*return* `scaleX` — nil when unitID cannot be parsed\n\n@*return* `scaleY`\n\n@*return* `scaleZ`\n\n@*return* `offsetX`\n\n@*return* `offsetY`\n\n@*return* `offsetZ`\n\n@*return* `volumeType`\n\n@*return* `useContHitTest`\n\n@*return* `getPrimaryAxis`\n\n@*return* `ignoreHits`",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                310,
                                55
                            ],
                            "name": "featureID",
                            "start": [
                                310,
                                46
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "@*return* `scaleX` — nil when unitID cannot be parsed\n\n@*return* `scaleY`\n\n@*return* `scaleZ`\n\n@*return* `offsetX`\n\n@*return* `offsetY`\n\n@*return* `offsetZ`\n\n@*return* `volumeType`\n\n@*return* `useContHitTest`\n\n@*return* `getPrimaryAxis`\n\n@*return* `ignoreHits`",
                    "finish": [
                        310,
                        60
                    ],
                    "returns": [
                        {
                            "desc": "nil when unitID cannot be parsed",
                            "name": "scaleX",
                            "rawdesc": "nil when unitID cannot be parsed",
                            "type": "function.return",
                            "view": "number?"
                        },
                        {
                            "name": "scaleY",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "scaleZ",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "offsetX",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "offsetY",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "offsetZ",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "volumeType",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "useContHitTest",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "getPrimaryAxis",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "ignoreHits",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        310,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetFeatureSelectionVolumeData(featureID: integer)\n  -> scaleX: number?\n  2. scaleY: number\n  3. scaleZ: number\n  4. offsetX: number\n  5. offsetY: number\n  6. offsetZ: number\n  7. volumeType: number\n  8. useContHitTest: number\n  9. getPrimaryAxis: number\n 10. ignoreHits: boolean"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    310,
                    45
                ],
                "name": "GetFeatureSelectionVolumeData",
                "start": [
                    310,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetFeatureSelectionVolumeData",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `direction` — (Default: false) to subtract from, default featureID1 - featureID2",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1163,
                                47
                            ],
                            "name": "featureID1",
                            "start": [
                                1163,
                                37
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1163,
                                59
                            ],
                            "name": "featureID2",
                            "start": [
                                1163,
                                49
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "desc": "(Default: false) to subtract from, default featureID1 - featureID2",
                            "finish": [
                                1163,
                                70
                            ],
                            "name": "direction",
                            "rawdesc": "(Default: false) to subtract from, default featureID1 - featureID2",
                            "start": [
                                1163,
                                61
                            ],
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "@*param* `direction` — (Default: false) to subtract from, default featureID1 - featureID2",
                    "finish": [
                        1163,
                        75
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number?"
                        }
                    ],
                    "start": [
                        1163,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetFeatureSeparation(featureID1: number, featureID2: number, direction?: boolean)\n  -> number?"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1163,
                    36
                ],
                "name": "GetFeatureSeparation",
                "start": [
                    1163,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetFeatureSeparation",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1132,
                                40
                            ],
                            "name": "featureID",
                            "start": [
                                1132,
                                31
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        1132,
                        45
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number?"
                        }
                    ],
                    "start": [
                        1132,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetFeatureTeam(featureID: integer)\n  -> number?"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1132,
                    30
                ],
                "name": "GetFeatureTeam",
                "start": [
                    1132,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetFeatureTeam",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*return* `m11` — nil when featureID cannot be parsed\n\n@*return* `m12`\n\n@*return* `m13`\n\n@*return* `m14`\n\n@*return* `m21`\n\n@*return* `m22`\n\n@*return* `m23`\n\n@*return* `m24`\n\n@*return* `m31`\n\n@*return* `m32`\n\n@*return* `m33`\n\n@*return* `m34`\n\n@*return* `m41`\n\n@*return* `m42`\n\n@*return* `m43`\n\n@*return* `m44`",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                352,
                                51
                            ],
                            "name": "featureID",
                            "start": [
                                352,
                                42
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "@*return* `m11` — nil when featureID cannot be parsed\n\n@*return* `m12`\n\n@*return* `m13`\n\n@*return* `m14`\n\n@*return* `m21`\n\n@*return* `m22`\n\n@*return* `m23`\n\n@*return* `m24`\n\n@*return* `m31`\n\n@*return* `m32`\n\n@*return* `m33`\n\n@*return* `m34`\n\n@*return* `m41`\n\n@*return* `m42`\n\n@*return* `m43`\n\n@*return* `m44`",
                    "finish": [
                        352,
                        56
                    ],
                    "returns": [
                        {
                            "desc": "nil when featureID cannot be parsed",
                            "name": "m11",
                            "rawdesc": "nil when featureID cannot be parsed",
                            "type": "function.return",
                            "view": "number?"
                        },
                        {
                            "name": "m12",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "m13",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "m14",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "m21",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "m22",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "m23",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "m24",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "m31",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "m32",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "m33",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "m34",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "m41",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "m42",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "m43",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "m44",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        352,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetFeatureTransformMatrix(featureID: integer)\n  -> m11: number?\n  2. m12: number\n  3. m13: number\n  4. m14: number\n  5. m21: number\n  6. m22: number\n  7. m23: number\n  8. m24: number\n  9. m31: number\n 10. m32: number\n 11. m33: number\n 12. m34: number\n 13. m41: number\n 14. m42: number\n 15. m43: number\n 16. m44: number"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    352,
                    41
                ],
                "name": "GetFeatureTransformMatrix",
                "start": [
                    352,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetFeatureTransformMatrix",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1178,
                                44
                            ],
                            "name": "featureID",
                            "start": [
                                1178,
                                35
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        1178,
                        49
                    ],
                    "start": [
                        1178,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetFeatureVelocity(featureID: integer)"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1178,
                    34
                ],
                "name": "GetFeatureVelocity",
                "start": [
                    1178,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetFeatureVelocity",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                539,
                                39
                            ],
                            "name": "x",
                            "start": [
                                539,
                                38
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                539,
                                42
                            ],
                            "name": "z",
                            "start": [
                                539,
                                41
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                539,
                                50
                            ],
                            "name": "radius",
                            "start": [
                                539,
                                44
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                539,
                                62
                            ],
                            "name": "allegiance",
                            "start": [
                                539,
                                52
                            ],
                            "type": "local",
                            "view": "number?"
                        }
                    ],
                    "finish": [
                        539,
                        67
                    ],
                    "returns": [
                        {
                            "name": "featureIDs",
                            "type": "function.return",
                            "view": "number[]"
                        }
                    ],
                    "start": [
                        539,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetFeaturesInCylinder(x: number, z: number, radius: number, allegiance?: number)\n  -> featureIDs: number[]"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    539,
                    37
                ],
                "name": "GetFeaturesInCylinder",
                "start": [
                    539,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetFeaturesInCylinder",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                525,
                                43
                            ],
                            "name": "xmin",
                            "start": [
                                525,
                                39
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                525,
                                49
                            ],
                            "name": "zmin",
                            "start": [
                                525,
                                45
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                525,
                                55
                            ],
                            "name": "xmax",
                            "start": [
                                525,
                                51
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                525,
                                61
                            ],
                            "name": "zmax",
                            "start": [
                                525,
                                57
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "finish": [
                        525,
                        66
                    ],
                    "returns": [
                        {
                            "name": "featureIDs",
                            "type": "function.return",
                            "view": "number[]"
                        }
                    ],
                    "start": [
                        525,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetFeaturesInRectangle(xmin: number, zmin: number, xmax: number, zmax: number)\n  -> featureIDs: number[]"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    525,
                    38
                ],
                "name": "GetFeaturesInRectangle",
                "start": [
                    525,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetFeaturesInRectangle",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Get features inside a rectangle area on the map",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                446,
                                49
                            ],
                            "name": "left",
                            "start": [
                                446,
                                45
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                446,
                                54
                            ],
                            "name": "top",
                            "start": [
                                446,
                                51
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                446,
                                61
                            ],
                            "name": "right",
                            "start": [
                                446,
                                56
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                446,
                                69
                            ],
                            "name": "bottom",
                            "start": [
                                446,
                                63
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "Get features inside a rectangle area on the map",
                    "finish": [
                        446,
                        74
                    ],
                    "rawdesc": "Get features inside a rectangle area on the map",
                    "returns": [
                        {
                            "name": "featureIDs",
                            "type": "function.return",
                            "view": "number[]|nil"
                        }
                    ],
                    "start": [
                        446,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetFeaturesInScreenRectangle(left: number, top: number, right: number, bottom: number)\n  -> featureIDs: number[]|nil"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    446,
                    44
                ],
                "name": "GetFeaturesInScreenRectangle",
                "rawdesc": "Get features inside a rectangle area on the map",
                "start": [
                    446,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetFeaturesInScreenRectangle",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                532,
                                37
                            ],
                            "name": "x",
                            "start": [
                                532,
                                36
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                532,
                                40
                            ],
                            "name": "y",
                            "start": [
                                532,
                                39
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                532,
                                43
                            ],
                            "name": "z",
                            "start": [
                                532,
                                42
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                532,
                                51
                            ],
                            "name": "radius",
                            "start": [
                                532,
                                45
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "finish": [
                        532,
                        56
                    ],
                    "returns": [
                        {
                            "name": "featureIDs",
                            "type": "function.return",
                            "view": "number[]"
                        }
                    ],
                    "start": [
                        532,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetFeaturesInSphere(x: number, y: number, z: number, radius: number)\n  -> featureIDs: number[]"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    532,
                    35
                ],
                "name": "GetFeaturesInSphere",
                "start": [
                    532,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetFeaturesInSphere",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nIdeally, when running 30hz sim, and 60hz rendering, the draw frames should\nhave and offset of either 0.0 frames, or 0.5 frames.\n\nWhen draw frames are not integer multiples of sim frames, some interpolation\nhappens, and this timeoffset shows how far along it is.\n\n@*return* `offset` — of the current draw frame from the last sim frame, expressed in fractions of a frame",
                "extends": {
                    "args": [],
                    "desc": "\nIdeally, when running 30hz sim, and 60hz rendering, the draw frames should\nhave and offset of either 0.0 frames, or 0.5 frames.\n\nWhen draw frames are not integer multiples of sim frames, some interpolation\nhappens, and this timeoffset shows how far along it is.\n\n@*return* `offset` — of the current draw frame from the last sim frame, expressed in fractions of a frame",
                    "finish": [
                        199,
                        40
                    ],
                    "rawdesc": "\nIdeally, when running 30hz sim, and 60hz rendering, the draw frames should\nhave and offset of either 0.0 frames, or 0.5 frames.\n\nWhen draw frames are not integer multiples of sim frames, some interpolation\nhappens, and this timeoffset shows how far along it is.",
                    "returns": [
                        {
                            "desc": "of the current draw frame from the last sim frame, expressed in fractions of a frame",
                            "name": "offset",
                            "rawdesc": "of the current draw frame from the last sim frame, expressed in fractions of a frame",
                            "type": "function.return",
                            "view": "number?"
                        }
                    ],
                    "start": [
                        199,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetFrameTimeOffset()\n  -> offset: number?"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    199,
                    34
                ],
                "name": "GetFrameTimeOffset",
                "rawdesc": "\nIdeally, when running 30hz sim, and 60hz rendering, the draw frames should\nhave and offset of either 0.0 frames, or 0.5 frames.\n\nWhen draw frames are not integer multiples of sim frames, some interpolation\nhappens, and this timeoffset shows how far along it is.",
                "start": [
                    199,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetFrameTimeOffset",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Get a timer for the start of the frame\n\nThis should give better results for camera interpolations\n\n@*param* `lastFrameTime` — (Default: false) whether to use last frame time instead of last frame start",
                "extends": {
                    "args": [
                        {
                            "desc": "(Default: false) whether to use last frame time instead of last frame start",
                            "finish": [
                                80,
                                43
                            ],
                            "name": "lastFrameTime",
                            "rawdesc": "(Default: false) whether to use last frame time instead of last frame start",
                            "start": [
                                80,
                                30
                            ],
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "Get a timer for the start of the frame\n\nThis should give better results for camera interpolations\n\n@*param* `lastFrameTime` — (Default: false) whether to use last frame time instead of last frame start",
                    "finish": [
                        80,
                        48
                    ],
                    "rawdesc": "Get a timer for the start of the frame\n\nThis should give better results for camera interpolations",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": [
                        80,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetFrameTimer(lastFrameTime?: boolean)\n  -> integer"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    80,
                    29
                ],
                "name": "GetFrameTimer",
                "rawdesc": "Get a timer for the start of the frame\n\nThis should give better results for camera interpolations",
                "start": [
                    80,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetFrameTimer",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Returns the build queue\n\n@*return* `buildqueue` — indexed by unitDefID with count values",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1106,
                                40
                            ],
                            "name": "unitID",
                            "start": [
                                1106,
                                34
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Returns the build queue\n\n@*return* `buildqueue` — indexed by unitDefID with count values",
                    "finish": [
                        1106,
                        45
                    ],
                    "rawdesc": "Returns the build queue",
                    "returns": [
                        {
                            "desc": "indexed by unitDefID with count values",
                            "name": "buildqueue",
                            "rawdesc": "indexed by unitDefID with count values",
                            "type": "function.return",
                            "view": "table<number, number>|nil"
                        }
                    ],
                    "start": [
                        1106,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetFullBuildQueue(unitID: integer)\n  -> buildqueue: table<number, number>|nil"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1106,
                    33
                ],
                "name": "GetFullBuildQueue",
                "rawdesc": "Returns the build queue",
                "start": [
                    1106,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetFullBuildQueue",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [],
                    "finish": [
                        203,
                        35
                    ],
                    "returns": [
                        {
                            "name": "teamID",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        203,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetGaiaTeamID()\n  -> teamID: number"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    203,
                    29
                ],
                "name": "GetGaiaTeamID",
                "start": [
                    203,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetGaiaTeamID",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*return* `t1` — frameNum % dayFrames\n\n@*return* `t2` — frameNum / dayFrames",
                "extends": {
                    "args": [],
                    "desc": "@*return* `t1` — frameNum % dayFrames\n\n@*return* `t2` — frameNum / dayFrames",
                    "finish": [
                        51,
                        34
                    ],
                    "returns": [
                        {
                            "desc": "frameNum % dayFrames",
                            "name": "t1",
                            "rawdesc": "frameNum % dayFrames",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "desc": "frameNum / dayFrames",
                            "name": "t2",
                            "rawdesc": "frameNum / dayFrames",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        51,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetGameFrame()\n  -> t1: number\n  2. t2: number"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    51,
                    28
                ],
                "name": "GetGameFrame",
                "start": [
                    51,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetGameFrame",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [],
                    "finish": [
                        28,
                        33
                    ],
                    "returns": [
                        {
                            "name": "name",
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": [
                        28,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetGameName()\n  -> name: string"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    28,
                    27
                ],
                "name": "GetGameName",
                "start": [
                    28,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetGameName",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `ruleRef` — the rule index or name\n\n@*return* — |string value",
                "extends": {
                    "args": [
                        {
                            "desc": "the rule index or name",
                            "finish": [
                                97,
                                41
                            ],
                            "name": "ruleRef",
                            "rawdesc": "the rule index or name",
                            "start": [
                                97,
                                34
                            ],
                            "type": "local",
                            "view": "string|number"
                        }
                    ],
                    "desc": "@*param* `ruleRef` — the rule index or name\n\n@*return* — |string value",
                    "finish": [
                        97,
                        46
                    ],
                    "returns": [
                        {
                            "desc": "|string value",
                            "rawdesc": "|string value",
                            "type": "function.return",
                            "view": "number?"
                        }
                    ],
                    "start": [
                        97,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetGameRulesParam(ruleRef: string|number)\n  -> number?"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    97,
                    33
                ],
                "name": "GetGameRulesParam",
                "start": [
                    97,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetGameRulesParam",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*return* `rulesParams` — map with rules names as key and values as values",
                "extends": {
                    "args": [],
                    "desc": "@*return* `rulesParams` — map with rules names as key and values as values",
                    "finish": [
                        77,
                        40
                    ],
                    "returns": [
                        {
                            "desc": "map with rules names as key and values as values",
                            "name": "rulesParams",
                            "rawdesc": "map with rules names as key and values as values",
                            "type": "function.return",
                            "view": "RulesParams"
                        }
                    ],
                    "start": [
                        77,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetGameRulesParams()\n  -> rulesParams: RulesParams"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    77,
                    34
                ],
                "name": "GetGameRulesParams",
                "start": [
                    77,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetGameRulesParams",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [],
                    "finish": [
                        54,
                        36
                    ],
                    "returns": [
                        {
                            "name": "seconds",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        54,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetGameSeconds()\n  -> seconds: number"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    54,
                    30
                ],
                "name": "GetGameSeconds",
                "start": [
                    54,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetGameSeconds",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [],
                    "finish": [
                        660,
                        34
                    ],
                    "returns": [
                        {
                            "name": "wantedSpeedFactor",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "speedFactor",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "paused",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        660,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetGameSpeed()\n  -> wantedSpeedFactor: number\n  2. speedFactor: number\n  3. paused: boolean"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    660,
                    28
                ],
                "name": "GetGameSpeed",
                "start": [
                    660,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetGameSpeed",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `maxLatency` — (Default: 500) used for `isSimLagging` return parameter",
                "extends": {
                    "args": [
                        {
                            "desc": "(Default: 500) used for `isSimLagging` return parameter",
                            "finish": [
                                667,
                                39
                            ],
                            "name": "maxLatency",
                            "rawdesc": "(Default: 500) used for `isSimLagging` return parameter",
                            "start": [
                                667,
                                29
                            ],
                            "type": "local",
                            "view": "number?"
                        }
                    ],
                    "desc": "@*param* `maxLatency` — (Default: 500) used for `isSimLagging` return parameter",
                    "finish": [
                        667,
                        44
                    ],
                    "returns": [
                        {
                            "name": "doneLoading",
                            "type": "function.return",
                            "view": "boolean"
                        },
                        {
                            "name": "isSavedGame",
                            "type": "function.return",
                            "view": "boolean"
                        },
                        {
                            "name": "isClientPaused",
                            "type": "function.return",
                            "view": "boolean"
                        },
                        {
                            "name": "isSimLagging",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        667,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetGameState(maxLatency?: number)\n  -> doneLoading: boolean\n  2. isSavedGame: boolean\n  3. isClientPaused: boolean\n  4. isSimLagging: boolean"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    667,
                    28
                ],
                "name": "GetGameState",
                "start": [
                    667,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetGameState",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [],
                    "finish": [
                        709,
                        35
                    ],
                    "returns": [
                        {
                            "name": "gatherMode",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        709,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetGatherMode()\n  -> gatherMode: number"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    709,
                    29
                ],
                "name": "GetGatherMode",
                "start": [
                    709,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetGatherMode",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                34,
                                35
                            ],
                            "name": "teamID",
                            "start": [
                                34,
                                29
                            ],
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "finish": [
                        34,
                        40
                    ],
                    "returns": [
                        {
                            "name": "enabled",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        34,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetGlobalLos(teamID?: integer)\n  -> enabled: boolean"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    34,
                    28
                ],
                "name": "GetGlobalLos",
                "start": [
                    34,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetGlobalLos",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1408,
                                26
                            ],
                            "name": "x",
                            "start": [
                                1408,
                                25
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1408,
                                29
                            ],
                            "name": "z",
                            "start": [
                                1408,
                                28
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "finish": [
                        1408,
                        34
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        1408,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetGrass(x: number, z: number)\n  -> number"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1408,
                    24
                ],
                "name": "GetGrass",
                "start": [
                    1408,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetGrass",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [],
                    "finish": [
                        1386,
                        38
                    ],
                    "start": [
                        1386,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetGroundBlocked()"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1386,
                    32
                ],
                "name": "GetGroundBlocked",
                "start": [
                    1386,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetGroundBlocked",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*return* `alpha` — Between 0 and 1\n\n@*return* `alphaFalloff` — Between 0 and 1, per second",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                985,
                                43
                            ],
                            "name": "decalID",
                            "start": [
                                985,
                                36
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "@*return* `alpha` — Between 0 and 1\n\n@*return* `alphaFalloff` — Between 0 and 1, per second",
                    "finish": [
                        985,
                        48
                    ],
                    "returns": [
                        {
                            "desc": "Between 0 and 1",
                            "name": "alpha",
                            "rawdesc": "Between 0 and 1",
                            "type": "function.return",
                            "view": "number?"
                        },
                        {
                            "desc": "Between 0 and 1, per second",
                            "name": "alphaFalloff",
                            "rawdesc": "Between 0 and 1, per second",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        985,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetGroundDecalAlpha(decalID: integer)\n  -> alpha: number?\n  2. alphaFalloff: number"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    985,
                    35
                ],
                "name": "GetGroundDecalAlpha",
                "start": [
                    985,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetGroundDecalAlpha",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nMin can be not equal to max for \"gradient\" style decals, e.g. unit tracks",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1024,
                                51
                            ],
                            "name": "decalID",
                            "start": [
                                1024,
                                44
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "\nMin can be not equal to max for \"gradient\" style decals, e.g. unit tracks",
                    "finish": [
                        1024,
                        56
                    ],
                    "rawdesc": "\nMin can be not equal to max for \"gradient\" style decals, e.g. unit tracks",
                    "returns": [
                        {
                            "name": "creationFrameMin",
                            "type": "function.return",
                            "view": "number?"
                        },
                        {
                            "name": "creationFrameMax",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        1024,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetGroundDecalCreationFrame(decalID: integer)\n  -> creationFrameMin: number?\n  2. creationFrameMax: number"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    1024,
                    43
                ],
                "name": "GetGroundDecalCreationFrame",
                "rawdesc": "\nMin can be not equal to max for \"gradient\" style decals, e.g. unit tracks",
                "start": [
                    1024,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetGroundDecalCreationFrame",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                945,
                                47
                            ],
                            "name": "decalID",
                            "start": [
                                945,
                                40
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        945,
                        52
                    ],
                    "returns": [
                        {
                            "name": "posX",
                            "type": "function.return",
                            "view": "number?"
                        },
                        {
                            "name": "posZ",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        945,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetGroundDecalMiddlePos(decalID: integer)\n  -> posX: number?\n  2. posZ: number"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    945,
                    39
                ],
                "name": "GetGroundDecalMiddlePos",
                "start": [
                    945,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetGroundDecalMiddlePos",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturns less important parameters of a ground decal",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1016,
                                42
                            ],
                            "name": "decalID",
                            "start": [
                                1016,
                                35
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "\nReturns less important parameters of a ground decal",
                    "finish": [
                        1016,
                        47
                    ],
                    "rawdesc": "\nReturns less important parameters of a ground decal",
                    "returns": [
                        {
                            "name": "dotElimExp",
                            "type": "function.return",
                            "view": "number?"
                        },
                        {
                            "name": "refHeight",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "minHeight",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "maxHeight",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "forceHeightMode",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        1016,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetGroundDecalMisc(decalID: integer)\n  -> dotElimExp: number?\n  2. refHeight: number\n  3. minHeight: number\n  4. maxHeight: number\n  5. forceHeightMode: number"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    1016,
                    34
                ],
                "name": "GetGroundDecalMisc",
                "rawdesc": "\nReturns less important parameters of a ground decal",
                "start": [
                    1016,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetGroundDecalMisc",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nIf all three equal 0, the decal follows the normals of ground at midpoint",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                994,
                                44
                            ],
                            "name": "decalID",
                            "start": [
                                994,
                                37
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "\nIf all three equal 0, the decal follows the normals of ground at midpoint",
                    "finish": [
                        994,
                        49
                    ],
                    "rawdesc": "\nIf all three equal 0, the decal follows the normals of ground at midpoint",
                    "returns": [
                        {
                            "name": "normal.x",
                            "type": "function.return",
                            "view": "number?"
                        },
                        {
                            "name": "normal.y",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "normal.z",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        994,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetGroundDecalNormal(decalID: integer)\n  -> normal.x: number?\n  2. normal.y: number\n  3. normal.z: number"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    994,
                    36
                ],
                "name": "GetGroundDecalNormal",
                "rawdesc": "\nIf all three equal 0, the decal follows the normals of ground at midpoint",
                "start": [
                    994,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetGroundDecalNormal",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*return* `unitID` — |number featureID(+MAX_UNITS)",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1028,
                                43
                            ],
                            "name": "decalID",
                            "start": [
                                1028,
                                36
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "@*return* `unitID` — |number featureID(+MAX_UNITS)",
                    "finish": [
                        1028,
                        48
                    ],
                    "returns": [
                        {
                            "desc": "|number featureID(+MAX_UNITS)",
                            "name": "unitID",
                            "rawdesc": "|number featureID(+MAX_UNITS)",
                            "type": "function.return",
                            "view": "number?"
                        }
                    ],
                    "start": [
                        1028,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetGroundDecalOwner(decalID: integer)\n  -> unitID: number?"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    1028,
                    35
                ],
                "name": "GetGroundDecalOwner",
                "start": [
                    1028,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetGroundDecalOwner",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*return* `rotation` — in radians",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                966,
                                46
                            ],
                            "name": "decalID",
                            "start": [
                                966,
                                39
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "@*return* `rotation` — in radians",
                    "finish": [
                        966,
                        51
                    ],
                    "returns": [
                        {
                            "desc": "in radians",
                            "name": "rotation",
                            "rawdesc": "in radians",
                            "type": "function.return",
                            "view": "number?"
                        }
                    ],
                    "start": [
                        966,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetGroundDecalRotation(decalID: integer)\n  -> rotation: number?"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    966,
                    38
                ],
                "name": "GetGroundDecalRotation",
                "start": [
                    966,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetGroundDecalRotation",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                962,
                                51
                            ],
                            "name": "decalID",
                            "start": [
                                962,
                                44
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        962,
                        56
                    ],
                    "returns": [
                        {
                            "name": "sizeX",
                            "type": "function.return",
                            "view": "number?"
                        },
                        {
                            "name": "sizeY",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "projCubeHeight",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        962,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetGroundDecalSizeAndHeight(decalID: integer)\n  -> sizeX: number?\n  2. sizeY: number\n  3. projCubeHeight: number"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    962,
                    43
                ],
                "name": "GetGroundDecalSizeAndHeight",
                "start": [
                    962,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetGroundDecalSizeAndHeight",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `isMainTex` — (Default: true) If false, it gets the normals/glow map",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                971,
                                45
                            ],
                            "name": "decalID",
                            "start": [
                                971,
                                38
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "desc": "(Default: true) If false, it gets the normals/glow map",
                            "finish": [
                                971,
                                56
                            ],
                            "name": "isMainTex",
                            "rawdesc": "(Default: true) If false, it gets the normals/glow map",
                            "start": [
                                971,
                                47
                            ],
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "@*param* `isMainTex` — (Default: true) If false, it gets the normals/glow map",
                    "finish": [
                        971,
                        61
                    ],
                    "returns": [
                        {
                            "name": "texture",
                            "type": "function.return",
                            "view": "string|nil"
                        }
                    ],
                    "start": [
                        971,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetGroundDecalTexture(decalID: integer, isMainTex?: boolean)\n  -> texture: string|nil"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    971,
                    37
                ],
                "name": "GetGroundDecalTexture",
                "start": [
                    971,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetGroundDecalTexture",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nGets the tint of the ground decal.\nA color of (0.5, 0.5, 0.5, 0.5) is effectively no tint",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1005,
                                42
                            ],
                            "name": "decalID",
                            "start": [
                                1005,
                                35
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "\nGets the tint of the ground decal.\nA color of (0.5, 0.5, 0.5, 0.5) is effectively no tint",
                    "finish": [
                        1005,
                        47
                    ],
                    "rawdesc": "\nGets the tint of the ground decal.\nA color of (0.5, 0.5, 0.5, 0.5) is effectively no tint",
                    "returns": [
                        {
                            "name": "tintR",
                            "type": "function.return",
                            "view": "number?"
                        },
                        {
                            "name": "tintG",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "tintB",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "tintA",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        1005,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetGroundDecalTint(decalID: integer)\n  -> tintR: number?\n  2. tintG: number\n  3. tintB: number\n  4. tintA: number"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    1005,
                    34
                ],
                "name": "GetGroundDecalTint",
                "rawdesc": "\nGets the tint of the ground decal.\nA color of (0.5, 0.5, 0.5, 0.5) is effectively no tint",
                "start": [
                    1005,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetGroundDecalTint",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*return* `type` — explosion",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1032,
                                42
                            ],
                            "name": "decalID",
                            "start": [
                                1032,
                                35
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "@*return* `type` — explosion",
                    "finish": [
                        1032,
                        47
                    ],
                    "returns": [
                        {
                            "desc": "explosion",
                            "name": "type",
                            "rawdesc": "explosion",
                            "type": "function.return",
                            "view": "string|nil"
                        }
                    ],
                    "start": [
                        1032,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetGroundDecalType(decalID: integer)\n  -> type: string|nil"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    1032,
                    34
                ],
                "name": "GetGroundDecalType",
                "start": [
                    1032,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetGroundDecalType",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [],
                    "finish": [
                        1392,
                        39
                    ],
                    "returns": [
                        {
                            "name": "initMinHeight",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "initMaxHeight",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "currMinHeight",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "currMaxHeight",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        1392,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetGroundExtremes()\n  -> initMinHeight: number\n  2. initMaxHeight: number\n  3. currMinHeight: number\n  4. currMaxHeight: number"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1392,
                    33
                ],
                "name": "GetGroundExtremes",
                "start": [
                    1392,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetGroundExtremes",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Get ground height\n\nOn sea, this returns the negative depth of the seafloor",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1332,
                                33
                            ],
                            "name": "x",
                            "start": [
                                1332,
                                32
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1332,
                                36
                            ],
                            "name": "z",
                            "start": [
                                1332,
                                35
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "Get ground height\n\nOn sea, this returns the negative depth of the seafloor",
                    "finish": [
                        1332,
                        41
                    ],
                    "rawdesc": "Get ground height\n\nOn sea, this returns the negative depth of the seafloor",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        1332,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetGroundHeight(x: number, z: number)\n  -> number"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1332,
                    31
                ],
                "name": "GetGroundHeight",
                "rawdesc": "Get ground height\n\nOn sea, this returns the negative depth of the seafloor",
                "start": [
                    1332,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetGroundHeight",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1384,
                                31
                            ],
                            "name": "x",
                            "start": [
                                1384,
                                30
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1384,
                                34
                            ],
                            "name": "z",
                            "start": [
                                1384,
                                33
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "finish": [
                        1384,
                        39
                    ],
                    "returns": [
                        {
                            "name": "ix",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "iz",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "terrainTypeIndex",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "name",
                            "type": "function.return",
                            "view": "string"
                        },
                        {
                            "name": "metalExtraction",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "hardness",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "tankSpeed",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "kbotSpeed",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "hoverSpeed",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "shipSpeed",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "receiveTracks",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        1384,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetGroundInfo(x: number, z: number)\n  -> ix: number\n  2. iz: number\n  3. terrainTypeIndex: number\n  4. name: string\n  5. metalExtraction: number\n  6. hardness: number\n  7. tankSpeed: number\n  8. kbotSpeed: number\n  9. hoverSpeed: number\n 10. shipSpeed: number\n 11. receiveTracks: boolean"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1384,
                    29
                ],
                "name": "GetGroundInfo",
                "start": [
                    1384,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetGroundInfo",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `smoothed` — (Default: false) raw or smoothed center normal",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1369,
                                33
                            ],
                            "name": "x",
                            "start": [
                                1369,
                                32
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1369,
                                36
                            ],
                            "name": "z",
                            "start": [
                                1369,
                                35
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "desc": "(Default: false) raw or smoothed center normal",
                            "finish": [
                                1369,
                                46
                            ],
                            "name": "smoothed",
                            "rawdesc": "(Default: false) raw or smoothed center normal",
                            "start": [
                                1369,
                                38
                            ],
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "@*param* `smoothed` — (Default: false) raw or smoothed center normal",
                    "finish": [
                        1369,
                        51
                    ],
                    "returns": [
                        {
                            "name": "normalX",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "normalY",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "normalZ",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "slope",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        1369,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetGroundNormal(x: number, z: number, smoothed?: boolean)\n  -> normalX: number\n  2. normalY: number\n  3. normalZ: number\n  4. slope: number"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1369,
                    31
                ],
                "name": "GetGroundNormal",
                "start": [
                    1369,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetGroundNormal",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Get ground height as it was at game start\n\nReturns the original height before the ground got deformed",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1360,
                                37
                            ],
                            "name": "x",
                            "start": [
                                1360,
                                36
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1360,
                                40
                            ],
                            "name": "z",
                            "start": [
                                1360,
                                39
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "Get ground height as it was at game start\n\nReturns the original height before the ground got deformed",
                    "finish": [
                        1360,
                        45
                    ],
                    "rawdesc": "Get ground height as it was at game start\n\nReturns the original height before the ground got deformed",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        1360,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetGroundOrigHeight(x: number, z: number)\n  -> number"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1360,
                    35
                ],
                "name": "GetGroundOrigHeight",
                "rawdesc": "Get ground height as it was at game start\n\nReturns the original height before the ground got deformed",
                "start": [
                    1360,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetGroundOrigHeight",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*return* `where` — keys are groupIDs and values are counts",
                "extends": {
                    "args": [],
                    "desc": "@*return* `where` — keys are groupIDs and values are counts",
                    "finish": [
                        832,
                        34
                    ],
                    "returns": [
                        {
                            "desc": "keys are groupIDs and values are counts",
                            "name": "where",
                            "rawdesc": "keys are groupIDs and values are counts",
                            "type": "function.return",
                            "view": "table<number, number>|nil"
                        }
                    ],
                    "start": [
                        832,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetGroupList()\n  -> where: table<number, number>|nil"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    832,
                    28
                ],
                "name": "GetGroupList",
                "start": [
                    832,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetGroupList",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                843,
                                37
                            ],
                            "name": "groupID",
                            "start": [
                                843,
                                30
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        843,
                        42
                    ],
                    "returns": [
                        {
                            "name": "unitIDs",
                            "type": "function.return",
                            "view": "number[]|nil"
                        }
                    ],
                    "start": [
                        843,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetGroupUnits(groupID: integer)\n  -> unitIDs: number[]|nil"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    843,
                    29
                ],
                "name": "GetGroupUnits",
                "start": [
                    843,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetGroupUnits",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                855,
                                42
                            ],
                            "name": "groupID",
                            "start": [
                                855,
                                35
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        855,
                        47
                    ],
                    "returns": [
                        {
                            "name": "groupSize",
                            "type": "function.return",
                            "view": "number?"
                        }
                    ],
                    "start": [
                        855,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetGroupUnitsCount(groupID: integer)\n  -> groupSize: number?"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    855,
                    34
                ],
                "name": "GetGroupUnitsCount",
                "start": [
                    855,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetGroupUnitsCount",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*return* `where` — keys are unitDefIDs and values are counts",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                851,
                                43
                            ],
                            "name": "groupID",
                            "start": [
                                851,
                                36
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "@*return* `where` — keys are unitDefIDs and values are counts",
                    "finish": [
                        851,
                        48
                    ],
                    "returns": [
                        {
                            "desc": "keys are unitDefIDs and values are counts",
                            "name": "where",
                            "rawdesc": "keys are unitDefIDs and values are counts",
                            "type": "function.return",
                            "view": "table<number, number>|nil"
                        }
                    ],
                    "start": [
                        851,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetGroupUnitsCounts(groupID: integer)\n  -> where: table<number, number>|nil"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    851,
                    35
                ],
                "name": "GetGroupUnitsCounts",
                "start": [
                    851,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetGroupUnitsCounts",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*return* `where` — keys are unitDefIDs and values are unitIDs",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                847,
                                43
                            ],
                            "name": "groupID",
                            "start": [
                                847,
                                36
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "@*return* `where` — keys are unitDefIDs and values are unitIDs",
                    "finish": [
                        847,
                        48
                    ],
                    "returns": [
                        {
                            "desc": "keys are unitDefIDs and values are unitIDs",
                            "name": "where",
                            "rawdesc": "keys are unitDefIDs and values are unitIDs",
                            "type": "function.return",
                            "view": "table<number, number[]>|nil"
                        }
                    ],
                    "start": [
                        847,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetGroupUnitsSorted(groupID: integer)\n  -> where: table<number, number[]>|nil"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    847,
                    35
                ],
                "name": "GetGroupUnitsSorted",
                "start": [
                    847,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetGroupUnitsSorted",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                167,
                                43
                            ],
                            "name": "facing",
                            "start": [
                                167,
                                37
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "finish": [
                        167,
                        48
                    ],
                    "returns": [
                        {
                            "name": "heading",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        167,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetHeadingFromFacing(facing: number)\n  -> heading: number"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    167,
                    36
                ],
                "name": "GetHeadingFromFacing",
                "start": [
                    167,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetHeadingFromFacing",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                154,
                                38
                            ],
                            "name": "x",
                            "start": [
                                154,
                                37
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                154,
                                41
                            ],
                            "name": "z",
                            "start": [
                                154,
                                40
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "finish": [
                        154,
                        46
                    ],
                    "returns": [
                        {
                            "name": "heading",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        154,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetHeadingFromVector(x: number, z: number)\n  -> heading: number"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    154,
                    36
                ],
                "name": "GetHeadingFromVector",
                "start": [
                    154,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetHeadingFromVector",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [],
                    "finish": [
                        792,
                        39
                    ],
                    "returns": [
                        {
                            "name": "queueKey",
                            "type": "function.return",
                            "view": "number?"
                        }
                    ],
                    "start": [
                        792,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetInvertQueueKey()\n  -> queueKey: number?"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    792,
                    33
                ],
                "name": "GetInvertQueueKey",
                "start": [
                    792,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetInvertQueueKey",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `keySet1` — filters keybindings bound to this keyset\n\n@*param* `keySet2` — OR bound to this keyset",
                "extends": {
                    "args": [
                        {
                            "desc": "filters keybindings bound to this keyset",
                            "finish": [
                                821,
                                38
                            ],
                            "name": "keySet1",
                            "rawdesc": "filters keybindings bound to this keyset",
                            "start": [
                                821,
                                31
                            ],
                            "type": "local",
                            "view": "string?"
                        },
                        {
                            "desc": "OR bound to this keyset",
                            "finish": [
                                821,
                                47
                            ],
                            "name": "keySet2",
                            "rawdesc": "OR bound to this keyset",
                            "start": [
                                821,
                                40
                            ],
                            "type": "local",
                            "view": "string?"
                        }
                    ],
                    "desc": "@*param* `keySet1` — filters keybindings bound to this keyset\n\n@*param* `keySet2` — OR bound to this keyset",
                    "finish": [
                        821,
                        52
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "KeyBinding[]"
                        }
                    ],
                    "start": [
                        821,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetKeyBindings(keySet1?: string, keySet2?: string)\n  -> KeyBinding[]"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    821,
                    30
                ],
                "name": "GetKeyBindings",
                "start": [
                    821,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetKeyBindings",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                796,
                                33
                            ],
                            "name": "keySym",
                            "start": [
                                796,
                                27
                            ],
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "finish": [
                        796,
                        38
                    ],
                    "returns": [
                        {
                            "name": "keyCode",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        796,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetKeyCode(keySym: string)\n  -> keyCode: number"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    796,
                    26
                ],
                "name": "GetKeyCode",
                "start": [
                    796,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetKeyCode",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                773,
                                47
                            ],
                            "name": "scanSymbol",
                            "start": [
                                773,
                                37
                            ],
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "finish": [
                        773,
                        52
                    ],
                    "returns": [
                        {
                            "name": "keyName",
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": [
                        773,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetKeyFromScanSymbol(scanSymbol: string)\n  -> keyName: string"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    773,
                    36
                ],
                "name": "GetKeyFromScanSymbol",
                "start": [
                    773,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetKeyFromScanSymbol",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                777,
                                35
                            ],
                            "name": "keyCode",
                            "start": [
                                777,
                                28
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "finish": [
                        777,
                        40
                    ],
                    "returns": [
                        {
                            "name": "pressed",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        777,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetKeyState(keyCode: number)\n  -> pressed: boolean"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    777,
                    27
                ],
                "name": "GetKeyState",
                "start": [
                    777,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetKeyState",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*return* `keyCodeName`\n\n@*return* `keyCodeDefaultName` — name when there are not aliases",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                801,
                                36
                            ],
                            "name": "keyCode",
                            "start": [
                                801,
                                29
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "@*return* `keyCodeName`\n\n@*return* `keyCodeDefaultName` — name when there are not aliases",
                    "finish": [
                        801,
                        41
                    ],
                    "returns": [
                        {
                            "name": "keyCodeName",
                            "type": "function.return",
                            "view": "string"
                        },
                        {
                            "desc": "name when there are not aliases",
                            "name": "keyCodeDefaultName",
                            "rawdesc": "name when there are not aliases",
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": [
                        801,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetKeySymbol(keyCode: number)\n  -> keyCodeName: string\n  2. keyCodeDefaultName: string"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    801,
                    28
                ],
                "name": "GetKeySymbol",
                "start": [
                    801,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetKeySymbol",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*return* `message` — positions",
                "extends": {
                    "args": [],
                    "desc": "@*return* `message` — positions",
                    "finish": [
                        758,
                        45
                    ],
                    "returns": [
                        {
                            "desc": "positions",
                            "name": "message",
                            "rawdesc": "positions",
                            "type": "function.return",
                            "view": "xyz[]"
                        }
                    ],
                    "start": [
                        758,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetLastMessagePositions()\n  -> message: xyz[]"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    758,
                    39
                ],
                "name": "GetLastMessagePositions",
                "start": [
                    758,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetLastMessagePositions",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [],
                    "finish": [
                        208,
                        42
                    ],
                    "returns": [
                        {
                            "name": "lastUpdateSeconds",
                            "type": "function.return",
                            "view": "number?"
                        }
                    ],
                    "start": [
                        208,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetLastUpdateSeconds()\n  -> lastUpdateSeconds: number?"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    208,
                    36
                ],
                "name": "GetLastUpdateSeconds",
                "start": [
                    208,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetLastUpdateSeconds",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [],
                    "finish": [
                        455,
                        40
                    ],
                    "returns": [
                        {
                            "name": "allyTeamID",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        455,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetLocalAllyTeamID()\n  -> allyTeamID: number"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    455,
                    34
                ],
                "name": "GetLocalAllyTeamID",
                "start": [
                    455,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetLocalAllyTeamID",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [],
                    "finish": [
                        449,
                        38
                    ],
                    "returns": [
                        {
                            "name": "playerID",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        449,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetLocalPlayerID()\n  -> playerID: number"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    449,
                    32
                ],
                "name": "GetLocalPlayerID",
                "start": [
                    449,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetLocalPlayerID",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [],
                    "finish": [
                        452,
                        36
                    ],
                    "returns": [
                        {
                            "name": "teamID",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        452,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetLocalTeamID()\n  -> teamID: number"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    452,
                    30
                ],
                "name": "GetLocalTeamID",
                "start": [
                    452,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetLocalTeamID",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*return* `sections` — where keys are names and loglevel are values. E.g. `{ \"KeyBindings\" = LOG.INFO, \"Font\" = LOG.INFO, \"Sound\" = LOG.WARNING, ... }`",
                "extends": {
                    "args": [],
                    "desc": "@*return* `sections` — where keys are names and loglevel are values. E.g. `{ \"KeyBindings\" = LOG.INFO, \"Font\" = LOG.INFO, \"Sound\" = LOG.WARNING, ... }`",
                    "finish": [
                        933,
                        36
                    ],
                    "returns": [
                        {
                            "desc": "where keys are names and loglevel are values. E.g. `{ \"KeyBindings\" = LOG.INFO, \"Font\" = LOG.INFO, \"Sound\" = LOG.WARNING, ... }`",
                            "name": "sections",
                            "rawdesc": "where keys are names and loglevel are values. E.g. `{ \"KeyBindings\" = LOG.INFO, \"Font\" = LOG.INFO, \"Sound\" = LOG.WARNING, ... }`",
                            "type": "function.return",
                            "view": "table<string, number>"
                        }
                    ],
                    "start": [
                        933,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetLogSections()\n  -> sections: table<string, number>"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    933,
                    30
                ],
                "name": "GetLogSections",
                "start": [
                    933,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetLogSections",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [],
                    "finish": [
                        520,
                        38
                    ],
                    "returns": [
                        {
                            "name": "always",
                            "type": "function.return",
                            "view": "rgb"
                        },
                        {
                            "name": "LOS",
                            "type": "function.return",
                            "view": "rgb"
                        },
                        {
                            "name": "radar",
                            "type": "function.return",
                            "view": "rgb"
                        },
                        {
                            "name": "jam",
                            "type": "function.return",
                            "view": "rgb"
                        },
                        {
                            "name": "radar2",
                            "type": "function.return",
                            "view": "rgb"
                        }
                    ],
                    "start": [
                        520,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetLosViewColors()\n  -> always: rgb\n  2. LOS: rgb\n  3. radar: rgb\n  4. jam: rgb\n  5. radar2: rgb"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    520,
                    32
                ],
                "name": "GetLosViewColors",
                "start": [
                    520,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetLosViewColors",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*return* `luaHandleAllocedMem` — in kilobytes\n\n@*return* `luaHandleNumAllocs` — divided by 1000\n\n@*return* `luaGlobalAllocedMem` — in kilobytes\n\n@*return* `luaGlobalNumAllocs` — divided by 1000\n\n@*return* `luaUnsyncedGlobalAllocedMem` — in kilobytes\n\n@*return* `luaUnsyncedGlobalNumAllocs` — divided by 1000\n\n@*return* `luaSyncedGlobalAllocedMem` — in kilobytes\n\n@*return* `luaSyncedGlobalNumAllocs` — divided by 1000",
                "extends": {
                    "args": [],
                    "desc": "@*return* `luaHandleAllocedMem` — in kilobytes\n\n@*return* `luaHandleNumAllocs` — divided by 1000\n\n@*return* `luaGlobalAllocedMem` — in kilobytes\n\n@*return* `luaGlobalNumAllocs` — divided by 1000\n\n@*return* `luaUnsyncedGlobalAllocedMem` — in kilobytes\n\n@*return* `luaUnsyncedGlobalNumAllocs` — divided by 1000\n\n@*return* `luaSyncedGlobalAllocedMem` — in kilobytes\n\n@*return* `luaSyncedGlobalNumAllocs` — divided by 1000",
                    "finish": [
                        58,
                        36
                    ],
                    "returns": [
                        {
                            "desc": "in kilobytes",
                            "name": "luaHandleAllocedMem",
                            "rawdesc": "in kilobytes",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "desc": "divided by 1000",
                            "name": "luaHandleNumAllocs",
                            "rawdesc": "divided by 1000",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "desc": "in kilobytes",
                            "name": "luaGlobalAllocedMem",
                            "rawdesc": "in kilobytes",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "desc": "divided by 1000",
                            "name": "luaGlobalNumAllocs",
                            "rawdesc": "divided by 1000",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "desc": "in kilobytes",
                            "name": "luaUnsyncedGlobalAllocedMem",
                            "rawdesc": "in kilobytes",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "desc": "divided by 1000",
                            "name": "luaUnsyncedGlobalNumAllocs",
                            "rawdesc": "divided by 1000",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "desc": "in kilobytes",
                            "name": "luaSyncedGlobalAllocedMem",
                            "rawdesc": "in kilobytes",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "desc": "divided by 1000",
                            "name": "luaSyncedGlobalNumAllocs",
                            "rawdesc": "divided by 1000",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        58,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetLuaMemUsage()\n  -> luaHandleAllocedMem: number\n  2. luaHandleNumAllocs: number\n  3. luaGlobalAllocedMem: number\n  4. luaGlobalNumAllocs: number\n  5. luaUnsyncedGlobalAllocedMem: number\n  6. luaUnsyncedGlobalNumAllocs: number\n  7. luaSyncedGlobalAllocedMem: number\n  8. luaSyncedGlobalNumAllocs: number"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    58,
                    30
                ],
                "name": "GetLuaMemUsage",
                "start": [
                    58,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetLuaMemUsage",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "```lua\nreturn #1:\n    | \"normal\"\n    | \"height\"\n    | \"metal\"\n    | \"pathTraversability\"\n    | \"los\"\n```",
                "extends": {
                    "args": [],
                    "desc": "```lua\nreturn #1:\n    | \"normal\"\n    | \"height\"\n    | \"metal\"\n    | \"pathTraversability\"\n    | \"los\"\n```",
                    "finish": [
                        505,
                        36
                    ],
                    "rawdesc": "```lua\nreturn #1:\n    | \"normal\"\n    | \"height\"\n    | \"metal\"\n    | \"pathTraversability\"\n    | \"los\"\n```",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "\"height\"|\"los\"|\"metal\"|\"normal\"|\"pathTraversability\""
                        }
                    ],
                    "start": [
                        505,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetMapDrawMode()\n  -> \"height\"|\"los\"|\"metal\"|\"normal\"|\"pathTraversability\""
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    505,
                    30
                ],
                "name": "GetMapDrawMode",
                "rawdesc": "```lua\nreturn #1:\n    | \"normal\"\n    | \"height\"\n    | \"metal\"\n    | \"pathTraversability\"\n    | \"los\"\n```",
                "start": [
                    505,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetMapDrawMode",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*return* `value` — Value of `modOption`.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                135,
                                38
                            ],
                            "name": "mapOption",
                            "start": [
                                135,
                                29
                            ],
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "desc": "@*return* `value` — Value of `modOption`.",
                    "finish": [
                        135,
                        43
                    ],
                    "returns": [
                        {
                            "desc": "Value of `modOption`.",
                            "name": "value",
                            "rawdesc": "Value of `modOption`.",
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": [
                        135,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetMapOption(mapOption: string)\n  -> value: string"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    135,
                    28
                ],
                "name": "GetMapOption",
                "start": [
                    135,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetMapOption",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*return* `mapOptions` — Table with options names as keys and values as values.",
                "extends": {
                    "args": [],
                    "desc": "@*return* `mapOptions` — Table with options names as keys and values as values.",
                    "finish": [
                        138,
                        35
                    ],
                    "returns": [
                        {
                            "desc": "Table with options names as keys and values as values.",
                            "name": "mapOptions",
                            "rawdesc": "Table with options names as keys and values as values.",
                            "type": "function.return",
                            "view": "table<string, string>"
                        }
                    ],
                    "start": [
                        138,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetMapOptions()\n  -> mapOptions: table<string, string>"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    138,
                    29
                ],
                "name": "GetMapOptions",
                "start": [
                    138,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetMapOptions",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `lodMax` — (Default: lodMin)",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                513,
                                46
                            ],
                            "name": "texSquareX",
                            "start": [
                                513,
                                36
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                513,
                                58
                            ],
                            "name": "texSquareY",
                            "start": [
                                513,
                                48
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                513,
                                66
                            ],
                            "name": "lodMin",
                            "start": [
                                513,
                                60
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                513,
                                78
                            ],
                            "name": "luaTexName",
                            "start": [
                                513,
                                68
                            ],
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "desc": "(Default: lodMin)",
                            "finish": [
                                513,
                                86
                            ],
                            "name": "lodMax",
                            "rawdesc": "(Default: lodMin)",
                            "start": [
                                513,
                                80
                            ],
                            "type": "local",
                            "view": "number?"
                        }
                    ],
                    "desc": "@*param* `lodMax` — (Default: lodMin)",
                    "finish": [
                        513,
                        91
                    ],
                    "returns": [
                        {
                            "name": "success",
                            "type": "function.return",
                            "view": "boolean?"
                        }
                    ],
                    "start": [
                        513,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetMapSquareTexture(texSquareX: number, texSquareY: number, lodMin: number, luaTexName: string, lodMax?: number)\n  -> success: boolean?"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    513,
                    35
                ],
                "name": "GetMapSquareTexture",
                "start": [
                    513,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetMapSquareTexture",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*return* `array` — of positions indexed by teamID",
                "extends": {
                    "args": [],
                    "desc": "@*return* `array` — of positions indexed by teamID",
                    "finish": [
                        219,
                        42
                    ],
                    "returns": [
                        {
                            "desc": "of positions indexed by teamID",
                            "name": "array",
                            "rawdesc": "of positions indexed by teamID",
                            "type": "function.return",
                            "view": "xyz[]"
                        }
                    ],
                    "start": [
                        219,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetMapStartPositions()\n  -> array: xyz[]"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    219,
                    36
                ],
                "name": "GetMapStartPositions",
                "start": [
                    219,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetMapStartPositions",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*return* `name` — name .. version from Modinfo.lua. E.g. \"Spring: 1944 test-5640-ac2d15b\".",
                "extends": {
                    "args": [],
                    "desc": "@*return* `name` — name .. version from Modinfo.lua. E.g. \"Spring: 1944 test-5640-ac2d15b\".",
                    "finish": [
                        31,
                        33
                    ],
                    "returns": [
                        {
                            "desc": "name .. version from Modinfo.lua. E.g. \"Spring: 1944 test-5640-ac2d15b\".",
                            "name": "name",
                            "rawdesc": "name .. version from Modinfo.lua. E.g. \"Spring: 1944 test-5640-ac2d15b\".",
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": [
                        31,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetMenuName()\n  -> name: string"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    31,
                    27
                ],
                "name": "GetMenuName",
                "start": [
                    31,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetMenuName",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*return* `position` — \"left\"|\"right\" when dual screen is enabled, false when not\n\n```lua\nposition:\n    | false\n```",
                "extends": {
                    "args": [],
                    "desc": "@*return* `position` — \"left\"|\"right\" when dual screen is enabled, false when not\n\n```lua\nposition:\n    | false\n```",
                    "finish": [
                        166,
                        42
                    ],
                    "rawdesc": "```lua\nposition:\n    | false\n```",
                    "returns": [
                        {
                            "desc": "\"left\"|\"right\" when dual screen is enabled, false when not",
                            "name": "position",
                            "rawdesc": "\"left\"|\"right\" when dual screen is enabled, false when not",
                            "type": "function.return",
                            "view": "string|false"
                        }
                    ],
                    "start": [
                        166,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetMiniMapDualScreen()\n  -> position: string|false"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    166,
                    36
                ],
                "name": "GetMiniMapDualScreen",
                "rawdesc": "```lua\nposition:\n    | false\n```",
                "start": [
                    166,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetMiniMapDualScreen",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Get minimap geometry\n\n@*return* `minimapPosX` — in px\n\n@*return* `minimapPosY` — in px\n\n@*return* `minimapSizeX` — in px\n\n@*return* `minimapSizeY` — in px\n\n@*return* `minimized`\n\n@*return* `maximized`",
                "extends": {
                    "args": [],
                    "desc": "Get minimap geometry\n\n@*return* `minimapPosX` — in px\n\n@*return* `minimapPosY` — in px\n\n@*return* `minimapSizeX` — in px\n\n@*return* `minimapSizeY` — in px\n\n@*return* `minimized`\n\n@*return* `maximized`",
                    "finish": [
                        158,
                        40
                    ],
                    "rawdesc": "Get minimap geometry",
                    "returns": [
                        {
                            "desc": "in px",
                            "name": "minimapPosX",
                            "rawdesc": "in px",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "desc": "in px",
                            "name": "minimapPosY",
                            "rawdesc": "in px",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "desc": "in px",
                            "name": "minimapSizeX",
                            "rawdesc": "in px",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "desc": "in px",
                            "name": "minimapSizeY",
                            "rawdesc": "in px",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "minimized",
                            "type": "function.return",
                            "view": "boolean"
                        },
                        {
                            "name": "maximized",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        158,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetMiniMapGeometry()\n  -> minimapPosX: number\n  2. minimapPosY: number\n  3. minimapSizeX: number\n  4. minimapSizeY: number\n  5. minimized: boolean\n  6. maximized: boolean"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    158,
                    34
                ],
                "name": "GetMiniMapGeometry",
                "rawdesc": "Get minimap geometry",
                "start": [
                    158,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetMiniMapGeometry",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Get minimap rotation\n\n@*return* `amount` — in radians",
                "extends": {
                    "args": [],
                    "desc": "Get minimap rotation\n\n@*return* `amount` — in radians",
                    "finish": [
                        163,
                        40
                    ],
                    "rawdesc": "Get minimap rotation",
                    "returns": [
                        {
                            "desc": "in radians",
                            "name": "amount",
                            "rawdesc": "in radians",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        163,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetMiniMapRotation()\n  -> amount: number"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    163,
                    34
                ],
                "name": "GetMiniMapRotation",
                "rawdesc": "Get minimap rotation",
                "start": [
                    163,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetMiniMapRotation",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [],
                    "finish": [
                        783,
                        36
                    ],
                    "returns": [
                        {
                            "name": "alt",
                            "type": "function.return",
                            "view": "boolean"
                        },
                        {
                            "name": "ctrl",
                            "type": "function.return",
                            "view": "boolean"
                        },
                        {
                            "name": "meta",
                            "type": "function.return",
                            "view": "boolean"
                        },
                        {
                            "name": "shift",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        783,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetModKeyState()\n  -> alt: boolean\n  2. ctrl: boolean\n  3. meta: boolean\n  4. shift: boolean"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    783,
                    30
                ],
                "name": "GetModKeyState",
                "start": [
                    783,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetModKeyState",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*return* `value` — Value of `modOption`.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                142,
                                38
                            ],
                            "name": "modOption",
                            "start": [
                                142,
                                29
                            ],
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "desc": "@*return* `value` — Value of `modOption`.",
                    "finish": [
                        142,
                        43
                    ],
                    "returns": [
                        {
                            "desc": "Value of `modOption`.",
                            "name": "value",
                            "rawdesc": "Value of `modOption`.",
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": [
                        142,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetModOption(modOption: string)\n  -> value: string"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    142,
                    28
                ],
                "name": "GetModOption",
                "start": [
                    142,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetModOption",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*return* `modOptions` — Table with options names as keys and values as values.",
                "extends": {
                    "args": [],
                    "desc": "@*return* `modOptions` — Table with options names as keys and values as values.",
                    "finish": [
                        145,
                        35
                    ],
                    "returns": [
                        {
                            "desc": "Table with options names as keys and values as values.",
                            "name": "modOptions",
                            "rawdesc": "Table with options names as keys and values as values.",
                            "type": "function.return",
                            "view": "table<string, string>"
                        }
                    ],
                    "start": [
                        145,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetModOptions()\n  -> modOptions: table<string, string>"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    145,
                    29
                ],
                "name": "GetModOptions",
                "start": [
                    145,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetModOptions",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1567,
                                43
                            ],
                            "name": "modelName",
                            "start": [
                                1567,
                                34
                            ],
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "finish": [
                        1567,
                        48
                    ],
                    "returns": [
                        {
                            "name": "pieceNames",
                            "type": "function.return",
                            "view": "string[]|nil"
                        }
                    ],
                    "start": [
                        1567,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetModelPieceList(modelName: string)\n  -> pieceNames: string[]|nil"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1567,
                    33
                ],
                "name": "GetModelPieceList",
                "start": [
                    1567,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetModelPieceList",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*return* `pieceInfos` — where keys are piece names and values are indices",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1563,
                                42
                            ],
                            "name": "modelName",
                            "start": [
                                1563,
                                33
                            ],
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "desc": "@*return* `pieceInfos` — where keys are piece names and values are indices",
                    "finish": [
                        1563,
                        47
                    ],
                    "returns": [
                        {
                            "desc": "where keys are piece names and values are indices",
                            "name": "pieceInfos",
                            "rawdesc": "where keys are piece names and values are indices",
                            "type": "function.return",
                            "view": "table<string, number>|nil"
                        }
                    ],
                    "start": [
                        1563,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetModelPieceMap(modelName: string)\n  -> pieceInfos: table<string, number>|nil"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1563,
                    32
                ],
                "name": "GetModelPieceMap",
                "start": [
                    1563,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetModelPieceMap",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*return* `index` — of the root piece",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1559,
                                43
                            ],
                            "name": "modelName",
                            "start": [
                                1559,
                                34
                            ],
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "desc": "@*return* `index` — of the root piece",
                    "finish": [
                        1559,
                        48
                    ],
                    "returns": [
                        {
                            "desc": "of the root piece",
                            "name": "index",
                            "rawdesc": "of the root piece",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        1559,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetModelRootPiece(modelName: string)\n  -> index: number"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1559,
                    33
                ],
                "name": "GetModelRootPiece",
                "start": [
                    1559,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetModelRootPiece",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [],
                    "finish": [
                        730,
                        36
                    ],
                    "returns": [
                        {
                            "name": "cursorName",
                            "type": "function.return",
                            "view": "string"
                        },
                        {
                            "name": "cursorScale",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        730,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetMouseCursor()\n  -> cursorName: string\n  2. cursorScale: number"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    730,
                    30
                ],
                "name": "GetMouseCursor",
                "start": [
                    730,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetMouseCursor",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                741,
                                44
                            ],
                            "name": "button",
                            "start": [
                                741,
                                38
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "finish": [
                        741,
                        49
                    ],
                    "returns": [
                        {
                            "name": "x",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "y",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "camPosX",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "camPosY",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "camPosZ",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "dirX",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "dirY",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "dirZ",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        741,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetMouseStartPosition(button: number)\n  -> x: number\n  2. y: number\n  3. camPosX: number\n  4. camPosY: number\n  5. camPosZ: number\n  6. dirX: number\n  7. dirY: number\n  8. dirZ: number"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    741,
                    37
                ],
                "name": "GetMouseStartPosition",
                "start": [
                    741,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetMouseStartPosition",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*return* `x`\n\n@*return* `y`\n\n@*return* `lmbPressed` — left mouse button pressed\n\n@*return* `mmbPressed` — middle mouse button pressed\n\n@*return* `rmbPressed` — right mouse button pressed\n\n@*return* `offscreen`\n\n@*return* `mmbScroll`",
                "extends": {
                    "args": [],
                    "desc": "@*return* `x`\n\n@*return* `y`\n\n@*return* `lmbPressed` — left mouse button pressed\n\n@*return* `mmbPressed` — middle mouse button pressed\n\n@*return* `rmbPressed` — right mouse button pressed\n\n@*return* `offscreen`\n\n@*return* `mmbScroll`",
                    "finish": [
                        726,
                        35
                    ],
                    "returns": [
                        {
                            "name": "x",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "y",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "desc": "left mouse button pressed",
                            "name": "lmbPressed",
                            "rawdesc": "left mouse button pressed",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "desc": "middle mouse button pressed",
                            "name": "mmbPressed",
                            "rawdesc": "middle mouse button pressed",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "desc": "right mouse button pressed",
                            "name": "rmbPressed",
                            "rawdesc": "right mouse button pressed",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "offscreen",
                            "type": "function.return",
                            "view": "boolean"
                        },
                        {
                            "name": "mmbScroll",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        726,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetMouseState()\n  -> x: number\n  2. y: number\n  3. lmbPressed: number\n  4. mmbPressed: number\n  5. rmbPressed: number\n  6. offscreen: boolean\n  7. mmbScroll: boolean"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    726,
                    29
                ],
                "name": "GetMouseState",
                "start": [
                    726,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetMouseState",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*return* `rotVal` — in degrees\n\n@*return* `rotVel` — in degrees\n\n@*return* `rotAcc` — in degrees\n\n@*return* `rotValRng` — in degrees\n\n@*return* `rotVelRng` — in degrees\n\n@*return* `rotAccRng` — in degrees",
                "extends": {
                    "args": [],
                    "desc": "@*return* `rotVal` — in degrees\n\n@*return* `rotVel` — in degrees\n\n@*return* `rotAcc` — in degrees\n\n@*return* `rotValRng` — in degrees\n\n@*return* `rotVelRng` — in degrees\n\n@*return* `rotAccRng` — in degrees",
                    "finish": [
                        528,
                        45
                    ],
                    "returns": [
                        {
                            "desc": "in degrees",
                            "name": "rotVal",
                            "rawdesc": "in degrees",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "desc": "in degrees",
                            "name": "rotVel",
                            "rawdesc": "in degrees",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "desc": "in degrees",
                            "name": "rotAcc",
                            "rawdesc": "in degrees",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "desc": "in degrees",
                            "name": "rotValRng",
                            "rawdesc": "in degrees",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "desc": "in degrees",
                            "name": "rotVelRng",
                            "rawdesc": "in degrees",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "desc": "in degrees",
                            "name": "rotAccRng",
                            "rawdesc": "in degrees",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        528,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetNanoProjectileParams()\n  -> rotVal: number\n  2. rotVel: number\n  3. rotAcc: number\n  4. rotValRng: number\n  5. rotVelRng: number\n  6. rotAccRng: number"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    528,
                    39
                ],
                "name": "GetNanoProjectileParams",
                "start": [
                    528,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetNanoProjectileParams",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*return* `numDisplays` — as returned by `SDL_GetNumVideoDisplays`",
                "extends": {
                    "args": [],
                    "desc": "@*return* `numDisplays` — as returned by `SDL_GetNumVideoDisplays`",
                    "finish": [
                        94,
                        36
                    ],
                    "returns": [
                        {
                            "desc": "as returned by `SDL_GetNumVideoDisplays`",
                            "name": "numDisplays",
                            "rawdesc": "as returned by `SDL_GetNumVideoDisplays`",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        94,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetNumDisplays()\n  -> numDisplays: number"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    94,
                    30
                ],
                "name": "GetNumDisplays",
                "start": [
                    94,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetNumDisplays",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*return* `explosionFlags` — encoded bitwise with SHATTER = 1, EXPLODE = 2, EXPLODE_ON_HIT = 2, FALL = 4, SMOKE = 8, FIRE = 16, NONE = 32, NO_CEG_TRAIL = 64, NO_HEATCLOUD = 128\n\n@*return* `spinAngle`\n\n@*return* `spinSpeed`\n\n@*return* `spinVectorX`\n\n@*return* `spinVectorY`\n\n@*return* `spinVectorZ`",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1252,
                                53
                            ],
                            "name": "projectileID",
                            "start": [
                                1252,
                                41
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "@*return* `explosionFlags` — encoded bitwise with SHATTER = 1, EXPLODE = 2, EXPLODE_ON_HIT = 2, FALL = 4, SMOKE = 8, FIRE = 16, NONE = 32, NO_CEG_TRAIL = 64, NO_HEATCLOUD = 128\n\n@*return* `spinAngle`\n\n@*return* `spinSpeed`\n\n@*return* `spinVectorX`\n\n@*return* `spinVectorY`\n\n@*return* `spinVectorZ`",
                    "finish": [
                        1252,
                        58
                    ],
                    "returns": [
                        {
                            "desc": "encoded bitwise with SHATTER = 1, EXPLODE = 2, EXPLODE_ON_HIT = 2, FALL = 4, SMOKE = 8, FIRE = 16, NONE = 32, NO_CEG_TRAIL = 64, NO_HEATCLOUD = 128",
                            "name": "explosionFlags",
                            "rawdesc": "encoded bitwise with SHATTER = 1, EXPLODE = 2, EXPLODE_ON_HIT = 2, FALL = 4, SMOKE = 8, FIRE = 16, NONE = 32, NO_CEG_TRAIL = 64, NO_HEATCLOUD = 128",
                            "type": "function.return",
                            "view": "number?"
                        },
                        {
                            "name": "spinAngle",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "spinSpeed",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "spinVectorX",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "spinVectorY",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "spinVectorZ",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        1252,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetPieceProjectileParams(projectileID: integer)\n  -> explosionFlags: number?\n  2. spinAngle: number\n  3. spinSpeed: number\n  4. spinVectorX: number\n  5. spinVectorY: number\n  6. spinVectorZ: number"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1252,
                    40
                ],
                "name": "GetPieceProjectileParams",
                "start": [
                    1252,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetPieceProjectileParams",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                612,
                                29
                            ],
                            "name": "x",
                            "start": [
                                612,
                                28
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                612,
                                32
                            ],
                            "name": "y",
                            "start": [
                                612,
                                31
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "finish": [
                        612,
                        37
                    ],
                    "returns": [
                        {
                            "name": "dirX",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "dirY",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "dirZ",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        612,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetPixelDir(x: number, y: number)\n  -> dirX: number\n  2. dirY: number\n  3. dirZ: number"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    612,
                    27
                ],
                "name": "GetPixelDir",
                "start": [
                    612,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetPixelDir",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Returns unit controlled by player on FPS mode",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                360,
                                48
                            ],
                            "name": "playerID",
                            "start": [
                                360,
                                40
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Returns unit controlled by player on FPS mode",
                    "finish": [
                        360,
                        53
                    ],
                    "rawdesc": "Returns unit controlled by player on FPS mode",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number?"
                        }
                    ],
                    "start": [
                        360,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetPlayerControlledUnit(playerID: integer)\n  -> number?"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    360,
                    39
                ],
                "name": "GetPlayerControlledUnit",
                "rawdesc": "Returns unit controlled by player on FPS mode",
                "start": [
                    360,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetPlayerControlledUnit",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `getPlayerOpts` — (Default: true) whether to return custom player options\n\n@*return* `name`\n\n@*return* `active`\n\n@*return* `spectator`\n\n@*return* `teamID`\n\n@*return* `allyTeamID`\n\n@*return* `pingTime`\n\n@*return* `cpuUsage`\n\n@*return* `country`\n\n@*return* `rank`\n\n@*return* `hasSkirmishAIsInTeam`\n\n@*return* `playerOpts` — when playerOpts is true\n\n@*return* `desynced`",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                354,
                                38
                            ],
                            "name": "playerID",
                            "start": [
                                354,
                                30
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "desc": "(Default: true) whether to return custom player options",
                            "finish": [
                                354,
                                53
                            ],
                            "name": "getPlayerOpts",
                            "rawdesc": "(Default: true) whether to return custom player options",
                            "start": [
                                354,
                                40
                            ],
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "@*param* `getPlayerOpts` — (Default: true) whether to return custom player options\n\n@*return* `name`\n\n@*return* `active`\n\n@*return* `spectator`\n\n@*return* `teamID`\n\n@*return* `allyTeamID`\n\n@*return* `pingTime`\n\n@*return* `cpuUsage`\n\n@*return* `country`\n\n@*return* `rank`\n\n@*return* `hasSkirmishAIsInTeam`\n\n@*return* `playerOpts` — when playerOpts is true\n\n@*return* `desynced`",
                    "finish": [
                        354,
                        58
                    ],
                    "returns": [
                        {
                            "name": "name",
                            "type": "function.return",
                            "view": "string"
                        },
                        {
                            "name": "active",
                            "type": "function.return",
                            "view": "boolean"
                        },
                        {
                            "name": "spectator",
                            "type": "function.return",
                            "view": "boolean"
                        },
                        {
                            "name": "teamID",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "allyTeamID",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "pingTime",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "cpuUsage",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "country",
                            "type": "function.return",
                            "view": "string"
                        },
                        {
                            "name": "rank",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "hasSkirmishAIsInTeam",
                            "type": "function.return",
                            "view": "boolean"
                        },
                        {
                            "desc": "when playerOpts is true",
                            "name": "playerOpts",
                            "rawdesc": "when playerOpts is true",
                            "type": "function.return",
                            "view": "{ [string]: string }"
                        },
                        {
                            "name": "desynced",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        354,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetPlayerInfo(playerID: integer, getPlayerOpts?: boolean)\n  -> name: string\n  2. active: boolean\n  3. spectator: boolean\n  4. teamID: number\n  5. allyTeamID: number\n  6. pingTime: number\n  7. cpuUsage: number\n  8. country: string\n  9. rank: number\n 10. hasSkirmishAIsInTeam: boolean\n 11. playerOpts: { [string]: string }\n 12. desynced: boolean"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    354,
                    29
                ],
                "name": "GetPlayerInfo",
                "start": [
                    354,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetPlayerInfo",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `teamID` — (Default: -1) to filter by when >= 0\n\n@*param* `active` — (Default: false) whether to filter only active teams\n\n@*return* `list` — of playerIDs",
                "extends": {
                    "args": [
                        {
                            "desc": "(Default: -1) to filter by when >= 0",
                            "finish": [
                                231,
                                36
                            ],
                            "name": "teamID",
                            "rawdesc": "(Default: -1) to filter by when >= 0",
                            "start": [
                                231,
                                30
                            ],
                            "type": "local",
                            "view": "integer?"
                        },
                        {
                            "desc": "(Default: false) whether to filter only active teams",
                            "finish": [
                                231,
                                44
                            ],
                            "name": "active",
                            "rawdesc": "(Default: false) whether to filter only active teams",
                            "start": [
                                231,
                                38
                            ],
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "@*param* `teamID` — (Default: -1) to filter by when >= 0\n\n@*param* `active` — (Default: false) whether to filter only active teams\n\n@*return* `list` — of playerIDs",
                    "finish": [
                        231,
                        49
                    ],
                    "returns": [
                        {
                            "desc": "of playerIDs",
                            "name": "list",
                            "rawdesc": "of playerIDs",
                            "type": "function.return",
                            "view": "number[]?"
                        }
                    ],
                    "start": [
                        231,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetPlayerList(teamID?: integer, active?: boolean)\n  -> list: number[]?"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    231,
                    29
                ],
                "name": "GetPlayerList",
                "start": [
                    231,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetPlayerList",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `sortType` — return unsorted if unspecified. Disabled = 0, Allies = 1, TeamID = 2, PlayerName = 3, PlayerCPU = 4, PlayerPing = 5\n\n@*param* `showPathingPlayers` — (Default: false)",
                "extends": {
                    "args": [
                        {
                            "desc": "return unsorted if unspecified. Disabled = 0, Allies = 1, TeamID = 2, PlayerName = 3, PlayerCPU = 4, PlayerPing = 5",
                            "finish": [
                                878,
                                40
                            ],
                            "name": "sortType",
                            "rawdesc": "return unsorted if unspecified. Disabled = 0, Allies = 1, TeamID = 2, PlayerName = 3, PlayerCPU = 4, PlayerPing = 5",
                            "start": [
                                878,
                                32
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "desc": "(Default: false)",
                            "finish": [
                                878,
                                60
                            ],
                            "name": "showPathingPlayers",
                            "rawdesc": "(Default: false)",
                            "start": [
                                878,
                                42
                            ],
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "@*param* `sortType` — return unsorted if unspecified. Disabled = 0, Allies = 1, TeamID = 2, PlayerName = 3, PlayerCPU = 4, PlayerPing = 5\n\n@*param* `showPathingPlayers` — (Default: false)",
                    "finish": [
                        878,
                        65
                    ],
                    "returns": [
                        {
                            "name": "playerTable",
                            "type": "function.return",
                            "view": "Roster[]?"
                        }
                    ],
                    "start": [
                        878,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetPlayerRoster(sortType?: number, showPathingPlayers?: boolean)\n  -> playerTable: Roster[]?"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    878,
                    31
                ],
                "name": "GetPlayerRoster",
                "start": [
                    878,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetPlayerRoster",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `ruleRef` — the rule index or name",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                107,
                                44
                            ],
                            "name": "playerID",
                            "start": [
                                107,
                                36
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "desc": "the rule index or name",
                            "finish": [
                                107,
                                53
                            ],
                            "name": "ruleRef",
                            "rawdesc": "the rule index or name",
                            "start": [
                                107,
                                46
                            ],
                            "type": "local",
                            "view": "string|number"
                        }
                    ],
                    "desc": "@*param* `ruleRef` — the rule index or name",
                    "finish": [
                        107,
                        58
                    ],
                    "returns": [
                        {
                            "name": "value",
                            "type": "function.return",
                            "view": "string|number|nil"
                        }
                    ],
                    "start": [
                        107,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetPlayerRulesParam(playerID: integer, ruleRef: string|number)\n  -> value: string|number|nil"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    107,
                    35
                ],
                "name": "GetPlayerRulesParam",
                "start": [
                    107,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetPlayerRulesParam",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*return* `rulesParams` — map with rules names as key and values as values",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                85,
                                45
                            ],
                            "name": "playerID",
                            "start": [
                                85,
                                37
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "@*return* `rulesParams` — map with rules names as key and values as values",
                    "finish": [
                        85,
                        50
                    ],
                    "returns": [
                        {
                            "desc": "map with rules names as key and values as values",
                            "name": "rulesParams",
                            "rawdesc": "map with rules names as key and values as values",
                            "type": "function.return",
                            "view": "RulesParams"
                        }
                    ],
                    "start": [
                        85,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetPlayerRulesParams(playerID: integer)\n  -> rulesParams: RulesParams"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    85,
                    36
                ],
                "name": "GetPlayerRulesParams",
                "start": [
                    85,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetPlayerRulesParams",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*return* `mousePixels` — nil when invalid playerID\n\n@*return* `mouseClicks`\n\n@*return* `keyPresses`\n\n@*return* `numCommands`\n\n@*return* `unitCommands`",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                891,
                                44
                            ],
                            "name": "playerID",
                            "start": [
                                891,
                                36
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "@*return* `mousePixels` — nil when invalid playerID\n\n@*return* `mouseClicks`\n\n@*return* `keyPresses`\n\n@*return* `numCommands`\n\n@*return* `unitCommands`",
                    "finish": [
                        891,
                        49
                    ],
                    "returns": [
                        {
                            "desc": "nil when invalid playerID",
                            "name": "mousePixels",
                            "rawdesc": "nil when invalid playerID",
                            "type": "function.return",
                            "view": "number?"
                        },
                        {
                            "name": "mouseClicks",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "keyPresses",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "numCommands",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "unitCommands",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        891,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetPlayerStatistics(playerID: integer)\n  -> mousePixels: number?\n  2. mouseClicks: number\n  3. keyPresses: number\n  4. numCommands: number\n  5. unitCommands: number"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    891,
                    35
                ],
                "name": "GetPlayerStatistics",
                "start": [
                    891,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetPlayerStatistics",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                883,
                                41
                            ],
                            "name": "playerID",
                            "start": [
                                883,
                                33
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                883,
                                51
                            ],
                            "name": "packetID",
                            "start": [
                                883,
                                43
                            ],
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "finish": [
                        883,
                        56
                    ],
                    "returns": [
                        {
                            "name": "traffic",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        883,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetPlayerTraffic(playerID: integer, packetID?: integer)\n  -> traffic: number"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    883,
                    32
                ],
                "name": "GetPlayerTraffic",
                "start": [
                    883,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetPlayerTraffic",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1480,
                                40
                            ],
                            "name": "posX",
                            "start": [
                                1480,
                                36
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1480,
                                46
                            ],
                            "name": "posY",
                            "start": [
                                1480,
                                42
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1480,
                                52
                            ],
                            "name": "posZ",
                            "start": [
                                1480,
                                48
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1480,
                                64
                            ],
                            "name": "allyTeamID",
                            "start": [
                                1480,
                                54
                            ],
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "finish": [
                        1480,
                        69
                    ],
                    "returns": [
                        {
                            "name": "inLosOrRadar",
                            "type": "function.return",
                            "view": "boolean"
                        },
                        {
                            "name": "inLos",
                            "type": "function.return",
                            "view": "boolean"
                        },
                        {
                            "name": "inRadar",
                            "type": "function.return",
                            "view": "boolean"
                        },
                        {
                            "name": "inJammer",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        1480,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetPositionLosState(posX: number, posY: number, posZ: number, allyTeamID?: integer)\n  -> inLosOrRadar: boolean\n  2. inLos: boolean\n  3. inRadar: boolean\n  4. inJammer: boolean"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1480,
                    35
                ],
                "name": "GetPositionLosState",
                "start": [
                    1480,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetPositionLosState",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*return* `where` — keys are keyCodes or key names",
                "extends": {
                    "args": [],
                    "desc": "@*return* `where` — keys are keyCodes or key names",
                    "finish": [
                        786,
                        36
                    ],
                    "returns": [
                        {
                            "desc": "keys are keyCodes or key names",
                            "name": "where",
                            "rawdesc": "keys are keyCodes or key names",
                            "type": "function.return",
                            "view": "table<string|number, true>"
                        }
                    ],
                    "start": [
                        786,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetPressedKeys()\n  -> where: table<string|number, true>"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    786,
                    30
                ],
                "name": "GetPressedKeys",
                "start": [
                    786,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetPressedKeys",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*return* `where` — keys are scanCodes or scan names",
                "extends": {
                    "args": [],
                    "desc": "@*return* `where` — keys are scanCodes or scan names",
                    "finish": [
                        789,
                        37
                    ],
                    "returns": [
                        {
                            "desc": "keys are scanCodes or scan names",
                            "name": "where",
                            "rawdesc": "keys are scanCodes or scan names",
                            "type": "function.return",
                            "view": "table<string|number, true>"
                        }
                    ],
                    "start": [
                        789,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetPressedScans()\n  -> where: table<string|number, true>"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    789,
                    31
                ],
                "name": "GetPressedScans",
                "start": [
                    789,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetPressedScans",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [],
                    "finish": [
                        48,
                        44
                    ],
                    "returns": [
                        {
                            "name": "profilerNames",
                            "type": "function.return",
                            "view": "string[]"
                        }
                    ],
                    "start": [
                        48,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetProfilerRecordNames()\n  -> profilerNames: string[]"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    48,
                    38
                ],
                "name": "GetProfilerRecordNames",
                "start": [
                    48,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetProfilerRecordNames",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `frameData` — (Default: false)\n\n@*return* `total` — in ms\n\n@*return* `current` — in ms\n\n@*return* `max_dt`\n\n@*return* `time_pct`\n\n@*return* `peak_pct`\n\n@*return* `frameData` — Table where key is the frame index and value is duration.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                45,
                                50
                            ],
                            "name": "profilerName",
                            "start": [
                                45,
                                38
                            ],
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "desc": "(Default: false)",
                            "finish": [
                                45,
                                61
                            ],
                            "name": "frameData",
                            "rawdesc": "(Default: false)",
                            "start": [
                                45,
                                52
                            ],
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "@*param* `frameData` — (Default: false)\n\n@*return* `total` — in ms\n\n@*return* `current` — in ms\n\n@*return* `max_dt`\n\n@*return* `time_pct`\n\n@*return* `peak_pct`\n\n@*return* `frameData` — Table where key is the frame index and value is duration.",
                    "finish": [
                        45,
                        66
                    ],
                    "returns": [
                        {
                            "desc": "in ms",
                            "name": "total",
                            "rawdesc": "in ms",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "desc": "in ms",
                            "name": "current",
                            "rawdesc": "in ms",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "max_dt",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "time_pct",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "peak_pct",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "desc": "Table where key is the frame index and value is duration.",
                            "name": "frameData",
                            "rawdesc": "Table where key is the frame index and value is duration.",
                            "type": "function.return",
                            "view": "table<number, number>?"
                        }
                    ],
                    "start": [
                        45,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetProfilerTimeRecord(profilerName: string, frameData?: boolean)\n  -> total: number\n  2. current: number\n  3. max_dt: number\n  4. time_pct: number\n  5. peak_pct: number\n  6. frameData: table<number, number>?"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    45,
                    37
                ],
                "name": "GetProfilerTimeRecord",
                "start": [
                    45,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetProfilerTimeRecord",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1281,
                                52
                            ],
                            "name": "projectileID",
                            "start": [
                                1281,
                                40
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        1281,
                        57
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number?"
                        }
                    ],
                    "start": [
                        1281,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetProjectileAllyTeamID(projectileID: integer)\n  -> number?"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1281,
                    39
                ],
                "name": "GetProjectileAllyTeamID",
                "start": [
                    1281,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetProjectileAllyTeamID",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `tag` — one of:\n\n\"paralyzeDamageTime\"\n\"impulseFactor\"\n\"impulseBoost\"\n\"craterMult\"\n\"craterBoost\"\n\"dynDamageExp\"\n\"dynDamageMin\"\n\"dynDamageRange\"\n\"dynDamageInverted\"\n\"craterAreaOfEffect\"\n\"damageAreaOfEffect\"\n\"edgeEffectiveness\"\n\"explosionSpeed\"\n- or -\nan armor type index to get the damage against it.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1313,
                                49
                            ],
                            "name": "projectileID",
                            "start": [
                                1313,
                                37
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "desc": "one of:",
                            "finish": [
                                1313,
                                54
                            ],
                            "name": "tag",
                            "rawdesc": "one of:",
                            "start": [
                                1313,
                                51
                            ],
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "desc": "@*param* `tag` — one of:\n\n\"paralyzeDamageTime\"\n\"impulseFactor\"\n\"impulseBoost\"\n\"craterMult\"\n\"craterBoost\"\n\"dynDamageExp\"\n\"dynDamageMin\"\n\"dynDamageRange\"\n\"dynDamageInverted\"\n\"craterAreaOfEffect\"\n\"damageAreaOfEffect\"\n\"edgeEffectiveness\"\n\"explosionSpeed\"\n- or -\nan armor type index to get the damage against it.",
                    "finish": [
                        1313,
                        59
                    ],
                    "rawdesc": "\"paralyzeDamageTime\"\n\"impulseFactor\"\n\"impulseBoost\"\n\"craterMult\"\n\"craterBoost\"\n\"dynDamageExp\"\n\"dynDamageMin\"\n\"dynDamageRange\"\n\"dynDamageInverted\"\n\"craterAreaOfEffect\"\n\"damageAreaOfEffect\"\n\"edgeEffectiveness\"\n\"explosionSpeed\"\n- or -\nan armor type index to get the damage against it.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number?"
                        }
                    ],
                    "start": [
                        1313,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetProjectileDamages(projectileID: integer, tag: string)\n  -> number?"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1313,
                    36
                ],
                "name": "GetProjectileDamages",
                "rawdesc": "\"paralyzeDamageTime\"\n\"impulseFactor\"\n\"impulseBoost\"\n\"craterMult\"\n\"craterBoost\"\n\"dynDamageExp\"\n\"dynDamageMin\"\n\"dynDamageRange\"\n\"dynDamageInverted\"\n\"craterAreaOfEffect\"\n\"damageAreaOfEffect\"\n\"edgeEffectiveness\"\n\"explosionSpeed\"\n- or -\nan armor type index to get the damage against it.",
                "start": [
                    1313,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetProjectileDamages",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nUsing this to get a weaponDefID is HIGHLY preferred to indexing WeaponDefNames via GetProjectileName",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1293,
                                47
                            ],
                            "name": "projectileID",
                            "start": [
                                1293,
                                35
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "\nUsing this to get a weaponDefID is HIGHLY preferred to indexing WeaponDefNames via GetProjectileName",
                    "finish": [
                        1293,
                        52
                    ],
                    "rawdesc": "\nUsing this to get a weaponDefID is HIGHLY preferred to indexing WeaponDefNames via GetProjectileName",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number?"
                        }
                    ],
                    "start": [
                        1293,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetProjectileDefID(projectileID: integer)\n  -> number?"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1293,
                    34
                ],
                "name": "GetProjectileDefID",
                "rawdesc": "\nUsing this to get a weaponDefID is HIGHLY preferred to indexing WeaponDefNames via GetProjectileName",
                "start": [
                    1293,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetProjectileDefID",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1232,
                                51
                            ],
                            "name": "projectileID",
                            "start": [
                                1232,
                                39
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        1232,
                        56
                    ],
                    "returns": [
                        {
                            "name": "dirX",
                            "type": "function.return",
                            "view": "number?"
                        },
                        {
                            "name": "dirY",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "dirZ",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        1232,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetProjectileDirection(projectileID: integer)\n  -> dirX: number?\n  2. dirY: number\n  3. dirZ: number"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1232,
                    38
                ],
                "name": "GetProjectileDirection",
                "start": [
                    1232,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetProjectileDirection",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1243,
                                49
                            ],
                            "name": "projectileID",
                            "start": [
                                1243,
                                37
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        1243,
                        54
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number?"
                        }
                    ],
                    "start": [
                        1243,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetProjectileGravity(projectileID: integer)\n  -> number?"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1243,
                    36
                ],
                "name": "GetProjectileGravity",
                "start": [
                    1243,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetProjectileGravity",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1265,
                                55
                            ],
                            "name": "projectileID",
                            "start": [
                                1265,
                                43
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        1265,
                        60
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean|nil"
                        }
                    ],
                    "start": [
                        1265,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetProjectileIsIntercepted(projectileID: integer)\n  -> boolean|nil"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1265,
                    42
                ],
                "name": "GetProjectileIsIntercepted",
                "start": [
                    1265,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetProjectileIsIntercepted",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1273,
                                49
                            ],
                            "name": "projectileID",
                            "start": [
                                1273,
                                37
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        1273,
                        54
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number?"
                        }
                    ],
                    "start": [
                        1273,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetProjectileOwnerID(projectileID: integer)\n  -> number?"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1273,
                    36
                ],
                "name": "GetProjectileOwnerID",
                "start": [
                    1273,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetProjectileOwnerID",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1226,
                                50
                            ],
                            "name": "projectileID",
                            "start": [
                                1226,
                                38
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        1226,
                        55
                    ],
                    "returns": [
                        {
                            "name": "posX",
                            "type": "function.return",
                            "view": "number?"
                        },
                        {
                            "name": "posY",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "posZ",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        1226,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetProjectilePosition(projectileID: integer)\n  -> posX: number?\n  2. posY: number\n  3. posZ: number"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1226,
                    37
                ],
                "name": "GetProjectilePosition",
                "start": [
                    1226,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetProjectilePosition",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*return* `targetTypeInt` — where\n\nstring.byte('g') := GROUND\nstring.byte('u') := UNIT\nstring.byte('f') := FEATURE\nstring.byte('p') := PROJECTILE\n\n@*return* `target` — targetID or targetPos when targetTypeInt == string.byte('g')",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1261,
                                48
                            ],
                            "name": "projectileID",
                            "start": [
                                1261,
                                36
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "@*return* `targetTypeInt` — where\n\nstring.byte('g') := GROUND\nstring.byte('u') := UNIT\nstring.byte('f') := FEATURE\nstring.byte('p') := PROJECTILE\n\n@*return* `target` — targetID or targetPos when targetTypeInt == string.byte('g')",
                    "finish": [
                        1261,
                        53
                    ],
                    "rawdesc": "string.byte('g') := GROUND\nstring.byte('u') := UNIT\nstring.byte('f') := FEATURE\nstring.byte('p') := PROJECTILE",
                    "returns": [
                        {
                            "desc": "where",
                            "name": "targetTypeInt",
                            "rawdesc": "where",
                            "type": "function.return",
                            "view": "number?"
                        },
                        {
                            "desc": "targetID or targetPos when targetTypeInt == string.byte('g')",
                            "name": "target",
                            "rawdesc": "targetID or targetPos when targetTypeInt == string.byte('g')",
                            "type": "function.return",
                            "view": "number|xyz"
                        }
                    ],
                    "start": [
                        1261,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetProjectileTarget(projectileID: integer)\n  -> targetTypeInt: number?\n  2. target: number|xyz"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1261,
                    35
                ],
                "name": "GetProjectileTarget",
                "rawdesc": "string.byte('g') := GROUND\nstring.byte('u') := UNIT\nstring.byte('f') := FEATURE\nstring.byte('p') := PROJECTILE",
                "start": [
                    1261,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetProjectileTarget",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1277,
                                48
                            ],
                            "name": "projectileID",
                            "start": [
                                1277,
                                36
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        1277,
                        53
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number?"
                        }
                    ],
                    "start": [
                        1277,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetProjectileTeamID(projectileID: integer)\n  -> number?"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1277,
                    35
                ],
                "name": "GetProjectileTeamID",
                "start": [
                    1277,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetProjectileTeamID",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1269,
                                52
                            ],
                            "name": "projectileID",
                            "start": [
                                1269,
                                40
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        1269,
                        57
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number?"
                        }
                    ],
                    "start": [
                        1269,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetProjectileTimeToLive(projectileID: integer)\n  -> number?"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1269,
                    39
                ],
                "name": "GetProjectileTimeToLive",
                "start": [
                    1269,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetProjectileTimeToLive",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1286,
                                46
                            ],
                            "name": "projectileID",
                            "start": [
                                1286,
                                34
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        1286,
                        51
                    ],
                    "returns": [
                        {
                            "name": "weapon",
                            "type": "function.return",
                            "view": "boolean|nil"
                        },
                        {
                            "name": "piece",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        1286,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetProjectileType(projectileID: integer)\n  -> weapon: boolean|nil\n  2. piece: boolean"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1286,
                    33
                ],
                "name": "GetProjectileType",
                "start": [
                    1286,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetProjectileType",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1239,
                                50
                            ],
                            "name": "projectileID",
                            "start": [
                                1239,
                                38
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        1239,
                        55
                    ],
                    "returns": [
                        {
                            "name": "velX",
                            "type": "function.return",
                            "view": "number?"
                        },
                        {
                            "name": "velY",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "velZ",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "velW",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        1239,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetProjectileVelocity(projectileID: integer)\n  -> velX: number?\n  2. velY: number\n  3. velZ: number\n  4. velW: number"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1239,
                    37
                ],
                "name": "GetProjectileVelocity",
                "start": [
                    1239,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetProjectileVelocity",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `excludeWeaponProjectiles` — (Default: false)\n\n@*param* `excludePieceProjectiles` — (Default: false)",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                548,
                                46
                            ],
                            "name": "xmin",
                            "start": [
                                548,
                                42
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                548,
                                52
                            ],
                            "name": "zmin",
                            "start": [
                                548,
                                48
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                548,
                                58
                            ],
                            "name": "xmax",
                            "start": [
                                548,
                                54
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                548,
                                64
                            ],
                            "name": "zmax",
                            "start": [
                                548,
                                60
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "desc": "(Default: false)",
                            "finish": [
                                548,
                                90
                            ],
                            "name": "excludeWeaponProjectiles",
                            "rawdesc": "(Default: false)",
                            "start": [
                                548,
                                66
                            ],
                            "type": "local",
                            "view": "boolean?"
                        },
                        {
                            "desc": "(Default: false)",
                            "finish": [
                                548,
                                115
                            ],
                            "name": "excludePieceProjectiles",
                            "rawdesc": "(Default: false)",
                            "start": [
                                548,
                                92
                            ],
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "@*param* `excludeWeaponProjectiles` — (Default: false)\n\n@*param* `excludePieceProjectiles` — (Default: false)",
                    "finish": [
                        548,
                        120
                    ],
                    "returns": [
                        {
                            "name": "projectileIDs",
                            "type": "function.return",
                            "view": "number[]"
                        }
                    ],
                    "start": [
                        548,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetProjectilesInRectangle(xmin: number, zmin: number, xmax: number, zmax: number, excludeWeaponProjectiles?: boolean, excludePieceProjectiles?: boolean)\n  -> projectileIDs: number[]"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    548,
                    41
                ],
                "name": "GetProjectilesInRectangle",
                "start": [
                    548,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetProjectilesInRectangle",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*return* `radarErrorSize` — actual radar error size (when allyTeamID is allied to current team) or base radar error size\n\n@*return* `baseRadarErrorSize`\n\n@*return* `baseRadarErrorMult`",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1746,
                                46
                            ],
                            "name": "allyTeamID",
                            "start": [
                                1746,
                                36
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "@*return* `radarErrorSize` — actual radar error size (when allyTeamID is allied to current team) or base radar error size\n\n@*return* `baseRadarErrorSize`\n\n@*return* `baseRadarErrorMult`",
                    "finish": [
                        1746,
                        51
                    ],
                    "returns": [
                        {
                            "desc": "actual radar error size (when allyTeamID is allied to current team) or base radar error size",
                            "name": "radarErrorSize",
                            "rawdesc": "actual radar error size (when allyTeamID is allied to current team) or base radar error size",
                            "type": "function.return",
                            "view": "number?"
                        },
                        {
                            "name": "baseRadarErrorSize",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "baseRadarErrorMult",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        1746,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetRadarErrorParams(allyTeamID: integer)\n  -> radarErrorSize: number?\n  2. baseRadarErrorSize: number\n  3. baseRadarErrorMult: number"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1746,
                    35
                ],
                "name": "GetRadarErrorParams",
                "start": [
                    1746,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetRadarErrorParams",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Returns the build queue cleaned of things the unit can't build itself\n\n@*return* `buildqueue` — indexed by unitDefID with count values",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1112,
                                40
                            ],
                            "name": "unitID",
                            "start": [
                                1112,
                                34
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Returns the build queue cleaned of things the unit can't build itself\n\n@*return* `buildqueue` — indexed by unitDefID with count values",
                    "finish": [
                        1112,
                        45
                    ],
                    "rawdesc": "Returns the build queue cleaned of things the unit can't build itself",
                    "returns": [
                        {
                            "desc": "indexed by unitDefID with count values",
                            "name": "buildqueue",
                            "rawdesc": "indexed by unitDefID with count values",
                            "type": "function.return",
                            "view": "table<number, number>|nil"
                        }
                    ],
                    "start": [
                        1112,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetRealBuildQueue(unitID: integer)\n  -> buildqueue: table<number, number>|nil"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1112,
                    33
                ],
                "name": "GetRealBuildQueue",
                "rawdesc": "Returns the build queue cleaned of things the unit can't build itself",
                "start": [
                    1112,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetRealBuildQueue",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [],
                    "finish": [
                        419,
                        39
                    ],
                    "start": [
                        419,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetRenderFeatures()"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    419,
                    33
                ],
                "name": "GetRenderFeatures",
                "start": [
                    419,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetRenderFeatures",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [],
                    "finish": [
                        421,
                        54
                    ],
                    "start": [
                        421,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetRenderFeaturesDrawFlagChanged()"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    421,
                    48
                ],
                "name": "GetRenderFeaturesDrawFlagChanged",
                "start": [
                    421,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetRenderFeaturesDrawFlagChanged",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [],
                    "finish": [
                        415,
                        36
                    ],
                    "start": [
                        415,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetRenderUnits()"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    415,
                    30
                ],
                "name": "GetRenderUnits",
                "start": [
                    415,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetRenderUnits",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [],
                    "finish": [
                        417,
                        51
                    ],
                    "start": [
                        417,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetRenderUnitsDrawFlagChanged()"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    417,
                    45
                ],
                "name": "GetRenderUnitsDrawFlagChanged",
                "start": [
                    417,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetRenderUnitsDrawFlagChanged",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [],
                    "finish": [
                        21,
                        37
                    ],
                    "returns": [
                        {
                            "name": "timeInSeconds",
                            "type": "function.return",
                            "view": "number?"
                        }
                    ],
                    "start": [
                        21,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetReplayLength()\n  -> timeInSeconds: number?"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    21,
                    31
                ],
                "name": "GetReplayLength",
                "start": [
                    21,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetReplayLength",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*return* `scanCodeName`\n\n@*return* `scanCodeDefaultName` — name when there are not aliases",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                806,
                                38
                            ],
                            "name": "scanCode",
                            "start": [
                                806,
                                30
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "@*return* `scanCodeName`\n\n@*return* `scanCodeDefaultName` — name when there are not aliases",
                    "finish": [
                        806,
                        43
                    ],
                    "returns": [
                        {
                            "name": "scanCodeName",
                            "type": "function.return",
                            "view": "string"
                        },
                        {
                            "desc": "name when there are not aliases",
                            "name": "scanCodeDefaultName",
                            "rawdesc": "name when there are not aliases",
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": [
                        806,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetScanSymbol(scanCode: number)\n  -> scanCodeName: string\n  2. scanCodeDefaultName: string"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    806,
                    29
                ],
                "name": "GetScanSymbol",
                "start": [
                    806,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetScanSymbol",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Get screen geometry\n\n@*param* `displayIndex` — (Default: -1)\n\n@*param* `queryUsable` — (Default: false)\n\n@*return* `screenSizeX` — in px\n\n@*return* `screenSizeY` — in px\n\n@*return* `screenPosX` — in px\n\n@*return* `screenPosY` — in px\n\n@*return* `windowBorderTop` — in px\n\n@*return* `windowBorderLeft` — in px\n\n@*return* `windowBorderBottom` — in px\n\n@*return* `windowBorderRight` — in px\n\n@*return* `screenUsableSizeX` — in px\n\n@*return* `screenUsableSizeY` — in px\n\n@*return* `screenUsablePosX` — in px\n\n@*return* `screenUsablePosY` — in px",
                "extends": {
                    "args": [
                        {
                            "desc": "(Default: -1)",
                            "finish": [
                                148,
                                46
                            ],
                            "name": "displayIndex",
                            "rawdesc": "(Default: -1)",
                            "start": [
                                148,
                                34
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "desc": "(Default: false)",
                            "finish": [
                                148,
                                59
                            ],
                            "name": "queryUsable",
                            "rawdesc": "(Default: false)",
                            "start": [
                                148,
                                48
                            ],
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "Get screen geometry\n\n@*param* `displayIndex` — (Default: -1)\n\n@*param* `queryUsable` — (Default: false)\n\n@*return* `screenSizeX` — in px\n\n@*return* `screenSizeY` — in px\n\n@*return* `screenPosX` — in px\n\n@*return* `screenPosY` — in px\n\n@*return* `windowBorderTop` — in px\n\n@*return* `windowBorderLeft` — in px\n\n@*return* `windowBorderBottom` — in px\n\n@*return* `windowBorderRight` — in px\n\n@*return* `screenUsableSizeX` — in px\n\n@*return* `screenUsableSizeY` — in px\n\n@*return* `screenUsablePosX` — in px\n\n@*return* `screenUsablePosY` — in px",
                    "finish": [
                        148,
                        64
                    ],
                    "rawdesc": "Get screen geometry",
                    "returns": [
                        {
                            "desc": "in px",
                            "name": "screenSizeX",
                            "rawdesc": "in px",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "desc": "in px",
                            "name": "screenSizeY",
                            "rawdesc": "in px",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "desc": "in px",
                            "name": "screenPosX",
                            "rawdesc": "in px",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "desc": "in px",
                            "name": "screenPosY",
                            "rawdesc": "in px",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "desc": "in px",
                            "name": "windowBorderTop",
                            "rawdesc": "in px",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "desc": "in px",
                            "name": "windowBorderLeft",
                            "rawdesc": "in px",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "desc": "in px",
                            "name": "windowBorderBottom",
                            "rawdesc": "in px",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "desc": "in px",
                            "name": "windowBorderRight",
                            "rawdesc": "in px",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "desc": "in px",
                            "name": "screenUsableSizeX",
                            "rawdesc": "in px",
                            "type": "function.return",
                            "view": "number?"
                        },
                        {
                            "desc": "in px",
                            "name": "screenUsableSizeY",
                            "rawdesc": "in px",
                            "type": "function.return",
                            "view": "number?"
                        },
                        {
                            "desc": "in px",
                            "name": "screenUsablePosX",
                            "rawdesc": "in px",
                            "type": "function.return",
                            "view": "number?"
                        },
                        {
                            "desc": "in px",
                            "name": "screenUsablePosY",
                            "rawdesc": "in px",
                            "type": "function.return",
                            "view": "number?"
                        }
                    ],
                    "start": [
                        148,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetScreenGeometry(displayIndex?: number, queryUsable?: boolean)\n  -> screenSizeX: number\n  2. screenSizeY: number\n  3. screenPosX: number\n  4. screenPosY: number\n  5. windowBorderTop: number\n  6. windowBorderLeft: number\n  7. windowBorderBottom: number\n  8. windowBorderRight: number\n  9. screenUsableSizeX: number?\n 10. screenUsableSizeY: number?\n 11. screenUsablePosX: number?\n 12. screenUsablePosY: number?"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    148,
                    33
                ],
                "name": "GetScreenGeometry",
                "rawdesc": "Get screen geometry",
                "start": [
                    148,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetScreenGeometry",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*return* `groupID` — -1 when no group selected",
                "extends": {
                    "args": [],
                    "desc": "@*return* `groupID` — -1 when no group selected",
                    "finish": [
                        835,
                        38
                    ],
                    "returns": [
                        {
                            "desc": "-1 when no group selected",
                            "name": "groupID",
                            "rawdesc": "-1 when no group selected",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        835,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetSelectedGroup()\n  -> groupID: number"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    835,
                    32
                ],
                "name": "GetSelectedGroup",
                "start": [
                    835,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetSelectedGroup",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [],
                    "finish": [
                        463,
                        38
                    ],
                    "returns": [
                        {
                            "name": "unitIDs",
                            "type": "function.return",
                            "view": "number[]"
                        }
                    ],
                    "start": [
                        463,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetSelectedUnits()\n  -> unitIDs: number[]"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    463,
                    32
                ],
                "name": "GetSelectedUnits",
                "start": [
                    463,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetSelectedUnits",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Returns the amount of selected units",
                "extends": {
                    "args": [],
                    "desc": "Returns the amount of selected units",
                    "finish": [
                        480,
                        43
                    ],
                    "rawdesc": "Returns the amount of selected units",
                    "returns": [
                        {
                            "name": "selectedUnitsCount",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        480,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetSelectedUnitsCount()\n  -> selectedUnitsCount: number"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    480,
                    37
                ],
                "name": "GetSelectedUnitsCount",
                "rawdesc": "Returns the amount of selected units",
                "start": [
                    480,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetSelectedUnitsCount",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Get an aggregate count of selected units per unitDefID\n\n@*return* `unitsCounts` — where keys are unitDefIDs and values are counts\n\n@*return* `the` — number of unitDefIDs",
                "extends": {
                    "args": [],
                    "desc": "Get an aggregate count of selected units per unitDefID\n\n@*return* `unitsCounts` — where keys are unitDefIDs and values are counts\n\n@*return* `the` — number of unitDefIDs",
                    "finish": [
                        475,
                        44
                    ],
                    "rawdesc": "Get an aggregate count of selected units per unitDefID",
                    "returns": [
                        {
                            "desc": "where keys are unitDefIDs and values are counts",
                            "name": "unitsCounts",
                            "rawdesc": "where keys are unitDefIDs and values are counts",
                            "type": "function.return",
                            "view": "table<number, number>"
                        },
                        {
                            "desc": "number of unitDefIDs",
                            "name": "the",
                            "rawdesc": "number of unitDefIDs",
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": [
                        475,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetSelectedUnitsCounts()\n  -> unitsCounts: table<number, number>\n  2. the: integer"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    475,
                    38
                ],
                "name": "GetSelectedUnitsCounts",
                "rawdesc": "Get an aggregate count of selected units per unitDefID",
                "start": [
                    475,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetSelectedUnitsCounts",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Get selected units aggregated by unitDefID\n\n@*return* `where` — keys are unitDefIDs and values are unitIDs\n\n@*return* `the` — number of unitDefIDs",
                "extends": {
                    "args": [],
                    "desc": "Get selected units aggregated by unitDefID\n\n@*return* `where` — keys are unitDefIDs and values are unitIDs\n\n@*return* `the` — number of unitDefIDs",
                    "finish": [
                        469,
                        44
                    ],
                    "rawdesc": "Get selected units aggregated by unitDefID",
                    "returns": [
                        {
                            "desc": "keys are unitDefIDs and values are unitIDs",
                            "name": "where",
                            "rawdesc": "keys are unitDefIDs and values are unitIDs",
                            "type": "function.return",
                            "view": "table<number, number[]>"
                        },
                        {
                            "desc": "number of unitDefIDs",
                            "name": "the",
                            "rawdesc": "number of unitDefIDs",
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": [
                        469,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetSelectedUnitsSorted()\n  -> where: table<number, number[]>\n  2. the: integer"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    469,
                    38
                ],
                "name": "GetSelectedUnitsSorted",
                "rawdesc": "Get selected units aggregated by unitDefID",
                "start": [
                    469,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetSelectedUnitsSorted",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Get vertices from currently active selection box\n\nReturns nil when selection box is inactive\n\nSee: [Spring.GetUnitsInScreenRectangle](file:///home/runner/work/spring/spring/rts/Lua/library/generated/LuaUnsyncedRead.lua#438#9)",
                "extends": {
                    "args": [],
                    "desc": "Get vertices from currently active selection box\n\nReturns nil when selection box is inactive\n\nSee: [Spring.GetUnitsInScreenRectangle](file:///home/runner/work/spring/spring/rts/Lua/library/generated/LuaUnsyncedRead.lua#438#9)",
                    "finish": [
                        177,
                        37
                    ],
                    "rawdesc": "Get vertices from currently active selection box\n\nReturns nil when selection box is inactive\n\nSee: [Spring.GetUnitsInScreenRectangle](file:///home/runner/work/spring/spring/rts/Lua/library/generated/LuaUnsyncedRead.lua#438#9)",
                    "returns": [
                        {
                            "name": "left",
                            "type": "function.return",
                            "view": "number?"
                        },
                        {
                            "name": "top",
                            "type": "function.return",
                            "view": "number?"
                        },
                        {
                            "name": "right",
                            "type": "function.return",
                            "view": "number?"
                        },
                        {
                            "name": "bottom",
                            "type": "function.return",
                            "view": "number?"
                        }
                    ],
                    "start": [
                        177,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetSelectionBox()\n  -> left: number?\n  2. top: number?\n  3. right: number?\n  4. bottom: number?"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    177,
                    31
                ],
                "name": "GetSelectionBox",
                "rawdesc": "Get vertices from currently active selection box\n\nReturns nil when selection box is inactive\n\nSee: [Spring.GetUnitsInScreenRectangle](file:///home/runner/work/spring/spring/rts/Lua/library/generated/LuaUnsyncedRead.lua#438#9)",
                "start": [
                    177,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetSelectionBox",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                187,
                                36
                            ],
                            "name": "sideName",
                            "start": [
                                187,
                                28
                            ],
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "finish": [
                        187,
                        41
                    ],
                    "returns": [
                        {
                            "name": "startUnit",
                            "type": "function.return",
                            "view": "string|nil"
                        },
                        {
                            "name": "caseSensitiveSideName",
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": [
                        187,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetSideData(sideName: string)\n  -> startUnit: string|nil\n  2. caseSensitiveSideName: string"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    187,
                    27
                ],
                "name": "GetSideData",
                "start": [
                    187,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                193,
                                34
                            ],
                            "name": "sideID",
                            "start": [
                                193,
                                28
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        193,
                        39
                    ],
                    "returns": [
                        {
                            "name": "sideName",
                            "type": "function.return",
                            "view": "string|nil"
                        },
                        {
                            "name": "startUnit",
                            "type": "function.return",
                            "view": "string"
                        },
                        {
                            "name": "caseSensitiveSideName",
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": [
                        193,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetSideData(sideID: integer)\n  -> sideName: string|nil\n  2. startUnit: string\n  3. caseSensitiveSideName: string"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    193,
                    27
                ],
                "name": "GetSideData",
                "start": [
                    193,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [],
                    "finish": [
                        196,
                        33
                    ],
                    "returns": [
                        {
                            "name": "sideArray",
                            "type": "function.return",
                            "view": "SideSpec[]"
                        }
                    ],
                    "start": [
                        196,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetSideData()\n  -> sideArray: SideSpec[]"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    196,
                    27
                ],
                "name": "GetSideData",
                "start": [
                    196,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetSideData",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1413,
                                37
                            ],
                            "name": "x",
                            "start": [
                                1413,
                                36
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1413,
                                40
                            ],
                            "name": "z",
                            "start": [
                                1413,
                                39
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "finish": [
                        1413,
                        45
                    ],
                    "returns": [
                        {
                            "name": "height",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        1413,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetSmoothMeshHeight(x: number, z: number)\n  -> height: number"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1413,
                    35
                ],
                "name": "GetSmoothMeshHeight",
                "start": [
                    1413,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetSmoothMeshHeight",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*return* `devices` — Sound devices.",
                "extends": {
                    "args": [],
                    "desc": "@*return* `devices` — Sound devices.",
                    "finish": [
                        642,
                        37
                    ],
                    "returns": [
                        {
                            "desc": "Sound devices.",
                            "name": "devices",
                            "rawdesc": "Sound devices.",
                            "type": "function.return",
                            "view": "SoundDeviceSpec[]"
                        }
                    ],
                    "start": [
                        642,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetSoundDevices()\n  -> devices: SoundDeviceSpec[]"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    642,
                    31
                ],
                "name": "GetSoundDevices",
                "start": [
                    642,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetSoundDevices",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [],
                    "finish": [
                        648,
                        42
                    ],
                    "start": [
                        648,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetSoundEffectParams()"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    648,
                    36
                ],
                "name": "GetSoundEffectParams",
                "start": [
                    648,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetSoundEffectParams",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [],
                    "finish": [
                        646,
                        40
                    ],
                    "returns": [
                        {
                            "name": "playTime",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "time",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        646,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetSoundStreamTime()\n  -> playTime: number\n  2. time: number"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    646,
                    34
                ],
                "name": "GetSoundStreamTime",
                "start": [
                    646,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetSoundStreamTime",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [],
                    "finish": [
                        460,
                        40
                    ],
                    "returns": [
                        {
                            "name": "spectating",
                            "type": "function.return",
                            "view": "boolean"
                        },
                        {
                            "name": "spectatingFullView",
                            "type": "function.return",
                            "view": "boolean"
                        },
                        {
                            "name": "spectatingFullSelect",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        460,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetSpectatingState()\n  -> spectating: boolean\n  2. spectatingFullView: boolean\n  3. spectatingFullSelect: boolean"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    460,
                    34
                ],
                "name": "GetSpectatingState",
                "start": [
                    460,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetSpectatingState",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `collectGC` — (Default: false) collect before returning metric\n\n@*return* `GC` — values are expressed in Kbytes: #bytes/2^10",
                "extends": {
                    "args": [
                        {
                            "desc": "(Default: false) collect before returning metric",
                            "finish": [
                                1040,
                                41
                            ],
                            "name": "collectGC",
                            "rawdesc": "(Default: false) collect before returning metric",
                            "start": [
                                1040,
                                32
                            ],
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "@*param* `collectGC` — (Default: false) collect before returning metric\n\n@*return* `GC` — values are expressed in Kbytes: #bytes/2^10",
                    "finish": [
                        1040,
                        46
                    ],
                    "returns": [
                        {
                            "desc": "values are expressed in Kbytes: #bytes/2^10",
                            "name": "GC",
                            "rawdesc": "values are expressed in Kbytes: #bytes/2^10",
                            "type": "function.return",
                            "view": "number?"
                        }
                    ],
                    "start": [
                        1040,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetSyncedGCInfo(collectGC?: boolean)\n  -> GC: number?"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    1040,
                    31
                ],
                "name": "GetSyncedGCInfo",
                "start": [
                    1040,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetSyncedGCInfo",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                247,
                                40
                            ],
                            "name": "teamID",
                            "start": [
                                247,
                                34
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        247,
                        45
                    ],
                    "returns": [
                        {
                            "name": "allyTeamID",
                            "type": "function.return",
                            "view": "integer?"
                        }
                    ],
                    "start": [
                        247,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetTeamAllyTeamID(teamID: integer)\n  -> allyTeamID: integer?"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    247,
                    33
                ],
                "name": "GetTeamAllyTeamID",
                "start": [
                    247,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetTeamAllyTeamID",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*return* `r` — factor from 0 to 1\n\n@*return* `g` — factor from 0 to 1\n\n@*return* `b` — factor from 0 to 1\n\n@*return* `a` — factor from 0 to 1",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                619,
                                35
                            ],
                            "name": "teamID",
                            "start": [
                                619,
                                29
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "@*return* `r` — factor from 0 to 1\n\n@*return* `g` — factor from 0 to 1\n\n@*return* `b` — factor from 0 to 1\n\n@*return* `a` — factor from 0 to 1",
                    "finish": [
                        619,
                        40
                    ],
                    "returns": [
                        {
                            "desc": "factor from 0 to 1",
                            "name": "r",
                            "rawdesc": "factor from 0 to 1",
                            "type": "function.return",
                            "view": "number?"
                        },
                        {
                            "desc": "factor from 0 to 1",
                            "name": "g",
                            "rawdesc": "factor from 0 to 1",
                            "type": "function.return",
                            "view": "number?"
                        },
                        {
                            "desc": "factor from 0 to 1",
                            "name": "b",
                            "rawdesc": "factor from 0 to 1",
                            "type": "function.return",
                            "view": "number?"
                        },
                        {
                            "desc": "factor from 0 to 1",
                            "name": "a",
                            "rawdesc": "factor from 0 to 1",
                            "type": "function.return",
                            "view": "number?"
                        }
                    ],
                    "start": [
                        619,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetTeamColor(teamID: integer)\n  -> r: number?\n  2. g: number?\n  3. b: number?\n  4. a: number?"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    619,
                    28
                ],
                "name": "GetTeamColor",
                "start": [
                    619,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetTeamColor",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Gets team damage dealt/received totals\n\nReturns a team's damage stats. Note that all damage is counted,\nincluding self-inflicted and unconfirmed out-of-sight.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                288,
                                41
                            ],
                            "name": "teamID",
                            "start": [
                                288,
                                35
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Gets team damage dealt/received totals\n\nReturns a team's damage stats. Note that all damage is counted,\nincluding self-inflicted and unconfirmed out-of-sight.",
                    "finish": [
                        288,
                        46
                    ],
                    "rawdesc": "Gets team damage dealt/received totals\n\nReturns a team's damage stats. Note that all damage is counted,\nincluding self-inflicted and unconfirmed out-of-sight.",
                    "returns": [
                        {
                            "name": "damageDealt",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "damageReceived",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        288,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetTeamDamageStats(teamID: integer)\n  -> damageDealt: number\n  2. damageReceived: number"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    288,
                    34
                ],
                "name": "GetTeamDamageStats",
                "rawdesc": "Gets team damage dealt/received totals\n\nReturns a team's damage stats. Note that all damage is counted,\nincluding self-inflicted and unconfirmed out-of-sight.",
                "start": [
                    288,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetTeamDamageStats",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `getTeamKeys` — (Default: true) whether to return the customTeamKeys table\n\n@*return* `teamID`\n\n@*return* `leader`\n\n@*return* `isDead`\n\n@*return* `hasAI`\n\n@*return* `side`\n\n@*return* `allyTeam`\n\n@*return* `incomeMultiplier`\n\n@*return* `customTeamKeys` — when getTeamKeys is true, otherwise nil",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                243,
                                34
                            ],
                            "name": "teamID",
                            "start": [
                                243,
                                28
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "desc": "(Default: true) whether to return the customTeamKeys table",
                            "finish": [
                                243,
                                47
                            ],
                            "name": "getTeamKeys",
                            "rawdesc": "(Default: true) whether to return the customTeamKeys table",
                            "start": [
                                243,
                                36
                            ],
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "@*param* `getTeamKeys` — (Default: true) whether to return the customTeamKeys table\n\n@*return* `teamID`\n\n@*return* `leader`\n\n@*return* `isDead`\n\n@*return* `hasAI`\n\n@*return* `side`\n\n@*return* `allyTeam`\n\n@*return* `incomeMultiplier`\n\n@*return* `customTeamKeys` — when getTeamKeys is true, otherwise nil",
                    "finish": [
                        243,
                        52
                    ],
                    "returns": [
                        {
                            "name": "teamID",
                            "type": "function.return",
                            "view": "number?"
                        },
                        {
                            "name": "leader",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "isDead",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "hasAI",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "side",
                            "type": "function.return",
                            "view": "string"
                        },
                        {
                            "name": "allyTeam",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "incomeMultiplier",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "desc": "when getTeamKeys is true, otherwise nil",
                            "name": "customTeamKeys",
                            "rawdesc": "when getTeamKeys is true, otherwise nil",
                            "type": "function.return",
                            "view": "table<string, string>"
                        }
                    ],
                    "start": [
                        243,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetTeamInfo(teamID: integer, getTeamKeys?: boolean)\n  -> teamID: number?\n  2. leader: number\n  3. isDead: number\n  4. hasAI: number\n  5. side: string\n  6. allyTeam: number\n  7. incomeMultiplier: number\n  8. customTeamKeys: table<string, string>"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    243,
                    27
                ],
                "name": "GetTeamInfo",
                "start": [
                    243,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetTeamInfo",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `allyTeamID` — (Default: -1) to filter teams belonging to when >= 0\n\n@*return* `list` — of teamIDs",
                "extends": {
                    "args": [
                        {
                            "desc": "(Default: -1) to filter teams belonging to when >= 0",
                            "finish": [
                                226,
                                38
                            ],
                            "name": "allyTeamID",
                            "rawdesc": "(Default: -1) to filter teams belonging to when >= 0",
                            "start": [
                                226,
                                28
                            ],
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "@*param* `allyTeamID` — (Default: -1) to filter teams belonging to when >= 0\n\n@*return* `list` — of teamIDs",
                    "finish": [
                        226,
                        43
                    ],
                    "returns": [
                        {
                            "desc": "of teamIDs",
                            "name": "list",
                            "rawdesc": "of teamIDs",
                            "type": "function.return",
                            "view": "number[]?"
                        }
                    ],
                    "start": [
                        226,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetTeamList(allyTeamID?: integer)\n  -> list: number[]?"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    226,
                    27
                ],
                "name": "GetTeamList",
                "start": [
                    226,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetTeamList",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                329,
                                35
                            ],
                            "name": "teamID",
                            "start": [
                                329,
                                29
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        329,
                        40
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": [
                        329,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetTeamLuaAI(teamID: integer)\n  -> string"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    329,
                    28
                ],
                "name": "GetTeamLuaAI",
                "start": [
                    329,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetTeamLuaAI",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Returns a team's unit cap.\n\nAlso returns the current unit count for readable teams as the 2nd value.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                338,
                                38
                            ],
                            "name": "teamID",
                            "start": [
                                338,
                                32
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Returns a team's unit cap.\n\nAlso returns the current unit count for readable teams as the 2nd value.",
                    "finish": [
                        338,
                        43
                    ],
                    "rawdesc": "Returns a team's unit cap.\n\nAlso returns the current unit count for readable teams as the 2nd value.",
                    "returns": [
                        {
                            "name": "maxUnits",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "currentUnits",
                            "type": "function.return",
                            "view": "number?"
                        }
                    ],
                    "start": [
                        338,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetTeamMaxUnits(teamID: integer)\n  -> maxUnits: number\n  2. currentUnits: number?"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    338,
                    31
                ],
                "name": "GetTeamMaxUnits",
                "rawdesc": "Returns a team's unit cap.\n\nAlso returns the current unit count for readable teams as the 2nd value.",
                "start": [
                    338,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetTeamMaxUnits",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*return* `r` — factor from 0 to 1\n\n@*return* `g` — factor from 0 to 1\n\n@*return* `b` — factor from 0 to 1\n\n@*return* `a` — factor from 0 to 1",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                626,
                                39
                            ],
                            "name": "teamID",
                            "start": [
                                626,
                                33
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "@*return* `r` — factor from 0 to 1\n\n@*return* `g` — factor from 0 to 1\n\n@*return* `b` — factor from 0 to 1\n\n@*return* `a` — factor from 0 to 1",
                    "finish": [
                        626,
                        44
                    ],
                    "returns": [
                        {
                            "desc": "factor from 0 to 1",
                            "name": "r",
                            "rawdesc": "factor from 0 to 1",
                            "type": "function.return",
                            "view": "number?"
                        },
                        {
                            "desc": "factor from 0 to 1",
                            "name": "g",
                            "rawdesc": "factor from 0 to 1",
                            "type": "function.return",
                            "view": "number?"
                        },
                        {
                            "desc": "factor from 0 to 1",
                            "name": "b",
                            "rawdesc": "factor from 0 to 1",
                            "type": "function.return",
                            "view": "number?"
                        },
                        {
                            "desc": "factor from 0 to 1",
                            "name": "a",
                            "rawdesc": "factor from 0 to 1",
                            "type": "function.return",
                            "view": "number?"
                        }
                    ],
                    "start": [
                        626,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetTeamOrigColor(teamID: integer)\n  -> r: number?\n  2. g: number?\n  3. b: number?\n  4. a: number?"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    626,
                    32
                ],
                "name": "GetTeamOrigColor",
                "start": [
                    626,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetTeamOrigColor",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "```lua\nresource:\n    | \"metal\"\n    | \"energy\"\n    | \"m\"\n    | \"e\"\n```",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                278,
                                43
                            ],
                            "name": "teamID",
                            "start": [
                                278,
                                37
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                278,
                                53
                            ],
                            "name": "resource",
                            "start": [
                                278,
                                45
                            ],
                            "type": "local",
                            "view": "\"e\"|\"energy\"|\"m\"|\"metal\""
                        }
                    ],
                    "desc": "```lua\nresource:\n    | \"metal\"\n    | \"energy\"\n    | \"m\"\n    | \"e\"\n```",
                    "finish": [
                        278,
                        58
                    ],
                    "rawdesc": "```lua\nresource:\n    | \"metal\"\n    | \"energy\"\n    | \"m\"\n    | \"e\"\n```",
                    "returns": [
                        {
                            "name": "used",
                            "type": "function.return",
                            "view": "number?"
                        },
                        {
                            "name": "produced",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "excessed",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "received",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "sent",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        278,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetTeamResourceStats(teamID: integer, resource: \"e\"|\"energy\"|\"m\"|\"metal\")\n  -> used: number?\n  2. produced: number\n  3. excessed: number\n  4. received: number\n  5. sent: number"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    278,
                    36
                ],
                "name": "GetTeamResourceStats",
                "rawdesc": "```lua\nresource:\n    | \"metal\"\n    | \"energy\"\n    | \"m\"\n    | \"e\"\n```",
                "start": [
                    278,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetTeamResourceStats",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "```lua\nresource:\n    | \"metal\"\n    | \"energy\"\n    | \"m\"\n    | \"e\"\n```",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                260,
                                39
                            ],
                            "name": "teamID",
                            "start": [
                                260,
                                33
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                260,
                                49
                            ],
                            "name": "resource",
                            "start": [
                                260,
                                41
                            ],
                            "type": "local",
                            "view": "\"e\"|\"energy\"|\"m\"|\"metal\""
                        }
                    ],
                    "desc": "```lua\nresource:\n    | \"metal\"\n    | \"energy\"\n    | \"m\"\n    | \"e\"\n```",
                    "finish": [
                        260,
                        54
                    ],
                    "rawdesc": "```lua\nresource:\n    | \"metal\"\n    | \"energy\"\n    | \"m\"\n    | \"e\"\n```",
                    "returns": [
                        {
                            "name": "currentLevel",
                            "type": "function.return",
                            "view": "number?"
                        },
                        {
                            "name": "storage",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "pull",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "income",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "expense",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "share",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "sent",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "received",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "excess",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        260,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetTeamResources(teamID: integer, resource: \"e\"|\"energy\"|\"m\"|\"metal\")\n  -> currentLevel: number?\n  2. storage: number\n  3. pull: number\n  4. income: number\n  5. expense: number\n  6. share: number\n  7. sent: number\n  8. received: number\n  9. excess: number"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    260,
                    32
                ],
                "name": "GetTeamResources",
                "rawdesc": "```lua\nresource:\n    | \"metal\"\n    | \"energy\"\n    | \"m\"\n    | \"e\"\n```",
                "start": [
                    260,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetTeamResources",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `ruleRef` — the rule index or name",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                102,
                                40
                            ],
                            "name": "teamID",
                            "start": [
                                102,
                                34
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "desc": "the rule index or name",
                            "finish": [
                                102,
                                49
                            ],
                            "name": "ruleRef",
                            "rawdesc": "the rule index or name",
                            "start": [
                                102,
                                42
                            ],
                            "type": "local",
                            "view": "string|number"
                        }
                    ],
                    "desc": "@*param* `ruleRef` — the rule index or name",
                    "finish": [
                        102,
                        54
                    ],
                    "returns": [
                        {
                            "name": "value",
                            "type": "function.return",
                            "view": "string|number|nil"
                        }
                    ],
                    "start": [
                        102,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetTeamRulesParam(teamID: integer, ruleRef: string|number)\n  -> value: string|number|nil"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    102,
                    33
                ],
                "name": "GetTeamRulesParam",
                "start": [
                    102,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetTeamRulesParam",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*return* `rulesParams` — map with rules names as key and values as values",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                81,
                                41
                            ],
                            "name": "teamID",
                            "start": [
                                81,
                                35
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "@*return* `rulesParams` — map with rules names as key and values as values",
                    "finish": [
                        81,
                        46
                    ],
                    "returns": [
                        {
                            "desc": "map with rules names as key and values as values",
                            "name": "rulesParams",
                            "rawdesc": "map with rules names as key and values as values",
                            "type": "function.return",
                            "view": "RulesParams"
                        }
                    ],
                    "start": [
                        81,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetTeamRulesParams(teamID: integer)\n  -> rulesParams: RulesParams"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    81,
                    34
                ],
                "name": "GetTeamRulesParams",
                "start": [
                    81,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetTeamRulesParams",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                216,
                                43
                            ],
                            "name": "teamID",
                            "start": [
                                216,
                                37
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        216,
                        48
                    ],
                    "returns": [
                        {
                            "name": "x",
                            "type": "function.return",
                            "view": "number?"
                        },
                        {
                            "name": "y",
                            "type": "function.return",
                            "view": "number?"
                        },
                        {
                            "name": "x",
                            "type": "function.return",
                            "view": "number?"
                        }
                    ],
                    "start": [
                        216,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetTeamStartPosition(teamID: integer)\n  -> x: number?\n  2. y: number?\n  3. x: number?"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    216,
                    36
                ],
                "name": "GetTeamStartPosition",
                "start": [
                    216,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetTeamStartPosition",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Get the number of history entries.\n\n@*return* `historyCount` — The number of history entries, or `nil` if unable to resolve team.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                317,
                                42
                            ],
                            "name": "teamID",
                            "start": [
                                317,
                                36
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Get the number of history entries.\n\n@*return* `historyCount` — The number of history entries, or `nil` if unable to resolve team.",
                    "finish": [
                        317,
                        47
                    ],
                    "rawdesc": "Get the number of history entries.",
                    "returns": [
                        {
                            "desc": "The number of history entries, or `nil` if unable to resolve team.",
                            "name": "historyCount",
                            "rawdesc": "The number of history entries, or `nil` if unable to resolve team.",
                            "type": "function.return",
                            "view": "integer?"
                        }
                    ],
                    "start": [
                        317,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetTeamStatsHistory(teamID: integer)\n  -> historyCount: integer?"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    317,
                    35
                ],
                "name": "GetTeamStatsHistory",
                "rawdesc": "Get the number of history entries.",
                "start": [
                    317,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Get team stats history.\n\n@*param* `endIndex` — (Default: startIndex)\n\n@*return* `The` — team stats history, or `nil` if unable to resolve team.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                325,
                                42
                            ],
                            "name": "teamID",
                            "start": [
                                325,
                                36
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                325,
                                54
                            ],
                            "name": "startIndex",
                            "start": [
                                325,
                                44
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "desc": "(Default: startIndex)",
                            "finish": [
                                325,
                                64
                            ],
                            "name": "endIndex",
                            "rawdesc": "(Default: startIndex)",
                            "start": [
                                325,
                                56
                            ],
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "Get team stats history.\n\n@*param* `endIndex` — (Default: startIndex)\n\n@*return* `The` — team stats history, or `nil` if unable to resolve team.",
                    "finish": [
                        325,
                        69
                    ],
                    "rawdesc": "Get team stats history.",
                    "returns": [
                        {
                            "desc": "team stats history, or `nil` if unable to resolve team.",
                            "name": "The",
                            "rawdesc": "team stats history, or `nil` if unable to resolve team.",
                            "type": "function.return",
                            "view": "TeamStats[]"
                        }
                    ],
                    "start": [
                        325,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetTeamStatsHistory(teamID: integer, startIndex: integer, endIndex?: integer)\n  -> The: TeamStats[]"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    325,
                    35
                ],
                "name": "GetTeamStatsHistory",
                "rawdesc": "Get team stats history.",
                "start": [
                    325,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetTeamStatsHistory",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                425,
                                39
                            ],
                            "name": "teamID",
                            "start": [
                                425,
                                33
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        425,
                        44
                    ],
                    "returns": [
                        {
                            "name": "count",
                            "type": "function.return",
                            "view": "number?"
                        }
                    ],
                    "start": [
                        425,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetTeamUnitCount(teamID: integer)\n  -> count: number?"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    425,
                    32
                ],
                "name": "GetTeamUnitCount",
                "start": [
                    425,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetTeamUnitCount",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                421,
                                42
                            ],
                            "name": "teamID",
                            "start": [
                                421,
                                36
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                421,
                                53
                            ],
                            "name": "unitDefID",
                            "start": [
                                421,
                                44
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        421,
                        58
                    ],
                    "returns": [
                        {
                            "name": "count",
                            "type": "function.return",
                            "view": "number?"
                        }
                    ],
                    "start": [
                        421,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetTeamUnitDefCount(teamID: integer, unitDefID: integer)\n  -> count: number?"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    421,
                    35
                ],
                "name": "GetTeamUnitDefCount",
                "start": [
                    421,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetTeamUnitDefCount",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                269,
                                39
                            ],
                            "name": "teamID",
                            "start": [
                                269,
                                33
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        269,
                        44
                    ],
                    "returns": [
                        {
                            "name": "killed",
                            "type": "function.return",
                            "view": "number?"
                        },
                        {
                            "name": "died",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "capturedBy",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "capturedFrom",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "received",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "sent",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        269,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetTeamUnitStats(teamID: integer)\n  -> killed: number?\n  2. died: number\n  3. capturedBy: number\n  4. capturedFrom: number\n  5. received: number\n  6. sent: number"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    269,
                    32
                ],
                "name": "GetTeamUnitStats",
                "start": [
                    269,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetTeamUnitStats",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                403,
                                35
                            ],
                            "name": "teamID",
                            "start": [
                                403,
                                29
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        403,
                        40
                    ],
                    "returns": [
                        {
                            "name": "unitIDs",
                            "type": "function.return",
                            "view": "number[]?"
                        }
                    ],
                    "start": [
                        403,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetTeamUnits(teamID: integer)\n  -> unitIDs: number[]?"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    403,
                    28
                ],
                "name": "GetTeamUnits",
                "start": [
                    403,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetTeamUnits",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                416,
                                41
                            ],
                            "name": "teamID",
                            "start": [
                                416,
                                35
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                416,
                                53
                            ],
                            "name": "unitDefIDs",
                            "start": [
                                416,
                                43
                            ],
                            "type": "local",
                            "view": "number|number[]"
                        }
                    ],
                    "finish": [
                        416,
                        58
                    ],
                    "returns": [
                        {
                            "name": "unitIDs",
                            "type": "function.return",
                            "view": "number[]?"
                        }
                    ],
                    "start": [
                        416,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetTeamUnitsByDefs(teamID: integer, unitDefIDs: number|number[])\n  -> unitIDs: number[]?"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    416,
                    34
                ],
                "name": "GetTeamUnitsByDefs",
                "start": [
                    416,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetTeamUnitsByDefs",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*return* `countByUnit` — A table where keys are unitDefIDs and values are counts.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                411,
                                41
                            ],
                            "name": "teamID",
                            "start": [
                                411,
                                35
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "@*return* `countByUnit` — A table where keys are unitDefIDs and values are counts.",
                    "finish": [
                        411,
                        46
                    ],
                    "returns": [
                        {
                            "desc": "A table where keys are unitDefIDs and values are counts.",
                            "name": "countByUnit",
                            "rawdesc": "A table where keys are unitDefIDs and values are counts.",
                            "type": "function.return",
                            "view": "table<number, number>?"
                        }
                    ],
                    "start": [
                        411,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetTeamUnitsCounts(teamID: integer)\n  -> countByUnit: table<number, number>?"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    411,
                    34
                ],
                "name": "GetTeamUnitsCounts",
                "start": [
                    411,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetTeamUnitsCounts",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*return* `unitsByDef` — A table where keys are unitDefIDs and values are unitIDs",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                407,
                                41
                            ],
                            "name": "teamID",
                            "start": [
                                407,
                                35
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "@*return* `unitsByDef` — A table where keys are unitDefIDs and values are unitIDs",
                    "finish": [
                        407,
                        46
                    ],
                    "returns": [
                        {
                            "desc": "A table where keys are unitDefIDs and values are unitIDs",
                            "name": "unitsByDef",
                            "rawdesc": "A table where keys are unitDefIDs and values are unitIDs",
                            "type": "function.return",
                            "view": "table<integer, integer>"
                        }
                    ],
                    "start": [
                        407,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetTeamUnitsSorted(teamID: integer)\n  -> unitsByDef: table<integer, integer>"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    407,
                    34
                ],
                "name": "GetTeamUnitsSorted",
                "start": [
                    407,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetTeamUnitsSorted",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1403,
                                50
                            ],
                            "name": "terrainTypeInfo",
                            "start": [
                                1403,
                                35
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "finish": [
                        1403,
                        55
                    ],
                    "returns": [
                        {
                            "name": "index",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "name",
                            "type": "function.return",
                            "view": "string"
                        },
                        {
                            "name": "hardness",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "tankSpeed",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "kbotSpeed",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "hoverSpeed",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "shipSpeed",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "receiveTracks",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        1403,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetTerrainTypeData(terrainTypeInfo: number)\n  -> index: number\n  2. name: string\n  3. hardness: number\n  4. tankSpeed: number\n  5. kbotSpeed: number\n  6. hoverSpeed: number\n  7. shipSpeed: number\n  8. receiveTracks: boolean"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1403,
                    34
                ],
                "name": "GetTerrainTypeData",
                "start": [
                    1403,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetTerrainTypeData",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [],
                    "finish": [
                        61,
                        30
                    ],
                    "returns": [
                        {
                            "name": "tidalStrength",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        61,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetTidal()\n  -> tidalStrength: number"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    61,
                    24
                ],
                "name": "GetTidal",
                "start": [
                    61,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetTidal",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Get a timer with millisecond resolution",
                "extends": {
                    "args": [],
                    "desc": "Get a timer with millisecond resolution",
                    "finish": [
                        67,
                        30
                    ],
                    "rawdesc": "Get a timer with millisecond resolution",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": [
                        67,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetTimer()\n  -> integer"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    67,
                    24
                ],
                "name": "GetTimer",
                "rawdesc": "Get a timer with millisecond resolution",
                "start": [
                    67,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetTimer",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Get a timer with microsecond resolution",
                "extends": {
                    "args": [],
                    "desc": "Get a timer with microsecond resolution",
                    "finish": [
                        72,
                        36
                    ],
                    "rawdesc": "Get a timer with microsecond resolution",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": [
                        72,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetTimerMicros()\n  -> integer"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    72,
                    30
                ],
                "name": "GetTimerMicros",
                "rawdesc": "Get a timer with microsecond resolution",
                "start": [
                    72,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetTimerMicros",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                632,
                                38
                            ],
                            "name": "unitID",
                            "start": [
                                632,
                                32
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        632,
                        43
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number?"
                        }
                    ],
                    "start": [
                        632,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitAllyTeam(unitID: integer)\n  -> number?"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    632,
                    31
                ],
                "name": "GetUnitAllyTeam",
                "start": [
                    632,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitAllyTeam",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*return* `nil` — when unitID cannot be parsed",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                239,
                                48
                            ],
                            "name": "unitID",
                            "start": [
                                239,
                                42
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "@*return* `nil` — when unitID cannot be parsed",
                    "finish": [
                        239,
                        53
                    ],
                    "returns": [
                        {
                            "desc": "when unitID cannot be parsed",
                            "name": "nil",
                            "rawdesc": "when unitID cannot be parsed",
                            "type": "function.return",
                            "view": "boolean?"
                        }
                    ],
                    "start": [
                        239,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitAlwaysUpdateMatrix(unitID: integer)\n  -> nil: boolean?"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    239,
                    41
                ],
                "name": "GetUnitAlwaysUpdateMatrix",
                "start": [
                    239,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitAlwaysUpdateMatrix",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                577,
                                37
                            ],
                            "name": "unitID",
                            "start": [
                                577,
                                31
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        577,
                        42
                    ],
                    "returns": [
                        {
                            "name": "armored",
                            "type": "function.return",
                            "view": "boolean|nil"
                        },
                        {
                            "name": "armorMultiple",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        577,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitArmored(unitID: integer)\n  -> armored: boolean|nil\n  2. armorMultiple: number"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    577,
                    30
                ],
                "name": "GetUnitArmored",
                "start": [
                    577,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitArmored",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Returns the centroid of an array of units\n\nReturns nil for an empty array\n\n@*param* `units` — { unitID, unitID, ... }",
                "extends": {
                    "args": [
                        {
                            "desc": "{ unitID, unitID, ... }",
                            "finish": [
                                493,
                                42
                            ],
                            "name": "units",
                            "rawdesc": "{ unitID, unitID, ... }",
                            "start": [
                                493,
                                37
                            ],
                            "type": "local",
                            "view": "table"
                        }
                    ],
                    "desc": "Returns the centroid of an array of units\n\nReturns nil for an empty array\n\n@*param* `units` — { unitID, unitID, ... }",
                    "finish": [
                        493,
                        47
                    ],
                    "rawdesc": "Returns the centroid of an array of units\n\nReturns nil for an empty array",
                    "returns": [
                        {
                            "name": "centerX",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "centerY",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "centerZ",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        493,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitArrayCentroid(units: table)\n  -> centerX: number\n  2. centerY: number\n  3. centerZ: number"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    493,
                    36
                ],
                "name": "GetUnitArrayCentroid",
                "rawdesc": "Returns the centroid of an array of units\n\nReturns nil for an empty array",
                "start": [
                    493,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitArrayCentroid",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                748,
                                42
                            ],
                            "name": "unitID",
                            "start": [
                                748,
                                36
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        748,
                        47
                    ],
                    "returns": [
                        {
                            "name": "posX",
                            "type": "function.return",
                            "view": "number?"
                        },
                        {
                            "name": "posY",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "posZ",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        748,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitBasePosition(unitID: integer)\n  -> posX: number?\n  2. posY: number\n  3. posZ: number"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    748,
                    35
                ],
                "name": "GetUnitBasePosition",
                "start": [
                    748,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitBasePosition",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1034,
                                38
                            ],
                            "name": "unitID",
                            "start": [
                                1034,
                                32
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        1034,
                        43
                    ],
                    "returns": [
                        {
                            "name": "isBlocking",
                            "type": "function.return",
                            "view": "boolean|nil"
                        },
                        {
                            "name": "isSolidObjectCollidable",
                            "type": "function.return",
                            "view": "boolean"
                        },
                        {
                            "name": "isProjectileCollidable",
                            "type": "function.return",
                            "view": "boolean"
                        },
                        {
                            "name": "isRaySegmentCollidable",
                            "type": "function.return",
                            "view": "boolean"
                        },
                        {
                            "name": "crushable",
                            "type": "function.return",
                            "view": "boolean"
                        },
                        {
                            "name": "blockEnemyPushing",
                            "type": "function.return",
                            "view": "boolean"
                        },
                        {
                            "name": "blockHeightChanges",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        1034,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitBlocking(unitID: integer)\n  -> isBlocking: boolean|nil\n  2. isSolidObjectCollidable: boolean\n  3. isProjectileCollidable: boolean\n  4. isRaySegmentCollidable: boolean\n  5. crushable: boolean\n  6. blockEnemyPushing: boolean\n  7. blockHeightChanges: boolean"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1034,
                    31
                ],
                "name": "GetUnitBlocking",
                "start": [
                    1034,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitBlocking",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                777,
                                41
                            ],
                            "name": "unitID",
                            "start": [
                                777,
                                35
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        777,
                        46
                    ],
                    "start": [
                        777,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitBuildFacing(unitID: integer)"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    777,
                    34
                ],
                "name": "GetUnitBuildFacing",
                "start": [
                    777,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitBuildFacing",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                828,
                                41
                            ],
                            "name": "unitID",
                            "start": [
                                828,
                                35
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        828,
                        46
                    ],
                    "start": [
                        828,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitBuildParams(unitID: integer)"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    828,
                    34
                ],
                "name": "GetUnitBuildParams",
                "start": [
                    828,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitBuildParams",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nGets the unit's radius for when targeted by build, repair, reclaim-type commands.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                724,
                                43
                            ],
                            "name": "unitID",
                            "start": [
                                724,
                                37
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "\nGets the unit's radius for when targeted by build, repair, reclaim-type commands.",
                    "finish": [
                        724,
                        48
                    ],
                    "rawdesc": "\nGets the unit's radius for when targeted by build, repair, reclaim-type commands.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number?"
                        }
                    ],
                    "start": [
                        724,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitBuildeeRadius(unitID: integer)\n  -> number?"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    724,
                    36
                ],
                "name": "GetUnitBuildeeRadius",
                "rawdesc": "\nGets the unit's radius for when targeted by build, repair, reclaim-type commands.",
                "start": [
                    724,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitBuildeeRadius",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1115,
                                38
                            ],
                            "name": "unitID",
                            "start": [
                                1115,
                                32
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        1115,
                        43
                    ],
                    "start": [
                        1115,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitCmdDescs(unitID: integer)"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1115,
                    31
                ],
                "name": "GetUnitCmdDescs",
                "start": [
                    1115,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitCmdDescs",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1009,
                                49
                            ],
                            "name": "unitID",
                            "start": [
                                1009,
                                43
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        1009,
                        54
                    ],
                    "start": [
                        1009,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitCollisionVolumeData(unitID: integer)"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1009,
                    42
                ],
                "name": "GetUnitCollisionVolumeData",
                "start": [
                    1009,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitCollisionVolumeData",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Get the commands for a unit.\n\nSame as `Spring.GetCommandQueue`\n\n@*param* `count` — Number of commands to return, `-1` returns all commands, `0` returns command count.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1051,
                                38
                            ],
                            "name": "unitID",
                            "start": [
                                1051,
                                32
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "desc": "Number of commands to return, `-1` returns all commands, `0` returns command count.",
                            "finish": [
                                1051,
                                45
                            ],
                            "name": "count",
                            "rawdesc": "Number of commands to return, `-1` returns all commands, `0` returns command count.",
                            "start": [
                                1051,
                                40
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Get the commands for a unit.\n\nSame as `Spring.GetCommandQueue`\n\n@*param* `count` — Number of commands to return, `-1` returns all commands, `0` returns command count.",
                    "finish": [
                        1051,
                        50
                    ],
                    "rawdesc": "Get the commands for a unit.\n\nSame as `Spring.GetCommandQueue`",
                    "returns": [
                        {
                            "name": "commands",
                            "type": "function.return",
                            "view": "Command[]"
                        }
                    ],
                    "start": [
                        1051,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitCommands(unitID: integer, count: integer)\n  -> commands: Command[]"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1051,
                    31
                ],
                "name": "GetUnitCommands",
                "rawdesc": "Get the commands for a unit.\n\nSame as `Spring.GetCommandQueue`",
                "start": [
                    1051,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Get the count of commands for a unit.\n\nSame as `Spring.GetCommandQueue`\n\n@*param* `count` — Returns the number of commands in the units queue.\n\n@*return* `The` — number of commands in the unit queue.\n\n```lua\ncount:\n    | 0\n```",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1060,
                                38
                            ],
                            "name": "unitID",
                            "start": [
                                1060,
                                32
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "desc": "Returns the number of commands in the units queue.",
                            "finish": [
                                1060,
                                45
                            ],
                            "name": "count",
                            "rawdesc": "Returns the number of commands in the units queue.",
                            "start": [
                                1060,
                                40
                            ],
                            "type": "local",
                            "view": "0"
                        }
                    ],
                    "desc": "Get the count of commands for a unit.\n\nSame as `Spring.GetCommandQueue`\n\n@*param* `count` — Returns the number of commands in the units queue.\n\n@*return* `The` — number of commands in the unit queue.\n\n```lua\ncount:\n    | 0\n```",
                    "finish": [
                        1060,
                        50
                    ],
                    "rawdesc": "Get the count of commands for a unit.\n\nSame as `Spring.GetCommandQueue`\n\n\n```lua\ncount:\n    | 0\n```",
                    "returns": [
                        {
                            "desc": "number of commands in the unit queue.",
                            "name": "The",
                            "rawdesc": "number of commands in the unit queue.",
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": [
                        1060,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitCommands(unitID: integer, count: 0)\n  -> The: integer"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1060,
                    31
                ],
                "name": "GetUnitCommands",
                "rawdesc": "Get the count of commands for a unit.\n\nSame as `Spring.GetCommandQueue`\n\n\n```lua\ncount:\n    | 0\n```",
                "start": [
                    1060,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitCommands",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*return* `cost` — The cost of the unit, or `nil` if invalid.\n\n@*return* `buildTime` — The build time the unit, or `nil` if invalid.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                700,
                                39
                            ],
                            "name": "unitID",
                            "start": [
                                700,
                                33
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "@*return* `cost` — The cost of the unit, or `nil` if invalid.\n\n@*return* `buildTime` — The build time the unit, or `nil` if invalid.",
                    "finish": [
                        700,
                        44
                    ],
                    "returns": [
                        {
                            "desc": "The cost of the unit, or `nil` if invalid.",
                            "name": "cost",
                            "rawdesc": "The cost of the unit, or `nil` if invalid.",
                            "type": "function.return",
                            "view": "ResourceCost?"
                        },
                        {
                            "desc": "The build time the unit, or `nil` if invalid.",
                            "name": "buildTime",
                            "rawdesc": "The build time the unit, or `nil` if invalid.",
                            "type": "function.return",
                            "view": "number?"
                        }
                    ],
                    "start": [
                        700,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitCostTable(unitID: integer)\n  -> cost: ResourceCost?\n  2. buildTime: number?"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    700,
                    32
                ],
                "name": "GetUnitCostTable",
                "start": [
                    700,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitCostTable",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                690,
                                35
                            ],
                            "name": "unitID",
                            "start": [
                                690,
                                29
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        690,
                        40
                    ],
                    "returns": [
                        {
                            "name": "buildTime",
                            "type": "function.return",
                            "view": "number?"
                        },
                        {
                            "name": "metalCost",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "energyCost",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        690,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitCosts(unitID: integer)\n  -> buildTime: number?\n  2. metalCost: number\n  3. energyCost: number"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    690,
                    28
                ],
                "name": "GetUnitCosts",
                "start": [
                    690,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitCosts",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                814,
                                47
                            ],
                            "name": "unitID",
                            "start": [
                                814,
                                41
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        814,
                        52
                    ],
                    "start": [
                        814,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitCurrentBuildPower(unitID: integer)"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    814,
                    40
                ],
                "name": "GetUnitCurrentBuildPower",
                "start": [
                    814,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitCurrentBuildPower",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `unitID` — Unit id.\n\n@*param* `cmdIndex` — Command index to get. If negative will count from the end of the queue,\n\nfor example -1 will be the last command.",
                "extends": {
                    "args": [
                        {
                            "desc": "Unit id.",
                            "finish": [
                                1042,
                                44
                            ],
                            "name": "unitID",
                            "rawdesc": "Unit id.",
                            "start": [
                                1042,
                                38
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "desc": "Command index to get. If negative will count from the end of the queue,",
                            "finish": [
                                1042,
                                54
                            ],
                            "name": "cmdIndex",
                            "rawdesc": "Command index to get. If negative will count from the end of the queue,",
                            "start": [
                                1042,
                                46
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "@*param* `unitID` — Unit id.\n\n@*param* `cmdIndex` — Command index to get. If negative will count from the end of the queue,\n\nfor example -1 will be the last command.",
                    "finish": [
                        1042,
                        59
                    ],
                    "rawdesc": "for example -1 will be the last command.",
                    "start": [
                        1042,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitCurrentCommand(unitID: integer, cmdIndex: integer)"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1042,
                    37
                ],
                "name": "GetUnitCurrentCommand",
                "rawdesc": "for example -1 will be the last command.",
                "start": [
                    1042,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitCurrentCommand",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1022,
                                46
                            ],
                            "name": "unitDefID",
                            "start": [
                                1022,
                                37
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        1022,
                        51
                    ],
                    "start": [
                        1022,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitDefDimensions(unitDefID: integer)"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1022,
                    36
                ],
                "name": "GetUnitDefDimensions",
                "start": [
                    1022,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitDefDimensions",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                624,
                                35
                            ],
                            "name": "unitID",
                            "start": [
                                624,
                                29
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        624,
                        40
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number?"
                        }
                    ],
                    "start": [
                        624,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitDefID(unitID: integer)\n  -> number?"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    624,
                    28
                ],
                "name": "GetUnitDefID",
                "start": [
                    624,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitDefID",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                766,
                                39
                            ],
                            "name": "unitID",
                            "start": [
                                766,
                                33
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        766,
                        44
                    ],
                    "returns": [
                        {
                            "name": "dirX",
                            "type": "function.return",
                            "view": "number?"
                        },
                        {
                            "name": "dirY",
                            "type": "function.return",
                            "view": "number?"
                        },
                        {
                            "name": "dirZ",
                            "type": "function.return",
                            "view": "number?"
                        }
                    ],
                    "start": [
                        766,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitDirection(unitID: integer)\n  -> dirX: number?\n  2. dirY: number?\n  3. dirZ: number?"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    766,
                    32
                ],
                "name": "GetUnitDirection",
                "start": [
                    766,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitDirection",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*return* `nil` — when unitID cannot be parsed",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                243,
                                38
                            ],
                            "name": "unitID",
                            "start": [
                                243,
                                32
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "@*return* `nil` — when unitID cannot be parsed",
                    "finish": [
                        243,
                        43
                    ],
                    "returns": [
                        {
                            "desc": "when unitID cannot be parsed",
                            "name": "nil",
                            "rawdesc": "when unitID cannot be parsed",
                            "type": "function.return",
                            "view": "number?"
                        }
                    ],
                    "start": [
                        243,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitDrawFlag(unitID: integer)\n  -> nil: number?"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    243,
                    31
                ],
                "name": "GetUnitDrawFlag",
                "start": [
                    243,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitDrawFlag",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nUseful for setting move goals manually.\n\n@*param* `buildeeDefID` — or nil\n\n@*return* `effectiveBuildRange` — counted to the center of prospective buildee; buildRange if buildee nil",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                811,
                                49
                            ],
                            "name": "unitID",
                            "start": [
                                811,
                                43
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "desc": "or nil",
                            "finish": [
                                811,
                                63
                            ],
                            "name": "buildeeDefID",
                            "rawdesc": "or nil",
                            "start": [
                                811,
                                51
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "\nUseful for setting move goals manually.\n\n@*param* `buildeeDefID` — or nil\n\n@*return* `effectiveBuildRange` — counted to the center of prospective buildee; buildRange if buildee nil",
                    "finish": [
                        811,
                        68
                    ],
                    "rawdesc": "\nUseful for setting move goals manually.",
                    "returns": [
                        {
                            "desc": "counted to the center of prospective buildee; buildRange if buildee nil",
                            "name": "effectiveBuildRange",
                            "rawdesc": "counted to the center of prospective buildee; buildRange if buildee nil",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        811,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitEffectiveBuildRange(unitID: integer, buildeeDefID: integer)\n  -> effectiveBuildRange: number"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    811,
                    42
                ],
                "name": "GetUnitEffectiveBuildRange",
                "rawdesc": "\nUseful for setting move goals manually.",
                "start": [
                    811,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitEffectiveBuildRange",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*return* `nil` — when unitID cannot be parsed",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                235,
                                44
                            ],
                            "name": "unitID",
                            "start": [
                                235,
                                38
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "@*return* `nil` — when unitID cannot be parsed",
                    "finish": [
                        235,
                        49
                    ],
                    "returns": [
                        {
                            "desc": "when unitID cannot be parsed",
                            "name": "nil",
                            "rawdesc": "when unitID cannot be parsed",
                            "type": "function.return",
                            "view": "boolean?"
                        }
                    ],
                    "start": [
                        235,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitEngineDrawMask(unitID: integer)\n  -> nil: boolean?"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    235,
                    37
                ],
                "name": "GetUnitEngineDrawMask",
                "start": [
                    235,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitEngineDrawMask",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1000,
                                43
                            ],
                            "name": "unitID",
                            "start": [
                                1000,
                                37
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        1000,
                        48
                    ],
                    "start": [
                        1000,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitEstimatedPath(unitID: integer)"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1000,
                    36
                ],
                "name": "GetUnitEstimatedPath",
                "start": [
                    1000,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitEstimatedPath",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*return* `xp` — [0.0; +∞)\n\n@*return* `limXp` — [0.0; 1.0) as experience approaches infinity",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                709,
                                40
                            ],
                            "name": "unitID",
                            "start": [
                                709,
                                34
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "@*return* `xp` — [0.0; +∞)\n\n@*return* `limXp` — [0.0; 1.0) as experience approaches infinity",
                    "finish": [
                        709,
                        45
                    ],
                    "returns": [
                        {
                            "desc": "[0.0; +∞)",
                            "name": "xp",
                            "rawdesc": "[0.0; +∞)",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "desc": "[0.0; 1.0) as experience approaches infinity",
                            "name": "limXp",
                            "rawdesc": "[0.0; 1.0) as experience approaches infinity",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        709,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitExperience(unitID: integer)\n  -> xp: number\n  2. limXp: number"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    709,
                    33
                ],
                "name": "GetUnitExperience",
                "start": [
                    709,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitExperience",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1019,
                                47
                            ],
                            "name": "unitID",
                            "start": [
                                1019,
                                41
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        1019,
                        52
                    ],
                    "start": [
                        1019,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitFeatureSeparation(unitID: integer)"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1019,
                    40
                ],
                "name": "GetUnitFeatureSeparation",
                "start": [
                    1019,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitFeatureSeparation",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                875,
                                38
                            ],
                            "name": "unitID",
                            "start": [
                                875,
                                32
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        875,
                        43
                    ],
                    "start": [
                        875,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitFlanking(unitID: integer)"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    875,
                    31
                ],
                "name": "GetUnitFlanking",
                "start": [
                    875,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitFlanking",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                839,
                                35
                            ],
                            "name": "unitID",
                            "start": [
                                839,
                                29
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        839,
                        40
                    ],
                    "returns": [
                        {
                            "name": "groupID",
                            "type": "function.return",
                            "view": "number?"
                        }
                    ],
                    "start": [
                        839,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitGroup(unitID: integer)\n  -> groupID: number?"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    839,
                    28
                ],
                "name": "GetUnitGroup",
                "start": [
                    839,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitGroup",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Get a unit's carried resources\n\nChecks resources being carried internally by the unit.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                825,
                                44
                            ],
                            "name": "unitID",
                            "start": [
                                825,
                                38
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Get a unit's carried resources\n\nChecks resources being carried internally by the unit.",
                    "finish": [
                        825,
                        49
                    ],
                    "rawdesc": "Get a unit's carried resources\n\nChecks resources being carried internally by the unit.",
                    "returns": [
                        {
                            "name": "storedMetal",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "maxStoredMetal",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "storedEnergy",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "maxStoredEnergy",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        825,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitHarvestStorage(unitID: integer)\n  -> storedMetal: number\n  2. maxStoredMetal: number\n  3. storedEnergy: number\n  4. maxStoredEnergy: number"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    825,
                    37
                ],
                "name": "GetUnitHarvestStorage",
                "rawdesc": "Get a unit's carried resources\n\nChecks resources being carried internally by the unit.",
                "start": [
                    825,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitHarvestStorage",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `convertToRadians` — (Default: false)",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                771,
                                37
                            ],
                            "name": "unitID",
                            "start": [
                                771,
                                31
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "desc": "(Default: false)",
                            "finish": [
                                771,
                                55
                            ],
                            "name": "convertToRadians",
                            "rawdesc": "(Default: false)",
                            "start": [
                                771,
                                39
                            ],
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "@*param* `convertToRadians` — (Default: false)",
                    "finish": [
                        771,
                        60
                    ],
                    "returns": [
                        {
                            "name": "heading",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        771,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitHeading(unitID: integer, convertToRadians?: boolean)\n  -> heading: number"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    771,
                    30
                ],
                "name": "GetUnitHeading",
                "start": [
                    771,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitHeading",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*return* `health`\n\n@*return* `maxHealth`\n\n@*return* `paralyzeDamage`\n\n@*return* `captureProgress`\n\n@*return* `buildProgress` — between 0.0-1.0",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                649,
                                36
                            ],
                            "name": "unitID",
                            "start": [
                                649,
                                30
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "@*return* `health`\n\n@*return* `maxHealth`\n\n@*return* `paralyzeDamage`\n\n@*return* `captureProgress`\n\n@*return* `buildProgress` — between 0.0-1.0",
                    "finish": [
                        649,
                        41
                    ],
                    "returns": [
                        {
                            "name": "health",
                            "type": "function.return",
                            "view": "number?"
                        },
                        {
                            "name": "maxHealth",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "paralyzeDamage",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "captureProgress",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "desc": "between 0.0-1.0",
                            "name": "buildProgress",
                            "rawdesc": "between 0.0-1.0",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        649,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitHealth(unitID: integer)\n  -> health: number?\n  2. maxHealth: number\n  3. paralyzeDamage: number\n  4. captureProgress: number\n  5. buildProgress: number"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    649,
                    29
                ],
                "name": "GetUnitHealth",
                "start": [
                    649,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitHealth",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                713,
                                36
                            ],
                            "name": "unitID",
                            "start": [
                                713,
                                30
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        713,
                        41
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number?"
                        }
                    ],
                    "start": [
                        713,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitHeight(unitID: integer)\n  -> number?"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    713,
                    29
                ],
                "name": "GetUnitHeight",
                "start": [
                    713,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitHeight",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Is builder in build stance\n\nChecks if a builder is in build stance, i.e. can create nanoframes.\nReturns nil for non-builders.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                837,
                                43
                            ],
                            "name": "unitID",
                            "start": [
                                837,
                                37
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Is builder in build stance\n\nChecks if a builder is in build stance, i.e. can create nanoframes.\nReturns nil for non-builders.",
                    "finish": [
                        837,
                        48
                    ],
                    "rawdesc": "Is builder in build stance\n\nChecks if a builder is in build stance, i.e. can create nanoframes.\nReturns nil for non-builders.",
                    "returns": [
                        {
                            "name": "inBuildStance",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        837,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitInBuildStance(unitID: integer)\n  -> inBuildStance: boolean"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    837,
                    36
                ],
                "name": "GetUnitInBuildStance",
                "rawdesc": "Is builder in build stance\n\nChecks if a builder is in build stance, i.e. can create nanoframes.\nReturns nil for non-builders.",
                "start": [
                    837,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitInBuildStance",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                581,
                                38
                            ],
                            "name": "unitID",
                            "start": [
                                581,
                                32
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        581,
                        43
                    ],
                    "returns": [
                        {
                            "name": "isActive",
                            "type": "function.return",
                            "view": "boolean?"
                        }
                    ],
                    "start": [
                        581,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitIsActive(unitID: integer)\n  -> isActive: boolean?"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    581,
                    31
                ],
                "name": "GetUnitIsActive",
                "start": [
                    581,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitIsActive",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                672,
                                42
                            ],
                            "name": "unitID",
                            "start": [
                                672,
                                36
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        672,
                        47
                    ],
                    "returns": [
                        {
                            "name": "beingBuilt",
                            "type": "function.return",
                            "view": "boolean"
                        },
                        {
                            "name": "buildProgress",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        672,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitIsBeingBuilt(unitID: integer)\n  -> beingBuilt: boolean\n  2. buildProgress: number"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    672,
                    35
                ],
                "name": "GetUnitIsBeingBuilt",
                "start": [
                    672,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitIsBeingBuilt",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Checks whether a unit is currently building another (NOT for checking if it's a structure)\n\nWorks for both mobile builders and factories.\n\n@*return* `buildeeUnitID` — or nil",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                785,
                                40
                            ],
                            "name": "unitID",
                            "start": [
                                785,
                                34
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Checks whether a unit is currently building another (NOT for checking if it's a structure)\n\nWorks for both mobile builders and factories.\n\n@*return* `buildeeUnitID` — or nil",
                    "finish": [
                        785,
                        45
                    ],
                    "rawdesc": "Checks whether a unit is currently building another (NOT for checking if it's a structure)\n\nWorks for both mobile builders and factories.",
                    "returns": [
                        {
                            "desc": "or nil",
                            "name": "buildeeUnitID",
                            "rawdesc": "or nil",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        785,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitIsBuilding(unitID: integer)\n  -> buildeeUnitID: number"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    785,
                    33
                ],
                "name": "GetUnitIsBuilding",
                "rawdesc": "Checks whether a unit is currently building another (NOT for checking if it's a structure)\n\nWorks for both mobile builders and factories.",
                "start": [
                    785,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitIsBuilding",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                585,
                                39
                            ],
                            "name": "unitID",
                            "start": [
                                585,
                                33
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        585,
                        44
                    ],
                    "returns": [
                        {
                            "name": "isCloaked",
                            "type": "function.return",
                            "view": "boolean?"
                        }
                    ],
                    "start": [
                        585,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitIsCloaked(unitID: integer)\n  -> isCloaked: boolean?"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    585,
                    32
                ],
                "name": "GetUnitIsCloaked",
                "start": [
                    585,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitIsCloaked",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                653,
                                36
                            ],
                            "name": "unitID",
                            "start": [
                                653,
                                30
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        653,
                        41
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean|nil"
                        }
                    ],
                    "start": [
                        653,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitIsDead(unitID: integer)\n  -> boolean|nil"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    653,
                    29
                ],
                "name": "GetUnitIsDead",
                "start": [
                    653,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitIsDead",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Checks whether a unit is disabled and can't act\n\nThe first return value is a simple OR of the following ones,\nany of those conditions is sufficient to disable the unit.\n\nNote that EMP and being transported are mechanically the same and thus lumped together.\nUse other callouts to differentiate them if you need to.\n\n@*return* `stunnedOrBuilt` — unit is disabled\n\n@*return* `stunned` — unit is either stunned via EMP or being transported by a non-fireplatform\n\n@*return* `beingBuilt` — unit is under construction",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                667,
                                39
                            ],
                            "name": "unitID",
                            "start": [
                                667,
                                33
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Checks whether a unit is disabled and can't act\n\nThe first return value is a simple OR of the following ones,\nany of those conditions is sufficient to disable the unit.\n\nNote that EMP and being transported are mechanically the same and thus lumped together.\nUse other callouts to differentiate them if you need to.\n\n@*return* `stunnedOrBuilt` — unit is disabled\n\n@*return* `stunned` — unit is either stunned via EMP or being transported by a non-fireplatform\n\n@*return* `beingBuilt` — unit is under construction",
                    "finish": [
                        667,
                        44
                    ],
                    "rawdesc": "Checks whether a unit is disabled and can't act\n\nThe first return value is a simple OR of the following ones,\nany of those conditions is sufficient to disable the unit.\n\nNote that EMP and being transported are mechanically the same and thus lumped together.\nUse other callouts to differentiate them if you need to.",
                    "returns": [
                        {
                            "desc": "unit is disabled",
                            "name": "stunnedOrBuilt",
                            "rawdesc": "unit is disabled",
                            "type": "function.return",
                            "view": "boolean|nil"
                        },
                        {
                            "desc": "unit is either stunned via EMP or being transported by a non-fireplatform",
                            "name": "stunned",
                            "rawdesc": "unit is either stunned via EMP or being transported by a non-fireplatform",
                            "type": "function.return",
                            "view": "boolean"
                        },
                        {
                            "desc": "unit is under construction",
                            "name": "beingBuilt",
                            "rawdesc": "unit is under construction",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        667,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitIsStunned(unitID: integer)\n  -> stunnedOrBuilt: boolean|nil\n  2. stunned: boolean\n  3. beingBuilt: boolean"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    667,
                    32
                ],
                "name": "GetUnitIsStunned",
                "rawdesc": "Checks whether a unit is disabled and can't act\n\nThe first return value is a simple OR of the following ones,\nany of those conditions is sufficient to disable the unit.\n\nNote that EMP and being transported are mechanically the same and thus lumped together.\nUse other callouts to differentiate them if you need to.",
                "start": [
                    667,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitIsStunned",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Get units being transported\n\nAn array of unitIDs being transported by this unit, or `nil` if not a transport.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                866,
                                44
                            ],
                            "name": "unitID",
                            "start": [
                                866,
                                38
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Get units being transported\n\nAn array of unitIDs being transported by this unit, or `nil` if not a transport.",
                    "finish": [
                        866,
                        49
                    ],
                    "rawdesc": "Get units being transported\n\nAn array of unitIDs being transported by this unit, or `nil` if not a transport.",
                    "returns": [
                        {
                            "name": "transporteeArray",
                            "type": "function.return",
                            "view": "integer[]?"
                        }
                    ],
                    "start": [
                        866,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitIsTransporting(unitID: integer)\n  -> transporteeArray: integer[]?"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    866,
                    37
                ],
                "name": "GetUnitIsTransporting",
                "rawdesc": "Get units being transported\n\nAn array of unitIDs being transported by this unit, or `nil` if not a transport.",
                "start": [
                    866,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitIsTransporting",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1006,
                                47
                            ],
                            "name": "unitID",
                            "start": [
                                1006,
                                41
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        1006,
                        52
                    ],
                    "start": [
                        1006,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitLastAttackedPiece(unitID: integer)"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1006,
                    40
                ],
                "name": "GetUnitLastAttackedPiece",
                "start": [
                    1006,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitLastAttackedPiece",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1003,
                                42
                            ],
                            "name": "unitID",
                            "start": [
                                1003,
                                36
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        1003,
                        47
                    ],
                    "start": [
                        1003,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitLastAttacker(unitID: integer)"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1003,
                    35
                ],
                "name": "GetUnitLastAttacker",
                "start": [
                    1003,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitLastAttacker",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `raw` — Return a bitmask.\n\nA bitmask integer, or `nil` if `unitID` is invalid.\n\nBitmask bits:\n- `1`: `LOS_INLOS` the unit is currently in the los of the allyteam,\n- `2`: `LOS_INRADAR` the unit is currently in radar from the allyteam,\n- `4`: `LOS_PREVLOS` the unit has previously been in los from the allyteam,\n- `8`: `LOS_CONTRADAR` the unit has continuously been in radar since it was last inlos by the allyteam\n\n```lua\nraw:\n    | true\n```",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1514,
                                38
                            ],
                            "name": "unitID",
                            "start": [
                                1514,
                                32
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                1514,
                                50
                            ],
                            "name": "allyTeamID",
                            "start": [
                                1514,
                                40
                            ],
                            "type": "local",
                            "view": "integer?"
                        },
                        {
                            "desc": "Return a bitmask.",
                            "finish": [
                                1514,
                                55
                            ],
                            "name": "raw",
                            "rawdesc": "Return a bitmask.",
                            "start": [
                                1514,
                                52
                            ],
                            "type": "local",
                            "view": "true"
                        }
                    ],
                    "desc": "@*param* `raw` — Return a bitmask.\n\nA bitmask integer, or `nil` if `unitID` is invalid.\n\nBitmask bits:\n- `1`: `LOS_INLOS` the unit is currently in the los of the allyteam,\n- `2`: `LOS_INRADAR` the unit is currently in radar from the allyteam,\n- `4`: `LOS_PREVLOS` the unit has previously been in los from the allyteam,\n- `8`: `LOS_CONTRADAR` the unit has continuously been in radar since it was last inlos by the allyteam\n\n```lua\nraw:\n    | true\n```",
                    "finish": [
                        1514,
                        60
                    ],
                    "rawdesc": "A bitmask integer, or `nil` if `unitID` is invalid.\n\nBitmask bits:\n- `1`: `LOS_INLOS` the unit is currently in the los of the allyteam,\n- `2`: `LOS_INRADAR` the unit is currently in radar from the allyteam,\n- `4`: `LOS_PREVLOS` the unit has previously been in los from the allyteam,\n- `8`: `LOS_CONTRADAR` the unit has continuously been in radar since it was last inlos by the allyteam\n\n```lua\nraw:\n    | true\n```",
                    "returns": [
                        {
                            "name": "bitmask",
                            "type": "function.return",
                            "view": "integer?"
                        }
                    ],
                    "start": [
                        1514,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitLosState(unitID: integer, allyTeamID?: integer, raw: true)\n  -> bitmask: integer?"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1514,
                    31
                ],
                "name": "GetUnitLosState",
                "rawdesc": "A bitmask integer, or `nil` if `unitID` is invalid.\n\nBitmask bits:\n- `1`: `LOS_INLOS` the unit is currently in the los of the allyteam,\n- `2`: `LOS_INRADAR` the unit is currently in radar from the allyteam,\n- `4`: `LOS_PREVLOS` the unit has previously been in los from the allyteam,\n- `8`: `LOS_CONTRADAR` the unit has continuously been in radar since it was last inlos by the allyteam\n\n```lua\nraw:\n    | true\n```",
                "start": [
                    1514,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `raw` — Return a bitmask.\n\nA table of LOS state, or `nil` if `unitID` is invalid.\n\n```lua\nraw:\n    | false\n```",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1521,
                                38
                            ],
                            "name": "unitID",
                            "start": [
                                1521,
                                32
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                1521,
                                50
                            ],
                            "name": "allyTeamID",
                            "start": [
                                1521,
                                40
                            ],
                            "type": "local",
                            "view": "integer?"
                        },
                        {
                            "desc": "Return a bitmask.",
                            "finish": [
                                1521,
                                55
                            ],
                            "name": "raw",
                            "rawdesc": "Return a bitmask.",
                            "start": [
                                1521,
                                52
                            ],
                            "type": "local",
                            "view": "false?"
                        }
                    ],
                    "desc": "@*param* `raw` — Return a bitmask.\n\nA table of LOS state, or `nil` if `unitID` is invalid.\n\n```lua\nraw:\n    | false\n```",
                    "finish": [
                        1521,
                        60
                    ],
                    "rawdesc": "A table of LOS state, or `nil` if `unitID` is invalid.\n\n```lua\nraw:\n    | false\n```",
                    "returns": [
                        {
                            "name": "los",
                            "type": "function.return",
                            "view": "{ los: boolean, radar: boolean, typed: boolean }?"
                        }
                    ],
                    "start": [
                        1521,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitLosState(unitID: integer, allyTeamID?: integer, raw?: false)\n  -> los: { los: boolean, radar: boolean, typed: boolean }?"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1521,
                    31
                ],
                "name": "GetUnitLosState",
                "rawdesc": "A table of LOS state, or `nil` if `unitID` is invalid.\n\n```lua\nraw:\n    | false\n```",
                "start": [
                    1521,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitLosState",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*return* `draw` — nil when unitID cannot be parsed",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                227,
                                37
                            ],
                            "name": "unitID",
                            "start": [
                                227,
                                31
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "@*return* `draw` — nil when unitID cannot be parsed",
                    "finish": [
                        227,
                        42
                    ],
                    "returns": [
                        {
                            "desc": "nil when unitID cannot be parsed",
                            "name": "draw",
                            "rawdesc": "nil when unitID cannot be parsed",
                            "type": "function.return",
                            "view": "boolean?"
                        }
                    ],
                    "start": [
                        227,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitLuaDraw(unitID: integer)\n  -> draw: boolean?"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    227,
                    30
                ],
                "name": "GetUnitLuaDraw",
                "start": [
                    227,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitLuaDraw",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Returns the centroid of a map of units\n\nReturns nil for an empty map\n\n@*param* `units` — { [unitID] = true, [unitID] = true, ... }",
                "extends": {
                    "args": [
                        {
                            "desc": "{ [unitID] = true, [unitID] = true, ... }",
                            "finish": [
                                503,
                                40
                            ],
                            "name": "units",
                            "rawdesc": "{ [unitID] = true, [unitID] = true, ... }",
                            "start": [
                                503,
                                35
                            ],
                            "type": "local",
                            "view": "table"
                        }
                    ],
                    "desc": "Returns the centroid of a map of units\n\nReturns nil for an empty map\n\n@*param* `units` — { [unitID] = true, [unitID] = true, ... }",
                    "finish": [
                        503,
                        45
                    ],
                    "rawdesc": "Returns the centroid of a map of units\n\nReturns nil for an empty map",
                    "returns": [
                        {
                            "name": "centerX",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "centerY",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "centerZ",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        503,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitMapCentroid(units: table)\n  -> centerX: number\n  2. centerY: number\n  3. centerZ: number"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    503,
                    34
                ],
                "name": "GetUnitMapCentroid",
                "rawdesc": "Returns the centroid of a map of units\n\nReturns nil for an empty map",
                "start": [
                    503,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitMapCentroid",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                728,
                                34
                            ],
                            "name": "unitID",
                            "start": [
                                728,
                                28
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        728,
                        39
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number?"
                        }
                    ],
                    "start": [
                        728,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitMass(unitID: integer)\n  -> number?"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    728,
                    27
                ],
                "name": "GetUnitMass",
                "start": [
                    728,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitMass",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Get a unit's engagement range\n\nReturns the range at which a unit will stop to engage.\nBy default this is the highest among the unit's weapon ranges (hence name),\nbut can be changed dynamically. Also note that unarmed units ignore this.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                885,
                                38
                            ],
                            "name": "unitID",
                            "start": [
                                885,
                                32
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Get a unit's engagement range\n\nReturns the range at which a unit will stop to engage.\nBy default this is the highest among the unit's weapon ranges (hence name),\nbut can be changed dynamically. Also note that unarmed units ignore this.",
                    "finish": [
                        885,
                        43
                    ],
                    "rawdesc": "Get a unit's engagement range\n\nReturns the range at which a unit will stop to engage.\nBy default this is the highest among the unit's weapon ranges (hence name),\nbut can be changed dynamically. Also note that unarmed units ignore this.",
                    "returns": [
                        {
                            "name": "maxRange",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        885,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitMaxRange(unitID: integer)\n  -> maxRange: number"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    885,
                    31
                ],
                "name": "GetUnitMaxRange",
                "rawdesc": "Get a unit's engagement range\n\nReturns the range at which a unit will stop to engage.\nBy default this is the highest among the unit's weapon ranges (hence name),\nbut can be changed dynamically. Also note that unarmed units ignore this.",
                "start": [
                    885,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitMaxRange",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                704,
                                45
                            ],
                            "name": "unitID",
                            "start": [
                                704,
                                39
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        704,
                        50
                    ],
                    "returns": [
                        {
                            "name": "metalExtraction",
                            "type": "function.return",
                            "view": "number?"
                        }
                    ],
                    "start": [
                        704,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitMetalExtraction(unitID: integer)\n  -> metalExtraction: number?"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    704,
                    38
                ],
                "name": "GetUnitMetalExtraction",
                "start": [
                    704,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitMetalExtraction",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1037,
                                42
                            ],
                            "name": "unitID",
                            "start": [
                                1037,
                                36
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        1037,
                        47
                    ],
                    "start": [
                        1037,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitMoveTypeData(unitID: integer)"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1037,
                    35
                ],
                "name": "GetUnitMoveTypeData",
                "start": [
                    1037,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitMoveTypeData",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Get construction FX attachment points\n\nReturns an array of pieces which represent construction\npoints. Default engine construction FX (nano spray) will\noriginate there.\n\nOnly works on builders and factories, returns nil (NOT empty table)\nfor other units.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                850,
                                40
                            ],
                            "name": "unitID",
                            "start": [
                                850,
                                34
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Get construction FX attachment points\n\nReturns an array of pieces which represent construction\npoints. Default engine construction FX (nano spray) will\noriginate there.\n\nOnly works on builders and factories, returns nil (NOT empty table)\nfor other units.",
                    "finish": [
                        850,
                        45
                    ],
                    "rawdesc": "Get construction FX attachment points\n\nReturns an array of pieces which represent construction\npoints. Default engine construction FX (nano spray) will\noriginate there.\n\nOnly works on builders and factories, returns nil (NOT empty table)\nfor other units.",
                    "returns": [
                        {
                            "name": "pieceArray",
                            "type": "function.return",
                            "view": "integer[]"
                        }
                    ],
                    "start": [
                        850,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitNanoPieces(unitID: integer)\n  -> pieceArray: integer[]"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    850,
                    33
                ],
                "name": "GetUnitNanoPieces",
                "rawdesc": "Get construction FX attachment points\n\nReturns an array of pieces which represent construction\npoints. Default engine construction FX (nano spray) will\noriginate there.\n\nOnly works on builders and factories, returns nil (NOT empty table)\nfor other units.",
                "start": [
                    850,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitNanoPieces",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `range` — (Default: 1.0e9f)",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                508,
                                41
                            ],
                            "name": "unitID",
                            "start": [
                                508,
                                35
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "desc": "(Default: 1.0e9f)",
                            "finish": [
                                508,
                                48
                            ],
                            "name": "range",
                            "rawdesc": "(Default: 1.0e9f)",
                            "start": [
                                508,
                                43
                            ],
                            "type": "local",
                            "view": "number?"
                        }
                    ],
                    "desc": "@*param* `range` — (Default: 1.0e9f)",
                    "finish": [
                        508,
                        53
                    ],
                    "returns": [
                        {
                            "name": "unitID",
                            "type": "function.return",
                            "view": "number?"
                        }
                    ],
                    "start": [
                        508,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitNearestAlly(unitID: integer, range?: number)\n  -> unitID: number?"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    508,
                    34
                ],
                "name": "GetUnitNearestAlly",
                "start": [
                    508,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitNearestAlly",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `range` — (Default: 1.0e9f)\n\n@*param* `useLOS` — (Default: true)",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                514,
                                42
                            ],
                            "name": "unitID",
                            "start": [
                                514,
                                36
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "desc": "(Default: 1.0e9f)",
                            "finish": [
                                514,
                                49
                            ],
                            "name": "range",
                            "rawdesc": "(Default: 1.0e9f)",
                            "start": [
                                514,
                                44
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "desc": "(Default: true)",
                            "finish": [
                                514,
                                57
                            ],
                            "name": "useLOS",
                            "rawdesc": "(Default: true)",
                            "start": [
                                514,
                                51
                            ],
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "@*param* `range` — (Default: 1.0e9f)\n\n@*param* `useLOS` — (Default: true)",
                    "finish": [
                        514,
                        62
                    ],
                    "returns": [
                        {
                            "name": "unitID",
                            "type": "function.return",
                            "view": "number?"
                        }
                    ],
                    "start": [
                        514,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitNearestEnemy(unitID: integer, range?: number, useLOS?: boolean)\n  -> unitID: number?"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    514,
                    35
                ],
                "name": "GetUnitNearestEnemy",
                "start": [
                    514,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitNearestEnemy",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Checks if a unit is neutral (NOT Gaia!)\n\nNote that a \"neutral\" unit can belong to any ally-team (ally, enemy, Gaia).\nTo check if a unit is Gaia, check its owner team.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                641,
                                37
                            ],
                            "name": "unitID",
                            "start": [
                                641,
                                31
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Checks if a unit is neutral (NOT Gaia!)\n\nNote that a \"neutral\" unit can belong to any ally-team (ally, enemy, Gaia).\nTo check if a unit is Gaia, check its owner team.",
                    "finish": [
                        641,
                        42
                    ],
                    "rawdesc": "Checks if a unit is neutral (NOT Gaia!)\n\nNote that a \"neutral\" unit can belong to any ally-team (ally, enemy, Gaia).\nTo check if a unit is Gaia, check its owner team.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean|nil"
                        }
                    ],
                    "start": [
                        641,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitNeutral(unitID: integer)\n  -> boolean|nil"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    641,
                    30
                ],
                "name": "GetUnitNeutral",
                "rawdesc": "Checks if a unit is neutral (NOT Gaia!)\n\nNote that a \"neutral\" unit can belong to any ally-team (ally, enemy, Gaia).\nTo check if a unit is Gaia, check its owner team.",
                "start": [
                    641,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitNeutral",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*return* `nil` — when unitID cannot be parsed",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                231,
                                36
                            ],
                            "name": "unitID",
                            "start": [
                                231,
                                30
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "@*return* `nil` — when unitID cannot be parsed",
                    "finish": [
                        231,
                        41
                    ],
                    "returns": [
                        {
                            "desc": "when unitID cannot be parsed",
                            "name": "nil",
                            "rawdesc": "when unitID cannot be parsed",
                            "type": "function.return",
                            "view": "boolean?"
                        }
                    ],
                    "start": [
                        231,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitNoDraw(unitID: integer)\n  -> nil: boolean?"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    231,
                    29
                ],
                "name": "GetUnitNoDraw",
                "start": [
                    231,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitNoDraw",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*return* `noGroup` — `nil` when `unitID` cannot be parsed.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                251,
                                37
                            ],
                            "name": "unitID",
                            "start": [
                                251,
                                31
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "@*return* `noGroup` — `nil` when `unitID` cannot be parsed.",
                    "finish": [
                        251,
                        42
                    ],
                    "returns": [
                        {
                            "desc": "`nil` when `unitID` cannot be parsed.",
                            "name": "noGroup",
                            "rawdesc": "`nil` when `unitID` cannot be parsed.",
                            "type": "function.return",
                            "view": "bool|nil"
                        }
                    ],
                    "start": [
                        251,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitNoGroup(unitID: integer)\n  -> noGroup: bool|nil"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    251,
                    30
                ],
                "name": "GetUnitNoGroup",
                "start": [
                    251,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitNoGroup",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*return* `nil` — when unitID cannot be parsed",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                247,
                                39
                            ],
                            "name": "unitID",
                            "start": [
                                247,
                                33
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "@*return* `nil` — when unitID cannot be parsed",
                    "finish": [
                        247,
                        44
                    ],
                    "returns": [
                        {
                            "desc": "when unitID cannot be parsed",
                            "name": "nil",
                            "rawdesc": "when unitID cannot be parsed",
                            "type": "function.return",
                            "view": "boolean?"
                        }
                    ],
                    "start": [
                        247,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitNoMinimap(unitID: integer)\n  -> nil: boolean?"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    247,
                    32
                ],
                "name": "GetUnitNoMinimap",
                "start": [
                    247,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitNoMinimap",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*return* `noSelect` — `nil` when `unitID` cannot be parsed.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                255,
                                38
                            ],
                            "name": "unitID",
                            "start": [
                                255,
                                32
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "@*return* `noSelect` — `nil` when `unitID` cannot be parsed.",
                    "finish": [
                        255,
                        43
                    ],
                    "returns": [
                        {
                            "desc": "`nil` when `unitID` cannot be parsed.",
                            "name": "noSelect",
                            "rawdesc": "`nil` when `unitID` cannot be parsed.",
                            "type": "function.return",
                            "view": "boolean?"
                        }
                    ],
                    "start": [
                        255,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitNoSelect(unitID: integer)\n  -> noSelect: boolean?"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    255,
                    31
                ],
                "name": "GetUnitNoSelect",
                "start": [
                    255,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitNoSelect",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*return* `Unit` — 's PhysicalState bitmask",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                560,
                                43
                            ],
                            "name": "unitID",
                            "start": [
                                560,
                                37
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "@*return* `Unit` — 's PhysicalState bitmask",
                    "finish": [
                        560,
                        48
                    ],
                    "returns": [
                        {
                            "desc": "'s PhysicalState bitmask",
                            "name": "Unit",
                            "rawdesc": "'s PhysicalState bitmask",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        560,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitPhysicalState(unitID: integer)\n  -> Unit: number"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    560,
                    36
                ],
                "name": "GetUnitPhysicalState",
                "start": [
                    560,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitPhysicalState",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1608,
                                44
                            ],
                            "name": "unitID",
                            "start": [
                                1608,
                                38
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                1608,
                                56
                            ],
                            "name": "pieceIndex",
                            "start": [
                                1608,
                                46
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        1608,
                        61
                    ],
                    "returns": [
                        {
                            "name": "dirX",
                            "type": "function.return",
                            "view": "number|nil"
                        },
                        {
                            "name": "dirY",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "dirZ",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        1608,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitPieceDirection(unitID: integer, pieceIndex: integer)\n  -> dirX: number|nil\n  2. dirY: number\n  3. dirZ: number"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1608,
                    37
                ],
                "name": "GetUnitPieceDirection",
                "start": [
                    1608,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitPieceDirection",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1584,
                                39
                            ],
                            "name": "unitID",
                            "start": [
                                1584,
                                33
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                1584,
                                51
                            ],
                            "name": "pieceIndex",
                            "start": [
                                1584,
                                41
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        1584,
                        56
                    ],
                    "returns": [
                        {
                            "name": "pieceInfo",
                            "type": "function.return",
                            "view": "PieceInfo?"
                        }
                    ],
                    "start": [
                        1584,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitPieceInfo(unitID: integer, pieceIndex: integer)\n  -> pieceInfo: PieceInfo?"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1584,
                    32
                ],
                "name": "GetUnitPieceInfo",
                "start": [
                    1584,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitPieceInfo",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1579,
                                39
                            ],
                            "name": "unitID",
                            "start": [
                                1579,
                                33
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        1579,
                        44
                    ],
                    "returns": [
                        {
                            "name": "pieceNames",
                            "type": "function.return",
                            "view": "string[]"
                        }
                    ],
                    "start": [
                        1579,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitPieceList(unitID: integer)\n  -> pieceNames: string[]"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1579,
                    32
                ],
                "name": "GetUnitPieceList",
                "start": [
                    1579,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitPieceList",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*return* `pieceInfos` — where keys are piece names and values are indices",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1575,
                                38
                            ],
                            "name": "unitID",
                            "start": [
                                1575,
                                32
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "@*return* `pieceInfos` — where keys are piece names and values are indices",
                    "finish": [
                        1575,
                        43
                    ],
                    "returns": [
                        {
                            "desc": "where keys are piece names and values are indices",
                            "name": "pieceInfos",
                            "rawdesc": "where keys are piece names and values are indices",
                            "type": "function.return",
                            "view": "table<string, number>|nil"
                        }
                    ],
                    "start": [
                        1575,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitPieceMap(unitID: integer)\n  -> pieceInfos: table<string, number>|nil"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1575,
                    31
                ],
                "name": "GetUnitPieceMap",
                "start": [
                    1575,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitPieceMap",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1627,
                                41
                            ],
                            "name": "unitID",
                            "start": [
                                1627,
                                35
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        1627,
                        46
                    ],
                    "returns": [
                        {
                            "name": "m11",
                            "type": "function.return",
                            "view": "number|nil"
                        },
                        {
                            "name": "m12",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "m13",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "m14",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "m21",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "m22",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "m23",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "m24",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "m31",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "m32",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "m33",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "m34",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "m41",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "m42",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "m43",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "m44",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        1627,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitPieceMatrix(unitID: integer)\n  -> m11: number|nil\n  2. m12: number\n  3. m13: number\n  4. m14: number\n  5. m21: number\n  6. m22: number\n  7. m23: number\n  8. m24: number\n  9. m31: number\n 10. m32: number\n 11. m33: number\n 12. m34: number\n 13. m41: number\n 14. m42: number\n 15. m43: number\n 16. m44: number"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1627,
                    34
                ],
                "name": "GetUnitPieceMatrix",
                "start": [
                    1627,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitPieceMatrix",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1594,
                                41
                            ],
                            "name": "unitID",
                            "start": [
                                1594,
                                35
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                1594,
                                53
                            ],
                            "name": "pieceIndex",
                            "start": [
                                1594,
                                43
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        1594,
                        58
                    ],
                    "returns": [
                        {
                            "name": "posX",
                            "type": "function.return",
                            "view": "number|nil"
                        },
                        {
                            "name": "posY",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "posZ",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "dirX",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "dirY",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "dirZ",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        1594,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitPiecePosDir(unitID: integer, pieceIndex: integer)\n  -> posX: number|nil\n  2. posY: number\n  3. posZ: number\n  4. dirX: number\n  5. dirY: number\n  6. dirZ: number"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1594,
                    34
                ],
                "name": "GetUnitPiecePosDir",
                "start": [
                    1594,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitPiecePosDir",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1601,
                                43
                            ],
                            "name": "unitID",
                            "start": [
                                1601,
                                37
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                1601,
                                55
                            ],
                            "name": "pieceIndex",
                            "start": [
                                1601,
                                45
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        1601,
                        60
                    ],
                    "returns": [
                        {
                            "name": "posX",
                            "type": "function.return",
                            "view": "number|nil"
                        },
                        {
                            "name": "posY",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "posZ",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        1601,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitPiecePosition(unitID: integer, pieceIndex: integer)\n  -> posX: number|nil\n  2. posY: number\n  3. posZ: number"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1601,
                    36
                ],
                "name": "GetUnitPiecePosition",
                "start": [
                    1601,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitPiecePosition",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                616,
                                44
                            ],
                            "name": "unitID",
                            "start": [
                                616,
                                38
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                616,
                                56
                            ],
                            "name": "allyTeamID",
                            "start": [
                                616,
                                46
                            ],
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "finish": [
                        616,
                        61
                    ],
                    "returns": [
                        {
                            "name": "posErrorVectorX",
                            "type": "function.return",
                            "view": "number?"
                        },
                        {
                            "name": "posErrorVectorY",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "posErrorVectorZ",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "posErrorDeltaX",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "posErrorDeltaY",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "posErrorDeltaZ",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "nextPosErrorUpdatebaseErrorMult",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "posErrorBit",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        616,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitPosErrorParams(unitID: integer, allyTeamID?: integer)\n  -> posErrorVectorX: number?\n  2. posErrorVectorY: number\n  3. posErrorVectorZ: number\n  4. posErrorDeltaX: number\n  5. posErrorDeltaY: number\n  6. posErrorDeltaZ: number\n  7. nextPosErrorUpdatebaseErrorMult: number\n  8. posErrorBit: boolean"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    616,
                    37
                ],
                "name": "GetUnitPosErrorParams",
                "start": [
                    616,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitPosErrorParams",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `midPos` — (Default: false) return midpoint as well\n\n@*param* `aimPos` — (Default: false) return aimpoint as well",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                742,
                                38
                            ],
                            "name": "unitID",
                            "start": [
                                742,
                                32
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "desc": "(Default: false) return midpoint as well",
                            "finish": [
                                742,
                                46
                            ],
                            "name": "midPos",
                            "rawdesc": "(Default: false) return midpoint as well",
                            "start": [
                                742,
                                40
                            ],
                            "type": "local",
                            "view": "boolean?"
                        },
                        {
                            "desc": "(Default: false) return aimpoint as well",
                            "finish": [
                                742,
                                54
                            ],
                            "name": "aimPos",
                            "rawdesc": "(Default: false) return aimpoint as well",
                            "start": [
                                742,
                                48
                            ],
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "@*param* `midPos` — (Default: false) return midpoint as well\n\n@*param* `aimPos` — (Default: false) return aimpoint as well",
                    "finish": [
                        742,
                        59
                    ],
                    "returns": [
                        {
                            "name": "basePointX",
                            "type": "function.return",
                            "view": "number?"
                        },
                        {
                            "name": "basePointY",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "basePointZ",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "midPointX",
                            "type": "function.return",
                            "view": "number?"
                        },
                        {
                            "name": "midPointY",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "midPointZ",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "aimPointX",
                            "type": "function.return",
                            "view": "number?"
                        },
                        {
                            "name": "aimPointY",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "aimPointZ",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        742,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitPosition(unitID: integer, midPos?: boolean, aimPos?: boolean)\n  -> basePointX: number?\n  2. basePointY: number\n  3. basePointZ: number\n  4. midPointX: number?\n  5. midPointY: number\n  6. midPointZ: number\n  7. aimPointX: number?\n  8. aimPointY: number\n  9. aimPointZ: number"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    742,
                    31
                ],
                "name": "GetUnitPosition",
                "start": [
                    742,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitPosition",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                717,
                                36
                            ],
                            "name": "unitID",
                            "start": [
                                717,
                                30
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        717,
                        41
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number?"
                        }
                    ],
                    "start": [
                        717,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitRadius(unitID: integer)\n  -> number?"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    717,
                    29
                ],
                "name": "GetUnitRadius",
                "start": [
                    717,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitRadius",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                679,
                                39
                            ],
                            "name": "unitID",
                            "start": [
                                679,
                                33
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        679,
                        44
                    ],
                    "returns": [
                        {
                            "name": "metalMake",
                            "type": "function.return",
                            "view": "number?"
                        },
                        {
                            "name": "metalUse",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "energyMake",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "energyUse",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        679,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitResources(unitID: integer)\n  -> metalMake: number?\n  2. metalUse: number\n  3. energyMake: number\n  4. energyUse: number"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    679,
                    32
                ],
                "name": "GetUnitResources",
                "start": [
                    679,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitResources",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*return* `index` — of the root piece",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1571,
                                39
                            ],
                            "name": "unitID",
                            "start": [
                                1571,
                                33
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "@*return* `index` — of the root piece",
                    "finish": [
                        1571,
                        44
                    ],
                    "returns": [
                        {
                            "desc": "of the root piece",
                            "name": "index",
                            "rawdesc": "of the root piece",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        1571,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitRootPiece(unitID: integer)\n  -> index: number"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1571,
                    32
                ],
                "name": "GetUnitRootPiece",
                "start": [
                    1571,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitRootPiece",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*return* `pitch` — Rotation in X axis\n\n@*return* `yaw` — Rotation in Y axis\n\n@*return* `roll` — Rotation in Z axis",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                760,
                                38
                            ],
                            "name": "unitID",
                            "start": [
                                760,
                                32
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "@*return* `pitch` — Rotation in X axis\n\n@*return* `yaw` — Rotation in Y axis\n\n@*return* `roll` — Rotation in Z axis",
                    "finish": [
                        760,
                        43
                    ],
                    "returns": [
                        {
                            "desc": "Rotation in X axis",
                            "name": "pitch",
                            "rawdesc": "Rotation in X axis",
                            "type": "function.return",
                            "view": "number?"
                        },
                        {
                            "desc": "Rotation in Y axis",
                            "name": "yaw",
                            "rawdesc": "Rotation in Y axis",
                            "type": "function.return",
                            "view": "number?"
                        },
                        {
                            "desc": "Rotation in Z axis",
                            "name": "roll",
                            "rawdesc": "Rotation in Z axis",
                            "type": "function.return",
                            "view": "number?"
                        }
                    ],
                    "start": [
                        760,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitRotation(unitID: integer)\n  -> pitch: number?\n  2. yaw: number?\n  3. roll: number?"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    760,
                    31
                ],
                "name": "GetUnitRotation",
                "start": [
                    760,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitRotation",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `ruleRef` — the rule index or name",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                112,
                                40
                            ],
                            "name": "unitID",
                            "start": [
                                112,
                                34
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "desc": "the rule index or name",
                            "finish": [
                                112,
                                49
                            ],
                            "name": "ruleRef",
                            "rawdesc": "the rule index or name",
                            "start": [
                                112,
                                42
                            ],
                            "type": "local",
                            "view": "string|number"
                        }
                    ],
                    "desc": "@*param* `ruleRef` — the rule index or name",
                    "finish": [
                        112,
                        54
                    ],
                    "returns": [
                        {
                            "name": "value",
                            "type": "function.return",
                            "view": "string|number|nil"
                        }
                    ],
                    "start": [
                        112,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitRulesParam(unitID: integer, ruleRef: string|number)\n  -> value: string|number|nil"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    112,
                    33
                ],
                "name": "GetUnitRulesParam",
                "start": [
                    112,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitRulesParam",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*return* `rulesParams` — map with rules names as key and values as values",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                89,
                                41
                            ],
                            "name": "unitID",
                            "start": [
                                89,
                                35
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "@*return* `rulesParams` — map with rules names as key and values as values",
                    "finish": [
                        89,
                        46
                    ],
                    "returns": [
                        {
                            "desc": "map with rules names as key and values as values",
                            "name": "rulesParams",
                            "rawdesc": "map with rules names as key and values as values",
                            "type": "function.return",
                            "view": "RulesParams"
                        }
                    ],
                    "start": [
                        89,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitRulesParams(unitID: integer)\n  -> rulesParams: RulesParams"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    89,
                    34
                ],
                "name": "GetUnitRulesParams",
                "start": [
                    89,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitRulesParams",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*return* `where` — keys are piece names and values are piece indices",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1700,
                                41
                            ],
                            "name": "unitID",
                            "start": [
                                1700,
                                35
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "@*return* `where` — keys are piece names and values are piece indices",
                    "finish": [
                        1700,
                        46
                    ],
                    "returns": [
                        {
                            "desc": "keys are piece names and values are piece indices",
                            "name": "where",
                            "rawdesc": "keys are piece names and values are piece indices",
                            "type": "function.return",
                            "view": "table<string, number>"
                        }
                    ],
                    "start": [
                        1700,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitScriptNames(unitID: integer)\n  -> where: table<string, number>"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1700,
                    34
                ],
                "name": "GetUnitScriptNames",
                "start": [
                    1700,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitScriptNames",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1691,
                                41
                            ],
                            "name": "unitID",
                            "start": [
                                1691,
                                35
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        1691,
                        46
                    ],
                    "returns": [
                        {
                            "name": "pieceIndices",
                            "type": "function.return",
                            "view": "integer[]"
                        }
                    ],
                    "start": [
                        1691,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitScriptPiece(unitID: integer)\n  -> pieceIndices: integer[]"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1691,
                    34
                ],
                "name": "GetUnitScriptPiece",
                "start": [
                    1691,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1696,
                                41
                            ],
                            "name": "unitID",
                            "start": [
                                1696,
                                35
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                1696,
                                54
                            ],
                            "name": "scriptPiece",
                            "start": [
                                1696,
                                43
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        1696,
                        59
                    ],
                    "returns": [
                        {
                            "name": "pieceIndex",
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": [
                        1696,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitScriptPiece(unitID: integer, scriptPiece: integer)\n  -> pieceIndex: integer"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1696,
                    34
                ],
                "name": "GetUnitScriptPiece",
                "start": [
                    1696,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitScriptPiece",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                589,
                                46
                            ],
                            "name": "unitID",
                            "start": [
                                589,
                                40
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        589,
                        51
                    ],
                    "returns": [
                        {
                            "name": "seismicSignature",
                            "type": "function.return",
                            "view": "number?"
                        }
                    ],
                    "start": [
                        589,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitSeismicSignature(unitID: integer)\n  -> seismicSignature: number?"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    589,
                    39
                ],
                "name": "GetUnitSeismicSignature",
                "start": [
                    589,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitSeismicSignature",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*return* `scaleX` — nil when unitID cannot be parsed\n\n@*return* `scaleY`\n\n@*return* `scaleZ`\n\n@*return* `offsetX`\n\n@*return* `offsetY`\n\n@*return* `offsetZ`\n\n@*return* `volumeType`\n\n@*return* `useContHitTest`\n\n@*return* `getPrimaryAxis`\n\n@*return* `ignoreHits`",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                273,
                                49
                            ],
                            "name": "unitID",
                            "start": [
                                273,
                                43
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "@*return* `scaleX` — nil when unitID cannot be parsed\n\n@*return* `scaleY`\n\n@*return* `scaleZ`\n\n@*return* `offsetX`\n\n@*return* `offsetY`\n\n@*return* `offsetZ`\n\n@*return* `volumeType`\n\n@*return* `useContHitTest`\n\n@*return* `getPrimaryAxis`\n\n@*return* `ignoreHits`",
                    "finish": [
                        273,
                        54
                    ],
                    "returns": [
                        {
                            "desc": "nil when unitID cannot be parsed",
                            "name": "scaleX",
                            "rawdesc": "nil when unitID cannot be parsed",
                            "type": "function.return",
                            "view": "number?"
                        },
                        {
                            "name": "scaleY",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "scaleZ",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "offsetX",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "offsetY",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "offsetZ",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "volumeType",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "useContHitTest",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "getPrimaryAxis",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "ignoreHits",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        273,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitSelectionVolumeData(unitID: integer)\n  -> scaleX: number?\n  2. scaleY: number\n  3. scaleZ: number\n  4. offsetX: number\n  5. offsetY: number\n  6. offsetZ: number\n  7. volumeType: number\n  8. useContHitTest: number\n  9. getPrimaryAxis: number\n 10. ignoreHits: boolean"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    273,
                    42
                ],
                "name": "GetUnitSelectionVolumeData",
                "start": [
                    273,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitSelectionVolumeData",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                593,
                                39
                            ],
                            "name": "unitID",
                            "start": [
                                593,
                                33
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        593,
                        44
                    ],
                    "returns": [
                        {
                            "name": "selfDTime",
                            "type": "function.return",
                            "view": "integer?"
                        }
                    ],
                    "start": [
                        593,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitSelfDTime(unitID: integer)\n  -> selfDTime: integer?"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    593,
                    32
                ],
                "name": "GetUnitSelfDTime",
                "start": [
                    593,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitSelfDTime",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `type` — one of los, airLos, radar, sonar, seismic, radarJammer, sonarJammer",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                604,
                                42
                            ],
                            "name": "unitID",
                            "start": [
                                604,
                                36
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "desc": "one of los, airLos, radar, sonar, seismic, radarJammer, sonarJammer",
                            "finish": [
                                604,
                                48
                            ],
                            "name": "type",
                            "rawdesc": "one of los, airLos, radar, sonar, seismic, radarJammer, sonarJammer",
                            "start": [
                                604,
                                44
                            ],
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "desc": "@*param* `type` — one of los, airLos, radar, sonar, seismic, radarJammer, sonarJammer",
                    "finish": [
                        604,
                        53
                    ],
                    "returns": [
                        {
                            "name": "radius",
                            "type": "function.return",
                            "view": "number?"
                        }
                    ],
                    "start": [
                        604,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitSensorRadius(unitID: integer, type: string)\n  -> radius: number?"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    604,
                    35
                ],
                "name": "GetUnitSensorRadius",
                "start": [
                    604,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitSensorRadius",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `direction` — (Default: false) to subtract from, default unitID1 - unitID2\n\n@*param* `subtractRadii` — (Default: false) whether units radii should be subtracted from the total",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1016,
                                41
                            ],
                            "name": "unitID1",
                            "start": [
                                1016,
                                34
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1016,
                                50
                            ],
                            "name": "unitID2",
                            "start": [
                                1016,
                                43
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "desc": "(Default: false) to subtract from, default unitID1 - unitID2",
                            "finish": [
                                1016,
                                61
                            ],
                            "name": "direction",
                            "rawdesc": "(Default: false) to subtract from, default unitID1 - unitID2",
                            "start": [
                                1016,
                                52
                            ],
                            "type": "local",
                            "view": "boolean?"
                        },
                        {
                            "desc": "(Default: false) whether units radii should be subtracted from the total",
                            "finish": [
                                1016,
                                76
                            ],
                            "name": "subtractRadii",
                            "rawdesc": "(Default: false) whether units radii should be subtracted from the total",
                            "start": [
                                1016,
                                63
                            ],
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "@*param* `direction` — (Default: false) to subtract from, default unitID1 - unitID2\n\n@*param* `subtractRadii` — (Default: false) whether units radii should be subtracted from the total",
                    "finish": [
                        1016,
                        81
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number?"
                        }
                    ],
                    "start": [
                        1016,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitSeparation(unitID1: number, unitID2: number, direction?: boolean, subtractRadii?: boolean)\n  -> number?"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1016,
                    33
                ],
                "name": "GetUnitSeparation",
                "start": [
                    1016,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitSeparation",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `weaponNum` — Optional if the unit has just one shield\n\n@*return* `isEnabled` — Warning, number not boolean. 0 or 1\n\n@*return* `currentPower`",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                872,
                                41
                            ],
                            "name": "unitID",
                            "start": [
                                872,
                                35
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "desc": "Optional if the unit has just one shield",
                            "finish": [
                                872,
                                52
                            ],
                            "name": "weaponNum",
                            "rawdesc": "Optional if the unit has just one shield",
                            "start": [
                                872,
                                43
                            ],
                            "type": "local",
                            "view": "number?"
                        }
                    ],
                    "desc": "@*param* `weaponNum` — Optional if the unit has just one shield\n\n@*return* `isEnabled` — Warning, number not boolean. 0 or 1\n\n@*return* `currentPower`",
                    "finish": [
                        872,
                        57
                    ],
                    "returns": [
                        {
                            "desc": "Warning, number not boolean. 0 or 1",
                            "name": "isEnabled",
                            "rawdesc": "Warning, number not boolean. 0 or 1",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "currentPower",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        872,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitShieldState(unitID: integer, weaponNum?: number)\n  -> isEnabled: number\n  2. currentPower: number"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    872,
                    34
                ],
                "name": "GetUnitShieldState",
                "start": [
                    872,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitShieldState",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                572,
                                36
                            ],
                            "name": "unitID",
                            "start": [
                                572,
                                30
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        572,
                        41
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "UnitState"
                        }
                    ],
                    "start": [
                        572,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitStates(unitID: integer)\n  -> UnitState"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    572,
                    29
                ],
                "name": "GetUnitStates",
                "start": [
                    572,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitStates",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                599,
                                39
                            ],
                            "name": "unitID",
                            "start": [
                                599,
                                33
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        599,
                        44
                    ],
                    "returns": [
                        {
                            "name": "numStockpiled",
                            "type": "function.return",
                            "view": "integer?"
                        },
                        {
                            "name": "numStockpileQued",
                            "type": "function.return",
                            "view": "integer?"
                        },
                        {
                            "name": "buildPercent",
                            "type": "function.return",
                            "view": "number?"
                        }
                    ],
                    "start": [
                        599,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitStockpile(unitID: integer)\n  -> numStockpiled: integer?\n  2. numStockpileQued: integer?\n  3. buildPercent: number?"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    599,
                    32
                ],
                "name": "GetUnitStockpile",
                "start": [
                    599,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitStockpile",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*return* `Unit` — 's metal storage\n\n@*return* `Unit` — 's energy storage",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                684,
                                37
                            ],
                            "name": "unitID",
                            "start": [
                                684,
                                31
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "@*return* `Unit` — 's metal storage\n\n@*return* `Unit` — 's energy storage",
                    "finish": [
                        684,
                        42
                    ],
                    "returns": [
                        {
                            "desc": "'s metal storage",
                            "name": "Unit",
                            "rawdesc": "'s metal storage",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "desc": "'s energy storage",
                            "name": "Unit",
                            "rawdesc": "'s energy storage",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        684,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitStorage(unitID: integer)\n  -> Unit: number\n  2. Unit: number"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    684,
                    30
                ],
                "name": "GetUnitStorage",
                "start": [
                    684,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitStorage",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                628,
                                34
                            ],
                            "name": "unitID",
                            "start": [
                                628,
                                28
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        628,
                        39
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number?"
                        }
                    ],
                    "start": [
                        628,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitTeam(unitID: integer)\n  -> number?"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    628,
                    27
                ],
                "name": "GetUnitTeam",
                "start": [
                    628,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitTeam",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                620,
                                37
                            ],
                            "name": "unitID",
                            "start": [
                                620,
                                31
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        620,
                        42
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string|nil"
                        }
                    ],
                    "start": [
                        620,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitTooltip(unitID: integer)\n  -> string|nil"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    620,
                    30
                ],
                "name": "GetUnitTooltip",
                "start": [
                    620,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitTooltip",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*return* `m11` — nil when unitID cannot be parsed\n\n@*return* `m12`\n\n@*return* `m13`\n\n@*return* `m14`\n\n@*return* `m21`\n\n@*return* `m22`\n\n@*return* `m23`\n\n@*return* `m24`\n\n@*return* `m31`\n\n@*return* `m32`\n\n@*return* `m33`\n\n@*return* `m34`\n\n@*return* `m41`\n\n@*return* `m42`\n\n@*return* `m43`\n\n@*return* `m44`",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                333,
                                45
                            ],
                            "name": "unitID",
                            "start": [
                                333,
                                39
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "@*return* `m11` — nil when unitID cannot be parsed\n\n@*return* `m12`\n\n@*return* `m13`\n\n@*return* `m14`\n\n@*return* `m21`\n\n@*return* `m22`\n\n@*return* `m23`\n\n@*return* `m24`\n\n@*return* `m31`\n\n@*return* `m32`\n\n@*return* `m33`\n\n@*return* `m34`\n\n@*return* `m41`\n\n@*return* `m42`\n\n@*return* `m43`\n\n@*return* `m44`",
                    "finish": [
                        333,
                        50
                    ],
                    "returns": [
                        {
                            "desc": "nil when unitID cannot be parsed",
                            "name": "m11",
                            "rawdesc": "nil when unitID cannot be parsed",
                            "type": "function.return",
                            "view": "number?"
                        },
                        {
                            "name": "m12",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "m13",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "m14",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "m21",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "m22",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "m23",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "m24",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "m31",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "m32",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "m33",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "m34",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "m41",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "m42",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "m43",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "m44",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        333,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitTransformMatrix(unitID: integer)\n  -> m11: number?\n  2. m12: number\n  3. m13: number\n  4. m14: number\n  5. m21: number\n  6. m22: number\n  7. m23: number\n  8. m24: number\n  9. m31: number\n 10. m32: number\n 11. m33: number\n 12. m34: number\n 13. m41: number\n 14. m42: number\n 15. m43: number\n 16. m44: number"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    333,
                    38
                ],
                "name": "GetUnitTransformMatrix",
                "start": [
                    333,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitTransformMatrix",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Get the transport carrying the unit\n\nReturns the unit ID of the transport, if any.\nReturns nil if the unit is not being transported.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                859,
                                41
                            ],
                            "name": "unitID",
                            "start": [
                                859,
                                35
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Get the transport carrying the unit\n\nReturns the unit ID of the transport, if any.\nReturns nil if the unit is not being transported.",
                    "finish": [
                        859,
                        46
                    ],
                    "rawdesc": "Get the transport carrying the unit\n\nReturns the unit ID of the transport, if any.\nReturns nil if the unit is not being transported.",
                    "returns": [
                        {
                            "name": "transportUnitID",
                            "type": "function.return",
                            "view": "number|nil"
                        }
                    ],
                    "start": [
                        859,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitTransporter(unitID: integer)\n  -> transportUnitID: number|nil"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    859,
                    34
                ],
                "name": "GetUnitTransporter",
                "rawdesc": "Get the transport carrying the unit\n\nReturns the unit ID of the transport, if any.\nReturns nil if the unit is not being transported.",
                "start": [
                    859,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitTransporter",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                754,
                                37
                            ],
                            "name": "unitID",
                            "start": [
                                754,
                                31
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        754,
                        42
                    ],
                    "returns": [
                        {
                            "name": "front",
                            "type": "function.return",
                            "view": "xyz?"
                        },
                        {
                            "name": "up",
                            "type": "function.return",
                            "view": "xyz"
                        },
                        {
                            "name": "right",
                            "type": "function.return",
                            "view": "xyz"
                        }
                    ],
                    "start": [
                        754,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitVectors(unitID: integer)\n  -> front: xyz?\n  2. up: xyz\n  3. right: xyz"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    754,
                    30
                ],
                "name": "GetUnitVectors",
                "start": [
                    754,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitVectors",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                774,
                                38
                            ],
                            "name": "unitID",
                            "start": [
                                774,
                                32
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        774,
                        43
                    ],
                    "start": [
                        774,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitVelocity(unitID: integer)"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    774,
                    31
                ],
                "name": "GetUnitVelocity",
                "start": [
                    774,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitVelocity",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `midPos` — (Default: false)\n\n@*return* `x` — nil when unitID cannot be parsed\n\n@*return* `y`\n\n@*return* `z`",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                393,
                                42
                            ],
                            "name": "unitID",
                            "start": [
                                393,
                                36
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "desc": "(Default: false)",
                            "finish": [
                                393,
                                50
                            ],
                            "name": "midPos",
                            "rawdesc": "(Default: false)",
                            "start": [
                                393,
                                44
                            ],
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "@*param* `midPos` — (Default: false)\n\n@*return* `x` — nil when unitID cannot be parsed\n\n@*return* `y`\n\n@*return* `z`",
                    "finish": [
                        393,
                        55
                    ],
                    "returns": [
                        {
                            "desc": "nil when unitID cannot be parsed",
                            "name": "x",
                            "rawdesc": "nil when unitID cannot be parsed",
                            "type": "function.return",
                            "view": "number?"
                        },
                        {
                            "name": "y",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "z",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        393,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitViewPosition(unitID: integer, midPos?: boolean)\n  -> x: number?\n  2. y: number\n  3. z: number"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    393,
                    35
                ],
                "name": "GetUnitViewPosition",
                "start": [
                    393,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitViewPosition",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                940,
                                43
                            ],
                            "name": "unitID",
                            "start": [
                                940,
                                37
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        940,
                        48
                    ],
                    "start": [
                        940,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitWeaponCanFire(unitID: integer)"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    940,
                    36
                ],
                "name": "GetUnitWeaponCanFire",
                "start": [
                    940,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitWeaponCanFire",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                922,
                                43
                            ],
                            "name": "unitID",
                            "start": [
                                922,
                                37
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        922,
                        48
                    ],
                    "start": [
                        922,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitWeaponDamages(unitID: integer)"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    922,
                    36
                ],
                "name": "GetUnitWeaponDamages",
                "start": [
                    922,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitWeaponDamages",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                937,
                                54
                            ],
                            "name": "unitID",
                            "start": [
                                937,
                                48
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        937,
                        59
                    ],
                    "start": [
                        937,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitWeaponHaveFreeLineOfFire(unitID: integer)"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    937,
                    47
                ],
                "name": "GetUnitWeaponHaveFreeLineOfFire",
                "start": [
                    937,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitWeaponHaveFreeLineOfFire",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Check the state of a unit's weapon\n\nAvailable states to poll:\n\"reloadFrame\" (frame on which the weapon will be ready to fire),\n\"reloadSpeed\" (reload time in seconds),\n\"range\" (in elmos),\n\"autoTargetRangeBoost\" (predictive aiming range buffer, in elmos),\n\"projectileSpeed\" (in elmos/frame),\n\"reloadTimeXP\" (reload time after XP bonus, in seconds),\n\"reaimTime\" (frames between AimWeapon calls),\n\"burst\" (shots in a burst),\n\"burstRate\" (delay between shots in a burst, in seconds),\n\"projectiles\" (projectiles per shot),\n\"salvoLeft\" (shots remaining in ongoing burst),\n\"nextSalvo\" (simframe of the next shot in an ongoing burst),\n\"accuracy\" (INaccuracy after XP bonus),\n\"sprayAngle\" (spray angle after XP bonus),\n\"targetMoveError\" (extra inaccuracy against moving targets, after XP bonus)\n\"avoidFlags\" (bitmask for targeting avoidance),\n\"collisionFlags\" (bitmask for collisions).\n\nThe state \"salvoError\" is an exception and returns a table: {x, y, z},\nwhich represents the inaccuracy error of the ongoing burst.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                919,
                                41
                            ],
                            "name": "unitID",
                            "start": [
                                919,
                                35
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                919,
                                52
                            ],
                            "name": "weaponNum",
                            "start": [
                                919,
                                43
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                919,
                                63
                            ],
                            "name": "stateName",
                            "start": [
                                919,
                                54
                            ],
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "desc": "Check the state of a unit's weapon\n\nAvailable states to poll:\n\"reloadFrame\" (frame on which the weapon will be ready to fire),\n\"reloadSpeed\" (reload time in seconds),\n\"range\" (in elmos),\n\"autoTargetRangeBoost\" (predictive aiming range buffer, in elmos),\n\"projectileSpeed\" (in elmos/frame),\n\"reloadTimeXP\" (reload time after XP bonus, in seconds),\n\"reaimTime\" (frames between AimWeapon calls),\n\"burst\" (shots in a burst),\n\"burstRate\" (delay between shots in a burst, in seconds),\n\"projectiles\" (projectiles per shot),\n\"salvoLeft\" (shots remaining in ongoing burst),\n\"nextSalvo\" (simframe of the next shot in an ongoing burst),\n\"accuracy\" (INaccuracy after XP bonus),\n\"sprayAngle\" (spray angle after XP bonus),\n\"targetMoveError\" (extra inaccuracy against moving targets, after XP bonus)\n\"avoidFlags\" (bitmask for targeting avoidance),\n\"collisionFlags\" (bitmask for collisions).\n\nThe state \"salvoError\" is an exception and returns a table: {x, y, z},\nwhich represents the inaccuracy error of the ongoing burst.",
                    "finish": [
                        919,
                        68
                    ],
                    "rawdesc": "Check the state of a unit's weapon\n\nAvailable states to poll:\n\"reloadFrame\" (frame on which the weapon will be ready to fire),\n\"reloadSpeed\" (reload time in seconds),\n\"range\" (in elmos),\n\"autoTargetRangeBoost\" (predictive aiming range buffer, in elmos),\n\"projectileSpeed\" (in elmos/frame),\n\"reloadTimeXP\" (reload time after XP bonus, in seconds),\n\"reaimTime\" (frames between AimWeapon calls),\n\"burst\" (shots in a burst),\n\"burstRate\" (delay between shots in a burst, in seconds),\n\"projectiles\" (projectiles per shot),\n\"salvoLeft\" (shots remaining in ongoing burst),\n\"nextSalvo\" (simframe of the next shot in an ongoing burst),\n\"accuracy\" (INaccuracy after XP bonus),\n\"sprayAngle\" (spray angle after XP bonus),\n\"targetMoveError\" (extra inaccuracy against moving targets, after XP bonus)\n\"avoidFlags\" (bitmask for targeting avoidance),\n\"collisionFlags\" (bitmask for collisions).\n\nThe state \"salvoError\" is an exception and returns a table: {x, y, z},\nwhich represents the inaccuracy error of the ongoing burst.",
                    "returns": [
                        {
                            "name": "stateValue",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        919,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitWeaponState(unitID: integer, weaponNum: number, stateName: string)\n  -> stateValue: number"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    919,
                    34
                ],
                "name": "GetUnitWeaponState",
                "rawdesc": "Check the state of a unit's weapon\n\nAvailable states to poll:\n\"reloadFrame\" (frame on which the weapon will be ready to fire),\n\"reloadSpeed\" (reload time in seconds),\n\"range\" (in elmos),\n\"autoTargetRangeBoost\" (predictive aiming range buffer, in elmos),\n\"projectileSpeed\" (in elmos/frame),\n\"reloadTimeXP\" (reload time after XP bonus, in seconds),\n\"reaimTime\" (frames between AimWeapon calls),\n\"burst\" (shots in a burst),\n\"burstRate\" (delay between shots in a burst, in seconds),\n\"projectiles\" (projectiles per shot),\n\"salvoLeft\" (shots remaining in ongoing burst),\n\"nextSalvo\" (simframe of the next shot in an ongoing burst),\n\"accuracy\" (INaccuracy after XP bonus),\n\"sprayAngle\" (spray angle after XP bonus),\n\"targetMoveError\" (extra inaccuracy against moving targets, after XP bonus)\n\"avoidFlags\" (bitmask for targeting avoidance),\n\"collisionFlags\" (bitmask for collisions).\n\nThe state \"salvoError\" is an exception and returns a table: {x, y, z},\nwhich represents the inaccuracy error of the ongoing burst.",
                "start": [
                    919,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitWeaponState",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Checks a weapon's target\n\nNote that this doesn't need to reflect the unit's Attack orders or such, and\nthat weapons can aim individually unless slaved.\n\n@*return* `TargetType` — none\n\n@*return* `isUserTarget`\n\n```lua\nTargetType:\n    | 0\n```",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                957,
                                42
                            ],
                            "name": "unitID",
                            "start": [
                                957,
                                36
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                957,
                                53
                            ],
                            "name": "weaponNum",
                            "start": [
                                957,
                                44
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Checks a weapon's target\n\nNote that this doesn't need to reflect the unit's Attack orders or such, and\nthat weapons can aim individually unless slaved.\n\n@*return* `TargetType` — none\n\n@*return* `isUserTarget`\n\n```lua\nTargetType:\n    | 0\n```",
                    "finish": [
                        957,
                        58
                    ],
                    "rawdesc": "Checks a weapon's target\n\nNote that this doesn't need to reflect the unit's Attack orders or such, and\nthat weapons can aim individually unless slaved.\n\n\n```lua\nTargetType:\n    | 0\n```",
                    "returns": [
                        {
                            "desc": "none",
                            "name": "TargetType",
                            "rawdesc": "none",
                            "type": "function.return",
                            "view": "0"
                        },
                        {
                            "name": "isUserTarget",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        957,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitWeaponTarget(unitID: integer, weaponNum: integer)\n  -> TargetType: 0\n  2. isUserTarget: boolean"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    957,
                    35
                ],
                "name": "GetUnitWeaponTarget",
                "rawdesc": "Checks a weapon's target\n\nNote that this doesn't need to reflect the unit's Attack orders or such, and\nthat weapons can aim individually unless slaved.\n\n\n```lua\nTargetType:\n    | 0\n```",
                "start": [
                    957,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Checks a weapon's target\n\nNote that this doesn't need to reflect the unit's Attack orders or such, and\nthat weapons can aim individually unless slaved.\n\n@*return* `TargetType` — unit\n\n@*return* `isUserTarget`\n\n@*return* `targetUnitID`\n\n```lua\nTargetType:\n    | 1\n```",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                969,
                                42
                            ],
                            "name": "unitID",
                            "start": [
                                969,
                                36
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                969,
                                53
                            ],
                            "name": "weaponNum",
                            "start": [
                                969,
                                44
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Checks a weapon's target\n\nNote that this doesn't need to reflect the unit's Attack orders or such, and\nthat weapons can aim individually unless slaved.\n\n@*return* `TargetType` — unit\n\n@*return* `isUserTarget`\n\n@*return* `targetUnitID`\n\n```lua\nTargetType:\n    | 1\n```",
                    "finish": [
                        969,
                        58
                    ],
                    "rawdesc": "Checks a weapon's target\n\nNote that this doesn't need to reflect the unit's Attack orders or such, and\nthat weapons can aim individually unless slaved.\n\n\n```lua\nTargetType:\n    | 1\n```",
                    "returns": [
                        {
                            "desc": "unit",
                            "name": "TargetType",
                            "rawdesc": "unit",
                            "type": "function.return",
                            "view": "1"
                        },
                        {
                            "name": "isUserTarget",
                            "type": "function.return",
                            "view": "boolean"
                        },
                        {
                            "name": "targetUnitID",
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": [
                        969,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitWeaponTarget(unitID: integer, weaponNum: integer)\n  -> TargetType: 1\n  2. isUserTarget: boolean\n  3. targetUnitID: integer"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    969,
                    35
                ],
                "name": "GetUnitWeaponTarget",
                "rawdesc": "Checks a weapon's target\n\nNote that this doesn't need to reflect the unit's Attack orders or such, and\nthat weapons can aim individually unless slaved.\n\n\n```lua\nTargetType:\n    | 1\n```",
                "start": [
                    969,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Checks a weapon's target\n\nNote that this doesn't need to reflect the unit's Attack orders or such, and\nthat weapons can aim individually unless slaved.\n\n@*return* `TargetType` — position\n\n@*return* `isUserTarget`\n\n@*return* `targetPosition`\n\n```lua\nTargetType:\n    | 2\n```",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                981,
                                42
                            ],
                            "name": "unitID",
                            "start": [
                                981,
                                36
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                981,
                                53
                            ],
                            "name": "weaponNum",
                            "start": [
                                981,
                                44
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Checks a weapon's target\n\nNote that this doesn't need to reflect the unit's Attack orders or such, and\nthat weapons can aim individually unless slaved.\n\n@*return* `TargetType` — position\n\n@*return* `isUserTarget`\n\n@*return* `targetPosition`\n\n```lua\nTargetType:\n    | 2\n```",
                    "finish": [
                        981,
                        58
                    ],
                    "rawdesc": "Checks a weapon's target\n\nNote that this doesn't need to reflect the unit's Attack orders or such, and\nthat weapons can aim individually unless slaved.\n\n\n```lua\nTargetType:\n    | 2\n```",
                    "returns": [
                        {
                            "desc": "position",
                            "name": "TargetType",
                            "rawdesc": "position",
                            "type": "function.return",
                            "view": "2"
                        },
                        {
                            "name": "isUserTarget",
                            "type": "function.return",
                            "view": "boolean"
                        },
                        {
                            "name": "targetPosition",
                            "type": "function.return",
                            "view": "xyz"
                        }
                    ],
                    "start": [
                        981,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitWeaponTarget(unitID: integer, weaponNum: integer)\n  -> TargetType: 2\n  2. isUserTarget: boolean\n  3. targetPosition: xyz"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    981,
                    35
                ],
                "name": "GetUnitWeaponTarget",
                "rawdesc": "Checks a weapon's target\n\nNote that this doesn't need to reflect the unit's Attack orders or such, and\nthat weapons can aim individually unless slaved.\n\n\n```lua\nTargetType:\n    | 2\n```",
                "start": [
                    981,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Checks a weapon's target\n\nNote that this doesn't need to reflect the unit's Attack orders or such, and\nthat weapons can aim individually unless slaved.\n\n@*return* `TargetType` — projectileID\n\n@*return* `isUserTarget`\n\n@*return* `targetProjectileId`\n\n```lua\nTargetType:\n    | 3\n```",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                993,
                                42
                            ],
                            "name": "unitID",
                            "start": [
                                993,
                                36
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                993,
                                53
                            ],
                            "name": "weaponNum",
                            "start": [
                                993,
                                44
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Checks a weapon's target\n\nNote that this doesn't need to reflect the unit's Attack orders or such, and\nthat weapons can aim individually unless slaved.\n\n@*return* `TargetType` — projectileID\n\n@*return* `isUserTarget`\n\n@*return* `targetProjectileId`\n\n```lua\nTargetType:\n    | 3\n```",
                    "finish": [
                        993,
                        58
                    ],
                    "rawdesc": "Checks a weapon's target\n\nNote that this doesn't need to reflect the unit's Attack orders or such, and\nthat weapons can aim individually unless slaved.\n\n\n```lua\nTargetType:\n    | 3\n```",
                    "returns": [
                        {
                            "desc": "projectileID",
                            "name": "TargetType",
                            "rawdesc": "projectileID",
                            "type": "function.return",
                            "view": "3"
                        },
                        {
                            "name": "isUserTarget",
                            "type": "function.return",
                            "view": "boolean"
                        },
                        {
                            "name": "targetProjectileId",
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": [
                        993,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitWeaponTarget(unitID: integer, weaponNum: integer)\n  -> TargetType: 3\n  2. isUserTarget: boolean\n  3. targetProjectileId: integer"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    993,
                    35
                ],
                "name": "GetUnitWeaponTarget",
                "rawdesc": "Checks a weapon's target\n\nNote that this doesn't need to reflect the unit's Attack orders or such, and\nthat weapons can aim individually unless slaved.\n\n\n```lua\nTargetType:\n    | 3\n```",
                "start": [
                    993,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitWeaponTarget",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                934,
                                45
                            ],
                            "name": "unitID",
                            "start": [
                                934,
                                39
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        934,
                        50
                    ],
                    "start": [
                        934,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitWeaponTestRange(unitID: integer)"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    934,
                    38
                ],
                "name": "GetUnitWeaponTestRange",
                "start": [
                    934,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitWeaponTestRange",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                931,
                                46
                            ],
                            "name": "unitID",
                            "start": [
                                931,
                                40
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        931,
                        51
                    ],
                    "start": [
                        931,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitWeaponTestTarget(unitID: integer)"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    931,
                    39
                ],
                "name": "GetUnitWeaponTestTarget",
                "start": [
                    931,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitWeaponTestTarget",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                928,
                                45
                            ],
                            "name": "unitID",
                            "start": [
                                928,
                                39
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        928,
                        50
                    ],
                    "start": [
                        928,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitWeaponTryTarget(unitID: integer)"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    928,
                    38
                ],
                "name": "GetUnitWeaponTryTarget",
                "start": [
                    928,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitWeaponTryTarget",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                925,
                                43
                            ],
                            "name": "unitID",
                            "start": [
                                925,
                                37
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        925,
                        48
                    ],
                    "start": [
                        925,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitWeaponVectors(unitID: integer)"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    925,
                    36
                ],
                "name": "GetUnitWeaponVectors",
                "start": [
                    925,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitWeaponVectors",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Checks a builder's current task\n\nChecks what a builder is currently doing. This is not the same as `Spring.GetUnitCurrentCommand`,\nbecause you can have a command at the front of the queue and not be doing it (for example because\nthe target is still too far away), and on the other hand you can also be doing a task despite not\nhaving it in front of the queue (for example you're Guarding another builder who does). Also, it\nresolves the Repair command into either actual repair, or construction assist (in which case it\nreturns the appropriate \"build\" command). Only build-related commands are returned (no Move or any\ncustom commands).\n\nThe possible commands returned are repair, reclaim, resurrect, capture, restore,\nand build commands (negative buildee unitDefID).\n\n@*return* `cmdID` — of the relevant command\n\n@*return* `targetID` — if applicable (all except RESTORE)",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                803,
                                40
                            ],
                            "name": "unitID",
                            "start": [
                                803,
                                34
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Checks a builder's current task\n\nChecks what a builder is currently doing. This is not the same as `Spring.GetUnitCurrentCommand`,\nbecause you can have a command at the front of the queue and not be doing it (for example because\nthe target is still too far away), and on the other hand you can also be doing a task despite not\nhaving it in front of the queue (for example you're Guarding another builder who does). Also, it\nresolves the Repair command into either actual repair, or construction assist (in which case it\nreturns the appropriate \"build\" command). Only build-related commands are returned (no Move or any\ncustom commands).\n\nThe possible commands returned are repair, reclaim, resurrect, capture, restore,\nand build commands (negative buildee unitDefID).\n\n@*return* `cmdID` — of the relevant command\n\n@*return* `targetID` — if applicable (all except RESTORE)",
                    "finish": [
                        803,
                        45
                    ],
                    "rawdesc": "Checks a builder's current task\n\nChecks what a builder is currently doing. This is not the same as `Spring.GetUnitCurrentCommand`,\nbecause you can have a command at the front of the queue and not be doing it (for example because\nthe target is still too far away), and on the other hand you can also be doing a task despite not\nhaving it in front of the queue (for example you're Guarding another builder who does). Also, it\nresolves the Repair command into either actual repair, or construction assist (in which case it\nreturns the appropriate \"build\" command). Only build-related commands are returned (no Move or any\ncustom commands).\n\nThe possible commands returned are repair, reclaim, resurrect, capture, restore,\nand build commands (negative buildee unitDefID).",
                    "returns": [
                        {
                            "desc": "of the relevant command",
                            "name": "cmdID",
                            "rawdesc": "of the relevant command",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "desc": "if applicable (all except RESTORE)",
                            "name": "targetID",
                            "rawdesc": "if applicable (all except RESTORE)",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        803,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitWorkerTask(unitID: integer)\n  -> cmdID: number\n  2. targetID: number"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    803,
                    33
                ],
                "name": "GetUnitWorkerTask",
                "rawdesc": "Checks a builder's current task\n\nChecks what a builder is currently doing. This is not the same as `Spring.GetUnitCurrentCommand`,\nbecause you can have a command at the front of the queue and not be doing it (for example because\nthe target is still too far away), and on the other hand you can also be doing a task despite not\nhaving it in front of the queue (for example you're Guarding another builder who does). Also, it\nresolves the Repair command into either actual repair, or construction assist (in which case it\nreturns the appropriate \"build\" command). Only build-related commands are returned (no Move or any\ncustom commands).\n\nThe possible commands returned are repair, reclaim, resurrect, capture, restore,\nand build commands (negative buildee unitDefID).",
                "start": [
                    803,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitWorkerTask",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                449,
                                34
                            ],
                            "name": "xmin",
                            "start": [
                                449,
                                30
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                449,
                                40
                            ],
                            "name": "ymin",
                            "start": [
                                449,
                                36
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                449,
                                46
                            ],
                            "name": "zmin",
                            "start": [
                                449,
                                42
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                449,
                                52
                            ],
                            "name": "xmax",
                            "start": [
                                449,
                                48
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                449,
                                58
                            ],
                            "name": "ymax",
                            "start": [
                                449,
                                54
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                449,
                                64
                            ],
                            "name": "zmax",
                            "start": [
                                449,
                                60
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                449,
                                76
                            ],
                            "name": "allegiance",
                            "start": [
                                449,
                                66
                            ],
                            "type": "local",
                            "view": "number?"
                        }
                    ],
                    "finish": [
                        449,
                        81
                    ],
                    "returns": [
                        {
                            "name": "unitIDs",
                            "type": "function.return",
                            "view": "number[]"
                        }
                    ],
                    "start": [
                        449,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitsInBox(xmin: number, ymin: number, zmin: number, xmax: number, ymax: number, zmax: number, allegiance?: number)\n  -> unitIDs: number[]"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    449,
                    29
                ],
                "name": "GetUnitsInBox",
                "start": [
                    449,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitsInBox",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                455,
                                36
                            ],
                            "name": "x",
                            "start": [
                                455,
                                35
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                455,
                                39
                            ],
                            "name": "z",
                            "start": [
                                455,
                                38
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                455,
                                47
                            ],
                            "name": "radius",
                            "start": [
                                455,
                                41
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "finish": [
                        455,
                        52
                    ],
                    "returns": [
                        {
                            "name": "unitIDs",
                            "type": "function.return",
                            "view": "number[]"
                        }
                    ],
                    "start": [
                        455,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitsInCylinder(x: number, z: number, radius: number)\n  -> unitIDs: number[]"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    455,
                    34
                ],
                "name": "GetUnitsInCylinder",
                "start": [
                    455,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitsInCylinder",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nPlane normals point towards accepted space, so the acceptance criteria for each plane is:\n\n```\nradius     = unit radius\npx, py, pz = unit position\n[(nx * px) + (ny * py) + (nz * pz) + (d - radius)]  <=  0\n```",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                483,
                                39
                            ],
                            "name": "planes",
                            "start": [
                                483,
                                33
                            ],
                            "type": "local",
                            "view": "Plane[]"
                        },
                        {
                            "finish": [
                                483,
                                51
                            ],
                            "name": "allegiance",
                            "start": [
                                483,
                                41
                            ],
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nPlane normals point towards accepted space, so the acceptance criteria for each plane is:\n\n```\nradius     = unit radius\npx, py, pz = unit position\n[(nx * px) + (ny * py) + (nz * pz) + (d - radius)]  <=  0\n```",
                    "finish": [
                        483,
                        56
                    ],
                    "rawdesc": "\nPlane normals point towards accepted space, so the acceptance criteria for each plane is:\n\n```\nradius     = unit radius\npx, py, pz = unit position\n[(nx * px) + (ny * py) + (nz * pz) + (d - radius)]  <=  0\n```",
                    "returns": [
                        {
                            "name": "unitIDs",
                            "type": "function.return",
                            "view": "integer[]"
                        }
                    ],
                    "start": [
                        483,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitsInPlanes(planes: Plane[], allegiance?: integer)\n  -> unitIDs: integer[]"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    483,
                    32
                ],
                "name": "GetUnitsInPlanes",
                "rawdesc": "\nPlane normals point towards accepted space, so the acceptance criteria for each plane is:\n\n```\nradius     = unit radius\npx, py, pz = unit position\n[(nx * px) + (ny * py) + (nz * pz) + (d - radius)]  <=  0\n```",
                "start": [
                    483,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitsInPlanes",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                439,
                                40
                            ],
                            "name": "xmin",
                            "start": [
                                439,
                                36
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                439,
                                46
                            ],
                            "name": "zmin",
                            "start": [
                                439,
                                42
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                439,
                                52
                            ],
                            "name": "xmax",
                            "start": [
                                439,
                                48
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                439,
                                58
                            ],
                            "name": "zmax",
                            "start": [
                                439,
                                54
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                439,
                                70
                            ],
                            "name": "allegiance",
                            "start": [
                                439,
                                60
                            ],
                            "type": "local",
                            "view": "number?"
                        }
                    ],
                    "finish": [
                        439,
                        75
                    ],
                    "returns": [
                        {
                            "name": "unitIDs",
                            "type": "function.return",
                            "view": "number[]"
                        }
                    ],
                    "start": [
                        439,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitsInRectangle(xmin: number, zmin: number, xmax: number, zmax: number, allegiance?: number)\n  -> unitIDs: number[]"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    439,
                    35
                ],
                "name": "GetUnitsInRectangle",
                "start": [
                    439,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitsInRectangle",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Get units inside a rectangle area on the map\n\n@*param* `allegiance` — (Default: -1) teamID when > 0, when < 0 one of AllUnits = -1, MyUnits = -2, AllyUnits = -3, EnemyUnits = -4",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                437,
                                46
                            ],
                            "name": "left",
                            "start": [
                                437,
                                42
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                437,
                                51
                            ],
                            "name": "top",
                            "start": [
                                437,
                                48
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                437,
                                58
                            ],
                            "name": "right",
                            "start": [
                                437,
                                53
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                437,
                                66
                            ],
                            "name": "bottom",
                            "start": [
                                437,
                                60
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "desc": "(Default: -1) teamID when > 0, when < 0 one of AllUnits = -1, MyUnits = -2, AllyUnits = -3, EnemyUnits = -4",
                            "finish": [
                                437,
                                78
                            ],
                            "name": "allegiance",
                            "rawdesc": "(Default: -1) teamID when > 0, when < 0 one of AllUnits = -1, MyUnits = -2, AllyUnits = -3, EnemyUnits = -4",
                            "start": [
                                437,
                                68
                            ],
                            "type": "local",
                            "view": "number?"
                        }
                    ],
                    "desc": "Get units inside a rectangle area on the map\n\n@*param* `allegiance` — (Default: -1) teamID when > 0, when < 0 one of AllUnits = -1, MyUnits = -2, AllyUnits = -3, EnemyUnits = -4",
                    "finish": [
                        437,
                        83
                    ],
                    "rawdesc": "Get units inside a rectangle area on the map",
                    "returns": [
                        {
                            "name": "unitIDs",
                            "type": "function.return",
                            "view": "number[]|nil"
                        }
                    ],
                    "start": [
                        437,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitsInScreenRectangle(left: number, top: number, right: number, bottom: number, allegiance?: number)\n  -> unitIDs: number[]|nil"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    437,
                    41
                ],
                "name": "GetUnitsInScreenRectangle",
                "rawdesc": "Get units inside a rectangle area on the map",
                "start": [
                    437,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitsInScreenRectangle",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                462,
                                34
                            ],
                            "name": "x",
                            "start": [
                                462,
                                33
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                462,
                                37
                            ],
                            "name": "y",
                            "start": [
                                462,
                                36
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                462,
                                40
                            ],
                            "name": "z",
                            "start": [
                                462,
                                39
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                462,
                                48
                            ],
                            "name": "radius",
                            "start": [
                                462,
                                42
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "finish": [
                        462,
                        53
                    ],
                    "returns": [
                        {
                            "name": "unitIDs",
                            "type": "function.return",
                            "view": "number[]"
                        }
                    ],
                    "start": [
                        462,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetUnitsInSphere(x: number, y: number, z: number, radius: number)\n  -> unitIDs: number[]"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    462,
                    32
                ],
                "name": "GetUnitsInSphere",
                "start": [
                    462,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetUnitsInSphere",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                159,
                                44
                            ],
                            "name": "heading",
                            "start": [
                                159,
                                37
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "finish": [
                        159,
                        49
                    ],
                    "returns": [
                        {
                            "name": "x",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "z",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        159,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetVectorFromHeading(heading: number)\n  -> x: number\n  2. z: number"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    159,
                    36
                ],
                "name": "GetVectorFromHeading",
                "start": [
                    159,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetVectorFromHeading",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*return* `usedMem` — in MB\n\n@*return* `availableMem` — in MB",
                "extends": {
                    "args": [],
                    "desc": "@*return* `usedMem` — in MB\n\n@*return* `availableMem` — in MB",
                    "finish": [
                        62,
                        36
                    ],
                    "returns": [
                        {
                            "desc": "in MB",
                            "name": "usedMem",
                            "rawdesc": "in MB",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "desc": "in MB",
                            "name": "availableMem",
                            "rawdesc": "in MB",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        62,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetVidMemUsage()\n  -> usedMem: number\n  2. availableMem: number"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    62,
                    30
                ],
                "name": "GetVidMemUsage",
                "start": [
                    62,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetVidMemUsage",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [],
                    "finish": [
                        211,
                        43
                    ],
                    "returns": [
                        {
                            "name": "allowRecord",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        211,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetVideoCapturingMode()\n  -> allowRecord: boolean"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    211,
                    37
                ],
                "name": "GetVideoCapturingMode",
                "start": [
                    211,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetVideoCapturingMode",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Get main view geometry (map and game rendering)\n\n@*return* `viewSizeX` — in px\n\n@*return* `viewSizeY` — in px\n\n@*return* `viewPosX` — offset from leftmost screen left border in px\n\n@*return* `viewPosY` — offset from bottommost screen bottom border in px",
                "extends": {
                    "args": [],
                    "desc": "Get main view geometry (map and game rendering)\n\n@*return* `viewSizeX` — in px\n\n@*return* `viewSizeY` — in px\n\n@*return* `viewPosX` — offset from leftmost screen left border in px\n\n@*return* `viewPosY` — offset from bottommost screen bottom border in px",
                    "finish": [
                        102,
                        37
                    ],
                    "rawdesc": "Get main view geometry (map and game rendering)",
                    "returns": [
                        {
                            "desc": "in px",
                            "name": "viewSizeX",
                            "rawdesc": "in px",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "desc": "in px",
                            "name": "viewSizeY",
                            "rawdesc": "in px",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "desc": "offset from leftmost screen left border in px",
                            "name": "viewPosX",
                            "rawdesc": "offset from leftmost screen left border in px",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "desc": "offset from bottommost screen bottom border in px",
                            "name": "viewPosY",
                            "rawdesc": "offset from bottommost screen bottom border in px",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        102,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetViewGeometry()\n  -> viewSizeX: number\n  2. viewSizeY: number\n  3. viewPosX: number\n  4. viewPosY: number"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    102,
                    31
                ],
                "name": "GetViewGeometry",
                "rawdesc": "Get main view geometry (map and game rendering)",
                "start": [
                    102,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetViewGeometry",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `teamID` — (Default: -1)\n\n@*param* `radius` — (Default: 30)\n\n@*param* `icons` — (Default: true)\n\n@*param* `geos` — (Default: true)",
                "extends": {
                    "args": [
                        {
                            "desc": "(Default: -1)",
                            "finish": [
                                406,
                                41
                            ],
                            "name": "teamID",
                            "rawdesc": "(Default: -1)",
                            "start": [
                                406,
                                35
                            ],
                            "type": "local",
                            "view": "integer?"
                        },
                        {
                            "desc": "(Default: 30)",
                            "finish": [
                                406,
                                49
                            ],
                            "name": "radius",
                            "rawdesc": "(Default: 30)",
                            "start": [
                                406,
                                43
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "desc": "(Default: true)",
                            "finish": [
                                406,
                                56
                            ],
                            "name": "icons",
                            "rawdesc": "(Default: true)",
                            "start": [
                                406,
                                51
                            ],
                            "type": "local",
                            "view": "boolean?"
                        },
                        {
                            "desc": "(Default: true)",
                            "finish": [
                                406,
                                62
                            ],
                            "name": "geos",
                            "rawdesc": "(Default: true)",
                            "start": [
                                406,
                                58
                            ],
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "@*param* `teamID` — (Default: -1)\n\n@*param* `radius` — (Default: 30)\n\n@*param* `icons` — (Default: true)\n\n@*param* `geos` — (Default: true)",
                    "finish": [
                        406,
                        67
                    ],
                    "returns": [
                        {
                            "name": "featureIDs",
                            "type": "function.return",
                            "view": "number[]|nil"
                        }
                    ],
                    "start": [
                        406,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetVisibleFeatures(teamID?: integer, radius?: number, icons?: boolean, geos?: boolean)\n  -> featureIDs: number[]|nil"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    406,
                    34
                ],
                "name": "GetVisibleFeatures",
                "start": [
                    406,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetVisibleFeatures",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `allyTeamID` — (Default: -1)\n\n@*param* `addSyncedProjectiles` — (Default: true)\n\n@*param* `addWeaponProjectiles` — (Default: true)\n\n@*param* `addPieceProjectiles` — (Default: true)",
                "extends": {
                    "args": [
                        {
                            "desc": "(Default: -1)",
                            "finish": [
                                413,
                                48
                            ],
                            "name": "allyTeamID",
                            "rawdesc": "(Default: -1)",
                            "start": [
                                413,
                                38
                            ],
                            "type": "local",
                            "view": "integer?"
                        },
                        {
                            "desc": "(Default: true)",
                            "finish": [
                                413,
                                70
                            ],
                            "name": "addSyncedProjectiles",
                            "rawdesc": "(Default: true)",
                            "start": [
                                413,
                                50
                            ],
                            "type": "local",
                            "view": "boolean?"
                        },
                        {
                            "desc": "(Default: true)",
                            "finish": [
                                413,
                                92
                            ],
                            "name": "addWeaponProjectiles",
                            "rawdesc": "(Default: true)",
                            "start": [
                                413,
                                72
                            ],
                            "type": "local",
                            "view": "boolean?"
                        },
                        {
                            "desc": "(Default: true)",
                            "finish": [
                                413,
                                113
                            ],
                            "name": "addPieceProjectiles",
                            "rawdesc": "(Default: true)",
                            "start": [
                                413,
                                94
                            ],
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "@*param* `allyTeamID` — (Default: -1)\n\n@*param* `addSyncedProjectiles` — (Default: true)\n\n@*param* `addWeaponProjectiles` — (Default: true)\n\n@*param* `addPieceProjectiles` — (Default: true)",
                    "finish": [
                        413,
                        118
                    ],
                    "returns": [
                        {
                            "name": "projectileIDs",
                            "type": "function.return",
                            "view": "number[]|nil"
                        }
                    ],
                    "start": [
                        413,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetVisibleProjectiles(allyTeamID?: integer, addSyncedProjectiles?: boolean, addWeaponProjectiles?: boolean, addPieceProjectiles?: boolean)\n  -> projectileIDs: number[]|nil"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    413,
                    37
                ],
                "name": "GetVisibleProjectiles",
                "start": [
                    413,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetVisibleProjectiles",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `teamID` — (Default: -1)\n\n@*param* `radius` — (Default: 30)\n\n@*param* `icons` — (Default: true)",
                "extends": {
                    "args": [
                        {
                            "desc": "(Default: -1)",
                            "finish": [
                                399,
                                38
                            ],
                            "name": "teamID",
                            "rawdesc": "(Default: -1)",
                            "start": [
                                399,
                                32
                            ],
                            "type": "local",
                            "view": "integer?"
                        },
                        {
                            "desc": "(Default: 30)",
                            "finish": [
                                399,
                                46
                            ],
                            "name": "radius",
                            "rawdesc": "(Default: 30)",
                            "start": [
                                399,
                                40
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "desc": "(Default: true)",
                            "finish": [
                                399,
                                53
                            ],
                            "name": "icons",
                            "rawdesc": "(Default: true)",
                            "start": [
                                399,
                                48
                            ],
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "@*param* `teamID` — (Default: -1)\n\n@*param* `radius` — (Default: 30)\n\n@*param* `icons` — (Default: true)",
                    "finish": [
                        399,
                        58
                    ],
                    "returns": [
                        {
                            "name": "unitIDs",
                            "type": "function.return",
                            "view": "number[]|nil"
                        }
                    ],
                    "start": [
                        399,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetVisibleUnits(teamID?: integer, radius?: number, icons?: boolean)\n  -> unitIDs: number[]|nil"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    399,
                    31
                ],
                "name": "GetVisibleUnits",
                "start": [
                    399,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetVisibleUnits",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Get water level in a specific position\n\nWater is currently a flat plane, so this returns the same value regardless of XZ.\nHowever water may become more dynamic at some point so by using this you are future-proof.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1351,
                                31
                            ],
                            "name": "x",
                            "start": [
                                1351,
                                30
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1351,
                                34
                            ],
                            "name": "z",
                            "start": [
                                1351,
                                33
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "Get water level in a specific position\n\nWater is currently a flat plane, so this returns the same value regardless of XZ.\nHowever water may become more dynamic at some point so by using this you are future-proof.",
                    "finish": [
                        1351,
                        39
                    ],
                    "rawdesc": "Get water level in a specific position\n\nWater is currently a flat plane, so this returns the same value regardless of XZ.\nHowever water may become more dynamic at some point so by using this you are future-proof.",
                    "returns": [
                        {
                            "name": "waterLevel",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        1351,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetWaterLevel(x: number, z: number)\n  -> waterLevel: number"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1351,
                    29
                ],
                "name": "GetWaterLevel",
                "rawdesc": "Get water level in a specific position\n\nWater is currently a flat plane, so this returns the same value regardless of XZ.\nHowever water may become more dynamic at some point so by using this you are future-proof.",
                "start": [
                    1351,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetWaterLevel",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "See: ~rts~ /Rendering/Env/IWater.h",
                "extends": {
                    "args": [],
                    "desc": "See: ~rts~ /Rendering/Env/IWater.h",
                    "finish": [
                        502,
                        34
                    ],
                    "rawdesc": "See: ~rts~ /Rendering/Env/IWater.h",
                    "returns": [
                        {
                            "name": "waterRendererID",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "waterRendererName",
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": [
                        502,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetWaterMode()\n  -> waterRendererID: number\n  2. waterRendererName: string"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    502,
                    28
                ],
                "name": "GetWaterMode",
                "rawdesc": "See: ~rts~ /Rendering/Env/IWater.h",
                "start": [
                    502,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetWaterMode",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Get water plane height\n\nWater may at some point become shaped (rivers etc) but for now it is always a flat plane.\nUse this function instead of GetWaterLevel to denote you are relying on that assumption.\n\nSee: [Spring.GetWaterLevel](file:///home/runner/work/spring/spring/rts/Lua/library/generated/LuaSyncedRead.lua#1352#9)",
                "extends": {
                    "args": [],
                    "desc": "Get water plane height\n\nWater may at some point become shaped (rivers etc) but for now it is always a flat plane.\nUse this function instead of GetWaterLevel to denote you are relying on that assumption.\n\nSee: [Spring.GetWaterLevel](file:///home/runner/work/spring/spring/rts/Lua/library/generated/LuaSyncedRead.lua#1352#9)",
                    "finish": [
                        1341,
                        40
                    ],
                    "rawdesc": "Get water plane height\n\nWater may at some point become shaped (rivers etc) but for now it is always a flat plane.\nUse this function instead of GetWaterLevel to denote you are relying on that assumption.\n\nSee: [Spring.GetWaterLevel](file:///home/runner/work/spring/spring/rts/Lua/library/generated/LuaSyncedRead.lua#1352#9)",
                    "returns": [
                        {
                            "name": "waterPlaneLevel",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        1341,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetWaterPlaneLevel()\n  -> waterPlaneLevel: number"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1341,
                    34
                ],
                "name": "GetWaterPlaneLevel",
                "rawdesc": "Get water plane height\n\nWater may at some point become shaped (rivers etc) but for now it is always a flat plane.\nUse this function instead of GetWaterLevel to denote you are relying on that assumption.\n\nSee: [Spring.GetWaterLevel](file:///home/runner/work/spring/spring/rts/Lua/library/generated/LuaSyncedRead.lua#1352#9)",
                "start": [
                    1341,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetWaterPlaneLevel",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [],
                    "finish": [
                        64,
                        29
                    ],
                    "returns": [
                        {
                            "name": "windStrength",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        64,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetWind()\n  -> windStrength: number"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    64,
                    23
                ],
                "name": "GetWind",
                "start": [
                    64,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetWind",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Get main window display mode\n\n@*return* `width` — in px\n\n@*return* `height` — in px\n\n@*return* `bits` — per pixel\n\n@*return* `refresh` — rate in Hz",
                "extends": {
                    "args": [],
                    "desc": "Get main window display mode\n\n@*return* `width` — in px\n\n@*return* `height` — in px\n\n@*return* `bits` — per pixel\n\n@*return* `refresh` — rate in Hz",
                    "finish": [
                        130,
                        42
                    ],
                    "rawdesc": "Get main window display mode",
                    "returns": [
                        {
                            "desc": "in px",
                            "name": "width",
                            "rawdesc": "in px",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "desc": "in px",
                            "name": "height",
                            "rawdesc": "in px",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "desc": "per pixel",
                            "name": "bits",
                            "rawdesc": "per pixel",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "desc": "rate in Hz",
                            "name": "refresh",
                            "rawdesc": "rate in Hz",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        130,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetWindowDisplayMode()\n  -> width: number\n  2. height: number\n  3. bits: number\n  4. refresh: number"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    130,
                    36
                ],
                "name": "GetWindowDisplayMode",
                "rawdesc": "Get main window display mode",
                "start": [
                    130,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetWindowDisplayMode",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Get main window geometry\n\n@*return* `winSizeX` — in px\n\n@*return* `winSizeY` — in px\n\n@*return* `winPosX` — in px\n\n@*return* `winPosY` — in px\n\n@*return* `windowBorderTop` — in px\n\n@*return* `windowBorderLeft` — in px\n\n@*return* `windowBorderBottom` — in px\n\n@*return* `windowBorderRight` — in px",
                "extends": {
                    "args": [],
                    "desc": "Get main window geometry\n\n@*return* `winSizeX` — in px\n\n@*return* `winSizeY` — in px\n\n@*return* `winPosX` — in px\n\n@*return* `winPosY` — in px\n\n@*return* `windowBorderTop` — in px\n\n@*return* `windowBorderLeft` — in px\n\n@*return* `windowBorderBottom` — in px\n\n@*return* `windowBorderRight` — in px",
                    "finish": [
                        122,
                        39
                    ],
                    "rawdesc": "Get main window geometry",
                    "returns": [
                        {
                            "desc": "in px",
                            "name": "winSizeX",
                            "rawdesc": "in px",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "desc": "in px",
                            "name": "winSizeY",
                            "rawdesc": "in px",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "desc": "in px",
                            "name": "winPosX",
                            "rawdesc": "in px",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "desc": "in px",
                            "name": "winPosY",
                            "rawdesc": "in px",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "desc": "in px",
                            "name": "windowBorderTop",
                            "rawdesc": "in px",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "desc": "in px",
                            "name": "windowBorderLeft",
                            "rawdesc": "in px",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "desc": "in px",
                            "name": "windowBorderBottom",
                            "rawdesc": "in px",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "desc": "in px",
                            "name": "windowBorderRight",
                            "rawdesc": "in px",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        122,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GetWindowGeometry()\n  -> winSizeX: number\n  2. winSizeY: number\n  3. winPosX: number\n  4. winPosY: number\n  5. windowBorderTop: number\n  6. windowBorderLeft: number\n  7. windowBorderBottom: number\n  8. windowBorderRight: number"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    122,
                    33
                ],
                "name": "GetWindowGeometry",
                "rawdesc": "Get main window geometry",
                "start": [
                    122,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GetWindowGeometry",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "```lua\nreturn #1:\n    | true\n```",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                766,
                                31
                            ],
                            "name": "cmdID",
                            "start": [
                                766,
                                26
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                766,
                                39
                            ],
                            "name": "params",
                            "start": [
                                766,
                                33
                            ],
                            "type": "local",
                            "view": "table"
                        },
                        {
                            "desc": "Command Options params\n",
                            "finish": [
                                766,
                                48
                            ],
                            "name": "options",
                            "rawdesc": "Command Options params\n",
                            "start": [
                                766,
                                41
                            ],
                            "type": "local",
                            "view": "cmdOpts"
                        }
                    ],
                    "desc": "```lua\nreturn #1:\n    | true\n```",
                    "finish": [
                        766,
                        53
                    ],
                    "rawdesc": "```lua\nreturn #1:\n    | true\n```",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "true|nil"
                        }
                    ],
                    "start": [
                        766,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GiveOrder(cmdID: integer, params: table, options: cmdOpts)\n  -> true|nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    766,
                    25
                ],
                "name": "GiveOrder",
                "rawdesc": "```lua\nreturn #1:\n    | true\n```",
                "start": [
                    766,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GiveOrder",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1270,
                                43
                            ],
                            "name": "unitID",
                            "start": [
                                1270,
                                37
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                1270,
                                53
                            ],
                            "name": "cmdArray",
                            "start": [
                                1270,
                                45
                            ],
                            "type": "local",
                            "view": "Command[]"
                        }
                    ],
                    "finish": [
                        1270,
                        58
                    ],
                    "returns": [
                        {
                            "name": "ordersGiven",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        1270,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GiveOrderArrayToUnit(unitID: integer, cmdArray: Command[])\n  -> ordersGiven: boolean"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    1270,
                    36
                ],
                "name": "GiveOrderArrayToUnit",
                "start": [
                    1270,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                792,
                                43
                            ],
                            "name": "unitID",
                            "start": [
                                792,
                                37
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                792,
                                53
                            ],
                            "name": "cmdArray",
                            "start": [
                                792,
                                45
                            ],
                            "type": "local",
                            "view": "Command[]"
                        }
                    ],
                    "finish": [
                        792,
                        58
                    ],
                    "returns": [
                        {
                            "name": "ordersGiven",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        792,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GiveOrderArrayToUnit(unitID: integer, cmdArray: Command[])\n  -> ordersGiven: boolean"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    792,
                    36
                ],
                "name": "GiveOrderArrayToUnit",
                "start": [
                    792,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GiveOrderArrayToUnit",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `unitArray` — containing unitIDs",
                "extends": {
                    "args": [
                        {
                            "desc": "containing unitIDs",
                            "finish": [
                                1280,
                                51
                            ],
                            "name": "unitArray",
                            "rawdesc": "containing unitIDs",
                            "start": [
                                1280,
                                42
                            ],
                            "type": "local",
                            "view": "number[]"
                        },
                        {
                            "finish": [
                                1280,
                                61
                            ],
                            "name": "commands",
                            "start": [
                                1280,
                                53
                            ],
                            "type": "local",
                            "view": "Command[]"
                        }
                    ],
                    "desc": "@*param* `unitArray` — containing unitIDs",
                    "finish": [
                        1280,
                        66
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        1280,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GiveOrderArrayToUnitArray(unitArray: number[], commands: Command[])\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    1280,
                    41
                ],
                "name": "GiveOrderArrayToUnitArray",
                "start": [
                    1280,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `unitArray` — array of unit ids\n\n@*param* `pairwise` — (Default: `false`) When `false`, assign all commands to each unit.\n\n\nWhen `true`, assign commands according to index between units and cmds arrays.\n\nIf `len(unitArray) < len(cmdArray)` only the first `len(unitArray)` commands\nwill be assigned, and vice-versa.",
                "extends": {
                    "args": [
                        {
                            "desc": "array of unit ids",
                            "finish": [
                                808,
                                51
                            ],
                            "name": "unitArray",
                            "rawdesc": "array of unit ids",
                            "start": [
                                808,
                                42
                            ],
                            "type": "local",
                            "view": "number[]"
                        },
                        {
                            "finish": [
                                808,
                                61
                            ],
                            "name": "cmdArray",
                            "start": [
                                808,
                                53
                            ],
                            "type": "local",
                            "view": "Command[]"
                        },
                        {
                            "desc": "(Default: `false`) When `false`, assign all commands to each unit.",
                            "finish": [
                                808,
                                71
                            ],
                            "name": "pairwise",
                            "rawdesc": "(Default: `false`) When `false`, assign all commands to each unit.",
                            "start": [
                                808,
                                63
                            ],
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "@*param* `unitArray` — array of unit ids\n\n@*param* `pairwise` — (Default: `false`) When `false`, assign all commands to each unit.\n\n\nWhen `true`, assign commands according to index between units and cmds arrays.\n\nIf `len(unitArray) < len(cmdArray)` only the first `len(unitArray)` commands\nwill be assigned, and vice-versa.",
                    "finish": [
                        808,
                        76
                    ],
                    "rawdesc": "\nWhen `true`, assign commands according to index between units and cmds arrays.\n\nIf `len(unitArray) < len(cmdArray)` only the first `len(unitArray)` commands\nwill be assigned, and vice-versa.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean|nil"
                        }
                    ],
                    "start": [
                        808,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GiveOrderArrayToUnitArray(unitArray: number[], cmdArray: Command[], pairwise?: boolean)\n  -> boolean|nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    808,
                    41
                ],
                "name": "GiveOrderArrayToUnitArray",
                "rawdesc": "\nWhen `true`, assign commands according to index between units and cmds arrays.\n\nIf `len(unitArray) < len(cmdArray)` only the first `len(unitArray)` commands\nwill be assigned, and vice-versa.",
                "start": [
                    808,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GiveOrderArrayToUnitArray",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `unitMap` — table with unitIDs as keys",
                "extends": {
                    "args": [
                        {
                            "desc": "table with unitIDs as keys",
                            "finish": [
                                1275,
                                47
                            ],
                            "name": "unitMap",
                            "rawdesc": "table with unitIDs as keys",
                            "start": [
                                1275,
                                40
                            ],
                            "type": "local",
                            "view": "{ [number]: any }"
                        },
                        {
                            "finish": [
                                1275,
                                57
                            ],
                            "name": "commands",
                            "start": [
                                1275,
                                49
                            ],
                            "type": "local",
                            "view": "Command[]"
                        }
                    ],
                    "desc": "@*param* `unitMap` — table with unitIDs as keys",
                    "finish": [
                        1275,
                        62
                    ],
                    "returns": [
                        {
                            "name": "unitsOrdered",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        1275,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GiveOrderArrayToUnitMap(unitMap: { [number]: any }, commands: Command[])\n  -> unitsOrdered: number"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    1275,
                    39
                ],
                "name": "GiveOrderArrayToUnitMap",
                "start": [
                    1275,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `unitMap` — { [unitID] = arg1, ... }",
                "extends": {
                    "args": [
                        {
                            "desc": "{ [unitID] = arg1, ... }",
                            "finish": [
                                797,
                                47
                            ],
                            "name": "unitMap",
                            "rawdesc": "{ [unitID] = arg1, ... }",
                            "start": [
                                797,
                                40
                            ],
                            "type": "local",
                            "view": "table"
                        },
                        {
                            "finish": [
                                797,
                                57
                            ],
                            "name": "cmdArray",
                            "start": [
                                797,
                                49
                            ],
                            "type": "local",
                            "view": "Command[]"
                        }
                    ],
                    "desc": "@*param* `unitMap` — { [unitID] = arg1, ... }",
                    "finish": [
                        797,
                        62
                    ],
                    "returns": [
                        {
                            "name": "ordersGiven",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        797,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GiveOrderArrayToUnitMap(unitMap: table, cmdArray: Command[])\n  -> ordersGiven: boolean"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    797,
                    39
                ],
                "name": "GiveOrderArrayToUnitMap",
                "start": [
                    797,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GiveOrderArrayToUnitMap",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1251,
                                38
                            ],
                            "name": "unitID",
                            "start": [
                                1251,
                                32
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                1251,
                                45
                            ],
                            "name": "cmdID",
                            "start": [
                                1251,
                                40
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                1251,
                                53
                            ],
                            "name": "params",
                            "start": [
                                1251,
                                47
                            ],
                            "type": "local",
                            "view": "number[]?"
                        },
                        {
                            "desc": "Parameters for command options\n",
                            "finish": [
                                1251,
                                62
                            ],
                            "name": "options",
                            "rawdesc": "Parameters for command options\n",
                            "start": [
                                1251,
                                55
                            ],
                            "type": "local",
                            "view": "CommandOptions?"
                        }
                    ],
                    "finish": [
                        1251,
                        67
                    ],
                    "returns": [
                        {
                            "name": "unitOrdered",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        1251,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GiveOrderToUnit(unitID: integer, cmdID: integer, params?: number[], options?: CommandOptions)\n  -> unitOrdered: boolean"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    1251,
                    31
                ],
                "name": "GiveOrderToUnit",
                "start": [
                    1251,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "```lua\nreturn #1:\n    | true\n```",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                773,
                                38
                            ],
                            "name": "unitID",
                            "start": [
                                773,
                                32
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                773,
                                45
                            ],
                            "name": "cmdID",
                            "start": [
                                773,
                                40
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                773,
                                53
                            ],
                            "name": "params",
                            "start": [
                                773,
                                47
                            ],
                            "type": "local",
                            "view": "table"
                        },
                        {
                            "desc": "Command Options params\n",
                            "finish": [
                                773,
                                62
                            ],
                            "name": "options",
                            "rawdesc": "Command Options params\n",
                            "start": [
                                773,
                                55
                            ],
                            "type": "local",
                            "view": "cmdOpts"
                        }
                    ],
                    "desc": "```lua\nreturn #1:\n    | true\n```",
                    "finish": [
                        773,
                        67
                    ],
                    "rawdesc": "```lua\nreturn #1:\n    | true\n```",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "true|nil"
                        }
                    ],
                    "start": [
                        773,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GiveOrderToUnit(unitID: integer, cmdID: integer, params: table, options: cmdOpts)\n  -> true|nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    773,
                    31
                ],
                "name": "GiveOrderToUnit",
                "rawdesc": "```lua\nreturn #1:\n    | true\n```",
                "start": [
                    773,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GiveOrderToUnit",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1265,
                                44
                            ],
                            "name": "unitIDs",
                            "start": [
                                1265,
                                37
                            ],
                            "type": "local",
                            "view": "number[]"
                        },
                        {
                            "finish": [
                                1265,
                                51
                            ],
                            "name": "cmdID",
                            "start": [
                                1265,
                                46
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                1265,
                                59
                            ],
                            "name": "params",
                            "start": [
                                1265,
                                53
                            ],
                            "type": "local",
                            "view": "number[]?"
                        },
                        {
                            "desc": "Parameters for command options\n",
                            "finish": [
                                1265,
                                68
                            ],
                            "name": "options",
                            "rawdesc": "Parameters for command options\n",
                            "start": [
                                1265,
                                61
                            ],
                            "type": "local",
                            "view": "CommandOptions?"
                        }
                    ],
                    "finish": [
                        1265,
                        73
                    ],
                    "returns": [
                        {
                            "name": "unitsOrdered",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        1265,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GiveOrderToUnitArray(unitIDs: number[], cmdID: integer, params?: number[], options?: CommandOptions)\n  -> unitsOrdered: number"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    1265,
                    36
                ],
                "name": "GiveOrderToUnitArray",
                "start": [
                    1265,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `unitArray` — array of unit ids\n\n```lua\nreturn #1:\n    | true\n```",
                "extends": {
                    "args": [
                        {
                            "desc": "array of unit ids",
                            "finish": [
                                787,
                                46
                            ],
                            "name": "unitArray",
                            "rawdesc": "array of unit ids",
                            "start": [
                                787,
                                37
                            ],
                            "type": "local",
                            "view": "number[]"
                        },
                        {
                            "finish": [
                                787,
                                53
                            ],
                            "name": "cmdID",
                            "start": [
                                787,
                                48
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                787,
                                61
                            ],
                            "name": "params",
                            "start": [
                                787,
                                55
                            ],
                            "type": "local",
                            "view": "table"
                        },
                        {
                            "desc": "Command Options params\n",
                            "finish": [
                                787,
                                70
                            ],
                            "name": "options",
                            "rawdesc": "Command Options params\n",
                            "start": [
                                787,
                                63
                            ],
                            "type": "local",
                            "view": "cmdOpts"
                        }
                    ],
                    "desc": "@*param* `unitArray` — array of unit ids\n\n```lua\nreturn #1:\n    | true\n```",
                    "finish": [
                        787,
                        75
                    ],
                    "rawdesc": "```lua\nreturn #1:\n    | true\n```",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "true|nil"
                        }
                    ],
                    "start": [
                        787,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GiveOrderToUnitArray(unitArray: number[], cmdID: integer, params: table, options: cmdOpts)\n  -> true|nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    787,
                    36
                ],
                "name": "GiveOrderToUnitArray",
                "rawdesc": "```lua\nreturn #1:\n    | true\n```",
                "start": [
                    787,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GiveOrderToUnitArray",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `unitMap` — table with unitIDs as keys",
                "extends": {
                    "args": [
                        {
                            "desc": "table with unitIDs as keys",
                            "finish": [
                                1258,
                                42
                            ],
                            "name": "unitMap",
                            "rawdesc": "table with unitIDs as keys",
                            "start": [
                                1258,
                                35
                            ],
                            "type": "local",
                            "view": "table<number, table>"
                        },
                        {
                            "finish": [
                                1258,
                                49
                            ],
                            "name": "cmdID",
                            "start": [
                                1258,
                                44
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                1258,
                                57
                            ],
                            "name": "params",
                            "start": [
                                1258,
                                51
                            ],
                            "type": "local",
                            "view": "number[]?"
                        },
                        {
                            "desc": "Parameters for command options\n",
                            "finish": [
                                1258,
                                66
                            ],
                            "name": "options",
                            "rawdesc": "Parameters for command options\n",
                            "start": [
                                1258,
                                59
                            ],
                            "type": "local",
                            "view": "CommandOptions?"
                        }
                    ],
                    "desc": "@*param* `unitMap` — table with unitIDs as keys",
                    "finish": [
                        1258,
                        71
                    ],
                    "returns": [
                        {
                            "name": "unitsOrdered",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        1258,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GiveOrderToUnitMap(unitMap: table<number, table>, cmdID: integer, params?: number[], options?: CommandOptions)\n  -> unitsOrdered: number"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    1258,
                    34
                ],
                "name": "GiveOrderToUnitMap",
                "start": [
                    1258,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `unitMap` — { [unitID] = arg1, ... }\n\n```lua\nreturn #1:\n    | true\n```",
                "extends": {
                    "args": [
                        {
                            "desc": "{ [unitID] = arg1, ... }",
                            "finish": [
                                780,
                                42
                            ],
                            "name": "unitMap",
                            "rawdesc": "{ [unitID] = arg1, ... }",
                            "start": [
                                780,
                                35
                            ],
                            "type": "local",
                            "view": "table"
                        },
                        {
                            "finish": [
                                780,
                                49
                            ],
                            "name": "cmdID",
                            "start": [
                                780,
                                44
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                780,
                                57
                            ],
                            "name": "params",
                            "start": [
                                780,
                                51
                            ],
                            "type": "local",
                            "view": "table"
                        },
                        {
                            "desc": "Command Options params\n",
                            "finish": [
                                780,
                                66
                            ],
                            "name": "options",
                            "rawdesc": "Command Options params\n",
                            "start": [
                                780,
                                59
                            ],
                            "type": "local",
                            "view": "cmdOpts"
                        }
                    ],
                    "desc": "@*param* `unitMap` — { [unitID] = arg1, ... }\n\n```lua\nreturn #1:\n    | true\n```",
                    "finish": [
                        780,
                        71
                    ],
                    "rawdesc": "```lua\nreturn #1:\n    | true\n```",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "true|nil"
                        }
                    ],
                    "start": [
                        780,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.GiveOrderToUnitMap(unitMap: table, cmdID: integer, params: table, options: cmdOpts)\n  -> true|nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    780,
                    34
                ],
                "name": "GiveOrderToUnitMap",
                "rawdesc": "```lua\nreturn #1:\n    | true\n```",
                "start": [
                    780,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.GiveOrderToUnitMap",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [],
                    "finish": [
                        497,
                        36
                    ],
                    "returns": [
                        {
                            "name": "useAdvShading",
                            "type": "function.return",
                            "view": "boolean"
                        },
                        {
                            "name": "groundUseAdvShading",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        497,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.HaveAdvShading()\n  -> useAdvShading: boolean\n  2. groundUseAdvShading: boolean"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    497,
                    30
                ],
                "name": "HaveAdvShading",
                "start": [
                    497,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.HaveAdvShading",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [],
                    "finish": [
                        493,
                        33
                    ],
                    "returns": [
                        {
                            "name": "shadowsLoaded",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        493,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.HaveShadows()\n  -> shadowsLoaded: boolean"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    493,
                    27
                ],
                "name": "HaveShadows",
                "start": [
                    493,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.HaveShadows",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1647,
                                40
                            ],
                            "name": "unitID",
                            "start": [
                                1647,
                                34
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                1647,
                                51
                            ],
                            "name": "cmdDescID",
                            "start": [
                                1647,
                                42
                            ],
                            "type": "local",
                            "view": "integer?"
                        },
                        {
                            "desc": "Command Description\n\nContains data about a command.\n",
                            "finish": [
                                1647,
                                61
                            ],
                            "name": "cmdArray",
                            "rawdesc": "Command Description\n\nContains data about a command.\n",
                            "start": [
                                1647,
                                53
                            ],
                            "type": "local",
                            "view": "CommandDescription"
                        }
                    ],
                    "finish": [
                        1647,
                        66
                    ],
                    "start": [
                        1647,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.InsertUnitCmdDesc(unitID: integer, cmdDescID?: integer, cmdArray: CommandDescription)"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    1647,
                    33
                ],
                "name": "InsertUnitCmdDesc",
                "start": [
                    1647,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.InsertUnitCmdDesc",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                379,
                                33
                            ],
                            "name": "minX",
                            "start": [
                                379,
                                29
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                379,
                                39
                            ],
                            "name": "minY",
                            "start": [
                                379,
                                35
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                379,
                                45
                            ],
                            "name": "minZ",
                            "start": [
                                379,
                                41
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                379,
                                51
                            ],
                            "name": "maxX",
                            "start": [
                                379,
                                47
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                379,
                                57
                            ],
                            "name": "maxY",
                            "start": [
                                379,
                                53
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                379,
                                63
                            ],
                            "name": "maxZ",
                            "start": [
                                379,
                                59
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "finish": [
                        379,
                        68
                    ],
                    "returns": [
                        {
                            "name": "inView",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        379,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.IsAABBInView(minX: number, minY: number, minZ: number, maxX: number, maxY: number, maxZ: number)\n  -> inView: boolean"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    379,
                    28
                ],
                "name": "IsAABBInView",
                "start": [
                    379,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.IsAABBInView",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                185,
                                32
                            ],
                            "name": "x",
                            "start": [
                                185,
                                31
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                185,
                                35
                            ],
                            "name": "y",
                            "start": [
                                185,
                                34
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "finish": [
                        185,
                        40
                    ],
                    "returns": [
                        {
                            "name": "isAbove",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        185,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.IsAboveMiniMap(x: number, y: number)\n  -> isAbove: boolean"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    185,
                    30
                ],
                "name": "IsAboveMiniMap",
                "start": [
                    185,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.IsAboveMiniMap",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [],
                    "finish": [
                        18,
                        39
                    ],
                    "returns": [
                        {
                            "name": "enabled",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        18,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.IsCheatingEnabled()\n  -> enabled: boolean"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    18,
                    33
                ],
                "name": "IsCheatingEnabled",
                "start": [
                    18,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.IsCheatingEnabled",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [],
                    "finish": [
                        24,
                        37
                    ],
                    "returns": [
                        {
                            "name": "enabled",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        24,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.IsDevLuaEnabled()\n  -> enabled: boolean"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    24,
                    31
                ],
                "name": "IsDevLuaEnabled",
                "start": [
                    24,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.IsDevLuaEnabled",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [],
                    "finish": [
                        27,
                        39
                    ],
                    "returns": [
                        {
                            "name": "enabled",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        27,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.IsEditDefsEnabled()\n  -> enabled: boolean"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    27,
                    33
                ],
                "name": "IsEditDefsEnabled",
                "start": [
                    27,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.IsEditDefsEnabled",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [],
                    "finish": [
                        490,
                        33
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        490,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.IsGUIHidden()\n  -> boolean"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    490,
                    27
                ],
                "name": "IsGUIHidden",
                "start": [
                    490,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.IsGUIHidden",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [],
                    "finish": [
                        43,
                        32
                    ],
                    "returns": [
                        {
                            "name": "isGameOver",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        43,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.IsGameOver()\n  -> isGameOver: boolean"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    43,
                    26
                ],
                "name": "IsGameOver",
                "start": [
                    43,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.IsGameOver",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [],
                    "finish": [
                        21,
                        38
                    ],
                    "returns": [
                        {
                            "name": "enabled",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        21,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.IsGodModeEnabled()\n  -> enabled: boolean"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    21,
                    32
                ],
                "name": "IsGodModeEnabled",
                "start": [
                    21,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.IsGodModeEnabled",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [],
                    "finish": [
                        30,
                        37
                    ],
                    "returns": [
                        {
                            "name": "enabled",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        30,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.IsNoCostEnabled()\n  -> enabled: boolean"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    30,
                    31
                ],
                "name": "IsNoCostEnabled",
                "start": [
                    30,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.IsNoCostEnabled",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1501,
                                34
                            ],
                            "name": "posX",
                            "start": [
                                1501,
                                30
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1501,
                                40
                            ],
                            "name": "posY",
                            "start": [
                                1501,
                                36
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1501,
                                46
                            ],
                            "name": "posZ",
                            "start": [
                                1501,
                                42
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1501,
                                58
                            ],
                            "name": "allyTeamID",
                            "start": [
                                1501,
                                48
                            ],
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "finish": [
                        1501,
                        63
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        1501,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.IsPosInAirLos(posX: number, posY: number, posZ: number, allyTeamID?: integer)\n  -> boolean"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1501,
                    29
                ],
                "name": "IsPosInAirLos",
                "start": [
                    1501,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.IsPosInAirLos",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1487,
                                31
                            ],
                            "name": "posX",
                            "start": [
                                1487,
                                27
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1487,
                                37
                            ],
                            "name": "posY",
                            "start": [
                                1487,
                                33
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1487,
                                43
                            ],
                            "name": "posZ",
                            "start": [
                                1487,
                                39
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1487,
                                55
                            ],
                            "name": "allyTeamID",
                            "start": [
                                1487,
                                45
                            ],
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "finish": [
                        1487,
                        60
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        1487,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.IsPosInLos(posX: number, posY: number, posZ: number, allyTeamID?: integer)\n  -> boolean"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1487,
                    26
                ],
                "name": "IsPosInLos",
                "start": [
                    1487,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.IsPosInLos",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*return* `inPlayArea` — whether the position is in the active play area\n\n@*return* `inMap` — whether the position is in the full map area (currently this is the same as above)",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1323,
                                28
                            ],
                            "name": "x",
                            "start": [
                                1323,
                                27
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1323,
                                31
                            ],
                            "name": "z",
                            "start": [
                                1323,
                                30
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "@*return* `inPlayArea` — whether the position is in the active play area\n\n@*return* `inMap` — whether the position is in the full map area (currently this is the same as above)",
                    "finish": [
                        1323,
                        36
                    ],
                    "returns": [
                        {
                            "desc": "whether the position is in the active play area",
                            "name": "inPlayArea",
                            "rawdesc": "whether the position is in the active play area",
                            "type": "function.return",
                            "view": "boolean"
                        },
                        {
                            "desc": "whether the position is in the full map area (currently this is the same as above)",
                            "name": "inMap",
                            "rawdesc": "whether the position is in the full map area (currently this is the same as above)",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        1323,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.IsPosInMap(x: number, z: number)\n  -> inPlayArea: boolean\n  2. inMap: boolean"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1323,
                    26
                ],
                "name": "IsPosInMap",
                "start": [
                    1323,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.IsPosInMap",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1494,
                                33
                            ],
                            "name": "posX",
                            "start": [
                                1494,
                                29
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1494,
                                39
                            ],
                            "name": "posY",
                            "start": [
                                1494,
                                35
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1494,
                                45
                            ],
                            "name": "posZ",
                            "start": [
                                1494,
                                41
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1494,
                                57
                            ],
                            "name": "allyTeamID",
                            "start": [
                                1494,
                                47
                            ],
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "finish": [
                        1494,
                        62
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        1494,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.IsPosInRadar(posX: number, posY: number, posZ: number, allyTeamID?: integer)\n  -> boolean"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1494,
                    28
                ],
                "name": "IsPosInRadar",
                "start": [
                    1494,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.IsPosInRadar",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [],
                    "finish": [
                        18,
                        30
                    ],
                    "returns": [
                        {
                            "name": "isReplay",
                            "type": "function.return",
                            "view": "boolean?"
                        }
                    ],
                    "start": [
                        18,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.IsReplay()\n  -> isReplay: boolean?"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    18,
                    24
                ],
                "name": "IsReplay",
                "start": [
                    18,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.IsReplay",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `radius` — (Default: 0)",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                386,
                                35
                            ],
                            "name": "posX",
                            "start": [
                                386,
                                31
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                386,
                                41
                            ],
                            "name": "posY",
                            "start": [
                                386,
                                37
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                386,
                                47
                            ],
                            "name": "posZ",
                            "start": [
                                386,
                                43
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "desc": "(Default: 0)",
                            "finish": [
                                386,
                                55
                            ],
                            "name": "radius",
                            "rawdesc": "(Default: 0)",
                            "start": [
                                386,
                                49
                            ],
                            "type": "local",
                            "view": "number?"
                        }
                    ],
                    "desc": "@*param* `radius` — (Default: 0)",
                    "finish": [
                        386,
                        60
                    ],
                    "returns": [
                        {
                            "name": "inView",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        386,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.IsSphereInView(posX: number, posY: number, posZ: number, radius?: number)\n  -> inView: boolean"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    386,
                    30
                ],
                "name": "IsSphereInView",
                "start": [
                    386,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.IsSphereInView",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*return* `isAllied` — nil with unitID cannot be parsed",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                219,
                                35
                            ],
                            "name": "unitID",
                            "start": [
                                219,
                                29
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "@*return* `isAllied` — nil with unitID cannot be parsed",
                    "finish": [
                        219,
                        40
                    ],
                    "returns": [
                        {
                            "desc": "nil with unitID cannot be parsed",
                            "name": "isAllied",
                            "rawdesc": "nil with unitID cannot be parsed",
                            "type": "function.return",
                            "view": "boolean?"
                        }
                    ],
                    "start": [
                        219,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.IsUnitAllied(unitID: integer)\n  -> isAllied: boolean?"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    219,
                    28
                ],
                "name": "IsUnitAllied",
                "start": [
                    219,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.IsUnitAllied",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*return* `isUnitIcon` — nil when unitID cannot be parsed",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                370,
                                33
                            ],
                            "name": "unitID",
                            "start": [
                                370,
                                27
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "@*return* `isUnitIcon` — nil when unitID cannot be parsed",
                    "finish": [
                        370,
                        38
                    ],
                    "returns": [
                        {
                            "desc": "nil when unitID cannot be parsed",
                            "name": "isUnitIcon",
                            "rawdesc": "nil when unitID cannot be parsed",
                            "type": "function.return",
                            "view": "boolean?"
                        }
                    ],
                    "start": [
                        370,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.IsUnitIcon(unitID: integer)\n  -> isUnitIcon: boolean?"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    370,
                    26
                ],
                "name": "IsUnitIcon",
                "start": [
                    370,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.IsUnitIcon",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1531,
                                37
                            ],
                            "name": "unitID",
                            "start": [
                                1531,
                                31
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                1531,
                                49
                            ],
                            "name": "allyTeamID",
                            "start": [
                                1531,
                                39
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        1531,
                        54
                    ],
                    "returns": [
                        {
                            "name": "inAirLos",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        1531,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.IsUnitInAirLos(unitID: integer, allyTeamID: integer)\n  -> inAirLos: boolean"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1531,
                    30
                ],
                "name": "IsUnitInAirLos",
                "start": [
                    1531,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.IsUnitInAirLos",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1541,
                                37
                            ],
                            "name": "unitID",
                            "start": [
                                1541,
                                31
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                1541,
                                49
                            ],
                            "name": "allyTeamID",
                            "start": [
                                1541,
                                39
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        1541,
                        54
                    ],
                    "returns": [
                        {
                            "name": "inJammer",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        1541,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.IsUnitInJammer(unitID: integer, allyTeamID: integer)\n  -> inJammer: boolean"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1541,
                    30
                ],
                "name": "IsUnitInJammer",
                "start": [
                    1541,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.IsUnitInJammer",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1526,
                                34
                            ],
                            "name": "unitID",
                            "start": [
                                1526,
                                28
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                1526,
                                46
                            ],
                            "name": "allyTeamID",
                            "start": [
                                1526,
                                36
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        1526,
                        51
                    ],
                    "returns": [
                        {
                            "name": "inLos",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        1526,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.IsUnitInLos(unitID: integer, allyTeamID: integer)\n  -> inLos: boolean"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1526,
                    27
                ],
                "name": "IsUnitInLos",
                "start": [
                    1526,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.IsUnitInLos",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1536,
                                36
                            ],
                            "name": "unitID",
                            "start": [
                                1536,
                                30
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                1536,
                                48
                            ],
                            "name": "allyTeamID",
                            "start": [
                                1536,
                                38
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        1536,
                        53
                    ],
                    "returns": [
                        {
                            "name": "inRadar",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        1536,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.IsUnitInRadar(unitID: integer, allyTeamID: integer)\n  -> inRadar: boolean"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1536,
                    29
                ],
                "name": "IsUnitInRadar",
                "start": [
                    1536,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.IsUnitInRadar",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*return* `inView` — nil when unitID cannot be parsed",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                360,
                                35
                            ],
                            "name": "unitID",
                            "start": [
                                360,
                                29
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "@*return* `inView` — nil when unitID cannot be parsed",
                    "finish": [
                        360,
                        40
                    ],
                    "returns": [
                        {
                            "desc": "nil when unitID cannot be parsed",
                            "name": "inView",
                            "rawdesc": "nil when unitID cannot be parsed",
                            "type": "function.return",
                            "view": "boolean?"
                        }
                    ],
                    "start": [
                        360,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.IsUnitInView(unitID: integer)\n  -> inView: boolean?"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    360,
                    28
                ],
                "name": "IsUnitInView",
                "start": [
                    360,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.IsUnitInView",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*return* `isSelected` — nil when unitID cannot be parsed",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                223,
                                37
                            ],
                            "name": "unitID",
                            "start": [
                                223,
                                31
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "@*return* `isSelected` — nil when unitID cannot be parsed",
                    "finish": [
                        223,
                        42
                    ],
                    "returns": [
                        {
                            "desc": "nil when unitID cannot be parsed",
                            "name": "isSelected",
                            "rawdesc": "nil when unitID cannot be parsed",
                            "type": "function.return",
                            "view": "boolean?"
                        }
                    ],
                    "start": [
                        223,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.IsUnitSelected(unitID: integer)\n  -> isSelected: boolean?"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    223,
                    30
                ],
                "name": "IsUnitSelected",
                "start": [
                    223,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.IsUnitSelected",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `radius` — unitRadius when not specified\n\n@*return* `isVisible` — nil when unitID cannot be parsed",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                366,
                                36
                            ],
                            "name": "unitID",
                            "start": [
                                366,
                                30
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "desc": "unitRadius when not specified",
                            "finish": [
                                366,
                                44
                            ],
                            "name": "radius",
                            "rawdesc": "unitRadius when not specified",
                            "start": [
                                366,
                                38
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "finish": [
                                366,
                                55
                            ],
                            "name": "checkIcon",
                            "start": [
                                366,
                                46
                            ],
                            "type": "local",
                            "view": "boolean"
                        }
                    ],
                    "desc": "@*param* `radius` — unitRadius when not specified\n\n@*return* `isVisible` — nil when unitID cannot be parsed",
                    "finish": [
                        366,
                        60
                    ],
                    "returns": [
                        {
                            "desc": "nil when unitID cannot be parsed",
                            "name": "isVisible",
                            "rawdesc": "nil when unitID cannot be parsed",
                            "type": "function.return",
                            "view": "boolean?"
                        }
                    ],
                    "start": [
                        366,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.IsUnitVisible(unitID: integer, radius?: number, checkIcon: boolean)\n  -> isVisible: boolean?"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    366,
                    29
                ],
                "name": "IsUnitVisible",
                "start": [
                    366,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.IsUnitVisible",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [],
                    "finish": [
                        751,
                        35
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        751,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.IsUserWriting()\n  -> boolean"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    751,
                    29
                ],
                "name": "IsUserWriting",
                "start": [
                    751,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.IsUserWriting",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Will declare a team to be dead (no further orders can be assigned to such teams units).\n\nGaia team cannot be killed.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                59,
                                31
                            ],
                            "name": "teamID",
                            "start": [
                                59,
                                25
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Will declare a team to be dead (no further orders can be assigned to such teams units).\n\nGaia team cannot be killed.",
                    "finish": [
                        59,
                        36
                    ],
                    "rawdesc": "Will declare a team to be dead (no further orders can be assigned to such teams units).\n\nGaia team cannot be killed.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        59,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.KillTeam(teamID: integer)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    59,
                    24
                ],
                "name": "KillTeam",
                "rawdesc": "Will declare a team to be dead (no further orders can be assigned to such teams units).\n\nGaia team cannot be killed.",
                "start": [
                    59,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.KillTeam",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Set a certain height to a point or rectangle area on the world\n\n@*param* `x2_height` — if y2 and height are nil then this parameter is the height",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1295,
                                33
                            ],
                            "name": "x1",
                            "start": [
                                1295,
                                31
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1295,
                                37
                            ],
                            "name": "z1",
                            "start": [
                                1295,
                                35
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "desc": "if y2 and height are nil then this parameter is the height",
                            "finish": [
                                1295,
                                48
                            ],
                            "name": "x2_height",
                            "rawdesc": "if y2 and height are nil then this parameter is the height",
                            "start": [
                                1295,
                                39
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1295,
                                52
                            ],
                            "name": "z2",
                            "start": [
                                1295,
                                50
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "finish": [
                                1295,
                                60
                            ],
                            "name": "height",
                            "start": [
                                1295,
                                54
                            ],
                            "type": "local",
                            "view": "number?"
                        }
                    ],
                    "desc": "Set a certain height to a point or rectangle area on the world\n\n@*param* `x2_height` — if y2 and height are nil then this parameter is the height",
                    "finish": [
                        1295,
                        65
                    ],
                    "rawdesc": "Set a certain height to a point or rectangle area on the world",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        1295,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.LevelHeightMap(x1: number, z1: number, x2_height: number, z2?: number, height?: number)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    1295,
                    30
                ],
                "name": "LevelHeightMap",
                "rawdesc": "Set a certain height to a point or rectangle area on the world",
                "start": [
                    1295,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.LevelHeightMap",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Set a height to a point or rectangle area to the original map height cache\n\n@*param* `x2_height` — if y2 and height are nil then this parameter is the height",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1366,
                                41
                            ],
                            "name": "x1",
                            "start": [
                                1366,
                                39
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1366,
                                45
                            ],
                            "name": "y1",
                            "start": [
                                1366,
                                43
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "desc": "if y2 and height are nil then this parameter is the height",
                            "finish": [
                                1366,
                                56
                            ],
                            "name": "x2_height",
                            "rawdesc": "if y2 and height are nil then this parameter is the height",
                            "start": [
                                1366,
                                47
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1366,
                                60
                            ],
                            "name": "y2",
                            "start": [
                                1366,
                                58
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "finish": [
                                1366,
                                68
                            ],
                            "name": "height",
                            "start": [
                                1366,
                                62
                            ],
                            "type": "local",
                            "view": "number?"
                        }
                    ],
                    "desc": "Set a height to a point or rectangle area to the original map height cache\n\n@*param* `x2_height` — if y2 and height are nil then this parameter is the height",
                    "finish": [
                        1366,
                        73
                    ],
                    "rawdesc": "Set a height to a point or rectangle area to the original map height cache",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        1366,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.LevelOriginalHeightMap(x1: number, y1: number, x2_height: number, y2?: number, height?: number)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    1366,
                    38
                ],
                "name": "LevelOriginalHeightMap",
                "rawdesc": "Set a height to a point or rectangle area to the original map height cache",
                "start": [
                    1366,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.LevelOriginalHeightMap",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1427,
                                34
                            ],
                            "name": "x1",
                            "start": [
                                1427,
                                32
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1427,
                                38
                            ],
                            "name": "z1",
                            "start": [
                                1427,
                                36
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1427,
                                42
                            ],
                            "name": "x2",
                            "start": [
                                1427,
                                40
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "finish": [
                                1427,
                                46
                            ],
                            "name": "z2",
                            "start": [
                                1427,
                                44
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "finish": [
                                1427,
                                54
                            ],
                            "name": "height",
                            "start": [
                                1427,
                                48
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "finish": [
                        1427,
                        59
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        1427,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.LevelSmoothMesh(x1: number, z1: number, x2?: number, z2?: number, height: number)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    1427,
                    31
                ],
                "name": "LevelSmoothMesh",
                "start": [
                    1427,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.LevelSmoothMesh",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                620,
                                42
                            ],
                            "name": "config",
                            "start": [
                                620,
                                36
                            ],
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "finish": [
                        620,
                        47
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        620,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.LoadCmdColorsConfig(config: string)\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    620,
                    35
                ],
                "name": "LoadCmdColorsConfig",
                "start": [
                    620,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.LoadCmdColorsConfig",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                624,
                                42
                            ],
                            "name": "config",
                            "start": [
                                624,
                                36
                            ],
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "finish": [
                        624,
                        47
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        624,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.LoadCtrlPanelConfig(config: string)\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    624,
                    35
                ],
                "name": "LoadCtrlPanelConfig",
                "start": [
                    624,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.LoadCtrlPanelConfig",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1106,
                                43
                            ],
                            "name": "modelName",
                            "start": [
                                1106,
                                34
                            ],
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "finish": [
                        1106,
                        48
                    ],
                    "returns": [
                        {
                            "name": "success",
                            "type": "function.return",
                            "view": "boolean?"
                        }
                    ],
                    "start": [
                        1106,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.LoadModelTextures(modelName: string)\n  -> success: boolean?"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    1106,
                    33
                ],
                "name": "LoadModelTextures",
                "start": [
                    1106,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.LoadModelTextures",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Loads a SoundDefs file, the format is the same as in `gamedata/sounds.lua`.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                91,
                                38
                            ],
                            "name": "soundfile",
                            "start": [
                                91,
                                29
                            ],
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "desc": "Loads a SoundDefs file, the format is the same as in `gamedata/sounds.lua`.",
                    "finish": [
                        91,
                        43
                    ],
                    "rawdesc": "Loads a SoundDefs file, the format is the same as in `gamedata/sounds.lua`.",
                    "returns": [
                        {
                            "name": "success",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        91,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.LoadSoundDef(soundfile: string)\n  -> success: boolean"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    91,
                    28
                ],
                "name": "LoadSoundDef",
                "rawdesc": "Loads a SoundDefs file, the format is the same as in `gamedata/sounds.lua`.",
                "start": [
                    91,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.LoadSoundDef",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `logLevel` — (Default: \"notice\")\n\n@*param* `...` — messages\n\n```lua\nlogLevel:\n    | \"debug\" -- LOG.DEBUG\n    | \"info\" -- LOG.INFO\n    | \"notice\" -- LOG.NOTICE (engine default)\n    | \"warning\" -- LOG.WARNING\n    | \"deprecated\" -- LOG.DEPRECATED\n    | \"error\" -- LOG.ERROR\n    | \"fatal\" -- LOG.FATAL\n```",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                46,
                                27
                            ],
                            "name": "section",
                            "start": [
                                46,
                                20
                            ],
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "desc": "(Default: \"notice\")",
                            "finish": [
                                46,
                                37
                            ],
                            "name": "logLevel",
                            "rawdesc": "(Default: \"notice\")",
                            "start": [
                                46,
                                29
                            ],
                            "type": "local",
                            "view": "(integer|\"debug\"|\"deprecated\"|\"error\"|\"fatal\"...(+3))?"
                        },
                        {
                            "desc": "messages",
                            "finish": [
                                46,
                                42
                            ],
                            "rawdesc": "messages",
                            "start": [
                                46,
                                39
                            ],
                            "type": "...",
                            "view": "string"
                        }
                    ],
                    "desc": "@*param* `logLevel` — (Default: \"notice\")\n\n@*param* `...` — messages\n\n```lua\nlogLevel:\n    | \"debug\" -- LOG.DEBUG\n    | \"info\" -- LOG.INFO\n    | \"notice\" -- LOG.NOTICE (engine default)\n    | \"warning\" -- LOG.WARNING\n    | \"deprecated\" -- LOG.DEPRECATED\n    | \"error\" -- LOG.ERROR\n    | \"fatal\" -- LOG.FATAL\n```",
                    "finish": [
                        46,
                        47
                    ],
                    "rawdesc": "```lua\nlogLevel:\n    | \"debug\" -- LOG.DEBUG\n    | \"info\" -- LOG.INFO\n    | \"notice\" -- LOG.NOTICE (engine default)\n    | \"warning\" -- LOG.WARNING\n    | \"deprecated\" -- LOG.DEPRECATED\n    | \"error\" -- LOG.ERROR\n    | \"fatal\" -- LOG.FATAL\n```",
                    "start": [
                        46,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.Log(section: string, logLevel?: integer|\"debug\"|\"deprecated\"|\"error\"|\"fatal\"...(+3), ...string)"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    46,
                    19
                ],
                "name": "Log",
                "rawdesc": "```lua\nlogLevel:\n    | \"debug\" -- LOG.DEBUG\n    | \"info\" -- LOG.INFO\n    | \"notice\" -- LOG.NOTICE (engine default)\n    | \"warning\" -- LOG.WARNING\n    | \"deprecated\" -- LOG.DEPRECATED\n    | \"error\" -- LOG.ERROR\n    | \"fatal\" -- LOG.FATAL\n```",
                "start": [
                    46,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.Log",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `localOnly` — (Default: false)",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                890,
                                32
                            ],
                            "name": "x1",
                            "start": [
                                890,
                                30
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                890,
                                36
                            ],
                            "name": "y1",
                            "start": [
                                890,
                                34
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                890,
                                40
                            ],
                            "name": "z1",
                            "start": [
                                890,
                                38
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                890,
                                44
                            ],
                            "name": "x2",
                            "start": [
                                890,
                                42
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                890,
                                48
                            ],
                            "name": "y2",
                            "start": [
                                890,
                                46
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                890,
                                52
                            ],
                            "name": "z2",
                            "start": [
                                890,
                                50
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "desc": "(Default: false)",
                            "finish": [
                                890,
                                63
                            ],
                            "name": "localOnly",
                            "rawdesc": "(Default: false)",
                            "start": [
                                890,
                                54
                            ],
                            "type": "local",
                            "view": "boolean?"
                        },
                        {
                            "finish": [
                                890,
                                73
                            ],
                            "name": "playerId",
                            "start": [
                                890,
                                65
                            ],
                            "type": "local",
                            "view": "number?"
                        }
                    ],
                    "desc": "@*param* `localOnly` — (Default: false)",
                    "finish": [
                        890,
                        78
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        890,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.MarkerAddLine(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, localOnly?: boolean, playerId?: number)\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    890,
                    29
                ],
                "name": "MarkerAddLine",
                "start": [
                    890,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.MarkerAddLine",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `text` — (Default: \"\")",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                879,
                                32
                            ],
                            "name": "x",
                            "start": [
                                879,
                                31
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                879,
                                35
                            ],
                            "name": "y",
                            "start": [
                                879,
                                34
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                879,
                                38
                            ],
                            "name": "z",
                            "start": [
                                879,
                                37
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "desc": "(Default: \"\")",
                            "finish": [
                                879,
                                44
                            ],
                            "name": "text",
                            "rawdesc": "(Default: \"\")",
                            "start": [
                                879,
                                40
                            ],
                            "type": "local",
                            "view": "string?"
                        },
                        {
                            "finish": [
                                879,
                                55
                            ],
                            "name": "localOnly",
                            "start": [
                                879,
                                46
                            ],
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "@*param* `text` — (Default: \"\")",
                    "finish": [
                        879,
                        60
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        879,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.MarkerAddPoint(x: number, y: number, z: number, text?: string, localOnly?: boolean)\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    879,
                    30
                ],
                "name": "MarkerAddPoint",
                "start": [
                    879,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.MarkerAddPoint",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nIssue an erase command for markers on the map.\n\n@*param* `unused` — This argument is ignored.\n\n@*param* `localOnly` — (Default: false) do not issue a network message, erase only for the current player\n\n@*param* `playerId` — when not specified it uses the issuer playerId\n\n@*param* `alwaysErase` — (Default: false) erase any marker when `localOnly` and current player is spectating. Allows spectators to erase players markers locally",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                903,
                                37
                            ],
                            "name": "x",
                            "start": [
                                903,
                                36
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                903,
                                40
                            ],
                            "name": "y",
                            "start": [
                                903,
                                39
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                903,
                                43
                            ],
                            "name": "z",
                            "start": [
                                903,
                                42
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "desc": "This argument is ignored.",
                            "finish": [
                                903,
                                51
                            ],
                            "name": "unused",
                            "rawdesc": "This argument is ignored.",
                            "start": [
                                903,
                                45
                            ],
                            "type": "local",
                            "view": "nil"
                        },
                        {
                            "desc": "(Default: false) do not issue a network message, erase only for the current player",
                            "finish": [
                                903,
                                62
                            ],
                            "name": "localOnly",
                            "rawdesc": "(Default: false) do not issue a network message, erase only for the current player",
                            "start": [
                                903,
                                53
                            ],
                            "type": "local",
                            "view": "boolean?"
                        },
                        {
                            "desc": "when not specified it uses the issuer playerId",
                            "finish": [
                                903,
                                72
                            ],
                            "name": "playerId",
                            "rawdesc": "when not specified it uses the issuer playerId",
                            "start": [
                                903,
                                64
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "desc": "(Default: false) erase any marker when `localOnly` and current player is spectating. Allows spectators to erase players markers locally",
                            "finish": [
                                903,
                                85
                            ],
                            "name": "alwaysErase",
                            "rawdesc": "(Default: false) erase any marker when `localOnly` and current player is spectating. Allows spectators to erase players markers locally",
                            "start": [
                                903,
                                74
                            ],
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "\nIssue an erase command for markers on the map.\n\n@*param* `unused` — This argument is ignored.\n\n@*param* `localOnly` — (Default: false) do not issue a network message, erase only for the current player\n\n@*param* `playerId` — when not specified it uses the issuer playerId\n\n@*param* `alwaysErase` — (Default: false) erase any marker when `localOnly` and current player is spectating. Allows spectators to erase players markers locally",
                    "finish": [
                        903,
                        90
                    ],
                    "rawdesc": "\nIssue an erase command for markers on the map.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        903,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.MarkerErasePosition(x: number, y: number, z: number, unused: nil, localOnly?: boolean, playerId?: number, alwaysErase?: boolean)\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    903,
                    35
                ],
                "name": "MarkerErasePosition",
                "rawdesc": "\nIssue an erase command for markers on the map.",
                "start": [
                    903,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.MarkerErasePosition",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Pause Dolly Camera\n\n@*param* `fraction` — Fraction of the total runtime to pause at, 0 to 1 inclusive. A null value pauses at current percent",
                "extends": {
                    "args": [
                        {
                            "desc": "Fraction of the total runtime to pause at, 0 to 1 inclusive. A null value pauses at current percent",
                            "finish": [
                                253,
                                41
                            ],
                            "name": "fraction",
                            "rawdesc": "Fraction of the total runtime to pause at, 0 to 1 inclusive. A null value pauses at current percent",
                            "start": [
                                253,
                                33
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "Pause Dolly Camera\n\n@*param* `fraction` — Fraction of the total runtime to pause at, 0 to 1 inclusive. A null value pauses at current percent",
                    "finish": [
                        253,
                        46
                    ],
                    "rawdesc": "Pause Dolly Camera",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        253,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.PauseDollyCamera(fraction: number)\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    253,
                    32
                ],
                "name": "PauseDollyCamera",
                "rawdesc": "Pause Dolly Camera",
                "start": [
                    253,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.PauseDollyCamera",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Pause any SoundStream currently running.",
                "extends": {
                    "args": [],
                    "desc": "Pause any SoundStream currently running.",
                    "finish": [
                        136,
                        38
                    ],
                    "rawdesc": "Pause any SoundStream currently running.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        136,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.PauseSoundStream()\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    136,
                    32
                ],
                "name": "PauseSoundStream",
                "rawdesc": "Pause any SoundStream currently running.",
                "start": [
                    136,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.PauseSoundStream",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Send a ping request to the server",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                21,
                                28
                            ],
                            "name": "pingTag",
                            "start": [
                                21,
                                21
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "Send a ping request to the server",
                    "finish": [
                        21,
                        33
                    ],
                    "rawdesc": "Send a ping request to the server",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        21,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.Ping(pingTag: number)\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    21,
                    20
                ],
                "name": "Ping",
                "rawdesc": "Send a ping request to the server",
                "start": [
                    21,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.Ping",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `volume` — (Default: 1.0)\n\n@*param* `channel` — (Default: `0|\"general\"`)\n\n```lua\nchannel:\n    | \"general\" -- 0\n    | \"battle\" -- Same as `\"sfx\" | 1`\n    | \"sfx\" -- Same as `\"battle\" | 1`\n    | \"unitreply\" -- Same as `\"voice\" | 2`\n    | \"voice\" -- Same as `\"unitreply\" | 2`\n    | \"userinterface\" -- Same as \"ui\" | 3`\n    | \"ui\" -- Same as \"userinterface\" | 3`\n    | 0 -- General\n    | 1 -- SFX\n    | 2 -- Voice\n    | 3 -- User interface\n```",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                116,
                                39
                            ],
                            "name": "soundfile",
                            "start": [
                                116,
                                30
                            ],
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "desc": "(Default: 1.0)",
                            "finish": [
                                116,
                                47
                            ],
                            "name": "volume",
                            "rawdesc": "(Default: 1.0)",
                            "start": [
                                116,
                                41
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "finish": [
                                116,
                                53
                            ],
                            "name": "posx",
                            "start": [
                                116,
                                49
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "finish": [
                                116,
                                59
                            ],
                            "name": "posy",
                            "start": [
                                116,
                                55
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "finish": [
                                116,
                                65
                            ],
                            "name": "posz",
                            "start": [
                                116,
                                61
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "finish": [
                                116,
                                73
                            ],
                            "name": "speedx",
                            "start": [
                                116,
                                67
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "finish": [
                                116,
                                81
                            ],
                            "name": "speedy",
                            "start": [
                                116,
                                75
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "finish": [
                                116,
                                89
                            ],
                            "name": "speedz",
                            "start": [
                                116,
                                83
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "desc": "(Default: `0|\"general\"`)",
                            "finish": [
                                116,
                                98
                            ],
                            "name": "channel",
                            "rawdesc": "(Default: `0|\"general\"`)",
                            "start": [
                                116,
                                91
                            ],
                            "type": "local",
                            "view": "(\"battle\"|\"general\"|\"sfx\"|\"ui\"|\"unitreply\"...(+6))?"
                        }
                    ],
                    "desc": "@*param* `volume` — (Default: 1.0)\n\n@*param* `channel` — (Default: `0|\"general\"`)\n\n```lua\nchannel:\n    | \"general\" -- 0\n    | \"battle\" -- Same as `\"sfx\" | 1`\n    | \"sfx\" -- Same as `\"battle\" | 1`\n    | \"unitreply\" -- Same as `\"voice\" | 2`\n    | \"voice\" -- Same as `\"unitreply\" | 2`\n    | \"userinterface\" -- Same as \"ui\" | 3`\n    | \"ui\" -- Same as \"userinterface\" | 3`\n    | 0 -- General\n    | 1 -- SFX\n    | 2 -- Voice\n    | 3 -- User interface\n```",
                    "finish": [
                        116,
                        103
                    ],
                    "rawdesc": "```lua\nchannel:\n    | \"general\" -- 0\n    | \"battle\" -- Same as `\"sfx\" | 1`\n    | \"sfx\" -- Same as `\"battle\" | 1`\n    | \"unitreply\" -- Same as `\"voice\" | 2`\n    | \"voice\" -- Same as `\"unitreply\" | 2`\n    | \"userinterface\" -- Same as \"ui\" | 3`\n    | \"ui\" -- Same as \"userinterface\" | 3`\n    | 0 -- General\n    | 1 -- SFX\n    | 2 -- Voice\n    | 3 -- User interface\n```",
                    "returns": [
                        {
                            "name": "playSound",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        116,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.PlaySoundFile(soundfile: string, volume?: number, posx?: number, posy?: number, posz?: number, speedx?: number, speedy?: number, speedz?: number, channel?: \"battle\"|\"general\"|\"sfx\"|\"ui\"|\"unitreply\"...(+6))\n  -> playSound: boolean"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    116,
                    29
                ],
                "name": "PlaySoundFile",
                "rawdesc": "```lua\nchannel:\n    | \"general\" -- 0\n    | \"battle\" -- Same as `\"sfx\" | 1`\n    | \"sfx\" -- Same as `\"battle\" | 1`\n    | \"unitreply\" -- Same as `\"voice\" | 2`\n    | \"voice\" -- Same as `\"unitreply\" | 2`\n    | \"userinterface\" -- Same as \"ui\" | 3`\n    | \"ui\" -- Same as \"userinterface\" | 3`\n    | 0 -- General\n    | 1 -- SFX\n    | 2 -- Voice\n    | 3 -- User interface\n```",
                "start": [
                    116,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.PlaySoundFile",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Allows to play an Ogg Vorbis (.OGG) and mp3 compressed sound file.\n\nMultiple sound streams may be played at once.\n\n@*param* `volume` — (Default: 1.0)",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                126,
                                39
                            ],
                            "name": "oggfile",
                            "start": [
                                126,
                                32
                            ],
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "desc": "(Default: 1.0)",
                            "finish": [
                                126,
                                47
                            ],
                            "name": "volume",
                            "rawdesc": "(Default: 1.0)",
                            "start": [
                                126,
                                41
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "finish": [
                                126,
                                56
                            ],
                            "name": "enqueue",
                            "start": [
                                126,
                                49
                            ],
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "Allows to play an Ogg Vorbis (.OGG) and mp3 compressed sound file.\n\nMultiple sound streams may be played at once.\n\n@*param* `volume` — (Default: 1.0)",
                    "finish": [
                        126,
                        61
                    ],
                    "rawdesc": "Allows to play an Ogg Vorbis (.OGG) and mp3 compressed sound file.\n\nMultiple sound streams may be played at once.",
                    "returns": [
                        {
                            "name": "success",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        126,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.PlaySoundStream(oggfile: string, volume?: number, enqueue?: boolean)\n  -> success: boolean"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    126,
                    31
                ],
                "name": "PlaySoundStream",
                "rawdesc": "Allows to play an Ogg Vorbis (.OGG) and mp3 compressed sound file.\n\nMultiple sound streams may be played at once.",
                "start": [
                    126,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.PlaySoundStream",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Snaps a position to the building grid\n\n@*param* `buildFacing` — (Default: 0) one of SOUTH = 0, EAST = 1, NORTH = 2, WEST  = 3",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1453,
                                38
                            ],
                            "name": "unitDefID",
                            "start": [
                                1453,
                                29
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                1453,
                                44
                            ],
                            "name": "posX",
                            "start": [
                                1453,
                                40
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1453,
                                50
                            ],
                            "name": "posY",
                            "start": [
                                1453,
                                46
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1453,
                                56
                            ],
                            "name": "posZ",
                            "start": [
                                1453,
                                52
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "desc": "(Default: 0) one of SOUTH = 0, EAST = 1, NORTH = 2, WEST  = 3",
                            "finish": [
                                1453,
                                69
                            ],
                            "name": "buildFacing",
                            "rawdesc": "(Default: 0) one of SOUTH = 0, EAST = 1, NORTH = 2, WEST  = 3",
                            "start": [
                                1453,
                                58
                            ],
                            "type": "local",
                            "view": "number?"
                        }
                    ],
                    "desc": "Snaps a position to the building grid\n\n@*param* `buildFacing` — (Default: 0) one of SOUTH = 0, EAST = 1, NORTH = 2, WEST  = 3",
                    "finish": [
                        1453,
                        74
                    ],
                    "rawdesc": "Snaps a position to the building grid",
                    "returns": [
                        {
                            "name": "buildPosX",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "buildPosY",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "buildPosZ",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        1453,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.Pos2BuildPos(unitDefID: integer, posX: number, posY: number, posZ: number, buildFacing?: number)\n  -> buildPosX: number\n  2. buildPosY: number\n  3. buildPosZ: number"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1453,
                    28
                ],
                "name": "Pos2BuildPos",
                "rawdesc": "Snaps a position to the building grid",
                "start": [
                    1453,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.Pos2BuildPos",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1098,
                                51
                            ],
                            "name": "featureDefID",
                            "start": [
                                1098,
                                39
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        1098,
                        56
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        1098,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.PreloadFeatureDefModel(featureDefID: integer)\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    1098,
                    38
                ],
                "name": "PreloadFeatureDefModel",
                "start": [
                    1098,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.PreloadFeatureDefModel",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1102,
                                37
                            ],
                            "name": "name",
                            "start": [
                                1102,
                                33
                            ],
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "finish": [
                        1102,
                        42
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        1102,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.PreloadSoundItem(name: string)\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    1102,
                    32
                ],
                "name": "PreloadSoundItem",
                "start": [
                    1102,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.PreloadSoundItem",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nAllow the engine to load the unit's model (and texture) in a background thread.\nWreckages and buildOptions of a unit are automatically preloaded.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1094,
                                45
                            ],
                            "name": "unitDefID",
                            "start": [
                                1094,
                                36
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "\nAllow the engine to load the unit's model (and texture) in a background thread.\nWreckages and buildOptions of a unit are automatically preloaded.",
                    "finish": [
                        1094,
                        50
                    ],
                    "rawdesc": "\nAllow the engine to load the unit's model (and texture) in a background thread.\nWreckages and buildOptions of a unit are automatically preloaded.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        1094,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.PreloadUnitDefModel(unitDefID: integer)\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    1094,
                    35
                ],
                "name": "PreloadUnitDefModel",
                "rawdesc": "\nAllow the engine to load the unit's model (and texture) in a background thread.\nWreckages and buildOptions of a unit are automatically preloaded.",
                "start": [
                    1094,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.PreloadUnitDefModel",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Closes the application",
                "extends": {
                    "args": [],
                    "desc": "Closes the application",
                    "finish": [
                        734,
                        26
                    ],
                    "rawdesc": "Closes the application",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        734,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.Quit()\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    734,
                    20
                ],
                "name": "Quit",
                "rawdesc": "Closes the application",
                "start": [
                    734,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.Quit",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nHeightmap changes normally take up to 25s to propagate to the smooth mesh.\nUse to force a mapwide update immediately.",
                "extends": {
                    "args": [],
                    "desc": "\nHeightmap changes normally take up to 25s to propagate to the smooth mesh.\nUse to force a mapwide update immediately.",
                    "finish": [
                        1419,
                        39
                    ],
                    "rawdesc": "\nHeightmap changes normally take up to 25s to propagate to the smooth mesh.\nUse to force a mapwide update immediately.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        1419,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.RebuildSmoothMesh()\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    1419,
                    33
                ],
                "name": "RebuildSmoothMesh",
                "rawdesc": "\nHeightmap changes normally take up to 25s to propagate to the smooth mesh.\nUse to force a mapwide update immediately.",
                "start": [
                    1419,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.RebuildSmoothMesh",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `startScript` — the CONTENT of the script.txt spring should use to start.",
                "extends": {
                    "args": [
                        {
                            "desc": "the CONTENT of the script.txt spring should use to start.",
                            "finish": [
                                1255,
                                34
                            ],
                            "name": "startScript",
                            "rawdesc": "the CONTENT of the script.txt spring should use to start.",
                            "start": [
                                1255,
                                23
                            ],
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "desc": "@*param* `startScript` — the CONTENT of the script.txt spring should use to start.",
                    "finish": [
                        1255,
                        39
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        1255,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.Reload(startScript: string)\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    1255,
                    22
                ],
                "name": "Reload",
                "start": [
                    1255,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.Reload",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                895,
                                29
                            ],
                            "name": "x",
                            "start": [
                                895,
                                28
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                895,
                                32
                            ],
                            "name": "z",
                            "start": [
                                895,
                                31
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "finish": [
                        895,
                        37
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        895,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.RemoveGrass(x: number, z: number)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    895,
                    27
                ],
                "name": "RemoveGrass",
                "start": [
                    895,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.RemoveGrass",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                881,
                                40
                            ],
                            "name": "unitID",
                            "start": [
                                881,
                                34
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        881,
                        45
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        881,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.RemoveObjectDecal(unitID: integer)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    881,
                    33
                ],
                "name": "RemoveObjectDecal",
                "start": [
                    881,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.RemoveObjectDecal",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1651,
                                40
                            ],
                            "name": "unitID",
                            "start": [
                                1651,
                                34
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                1651,
                                51
                            ],
                            "name": "cmdDescID",
                            "start": [
                                1651,
                                42
                            ],
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "finish": [
                        1651,
                        56
                    ],
                    "start": [
                        1651,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.RemoveUnitCmdDesc(unitID: integer, cmdDescID?: integer)"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    1651,
                    33
                ],
                "name": "RemoveUnitCmdDesc",
                "start": [
                    1651,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.RemoveUnitCmdDesc",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Mass replace all occurrences of the cursor in all CursorCmds.\n\n@*param* `hotSpotTopLeft` — (Default: false)",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                663,
                                46
                            ],
                            "name": "oldFileName",
                            "start": [
                                663,
                                35
                            ],
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": [
                                663,
                                59
                            ],
                            "name": "newFileName",
                            "start": [
                                663,
                                48
                            ],
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "desc": "(Default: false)",
                            "finish": [
                                663,
                                75
                            ],
                            "name": "hotSpotTopLeft",
                            "rawdesc": "(Default: false)",
                            "start": [
                                663,
                                61
                            ],
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "Mass replace all occurrences of the cursor in all CursorCmds.\n\n@*param* `hotSpotTopLeft` — (Default: false)",
                    "finish": [
                        663,
                        80
                    ],
                    "rawdesc": "Mass replace all occurrences of the cursor in all CursorCmds.",
                    "returns": [
                        {
                            "name": "assigned",
                            "type": "function.return",
                            "view": "boolean?"
                        }
                    ],
                    "start": [
                        663,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.ReplaceMouseCursor(oldFileName: string, newFileName: string, hotSpotTopLeft?: boolean)\n  -> assigned: boolean?"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    663,
                    34
                ],
                "name": "ReplaceMouseCursor",
                "rawdesc": "Mass replace all occurrences of the cursor in all CursorCmds.",
                "start": [
                    663,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.ReplaceMouseCursor",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nIf this call returns, something went wrong\n\n@*param* `commandline_args` — commandline arguments passed to spring executable.",
                "extends": {
                    "args": [
                        {
                            "desc": "commandline arguments passed to spring executable.",
                            "finish": [
                                1263,
                                40
                            ],
                            "name": "commandline_args",
                            "rawdesc": "commandline arguments passed to spring executable.",
                            "start": [
                                1263,
                                24
                            ],
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": [
                                1263,
                                53
                            ],
                            "name": "startScript",
                            "start": [
                                1263,
                                42
                            ],
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "desc": "\nIf this call returns, something went wrong\n\n@*param* `commandline_args` — commandline arguments passed to spring executable.",
                    "finish": [
                        1263,
                        58
                    ],
                    "rawdesc": "\nIf this call returns, something went wrong",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        1263,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.Restart(commandline_args: string, startScript: string)\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    1263,
                    23
                ],
                "name": "Restart",
                "rawdesc": "\nIf this call returns, something went wrong",
                "start": [
                    1263,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.Restart",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Resume Dolly Camera",
                "extends": {
                    "args": [],
                    "desc": "Resume Dolly Camera",
                    "finish": [
                        258,
                        39
                    ],
                    "rawdesc": "Resume Dolly Camera",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        258,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.ResumeDollyCamera()\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    258,
                    33
                ],
                "name": "ResumeDollyCamera",
                "rawdesc": "Resume Dolly Camera",
                "start": [
                    258,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.ResumeDollyCamera",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Restore original map height to a point or rectangle area on the world\n\n@*param* `x2_factor` — if y2 and factor are nil then this parameter is the factor",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1315,
                                34
                            ],
                            "name": "x1",
                            "start": [
                                1315,
                                32
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1315,
                                38
                            ],
                            "name": "y1",
                            "start": [
                                1315,
                                36
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "desc": "if y2 and factor are nil then this parameter is the factor",
                            "finish": [
                                1315,
                                49
                            ],
                            "name": "x2_factor",
                            "rawdesc": "if y2 and factor are nil then this parameter is the factor",
                            "start": [
                                1315,
                                40
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1315,
                                53
                            ],
                            "name": "y2",
                            "start": [
                                1315,
                                51
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "finish": [
                                1315,
                                61
                            ],
                            "name": "factor",
                            "start": [
                                1315,
                                55
                            ],
                            "type": "local",
                            "view": "number?"
                        }
                    ],
                    "desc": "Restore original map height to a point or rectangle area on the world\n\n@*param* `x2_factor` — if y2 and factor are nil then this parameter is the factor",
                    "finish": [
                        1315,
                        66
                    ],
                    "rawdesc": "Restore original map height to a point or rectangle area on the world",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        1315,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.RevertHeightMap(x1: number, y1: number, x2_factor: number, y2?: number, factor?: number)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    1315,
                    31
                ],
                "name": "RevertHeightMap",
                "rawdesc": "Restore original map height to a point or rectangle area on the world",
                "start": [
                    1315,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.RevertHeightMap",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Restore original map height cache to a point or rectangle area on the world\n\n@*param* `x2_factor` — if y2 and factor are nil then this parameter is the factor",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1386,
                                42
                            ],
                            "name": "x1",
                            "start": [
                                1386,
                                40
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1386,
                                46
                            ],
                            "name": "y1",
                            "start": [
                                1386,
                                44
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "desc": "if y2 and factor are nil then this parameter is the factor",
                            "finish": [
                                1386,
                                57
                            ],
                            "name": "x2_factor",
                            "rawdesc": "if y2 and factor are nil then this parameter is the factor",
                            "start": [
                                1386,
                                48
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1386,
                                61
                            ],
                            "name": "y2",
                            "start": [
                                1386,
                                59
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "finish": [
                                1386,
                                69
                            ],
                            "name": "factor",
                            "start": [
                                1386,
                                63
                            ],
                            "type": "local",
                            "view": "number?"
                        }
                    ],
                    "desc": "Restore original map height cache to a point or rectangle area on the world\n\n@*param* `x2_factor` — if y2 and factor are nil then this parameter is the factor",
                    "finish": [
                        1386,
                        74
                    ],
                    "rawdesc": "Restore original map height cache to a point or rectangle area on the world",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        1386,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.RevertOriginalHeightMap(x1: number, y1: number, x2_factor: number, y2?: number, factor?: number)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    1386,
                    39
                ],
                "name": "RevertOriginalHeightMap",
                "rawdesc": "Restore original map height cache to a point or rectangle area on the world",
                "start": [
                    1386,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.RevertOriginalHeightMap",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1443,
                                35
                            ],
                            "name": "x1",
                            "start": [
                                1443,
                                33
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1443,
                                39
                            ],
                            "name": "z1",
                            "start": [
                                1443,
                                37
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1443,
                                43
                            ],
                            "name": "x2",
                            "start": [
                                1443,
                                41
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "finish": [
                                1443,
                                47
                            ],
                            "name": "z2",
                            "start": [
                                1443,
                                45
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "finish": [
                                1443,
                                59
                            ],
                            "name": "origFactor",
                            "start": [
                                1443,
                                49
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "finish": [
                        1443,
                        64
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        1443,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.RevertSmoothMesh(x1: number, z1: number, x2?: number, z2?: number, origFactor: number)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    1443,
                    32
                ],
                "name": "RevertSmoothMesh",
                "start": [
                    1443,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.RevertSmoothMesh",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Runs Dolly Camera\n\n@*param* `runtime` — Runtime in milliseconds.",
                "extends": {
                    "args": [
                        {
                            "desc": "Runtime in milliseconds.",
                            "finish": [
                                247,
                                38
                            ],
                            "name": "runtime",
                            "rawdesc": "Runtime in milliseconds.",
                            "start": [
                                247,
                                31
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "Runs Dolly Camera\n\n@*param* `runtime` — Runtime in milliseconds.",
                    "finish": [
                        247,
                        43
                    ],
                    "rawdesc": "Runs Dolly Camera",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        247,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.RunDollyCamera(runtime: number)\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    247,
                    30
                ],
                "name": "RunDollyCamera",
                "rawdesc": "Runs Dolly Camera",
                "start": [
                    247,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.RunDollyCamera",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1221,
                                37
                            ],
                            "name": "x",
                            "start": [
                                1221,
                                36
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1221,
                                40
                            ],
                            "name": "y",
                            "start": [
                                1221,
                                39
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1221,
                                47
                            ],
                            "name": "width",
                            "start": [
                                1221,
                                42
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1221,
                                55
                            ],
                            "name": "height",
                            "start": [
                                1221,
                                49
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "finish": [
                        1221,
                        60
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        1221,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SDLSetTextInputRect(x: number, y: number, width: number, height: number)\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    1221,
                    35
                ],
                "name": "SDLSetTextInputRect",
                "start": [
                    1221,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SDLSetTextInputRect",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [],
                    "finish": [
                        1224,
                        39
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        1224,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SDLStartTextInput()\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    1224,
                    33
                ],
                "name": "SDLStartTextInput",
                "start": [
                    1224,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SDLStartTextInput",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [],
                    "finish": [
                        1227,
                        38
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        1227,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SDLStopTextInput()\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    1227,
                    32
                ],
                "name": "SDLStopTextInput",
                "start": [
                    1227,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SDLStopTextInput",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Selects a single unit\n\n@*param* `append` — (Default: false) Append to current selection.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                319,
                                33
                            ],
                            "name": "unitID",
                            "start": [
                                319,
                                27
                            ],
                            "type": "local",
                            "view": "integer?"
                        },
                        {
                            "desc": "(Default: false) Append to current selection.",
                            "finish": [
                                319,
                                41
                            ],
                            "name": "append",
                            "rawdesc": "(Default: false) Append to current selection.",
                            "start": [
                                319,
                                35
                            ],
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "Selects a single unit\n\n@*param* `append` — (Default: false) Append to current selection.",
                    "finish": [
                        319,
                        46
                    ],
                    "rawdesc": "Selects a single unit",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        319,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SelectUnit(unitID?: integer, append?: boolean)\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    319,
                    26
                ],
                "name": "SelectUnit",
                "rawdesc": "Selects a single unit",
                "start": [
                    319,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SelectUnit",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Selects multiple units, or appends to selection. Accepts a table with unitIDs as values\n\n@*param* `unitMap` — Table with unit IDs as values.\n\n@*param* `append` — (Default: false) append to current selection",
                "extends": {
                    "args": [
                        {
                            "desc": "Table with unit IDs as values.",
                            "finish": [
                                342,
                                39
                            ],
                            "name": "unitMap",
                            "rawdesc": "Table with unit IDs as values.",
                            "start": [
                                342,
                                32
                            ],
                            "type": "local",
                            "view": "table<any, integer>"
                        },
                        {
                            "desc": "(Default: false) append to current selection",
                            "finish": [
                                342,
                                47
                            ],
                            "name": "append",
                            "rawdesc": "(Default: false) append to current selection",
                            "start": [
                                342,
                                41
                            ],
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "Selects multiple units, or appends to selection. Accepts a table with unitIDs as values\n\n@*param* `unitMap` — Table with unit IDs as values.\n\n@*param* `append` — (Default: false) append to current selection",
                    "finish": [
                        342,
                        52
                    ],
                    "rawdesc": "Selects multiple units, or appends to selection. Accepts a table with unitIDs as values",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        342,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SelectUnitArray(unitMap: table<any, integer>, append?: boolean)\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    342,
                    31
                ],
                "name": "SelectUnitArray",
                "rawdesc": "Selects multiple units, or appends to selection. Accepts a table with unitIDs as values",
                "start": [
                    342,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SelectUnitArray",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Selects multiple units, or appends to selection. Accepts a table with unitIDs as keys\n\n@*param* `unitMap` — Table with unit IDs as keys.\n\n@*param* `append` — (Default: false) append to current selection",
                "extends": {
                    "args": [
                        {
                            "desc": "Table with unit IDs as keys.",
                            "finish": [
                                349,
                                37
                            ],
                            "name": "unitMap",
                            "rawdesc": "Table with unit IDs as keys.",
                            "start": [
                                349,
                                30
                            ],
                            "type": "local",
                            "view": "table<integer, any>"
                        },
                        {
                            "desc": "(Default: false) append to current selection",
                            "finish": [
                                349,
                                45
                            ],
                            "name": "append",
                            "rawdesc": "(Default: false) append to current selection",
                            "start": [
                                349,
                                39
                            ],
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "Selects multiple units, or appends to selection. Accepts a table with unitIDs as keys\n\n@*param* `unitMap` — Table with unit IDs as keys.\n\n@*param* `append` — (Default: false) append to current selection",
                    "finish": [
                        349,
                        50
                    ],
                    "rawdesc": "Selects multiple units, or appends to selection. Accepts a table with unitIDs as keys",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        349,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SelectUnitMap(unitMap: table<integer, any>, append?: boolean)\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    349,
                    29
                ],
                "name": "SelectUnitMap",
                "rawdesc": "Selects multiple units, or appends to selection. Accepts a table with unitIDs as keys",
                "start": [
                    349,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SelectUnitMap",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                49,
                                37
                            ],
                            "name": "commands",
                            "start": [
                                49,
                                29
                            ],
                            "type": "local",
                            "view": "string[]"
                        }
                    ],
                    "finish": [
                        49,
                        42
                    ],
                    "start": [
                        49,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SendCommands(commands: string[])"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    49,
                    28
                ],
                "name": "SendCommands",
                "start": [
                    49,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `...` — additional commands",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                54,
                                36
                            ],
                            "name": "command",
                            "start": [
                                54,
                                29
                            ],
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "desc": "additional commands",
                            "finish": [
                                54,
                                41
                            ],
                            "rawdesc": "additional commands",
                            "start": [
                                54,
                                38
                            ],
                            "type": "...",
                            "view": "string"
                        }
                    ],
                    "desc": "@*param* `...` — additional commands",
                    "finish": [
                        54,
                        46
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        54,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SendCommands(command: string, ...string)\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    54,
                    28
                ],
                "name": "SendCommands",
                "start": [
                    54,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SendCommands",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                830,
                                38
                            ],
                            "name": "message",
                            "start": [
                                830,
                                31
                            ],
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "finish": [
                        830,
                        43
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        830,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SendLuaGaiaMsg(message: string)\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    830,
                    30
                ],
                "name": "SendLuaGaiaMsg",
                "start": [
                    830,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SendLuaGaiaMsg",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                837,
                                34
                            ],
                            "name": "msg",
                            "start": [
                                837,
                                31
                            ],
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "finish": [
                        837,
                        39
                    ],
                    "start": [
                        837,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SendLuaMenuMsg(msg: string)"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    837,
                    30
                ],
                "name": "SendLuaMenuMsg",
                "start": [
                    837,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SendLuaMenuMsg",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                834,
                                39
                            ],
                            "name": "message",
                            "start": [
                                834,
                                32
                            ],
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "finish": [
                        834,
                        44
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        834,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SendLuaRulesMsg(message: string)\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    834,
                    31
                ],
                "name": "SendLuaRulesMsg",
                "start": [
                    834,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SendLuaRulesMsg",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `mode` — s",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                826,
                                36
                            ],
                            "name": "message",
                            "start": [
                                826,
                                29
                            ],
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "desc": "s",
                            "finish": [
                                826,
                                42
                            ],
                            "name": "mode",
                            "rawdesc": "s",
                            "start": [
                                826,
                                38
                            ],
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "desc": "@*param* `mode` — s",
                    "finish": [
                        826,
                        47
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        826,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SendLuaUIMsg(message: string, mode: string)\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    826,
                    28
                ],
                "name": "SendLuaUIMsg",
                "start": [
                    826,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SendLuaUIMsg",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                62,
                                35
                            ],
                            "name": "message",
                            "start": [
                                62,
                                28
                            ],
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "finish": [
                        62,
                        40
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        62,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SendMessage(message: string)\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    62,
                    27
                ],
                "name": "SendMessage",
                "start": [
                    62,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SendMessage",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                81,
                                44
                            ],
                            "name": "allyID",
                            "start": [
                                81,
                                38
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                81,
                                53
                            ],
                            "name": "message",
                            "start": [
                                81,
                                46
                            ],
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "finish": [
                        81,
                        58
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        81,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SendMessageToAllyTeam(allyID: integer, message: string)\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    81,
                    37
                ],
                "name": "SendMessageToAllyTeam",
                "start": [
                    81,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SendMessageToAllyTeam",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                71,
                                44
                            ],
                            "name": "playerID",
                            "start": [
                                71,
                                36
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                71,
                                53
                            ],
                            "name": "message",
                            "start": [
                                71,
                                46
                            ],
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "finish": [
                        71,
                        58
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        71,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SendMessageToPlayer(playerID: integer, message: string)\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    71,
                    35
                ],
                "name": "SendMessageToPlayer",
                "start": [
                    71,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SendMessageToPlayer",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `message` — `<PLAYER#>` (with # being a playerid) inside the string will be replaced with the players name - i.e. : Spring.SendMessage (\"`<PLAYER1>` did something\") might display as \"ProRusher did something\"",
                "extends": {
                    "args": [
                        {
                            "desc": "`<PLAYER#>` (with # being a playerid) inside the string will be replaced with the players name - i.e. : Spring.SendMessage (\"`<PLAYER1>` did something\") might display as \"ProRusher did something\"",
                            "finish": [
                                66,
                                47
                            ],
                            "name": "message",
                            "rawdesc": "`<PLAYER#>` (with # being a playerid) inside the string will be replaced with the players name - i.e. : Spring.SendMessage (\"`<PLAYER1>` did something\") might display as \"ProRusher did something\"",
                            "start": [
                                66,
                                40
                            ],
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "desc": "@*param* `message` — `<PLAYER#>` (with # being a playerid) inside the string will be replaced with the players name - i.e. : Spring.SendMessage (\"`<PLAYER1>` did something\") might display as \"ProRusher did something\"",
                    "finish": [
                        66,
                        52
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        66,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SendMessageToSpectators(message: string)\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    66,
                    39
                ],
                "name": "SendMessageToSpectators",
                "start": [
                    66,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SendMessageToSpectators",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                76,
                                40
                            ],
                            "name": "teamID",
                            "start": [
                                76,
                                34
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                76,
                                49
                            ],
                            "name": "message",
                            "start": [
                                76,
                                42
                            ],
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "finish": [
                        76,
                        54
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        76,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SendMessageToTeam(teamID: integer, message: string)\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    76,
                    33
                ],
                "name": "SendMessageToTeam",
                "start": [
                    76,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SendMessageToTeam",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                971,
                                44
                            ],
                            "name": "aiTeam",
                            "start": [
                                971,
                                38
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                971,
                                53
                            ],
                            "name": "message",
                            "start": [
                                971,
                                46
                            ],
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "finish": [
                        971,
                        58
                    ],
                    "returns": [
                        {
                            "name": "ai_processed",
                            "type": "function.return",
                            "view": "boolean?"
                        }
                    ],
                    "start": [
                        971,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SendSkirmishAIMessage(aiTeam: number, message: string)\n  -> ai_processed: boolean?"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    971,
                    37
                ],
                "name": "SendSkirmishAIMessage",
                "start": [
                    971,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SendSkirmishAIMessage",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                605,
                                39
                            ],
                            "name": "action",
                            "start": [
                                605,
                                33
                            ],
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": [
                                605,
                                52
                            ],
                            "name": "actionExtra",
                            "start": [
                                605,
                                41
                            ],
                            "type": "local",
                            "view": "string?"
                        }
                    ],
                    "finish": [
                        605,
                        57
                    ],
                    "returns": [
                        {
                            "name": "commandSet",
                            "type": "function.return",
                            "view": "boolean?"
                        }
                    ],
                    "start": [
                        605,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetActiveCommand(action: string, actionExtra?: string)\n  -> commandSet: boolean?"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    605,
                    32
                ],
                "name": "SetActiveCommand",
                "start": [
                    605,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `button` — (Default: 1)",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                616,
                                41
                            ],
                            "name": "cmdIndex",
                            "start": [
                                616,
                                33
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "desc": "(Default: 1)",
                            "finish": [
                                616,
                                49
                            ],
                            "name": "button",
                            "rawdesc": "(Default: 1)",
                            "start": [
                                616,
                                43
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "finish": [
                                616,
                                60
                            ],
                            "name": "leftClick",
                            "start": [
                                616,
                                51
                            ],
                            "type": "local",
                            "view": "boolean?"
                        },
                        {
                            "finish": [
                                616,
                                72
                            ],
                            "name": "rightClick",
                            "start": [
                                616,
                                62
                            ],
                            "type": "local",
                            "view": "boolean?"
                        },
                        {
                            "finish": [
                                616,
                                77
                            ],
                            "name": "alt",
                            "start": [
                                616,
                                74
                            ],
                            "type": "local",
                            "view": "boolean?"
                        },
                        {
                            "finish": [
                                616,
                                83
                            ],
                            "name": "ctrl",
                            "start": [
                                616,
                                79
                            ],
                            "type": "local",
                            "view": "boolean?"
                        },
                        {
                            "finish": [
                                616,
                                89
                            ],
                            "name": "meta",
                            "start": [
                                616,
                                85
                            ],
                            "type": "local",
                            "view": "boolean?"
                        },
                        {
                            "finish": [
                                616,
                                96
                            ],
                            "name": "shift",
                            "start": [
                                616,
                                91
                            ],
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "@*param* `button` — (Default: 1)",
                    "finish": [
                        616,
                        101
                    ],
                    "returns": [
                        {
                            "name": "commandSet",
                            "type": "function.return",
                            "view": "boolean?"
                        }
                    ],
                    "start": [
                        616,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetActiveCommand(cmdIndex: number, button?: number, leftClick?: boolean, rightClick?: boolean, alt?: boolean, ctrl?: boolean, meta?: boolean, shift?: boolean)\n  -> commandSet: boolean?"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    616,
                    32
                ],
                "name": "SetActiveCommand",
                "start": [
                    616,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetActiveCommand",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Changes the value of the (one-sided) alliance between: firstAllyTeamID -> secondAllyTeamID.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                23,
                                39
                            ],
                            "name": "firstAllyTeamID",
                            "start": [
                                23,
                                24
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                23,
                                57
                            ],
                            "name": "secondAllyTeamID",
                            "start": [
                                23,
                                41
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                23,
                                63
                            ],
                            "name": "ally",
                            "start": [
                                23,
                                59
                            ],
                            "type": "local",
                            "view": "boolean"
                        }
                    ],
                    "desc": "Changes the value of the (one-sided) alliance between: firstAllyTeamID -> secondAllyTeamID.",
                    "finish": [
                        23,
                        68
                    ],
                    "rawdesc": "Changes the value of the (one-sided) alliance between: firstAllyTeamID -> secondAllyTeamID.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        23,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetAlly(firstAllyTeamID: integer, secondAllyTeamID: integer, ally: boolean)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    23,
                    23
                ],
                "name": "SetAlly",
                "rawdesc": "Changes the value of the (one-sided) alliance between: firstAllyTeamID -> secondAllyTeamID.",
                "start": [
                    23,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetAlly",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Changes the start box position of an allyTeam.\n\n@*param* `xMin` — left start box boundary (elmos)\n\n@*param* `zMin` — top start box boundary (elmos)\n\n@*param* `xMax` — right start box boundary (elmos)\n\n@*param* `zMax` — bottom start box boundary (elmos)",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                33,
                                46
                            ],
                            "name": "allyTeamID",
                            "start": [
                                33,
                                36
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "desc": "left start box boundary (elmos)",
                            "finish": [
                                33,
                                52
                            ],
                            "name": "xMin",
                            "rawdesc": "left start box boundary (elmos)",
                            "start": [
                                33,
                                48
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "desc": "top start box boundary (elmos)",
                            "finish": [
                                33,
                                58
                            ],
                            "name": "zMin",
                            "rawdesc": "top start box boundary (elmos)",
                            "start": [
                                33,
                                54
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "desc": "right start box boundary (elmos)",
                            "finish": [
                                33,
                                64
                            ],
                            "name": "xMax",
                            "rawdesc": "right start box boundary (elmos)",
                            "start": [
                                33,
                                60
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "desc": "bottom start box boundary (elmos)",
                            "finish": [
                                33,
                                70
                            ],
                            "name": "zMax",
                            "rawdesc": "bottom start box boundary (elmos)",
                            "start": [
                                33,
                                66
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "Changes the start box position of an allyTeam.\n\n@*param* `xMin` — left start box boundary (elmos)\n\n@*param* `zMin` — top start box boundary (elmos)\n\n@*param* `xMax` — right start box boundary (elmos)\n\n@*param* `zMax` — bottom start box boundary (elmos)",
                    "finish": [
                        33,
                        75
                    ],
                    "rawdesc": "Changes the start box position of an allyTeam.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        33,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetAllyTeamStartBox(allyTeamID: integer, xMin: number, zMin: number, xMax: number, zMax: number)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    33,
                    35
                ],
                "name": "SetAllyTeamStartBox",
                "rawdesc": "Changes the start box position of an allyTeam.",
                "start": [
                    33,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetAllyTeamStartBox",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "It can be used to modify the following atmosphere parameters\n\nUsage:\n```lua\nSpring.SetAtmosphere({ fogStart = 0, fogEnd = 0.5, fogColor = { 0.7, 0.2, 0.2, 1 }})\n```",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                925,
                                36
                            ],
                            "name": "params",
                            "start": [
                                925,
                                30
                            ],
                            "type": "local",
                            "view": "AtmosphereParams"
                        }
                    ],
                    "desc": "It can be used to modify the following atmosphere parameters\n\nUsage:\n```lua\nSpring.SetAtmosphere({ fogStart = 0, fogEnd = 0.5, fogColor = { 0.7, 0.2, 0.2, 1 }})\n```",
                    "finish": [
                        925,
                        41
                    ],
                    "rawdesc": "It can be used to modify the following atmosphere parameters\n\nUsage:\n```lua\nSpring.SetAtmosphere({ fogStart = 0, fogEnd = 0.5, fogColor = { 0.7, 0.2, 0.2, 1 }})\n```",
                    "start": [
                        925,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetAtmosphere(params: AtmosphereParams)"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    925,
                    29
                ],
                "name": "SetAtmosphere",
                "rawdesc": "It can be used to modify the following atmosphere parameters\n\nUsage:\n```lua\nSpring.SetAtmosphere({ fogStart = 0, fogEnd = 0.5, fogColor = { 0.7, 0.2, 0.2, 1 }})\n```",
                "start": [
                    925,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetAtmosphere",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                995,
                                41
                            ],
                            "name": "autoShow",
                            "start": [
                                995,
                                33
                            ],
                            "type": "local",
                            "view": "boolean"
                        }
                    ],
                    "finish": [
                        995,
                        46
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        995,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetAutoShowMetal(autoShow: boolean)\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    995,
                    32
                ],
                "name": "SetAutoShowMetal",
                "start": [
                    995,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetAutoShowMetal",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                637,
                                45
                            ],
                            "name": "state",
                            "start": [
                                637,
                                40
                            ],
                            "type": "local",
                            "view": "boolean"
                        }
                    ],
                    "finish": [
                        637,
                        50
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        637,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetBoxSelectionByEngine(state: boolean)\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    637,
                    39
                ],
                "name": "SetBoxSelectionByEngine",
                "start": [
                    637,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetBoxSelectionByEngine",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                816,
                                37
                            ],
                            "name": "facing",
                            "start": [
                                816,
                                31
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "finish": [
                        816,
                        42
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        816,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetBuildFacing(facing: number)\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    816,
                    30
                ],
                "name": "SetBuildFacing",
                "start": [
                    816,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetBuildFacing",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                812,
                                39
                            ],
                            "name": "spacing",
                            "start": [
                                812,
                                32
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "finish": [
                        812,
                        44
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        812,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetBuildSpacing(spacing: number)\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    812,
                    31
                ],
                "name": "SetBuildSpacing",
                "start": [
                    812,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetBuildSpacing",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `posX` — (Default: 0)\n\n@*param* `posY` — (Default: 0)\n\n@*param* `posZ` — (Default: 0)\n\n@*param* `tiltX` — (Default: 0)\n\n@*param* `tiltY` — (Default: 0)\n\n@*param* `tiltZ` — (Default: 0)",
                "extends": {
                    "args": [
                        {
                            "desc": "(Default: 0)",
                            "finish": [
                                222,
                                36
                            ],
                            "name": "posX",
                            "rawdesc": "(Default: 0)",
                            "start": [
                                222,
                                32
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "desc": "(Default: 0)",
                            "finish": [
                                222,
                                42
                            ],
                            "name": "posY",
                            "rawdesc": "(Default: 0)",
                            "start": [
                                222,
                                38
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "desc": "(Default: 0)",
                            "finish": [
                                222,
                                48
                            ],
                            "name": "posZ",
                            "rawdesc": "(Default: 0)",
                            "start": [
                                222,
                                44
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "desc": "(Default: 0)",
                            "finish": [
                                222,
                                55
                            ],
                            "name": "tiltX",
                            "rawdesc": "(Default: 0)",
                            "start": [
                                222,
                                50
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "desc": "(Default: 0)",
                            "finish": [
                                222,
                                62
                            ],
                            "name": "tiltY",
                            "rawdesc": "(Default: 0)",
                            "start": [
                                222,
                                57
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "desc": "(Default: 0)",
                            "finish": [
                                222,
                                69
                            ],
                            "name": "tiltZ",
                            "rawdesc": "(Default: 0)",
                            "start": [
                                222,
                                64
                            ],
                            "type": "local",
                            "view": "number?"
                        }
                    ],
                    "desc": "@*param* `posX` — (Default: 0)\n\n@*param* `posY` — (Default: 0)\n\n@*param* `posZ` — (Default: 0)\n\n@*param* `tiltX` — (Default: 0)\n\n@*param* `tiltY` — (Default: 0)\n\n@*param* `tiltZ` — (Default: 0)",
                    "finish": [
                        222,
                        74
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        222,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetCameraOffset(posX?: number, posY?: number, posZ?: number, tiltX?: number, tiltY?: number, tiltZ?: number)\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    222,
                    31
                ],
                "name": "SetCameraOffset",
                "start": [
                    222,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetCameraOffset",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Sets camera state\n\nThe fields in `camState` must be consistent with the name/mode and current/new camera mode\n\n@*param* `transitionTime` — (Default: 0) in nanoseconds\n\nmultiplicative factor applied to this and all subsequent transition times for\nthis camera mode.\n\nDefaults to \"CamTimeFactor\" springsetting unless set previously.\ntween factor applied to this and all subsequent transitions for this camera\nmode.\n\nDefaults to \"CamTimeExponent\" springsetting unless set previously.",
                "extends": {
                    "args": [
                        {
                            "desc": "Parameters for camera state\n\nHighly dependent on the type of the current camera controller\n",
                            "finish": [
                                241,
                                39
                            ],
                            "name": "camState",
                            "rawdesc": "Parameters for camera state\n\nHighly dependent on the type of the current camera controller\n",
                            "start": [
                                241,
                                31
                            ],
                            "type": "local",
                            "view": "camState"
                        },
                        {
                            "desc": "(Default: 0) in nanoseconds",
                            "finish": [
                                241,
                                55
                            ],
                            "name": "transitionTime",
                            "rawdesc": "(Default: 0) in nanoseconds",
                            "start": [
                                241,
                                41
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "finish": [
                                241,
                                77
                            ],
                            "name": "transitionTimeFactor",
                            "start": [
                                241,
                                57
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "finish": [
                                241,
                                101
                            ],
                            "name": "transitionTimeExponent",
                            "start": [
                                241,
                                79
                            ],
                            "type": "local",
                            "view": "number?"
                        }
                    ],
                    "desc": "Sets camera state\n\nThe fields in `camState` must be consistent with the name/mode and current/new camera mode\n\n@*param* `transitionTime` — (Default: 0) in nanoseconds\n\nmultiplicative factor applied to this and all subsequent transition times for\nthis camera mode.\n\nDefaults to \"CamTimeFactor\" springsetting unless set previously.\ntween factor applied to this and all subsequent transitions for this camera\nmode.\n\nDefaults to \"CamTimeExponent\" springsetting unless set previously.",
                    "finish": [
                        241,
                        106
                    ],
                    "rawdesc": "Sets camera state\n\nThe fields in `camState` must be consistent with the name/mode and current/new camera mode\n\nmultiplicative factor applied to this and all subsequent transition times for\nthis camera mode.\n\nDefaults to \"CamTimeFactor\" springsetting unless set previously.\ntween factor applied to this and all subsequent transitions for this camera\nmode.\n\nDefaults to \"CamTimeExponent\" springsetting unless set previously.",
                    "returns": [
                        {
                            "name": "set",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        241,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetCameraState(camState: camState, transitionTime?: number, transitionTimeFactor?: number, transitionTimeExponent?: number)\n  -> set: boolean"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    241,
                    30
                ],
                "name": "SetCameraState",
                "rawdesc": "Sets camera state\n\nThe fields in `camState` must be consistent with the name/mode and current/new camera mode\n\nmultiplicative factor applied to this and all subsequent transition times for\nthis camera mode.\n\nDefaults to \"CamTimeFactor\" springsetting unless set previously.\ntween factor applied to this and all subsequent transitions for this camera\nmode.\n\nDefaults to \"CamTimeExponent\" springsetting unless set previously.",
                "start": [
                    241,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetCameraState",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "For Spring Engine XZ represents horizontal, from north west corner of map and Y vertical, from water level and rising.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                213,
                                33
                            ],
                            "name": "x",
                            "start": [
                                213,
                                32
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                213,
                                36
                            ],
                            "name": "y",
                            "start": [
                                213,
                                35
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                213,
                                39
                            ],
                            "name": "z",
                            "start": [
                                213,
                                38
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                213,
                                50
                            ],
                            "name": "transTime",
                            "start": [
                                213,
                                41
                            ],
                            "type": "local",
                            "view": "number?"
                        }
                    ],
                    "desc": "For Spring Engine XZ represents horizontal, from north west corner of map and Y vertical, from water level and rising.",
                    "finish": [
                        213,
                        55
                    ],
                    "rawdesc": "For Spring Engine XZ represents horizontal, from north west corner of map and Y vertical, from water level and rising.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        213,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetCameraTarget(x: number, y: number, z: number, transTime?: number)\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    213,
                    31
                ],
                "name": "SetCameraTarget",
                "rawdesc": "For Spring Engine XZ represents horizontal, from north west corner of map and Y vertical, from water level and rising.",
                "start": [
                    213,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetCameraTarget",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1302,
                                33
                            ],
                            "name": "text",
                            "start": [
                                1302,
                                29
                            ],
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "finish": [
                        1302,
                        38
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        1302,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetClipboard(text: string)\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    1302,
                    28
                ],
                "name": "SetClipboard",
                "start": [
                    1302,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetClipboard",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `useOverla` — (Default: false) the value will only be set in memory, and not be restored for the next game.y",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                723,
                                35
                            ],
                            "name": "name",
                            "start": [
                                723,
                                31
                            ],
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": [
                                723,
                                42
                            ],
                            "name": "value",
                            "start": [
                                723,
                                37
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "desc": "(Default: false) the value will only be set in memory, and not be restored for the next game.y",
                            "finish": [
                                723,
                                53
                            ],
                            "name": "useOverla",
                            "rawdesc": "(Default: false) the value will only be set in memory, and not be restored for the next game.y",
                            "start": [
                                723,
                                44
                            ],
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "@*param* `useOverla` — (Default: false) the value will only be set in memory, and not be restored for the next game.y",
                    "finish": [
                        723,
                        58
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        723,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetConfigFloat(name: string, value: number, useOverla?: boolean)\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    723,
                    30
                ],
                "name": "SetConfigFloat",
                "start": [
                    723,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetConfigFloat",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `useOverlay` — (Default: false) the value will only be set in memory, and not be restored for the next game.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                717,
                                33
                            ],
                            "name": "name",
                            "start": [
                                717,
                                29
                            ],
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": [
                                717,
                                40
                            ],
                            "name": "value",
                            "start": [
                                717,
                                35
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "desc": "(Default: false) the value will only be set in memory, and not be restored for the next game.",
                            "finish": [
                                717,
                                52
                            ],
                            "name": "useOverlay",
                            "rawdesc": "(Default: false) the value will only be set in memory, and not be restored for the next game.",
                            "start": [
                                717,
                                42
                            ],
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "@*param* `useOverlay` — (Default: false) the value will only be set in memory, and not be restored for the next game.",
                    "finish": [
                        717,
                        57
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        717,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetConfigInt(name: string, value: number, useOverlay?: boolean)\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    717,
                    28
                ],
                "name": "SetConfigInt",
                "start": [
                    717,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetConfigInt",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `useOverlay` — (Default: false) the value will only be set in memory, and not be restored for the next game.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                729,
                                36
                            ],
                            "name": "name",
                            "start": [
                                729,
                                32
                            ],
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": [
                                729,
                                43
                            ],
                            "name": "value",
                            "start": [
                                729,
                                38
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "desc": "(Default: false) the value will only be set in memory, and not be restored for the next game.",
                            "finish": [
                                729,
                                55
                            ],
                            "name": "useOverlay",
                            "rawdesc": "(Default: false) the value will only be set in memory, and not be restored for the next game.",
                            "start": [
                                729,
                                45
                            ],
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "@*param* `useOverlay` — (Default: false) the value will only be set in memory, and not be restored for the next game.",
                    "finish": [
                        729,
                        60
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        729,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetConfigString(name: string, value: number, useOverlay?: boolean)\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    729,
                    31
                ],
                "name": "SetConfigString",
                "start": [
                    729,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetConfigString",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Register your custom cmd so it gets visible in the unit's cmd queue",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                670,
                                46
                            ],
                            "name": "cmdID",
                            "start": [
                                670,
                                41
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                670,
                                55
                            ],
                            "name": "string",
                            "start": [
                                670,
                                49
                            ],
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": [
                                670,
                                62
                            ],
                            "name": "number",
                            "start": [
                                670,
                                56
                            ],
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "desc": "Register your custom cmd so it gets visible in the unit's cmd queue",
                    "finish": [
                        670,
                        69
                    ],
                    "rawdesc": "Register your custom cmd so it gets visible in the unit's cmd queue",
                    "returns": [
                        {
                            "name": "assigned",
                            "type": "function.return",
                            "view": "boolean?"
                        }
                    ],
                    "start": [
                        670,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetCustomCommandDrawData(cmdID: integer, string: any, number: any)\n  -> assigned: boolean?"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    670,
                    40
                ],
                "name": "SetCustomCommandDrawData",
                "rawdesc": "Register your custom cmd so it gets visible in the unit's cmd queue",
                "start": [
                    670,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetCustomCommandDrawData",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Sets Dolly Camera movement Curve\n\n@*param* `cpoints` — NURBS control point positions `{{x,y,z,weight}, ...}`",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                274,
                                42
                            ],
                            "name": "degree",
                            "start": [
                                274,
                                36
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "desc": "NURBS control point positions `{{x,y,z,weight}, ...}`",
                            "finish": [
                                274,
                                51
                            ],
                            "name": "cpoints",
                            "rawdesc": "NURBS control point positions `{{x,y,z,weight}, ...}`",
                            "start": [
                                274,
                                44
                            ],
                            "type": "local",
                            "view": "table"
                        },
                        {
                            "finish": [
                                274,
                                58
                            ],
                            "name": "knots",
                            "start": [
                                274,
                                53
                            ],
                            "type": "local",
                            "view": "table"
                        }
                    ],
                    "desc": "Sets Dolly Camera movement Curve\n\n@*param* `cpoints` — NURBS control point positions `{{x,y,z,weight}, ...}`",
                    "finish": [
                        274,
                        63
                    ],
                    "rawdesc": "Sets Dolly Camera movement Curve",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        274,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetDollyCameraCurve(degree: number, cpoints: table, knots: table)\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    274,
                    35
                ],
                "name": "SetDollyCameraCurve",
                "rawdesc": "Sets Dolly Camera movement Curve",
                "start": [
                    274,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetDollyCameraCurve",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Sets Dolly Camera Look Curve\n\n@*param* `cpoints` — NURBS control point positions `{{x,y,z,weight}, ...}`",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                294,
                                46
                            ],
                            "name": "degree",
                            "start": [
                                294,
                                40
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "desc": "NURBS control point positions `{{x,y,z,weight}, ...}`",
                            "finish": [
                                294,
                                55
                            ],
                            "name": "cpoints",
                            "rawdesc": "NURBS control point positions `{{x,y,z,weight}, ...}`",
                            "start": [
                                294,
                                48
                            ],
                            "type": "local",
                            "view": "table"
                        },
                        {
                            "finish": [
                                294,
                                62
                            ],
                            "name": "knots",
                            "start": [
                                294,
                                57
                            ],
                            "type": "local",
                            "view": "table"
                        }
                    ],
                    "desc": "Sets Dolly Camera Look Curve\n\n@*param* `cpoints` — NURBS control point positions `{{x,y,z,weight}, ...}`",
                    "finish": [
                        294,
                        67
                    ],
                    "rawdesc": "Sets Dolly Camera Look Curve",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        294,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetDollyCameraLookCurve(degree: number, cpoints: table, knots: table)\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    294,
                    39
                ],
                "name": "SetDollyCameraLookCurve",
                "rawdesc": "Sets Dolly Camera Look Curve",
                "start": [
                    294,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetDollyCameraLookCurve",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Sets Dolly Camera Look Position",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                302,
                                44
                            ],
                            "name": "x",
                            "start": [
                                302,
                                43
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                302,
                                47
                            ],
                            "name": "y",
                            "start": [
                                302,
                                46
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                302,
                                50
                            ],
                            "name": "z",
                            "start": [
                                302,
                                49
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "Sets Dolly Camera Look Position",
                    "finish": [
                        302,
                        55
                    ],
                    "rawdesc": "Sets Dolly Camera Look Position",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        302,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetDollyCameraLookPosition(x: number, y: number, z: number)\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    302,
                    42
                ],
                "name": "SetDollyCameraLookPosition",
                "rawdesc": "Sets Dolly Camera Look Position",
                "start": [
                    302,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetDollyCameraLookPosition",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Sets target unit for Dolly Camera to look towards\n\n@*param* `unitID` — The unit to look at.",
                "extends": {
                    "args": [
                        {
                            "desc": "The unit to look at.",
                            "finish": [
                                308,
                                45
                            ],
                            "name": "unitID",
                            "rawdesc": "The unit to look at.",
                            "start": [
                                308,
                                39
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Sets target unit for Dolly Camera to look towards\n\n@*param* `unitID` — The unit to look at.",
                    "finish": [
                        308,
                        50
                    ],
                    "rawdesc": "Sets target unit for Dolly Camera to look towards",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        308,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetDollyCameraLookUnit(unitID: integer)\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    308,
                    38
                ],
                "name": "SetDollyCameraLookUnit",
                "rawdesc": "Sets target unit for Dolly Camera to look towards",
                "start": [
                    308,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetDollyCameraLookUnit",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Sets Dolly Camera movement mode\n\n@*param* `mode` — `1` static position, `2` nurbs curve\n\n```lua\nmode:\n    | 1\n    | 2\n```",
                "extends": {
                    "args": [
                        {
                            "desc": "`1` static position, `2` nurbs curve",
                            "finish": [
                                280,
                                39
                            ],
                            "name": "mode",
                            "rawdesc": "`1` static position, `2` nurbs curve",
                            "start": [
                                280,
                                35
                            ],
                            "type": "local",
                            "view": "1|2"
                        }
                    ],
                    "desc": "Sets Dolly Camera movement mode\n\n@*param* `mode` — `1` static position, `2` nurbs curve\n\n```lua\nmode:\n    | 1\n    | 2\n```",
                    "finish": [
                        280,
                        44
                    ],
                    "rawdesc": "Sets Dolly Camera movement mode\n\n\n```lua\nmode:\n    | 1\n    | 2\n```",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        280,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetDollyCameraMode(mode: 1|2)\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    280,
                    34
                ],
                "name": "SetDollyCameraMode",
                "rawdesc": "Sets Dolly Camera movement mode\n\n\n```lua\nmode:\n    | 1\n    | 2\n```",
                "start": [
                    280,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetDollyCameraMode",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Sets Dolly Camera Position",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                266,
                                40
                            ],
                            "name": "x",
                            "start": [
                                266,
                                39
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                266,
                                43
                            ],
                            "name": "y",
                            "start": [
                                266,
                                42
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                266,
                                46
                            ],
                            "name": "z",
                            "start": [
                                266,
                                45
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "Sets Dolly Camera Position",
                    "finish": [
                        266,
                        51
                    ],
                    "rawdesc": "Sets Dolly Camera Position",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        266,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetDollyCameraPosition(x: number, y: number, z: number)\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    266,
                    38
                ],
                "name": "SetDollyCameraPosition",
                "rawdesc": "Sets Dolly Camera Position",
                "start": [
                    266,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetDollyCameraPosition",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Sets Dolly Camera movement curve to world relative or look target relative\n\n@*param* `relativeMode` — `1` world, `2` look target",
                "extends": {
                    "args": [
                        {
                            "desc": "`1` world, `2` look target",
                            "finish": [
                                286,
                                55
                            ],
                            "name": "relativeMode",
                            "rawdesc": "`1` world, `2` look target",
                            "start": [
                                286,
                                43
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "Sets Dolly Camera movement curve to world relative or look target relative\n\n@*param* `relativeMode` — `1` world, `2` look target",
                    "finish": [
                        286,
                        60
                    ],
                    "rawdesc": "Sets Dolly Camera movement curve to world relative or look target relative",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        286,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetDollyCameraRelativeMode(relativeMode: number)\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    286,
                    42
                ],
                "name": "SetDollyCameraRelativeMode",
                "rawdesc": "Sets Dolly Camera movement curve to world relative or look target relative",
                "start": [
                    286,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetDollyCameraRelativeMode",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1007,
                                40
                            ],
                            "name": "drawGround",
                            "start": [
                                1007,
                                30
                            ],
                            "type": "local",
                            "view": "boolean"
                        }
                    ],
                    "finish": [
                        1007,
                        45
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        1007,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetDrawGround(drawGround: boolean)\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    1007,
                    29
                ],
                "name": "SetDrawGround",
                "start": [
                    1007,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetDrawGround",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `drawGroundForward` — allows disabling of the forward pass",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1012,
                                56
                            ],
                            "name": "drawGroundDeferred",
                            "start": [
                                1012,
                                38
                            ],
                            "type": "local",
                            "view": "boolean"
                        },
                        {
                            "desc": "allows disabling of the forward pass",
                            "finish": [
                                1012,
                                75
                            ],
                            "name": "drawGroundForward",
                            "rawdesc": "allows disabling of the forward pass",
                            "start": [
                                1012,
                                58
                            ],
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "@*param* `drawGroundForward` — allows disabling of the forward pass",
                    "finish": [
                        1012,
                        80
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        1012,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetDrawGroundDeferred(drawGroundDeferred: boolean, drawGroundForward?: boolean)\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    1012,
                    37
                ],
                "name": "SetDrawGroundDeferred",
                "start": [
                    1012,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetDrawGroundDeferred",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `drawUnitsForward` — allows disabling of the respective forward passes\n\n@*param* `drawFeaturesForward` — allows disabling of the respective forward passes",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1019,
                                55
                            ],
                            "name": "drawUnitsDeferred",
                            "start": [
                                1019,
                                38
                            ],
                            "type": "local",
                            "view": "boolean"
                        },
                        {
                            "finish": [
                                1019,
                                77
                            ],
                            "name": "drawFeaturesDeferred",
                            "start": [
                                1019,
                                57
                            ],
                            "type": "local",
                            "view": "boolean"
                        },
                        {
                            "desc": "allows disabling of the respective forward passes",
                            "finish": [
                                1019,
                                95
                            ],
                            "name": "drawUnitsForward",
                            "rawdesc": "allows disabling of the respective forward passes",
                            "start": [
                                1019,
                                79
                            ],
                            "type": "local",
                            "view": "boolean?"
                        },
                        {
                            "desc": "allows disabling of the respective forward passes",
                            "finish": [
                                1019,
                                116
                            ],
                            "name": "drawFeaturesForward",
                            "rawdesc": "allows disabling of the respective forward passes",
                            "start": [
                                1019,
                                97
                            ],
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "@*param* `drawUnitsForward` — allows disabling of the respective forward passes\n\n@*param* `drawFeaturesForward` — allows disabling of the respective forward passes",
                    "finish": [
                        1019,
                        121
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        1019,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetDrawModelsDeferred(drawUnitsDeferred: boolean, drawFeaturesDeferred: boolean, drawUnitsForward?: boolean, drawFeaturesForward?: boolean)\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    1019,
                    37
                ],
                "name": "SetDrawModelsDeferred",
                "start": [
                    1019,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetDrawModelsDeferred",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Disables the \"Selected Units x\" box in the GUI.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                633,
                                43
                            ],
                            "name": "enable",
                            "start": [
                                633,
                                37
                            ],
                            "type": "local",
                            "view": "boolean"
                        }
                    ],
                    "desc": "Disables the \"Selected Units x\" box in the GUI.",
                    "finish": [
                        633,
                        48
                    ],
                    "rawdesc": "Disables the \"Selected Units x\" box in the GUI.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        633,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetDrawSelectionInfo(enable: boolean)\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    633,
                    36
                ],
                "name": "SetDrawSelectionInfo",
                "rawdesc": "Disables the \"Selected Units x\" box in the GUI.",
                "start": [
                    633,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetDrawSelectionInfo",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                999,
                                34
                            ],
                            "name": "drawSky",
                            "start": [
                                999,
                                27
                            ],
                            "type": "local",
                            "view": "boolean"
                        }
                    ],
                    "finish": [
                        999,
                        39
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        999,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetDrawSky(drawSky: boolean)\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    999,
                    26
                ],
                "name": "SetDrawSky",
                "start": [
                    999,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetDrawSky",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1003,
                                38
                            ],
                            "name": "drawWater",
                            "start": [
                                1003,
                                29
                            ],
                            "type": "local",
                            "view": "boolean"
                        }
                    ],
                    "finish": [
                        1003,
                        43
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        1003,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetDrawWater(drawWater: boolean)\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    1003,
                    28
                ],
                "name": "SetDrawWater",
                "start": [
                    1003,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetDrawWater",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Defines how often `Callins.UnitExperience` will be called.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1625,
                                43
                            ],
                            "name": "expGrade",
                            "start": [
                                1625,
                                35
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1625,
                                58
                            ],
                            "name": "ExpPowerScale",
                            "start": [
                                1625,
                                45
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "finish": [
                                1625,
                                74
                            ],
                            "name": "ExpHealthScale",
                            "start": [
                                1625,
                                60
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "finish": [
                                1625,
                                90
                            ],
                            "name": "ExpReloadScale",
                            "start": [
                                1625,
                                76
                            ],
                            "type": "local",
                            "view": "number?"
                        }
                    ],
                    "desc": "Defines how often `Callins.UnitExperience` will be called.",
                    "finish": [
                        1625,
                        95
                    ],
                    "rawdesc": "Defines how often `Callins.UnitExperience` will be called.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        1625,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetExperienceGrade(expGrade: number, ExpPowerScale?: number, ExpHealthScale?: number, ExpReloadScale?: number)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    1625,
                    34
                ],
                "name": "SetExperienceGrade",
                "rawdesc": "Defines how often `Callins.UnitExperience` will be called.",
                "start": [
                    1625,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetExperienceGrade",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                816,
                                42
                            ],
                            "name": "unitID",
                            "start": [
                                816,
                                36
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                816,
                                53
                            ],
                            "name": "buggerOff",
                            "start": [
                                816,
                                44
                            ],
                            "type": "local",
                            "view": "boolean?"
                        },
                        {
                            "finish": [
                                816,
                                61
                            ],
                            "name": "offset",
                            "start": [
                                816,
                                55
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "finish": [
                                816,
                                69
                            ],
                            "name": "radius",
                            "start": [
                                816,
                                63
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "finish": [
                                816,
                                81
                            ],
                            "name": "relHeading",
                            "start": [
                                816,
                                71
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "finish": [
                                816,
                                92
                            ],
                            "name": "spherical",
                            "start": [
                                816,
                                83
                            ],
                            "type": "local",
                            "view": "boolean?"
                        },
                        {
                            "finish": [
                                816,
                                100
                            ],
                            "name": "forced",
                            "start": [
                                816,
                                94
                            ],
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "finish": [
                        816,
                        105
                    ],
                    "returns": [
                        {
                            "name": "buggerOff",
                            "type": "function.return",
                            "view": "number|nil"
                        }
                    ],
                    "start": [
                        816,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetFactoryBuggerOff(unitID: integer, buggerOff?: boolean, offset?: number, radius?: number, relHeading?: number, spherical?: boolean, forced?: boolean)\n  -> buggerOff: number|nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    816,
                    35
                ],
                "name": "SetFactoryBuggerOff",
                "start": [
                    816,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetFactoryBuggerOff",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                522,
                                54
                            ],
                            "name": "featureID",
                            "start": [
                                522,
                                45
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                522,
                                71
                            ],
                            "name": "alwaysUpdateMat",
                            "start": [
                                522,
                                56
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "finish": [
                        522,
                        76
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        522,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetFeatureAlwaysUpdateMatrix(featureID: integer, alwaysUpdateMat: number)\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    522,
                    44
                ],
                "name": "SetFeatureAlwaysUpdateMatrix",
                "start": [
                    522,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetFeatureAlwaysUpdateMatrix",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                925,
                                49
                            ],
                            "name": "featureID",
                            "start": [
                                925,
                                40
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                925,
                                57
                            ],
                            "name": "enable",
                            "start": [
                                925,
                                51
                            ],
                            "type": "local",
                            "view": "boolean"
                        }
                    ],
                    "finish": [
                        925,
                        62
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        925,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetFeatureAlwaysVisible(featureID: integer, enable: boolean)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    925,
                    39
                ],
                "name": "SetFeatureAlwaysVisible",
                "start": [
                    925,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetFeatureAlwaysVisible",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1058,
                                44
                            ],
                            "name": "featureID",
                            "start": [
                                1058,
                                35
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                1058,
                                56
                            ],
                            "name": "isBlocking",
                            "start": [
                                1058,
                                46
                            ],
                            "type": "local",
                            "view": "boolean"
                        },
                        {
                            "finish": [
                                1058,
                                81
                            ],
                            "name": "isSolidObjectCollidable",
                            "start": [
                                1058,
                                58
                            ],
                            "type": "local",
                            "view": "boolean"
                        },
                        {
                            "finish": [
                                1058,
                                105
                            ],
                            "name": "isProjectileCollidable",
                            "start": [
                                1058,
                                83
                            ],
                            "type": "local",
                            "view": "boolean"
                        },
                        {
                            "finish": [
                                1058,
                                129
                            ],
                            "name": "isRaySegmentCollidable",
                            "start": [
                                1058,
                                107
                            ],
                            "type": "local",
                            "view": "boolean"
                        },
                        {
                            "finish": [
                                1058,
                                140
                            ],
                            "name": "crushable",
                            "start": [
                                1058,
                                131
                            ],
                            "type": "local",
                            "view": "boolean"
                        },
                        {
                            "finish": [
                                1058,
                                159
                            ],
                            "name": "blockEnemyPushing",
                            "start": [
                                1058,
                                142
                            ],
                            "type": "local",
                            "view": "boolean"
                        },
                        {
                            "finish": [
                                1058,
                                179
                            ],
                            "name": "blockHeightChanges",
                            "start": [
                                1058,
                                161
                            ],
                            "type": "local",
                            "view": "boolean"
                        }
                    ],
                    "finish": [
                        1058,
                        184
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        1058,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetFeatureBlocking(featureID: integer, isBlocking: boolean, isSolidObjectCollidable: boolean, isProjectileCollidable: boolean, isRaySegmentCollidable: boolean, crushable: boolean, blockEnemyPushing: boolean, blockHeightChanges: boolean)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    1058,
                    34
                ],
                "name": "SetFeatureBlocking",
                "start": [
                    1058,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetFeatureBlocking",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nCheck `Spring.SetUnitCollisionVolumeData` for further explanation of the arguments.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1099,
                                55
                            ],
                            "name": "featureID",
                            "start": [
                                1099,
                                46
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                1099,
                                63
                            ],
                            "name": "scaleX",
                            "start": [
                                1099,
                                57
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1099,
                                71
                            ],
                            "name": "scaleY",
                            "start": [
                                1099,
                                65
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1099,
                                79
                            ],
                            "name": "scaleZ",
                            "start": [
                                1099,
                                73
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1099,
                                88
                            ],
                            "name": "offsetX",
                            "start": [
                                1099,
                                81
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1099,
                                97
                            ],
                            "name": "offsetY",
                            "start": [
                                1099,
                                90
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1099,
                                106
                            ],
                            "name": "offsetZ",
                            "start": [
                                1099,
                                99
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1099,
                                113
                            ],
                            "name": "vType",
                            "start": [
                                1099,
                                108
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1099,
                                120
                            ],
                            "name": "tType",
                            "start": [
                                1099,
                                115
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1099,
                                126
                            ],
                            "name": "Axis",
                            "start": [
                                1099,
                                122
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nCheck `Spring.SetUnitCollisionVolumeData` for further explanation of the arguments.",
                    "finish": [
                        1099,
                        131
                    ],
                    "rawdesc": "\nCheck `Spring.SetUnitCollisionVolumeData` for further explanation of the arguments.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        1099,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetFeatureCollisionVolumeData(featureID: integer, scaleX: number, scaleY: number, scaleZ: number, offsetX: number, offsetY: number, offsetZ: number, vType: number, tType: number, Axis: number)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    1099,
                    45
                ],
                "name": "SetFeatureCollisionVolumeData",
                "rawdesc": "\nCheck `Spring.SetUnitCollisionVolumeData` for further explanation of the arguments.",
                "start": [
                    1099,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetFeatureCollisionVolumeData",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1029,
                                45
                            ],
                            "name": "featureID",
                            "start": [
                                1029,
                                36
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                1029,
                                51
                            ],
                            "name": "dirX",
                            "start": [
                                1029,
                                47
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1029,
                                57
                            ],
                            "name": "dirY",
                            "start": [
                                1029,
                                53
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1029,
                                63
                            ],
                            "name": "dirZ",
                            "start": [
                                1029,
                                59
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "finish": [
                        1029,
                        68
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        1029,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetFeatureDirection(featureID: integer, dirX: number, dirY: number, dirZ: number)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    1029,
                    35
                ],
                "name": "SetFeatureDirection",
                "start": [
                    1029,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetFeatureDirection",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                517,
                                50
                            ],
                            "name": "featureID",
                            "start": [
                                517,
                                41
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                517,
                                66
                            ],
                            "name": "engineDrawMask",
                            "start": [
                                517,
                                52
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "finish": [
                        517,
                        71
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        517,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetFeatureEngineDrawMask(featureID: integer, engineDrawMask: number)\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    517,
                    40
                ],
                "name": "SetFeatureEngineDrawMask",
                "start": [
                    517,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetFeatureEngineDrawMask",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Control whether a feature will fade or not when zoomed out.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                529,
                                40
                            ],
                            "name": "featureID",
                            "start": [
                                529,
                                31
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                529,
                                47
                            ],
                            "name": "allow",
                            "start": [
                                529,
                                42
                            ],
                            "type": "local",
                            "view": "boolean"
                        }
                    ],
                    "desc": "Control whether a feature will fade or not when zoomed out.",
                    "finish": [
                        529,
                        52
                    ],
                    "rawdesc": "Control whether a feature will fade or not when zoomed out.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        529,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetFeatureFade(featureID: integer, allow: boolean)\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    529,
                    30
                ],
                "name": "SetFeatureFade",
                "rawdesc": "Control whether a feature will fade or not when zoomed out.",
                "start": [
                    529,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetFeatureFade",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nUse this call to set up feature direction in a robust way. Heading (-32768 to 32767) represents a 2D (xz plane) feature orientation if feature was completely upright, new {upx,upy,upz} direction will be used as new \"up\" vector, the rotation set by \"heading\" will remain preserved.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1040,
                                51
                            ],
                            "name": "featureID",
                            "start": [
                                1040,
                                42
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                1040,
                                60
                            ],
                            "name": "heading",
                            "start": [
                                1040,
                                53
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1040,
                                65
                            ],
                            "name": "upx",
                            "start": [
                                1040,
                                62
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1040,
                                70
                            ],
                            "name": "upy",
                            "start": [
                                1040,
                                67
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1040,
                                75
                            ],
                            "name": "upz",
                            "start": [
                                1040,
                                72
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nUse this call to set up feature direction in a robust way. Heading (-32768 to 32767) represents a 2D (xz plane) feature orientation if feature was completely upright, new {upx,upy,upz} direction will be used as new \"up\" vector, the rotation set by \"heading\" will remain preserved.",
                    "finish": [
                        1040,
                        80
                    ],
                    "rawdesc": "\nUse this call to set up feature direction in a robust way. Heading (-32768 to 32767) represents a 2D (xz plane) feature orientation if feature was completely upright, new {upx,upy,upz} direction will be used as new \"up\" vector, the rotation set by \"heading\" will remain preserved.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        1040,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetFeatureHeadingAndUpDir(featureID: integer, heading: number, upx: number, upy: number, upz: number)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    1040,
                    41
                ],
                "name": "SetFeatureHeadingAndUpDir",
                "rawdesc": "\nUse this call to set up feature direction in a robust way. Heading (-32768 to 32767) represents a 2D (xz plane) feature orientation if feature was completely upright, new {upx,upy,upz} direction will be used as new \"up\" vector, the rotation set by \"heading\" will remain preserved.",
                "start": [
                    1040,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetFeatureHeadingAndUpDir",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                935,
                                42
                            ],
                            "name": "featureID",
                            "start": [
                                935,
                                33
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                935,
                                50
                            ],
                            "name": "health",
                            "start": [
                                935,
                                44
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "finish": [
                        935,
                        55
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        935,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetFeatureHealth(featureID: integer, health: number)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    935,
                    32
                ],
                "name": "SetFeatureHealth",
                "start": [
                    935,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetFeatureHealth",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1007,
                                40
                            ],
                            "name": "featureID",
                            "start": [
                                1007,
                                31
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                1007,
                                46
                            ],
                            "name": "mass",
                            "start": [
                                1007,
                                42
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "finish": [
                        1007,
                        51
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        1007,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetFeatureMass(featureID: integer, mass: number)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    1007,
                    30
                ],
                "name": "SetFeatureMass",
                "start": [
                    1007,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetFeatureMass",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `maxHealth` — minimum 0.1",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                940,
                                45
                            ],
                            "name": "featureID",
                            "start": [
                                940,
                                36
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "desc": "minimum 0.1",
                            "finish": [
                                940,
                                56
                            ],
                            "name": "maxHealth",
                            "rawdesc": "minimum 0.1",
                            "start": [
                                940,
                                47
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "@*param* `maxHealth` — minimum 0.1",
                    "finish": [
                        940,
                        61
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        940,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetFeatureMaxHealth(featureID: integer, maxHealth: number)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    940,
                    35
                ],
                "name": "SetFeatureMaxHealth",
                "start": [
                    940,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetFeatureMaxHealth",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nCheck `Spring.SetUnitMidAndAimPos` for further explanation of the arguments.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1077,
                                48
                            ],
                            "name": "featureID",
                            "start": [
                                1077,
                                39
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                1077,
                                53
                            ],
                            "name": "mpX",
                            "start": [
                                1077,
                                50
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1077,
                                58
                            ],
                            "name": "mpY",
                            "start": [
                                1077,
                                55
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1077,
                                63
                            ],
                            "name": "mpZ",
                            "start": [
                                1077,
                                60
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1077,
                                68
                            ],
                            "name": "apX",
                            "start": [
                                1077,
                                65
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1077,
                                73
                            ],
                            "name": "apY",
                            "start": [
                                1077,
                                70
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1077,
                                78
                            ],
                            "name": "apZ",
                            "start": [
                                1077,
                                75
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1077,
                                88
                            ],
                            "name": "relative",
                            "start": [
                                1077,
                                80
                            ],
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "\nCheck `Spring.SetUnitMidAndAimPos` for further explanation of the arguments.",
                    "finish": [
                        1077,
                        93
                    ],
                    "rawdesc": "\nCheck `Spring.SetUnitMidAndAimPos` for further explanation of the arguments.",
                    "returns": [
                        {
                            "name": "success",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        1077,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetFeatureMidAndAimPos(featureID: integer, mpX: number, mpY: number, mpZ: number, apX: number, apY: number, apZ: number, relative?: boolean)\n  -> success: boolean"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    1077,
                    38
                ],
                "name": "SetFeatureMidAndAimPos",
                "rawdesc": "\nCheck `Spring.SetUnitMidAndAimPos` for further explanation of the arguments.",
                "start": [
                    1077,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetFeatureMidAndAimPos",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nUse this callout to control feature movement. The arg* arguments are parsed as follows and all optional:\n\nIf enable is true:\n[, velVector(x,y,z)  * initial velocity for feature\n[, accVector(x,y,z)  * acceleration added every frame]]\n\nIf enable is false:\n[, velocityMask(x,y,z)  * dimensions in which velocity is allowed to build when not using MoveCtrl\n[, impulseMask(x,y,z)  * dimensions in which impulse is allowed to apply when not using MoveCtrl\n[, movementMask(x,y,z)  * dimensions in which feature is allowed to move when not using MoveCtrl]]]\n\nIt is necessary to unlock feature movement on x,z axis before changing feature physics.\n\nFor example use `Spring.SetFeatureMoveCtrl(featureID,false,1,1,1,1,1,1,1,1,1)` to unlock all movement prior to making `Spring.SetFeatureVelocity` calls.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                986,
                                44
                            ],
                            "name": "featureID",
                            "start": [
                                986,
                                35
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                986,
                                52
                            ],
                            "name": "enable",
                            "start": [
                                986,
                                46
                            ],
                            "type": "local",
                            "view": "boolean?"
                        },
                        {
                            "finish": [
                                986,
                                58
                            ],
                            "name": "arg1",
                            "start": [
                                986,
                                54
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "finish": [
                                986,
                                64
                            ],
                            "name": "arg2",
                            "start": [
                                986,
                                60
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "finish": [
                                986,
                                70
                            ],
                            "name": "argn",
                            "start": [
                                986,
                                66
                            ],
                            "type": "local",
                            "view": "number?"
                        }
                    ],
                    "desc": "\nUse this callout to control feature movement. The arg* arguments are parsed as follows and all optional:\n\nIf enable is true:\n[, velVector(x,y,z)  * initial velocity for feature\n[, accVector(x,y,z)  * acceleration added every frame]]\n\nIf enable is false:\n[, velocityMask(x,y,z)  * dimensions in which velocity is allowed to build when not using MoveCtrl\n[, impulseMask(x,y,z)  * dimensions in which impulse is allowed to apply when not using MoveCtrl\n[, movementMask(x,y,z)  * dimensions in which feature is allowed to move when not using MoveCtrl]]]\n\nIt is necessary to unlock feature movement on x,z axis before changing feature physics.\n\nFor example use `Spring.SetFeatureMoveCtrl(featureID,false,1,1,1,1,1,1,1,1,1)` to unlock all movement prior to making `Spring.SetFeatureVelocity` calls.",
                    "finish": [
                        986,
                        75
                    ],
                    "rawdesc": "\nUse this callout to control feature movement. The arg* arguments are parsed as follows and all optional:\n\nIf enable is true:\n[, velVector(x,y,z)  * initial velocity for feature\n[, accVector(x,y,z)  * acceleration added every frame]]\n\nIf enable is false:\n[, velocityMask(x,y,z)  * dimensions in which velocity is allowed to build when not using MoveCtrl\n[, impulseMask(x,y,z)  * dimensions in which impulse is allowed to apply when not using MoveCtrl\n[, movementMask(x,y,z)  * dimensions in which feature is allowed to move when not using MoveCtrl]]]\n\nIt is necessary to unlock feature movement on x,z axis before changing feature physics.\n\nFor example use `Spring.SetFeatureMoveCtrl(featureID,false,1,1,1,1,1,1,1,1,1)` to unlock all movement prior to making `Spring.SetFeatureVelocity` calls.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        986,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetFeatureMoveCtrl(featureID: integer, enable?: boolean, arg1?: number, arg2?: number, argn?: number)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    986,
                    34
                ],
                "name": "SetFeatureMoveCtrl",
                "rawdesc": "\nUse this callout to control feature movement. The arg* arguments are parsed as follows and all optional:\n\nIf enable is true:\n[, velVector(x,y,z)  * initial velocity for feature\n[, accVector(x,y,z)  * acceleration added every frame]]\n\nIf enable is false:\n[, velocityMask(x,y,z)  * dimensions in which velocity is allowed to build when not using MoveCtrl\n[, impulseMask(x,y,z)  * dimensions in which impulse is allowed to apply when not using MoveCtrl\n[, movementMask(x,y,z)  * dimensions in which feature is allowed to move when not using MoveCtrl]]]\n\nIt is necessary to unlock feature movement on x,z axis before changing feature physics.\n\nFor example use `Spring.SetFeatureMoveCtrl(featureID,false,1,1,1,1,1,1,1,1,1)` to unlock all movement prior to making `Spring.SetFeatureVelocity` calls.",
                "start": [
                    986,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetFeatureMoveCtrl",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                512,
                                42
                            ],
                            "name": "featureID",
                            "start": [
                                512,
                                33
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                512,
                                50
                            ],
                            "name": "noDraw",
                            "start": [
                                512,
                                44
                            ],
                            "type": "local",
                            "view": "boolean"
                        }
                    ],
                    "finish": [
                        512,
                        55
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        512,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetFeatureNoDraw(featureID: integer, noDraw: boolean)\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    512,
                    32
                ],
                "name": "SetFeatureNoDraw",
                "start": [
                    512,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetFeatureNoDraw",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1063,
                                44
                            ],
                            "name": "featureID",
                            "start": [
                                1063,
                                35
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                1063,
                                54
                            ],
                            "name": "noSelect",
                            "start": [
                                1063,
                                46
                            ],
                            "type": "local",
                            "view": "boolean"
                        }
                    ],
                    "finish": [
                        1063,
                        59
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        1063,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetFeatureNoSelect(featureID: integer, noSelect: boolean)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    1063,
                    34
                ],
                "name": "SetFeatureNoSelect",
                "start": [
                    1063,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetFeatureNoSelect",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1002,
                                43
                            ],
                            "name": "featureID",
                            "start": [
                                1002,
                                34
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                1002,
                                49
                            ],
                            "name": "posX",
                            "start": [
                                1002,
                                45
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1002,
                                55
                            ],
                            "name": "posY",
                            "start": [
                                1002,
                                51
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1002,
                                61
                            ],
                            "name": "posZ",
                            "start": [
                                1002,
                                57
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1002,
                                67
                            ],
                            "name": "velX",
                            "start": [
                                1002,
                                63
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1002,
                                73
                            ],
                            "name": "velY",
                            "start": [
                                1002,
                                69
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1002,
                                79
                            ],
                            "name": "velZ",
                            "start": [
                                1002,
                                75
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1002,
                                85
                            ],
                            "name": "rotX",
                            "start": [
                                1002,
                                81
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1002,
                                91
                            ],
                            "name": "rotY",
                            "start": [
                                1002,
                                87
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1002,
                                97
                            ],
                            "name": "rotZ",
                            "start": [
                                1002,
                                93
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1002,
                                104
                            ],
                            "name": "dragX",
                            "start": [
                                1002,
                                99
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1002,
                                111
                            ],
                            "name": "dragY",
                            "start": [
                                1002,
                                106
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1002,
                                118
                            ],
                            "name": "dragZ",
                            "start": [
                                1002,
                                113
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "finish": [
                        1002,
                        123
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        1002,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetFeaturePhysics(featureID: integer, posX: number, posY: number, posZ: number, velX: number, velY: number, velZ: number, rotX: number, rotY: number, rotZ: number, dragX: number, dragY: number, dragZ: number)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    1002,
                    33
                ],
                "name": "SetFeaturePhysics",
                "start": [
                    1002,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetFeaturePhysics",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1114,
                                60
                            ],
                            "name": "featureID",
                            "start": [
                                1114,
                                51
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                1114,
                                72
                            ],
                            "name": "pieceIndex",
                            "start": [
                                1114,
                                62
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1114,
                                80
                            ],
                            "name": "enable",
                            "start": [
                                1114,
                                74
                            ],
                            "type": "local",
                            "view": "boolean"
                        },
                        {
                            "finish": [
                                1114,
                                88
                            ],
                            "name": "scaleX",
                            "start": [
                                1114,
                                82
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1114,
                                96
                            ],
                            "name": "scaleY",
                            "start": [
                                1114,
                                90
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1114,
                                104
                            ],
                            "name": "scaleZ",
                            "start": [
                                1114,
                                98
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1114,
                                113
                            ],
                            "name": "offsetX",
                            "start": [
                                1114,
                                106
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1114,
                                122
                            ],
                            "name": "offsetY",
                            "start": [
                                1114,
                                115
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1114,
                                131
                            ],
                            "name": "offsetZ",
                            "start": [
                                1114,
                                124
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1114,
                                137
                            ],
                            "name": "Axis",
                            "start": [
                                1114,
                                133
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1114,
                                149
                            ],
                            "name": "volumeType",
                            "start": [
                                1114,
                                139
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1114,
                                162
                            ],
                            "name": "primaryAxis",
                            "start": [
                                1114,
                                151
                            ],
                            "type": "local",
                            "view": "number?"
                        }
                    ],
                    "finish": [
                        1114,
                        167
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        1114,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetFeaturePieceCollisionVolumeData(featureID: integer, pieceIndex: number, enable: boolean, scaleX: number, scaleY: number, scaleZ: number, offsetX: number, offsetY: number, offsetZ: number, Axis: number, volumeType: number, primaryAxis?: number)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    1114,
                    50
                ],
                "name": "SetFeaturePieceCollisionVolumeData",
                "start": [
                    1114,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetFeaturePieceCollisionVolumeData",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1120,
                                48
                            ],
                            "name": "featureID",
                            "start": [
                                1120,
                                39
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                1120,
                                60
                            ],
                            "name": "pieceIndex",
                            "start": [
                                1120,
                                50
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1120,
                                69
                            ],
                            "name": "visible",
                            "start": [
                                1120,
                                62
                            ],
                            "type": "local",
                            "view": "boolean"
                        }
                    ],
                    "finish": [
                        1120,
                        74
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        1120,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetFeaturePieceVisible(featureID: integer, pieceIndex: number, visible: boolean)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    1120,
                    38
                ],
                "name": "SetFeaturePieceVisible",
                "start": [
                    1120,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetFeaturePieceVisible",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1015,
                                44
                            ],
                            "name": "featureID",
                            "start": [
                                1015,
                                35
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                1015,
                                47
                            ],
                            "name": "x",
                            "start": [
                                1015,
                                46
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1015,
                                50
                            ],
                            "name": "y",
                            "start": [
                                1015,
                                49
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1015,
                                53
                            ],
                            "name": "z",
                            "start": [
                                1015,
                                52
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1015,
                                67
                            ],
                            "name": "snapToGround",
                            "start": [
                                1015,
                                55
                            ],
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "finish": [
                        1015,
                        72
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        1015,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetFeaturePosition(featureID: integer, x: number, y: number, z: number, snapToGround?: boolean)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    1015,
                    34
                ],
                "name": "SetFeaturePosition",
                "start": [
                    1015,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetFeaturePosition",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1083,
                                51
                            ],
                            "name": "featureID",
                            "start": [
                                1083,
                                42
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                1083,
                                59
                            ],
                            "name": "radius",
                            "start": [
                                1083,
                                53
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1083,
                                67
                            ],
                            "name": "height",
                            "start": [
                                1083,
                                61
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "finish": [
                        1083,
                        72
                    ],
                    "returns": [
                        {
                            "name": "success",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        1083,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetFeatureRadiusAndHeight(featureID: integer, radius: number, height: number)\n  -> success: boolean"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    1083,
                    41
                ],
                "name": "SetFeatureRadiusAndHeight",
                "start": [
                    1083,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetFeatureRadiusAndHeight",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                945,
                                43
                            ],
                            "name": "featureID",
                            "start": [
                                945,
                                34
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                945,
                                56
                            ],
                            "name": "reclaimLeft",
                            "start": [
                                945,
                                45
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "finish": [
                        945,
                        61
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        945,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetFeatureReclaim(featureID: integer, reclaimLeft: number)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    945,
                    33
                ],
                "name": "SetFeatureReclaim",
                "start": [
                    945,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetFeatureReclaim",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                955,
                                45
                            ],
                            "name": "featureID",
                            "start": [
                                955,
                                36
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                955,
                                52
                            ],
                            "name": "metal",
                            "start": [
                                955,
                                47
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                955,
                                60
                            ],
                            "name": "energy",
                            "start": [
                                955,
                                54
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                955,
                                73
                            ],
                            "name": "reclaimTime",
                            "start": [
                                955,
                                62
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "finish": [
                                955,
                                86
                            ],
                            "name": "reclaimLeft",
                            "start": [
                                955,
                                75
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "finish": [
                                955,
                                103
                            ],
                            "name": "featureDefMetal",
                            "start": [
                                955,
                                88
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "finish": [
                                955,
                                121
                            ],
                            "name": "featureDefEnergy",
                            "start": [
                                955,
                                105
                            ],
                            "type": "local",
                            "view": "number?"
                        }
                    ],
                    "finish": [
                        955,
                        126
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        955,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetFeatureResources(featureID: integer, metal: number, energy: number, reclaimTime?: number, reclaimLeft?: number, featureDefMetal?: number, featureDefEnergy?: number)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    955,
                    35
                ],
                "name": "SetFeatureResources",
                "start": [
                    955,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetFeatureResources",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `unitDef` — Can be a number id or a string name, this allows cancelling resurrection by passing `-1`.\n\n@*param* `facing` — (Default: `\"south\"`)\n\n@*param* `progress` — Set the level of progress.\n\n```lua\nfacing:\n    | 0 -- South\n    | 1 -- East\n    | 2 -- North\n    | 3 -- West\n    | 0 -- South\n    | 1 -- East\n    | 2 -- North\n    | 3 -- West\n    | \"s\" -- South\n    | \"e\" -- East\n    | \"n\" -- North\n    | \"w\" -- West\n    | \"south\" -- South\n    | \"east\" -- East\n    | \"north\" -- North\n    | \"west\" -- West\n```",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                962,
                                45
                            ],
                            "name": "featureID",
                            "start": [
                                962,
                                36
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "desc": "Can be a number id or a string name, this allows cancelling resurrection by passing `-1`.",
                            "finish": [
                                962,
                                54
                            ],
                            "name": "unitDef",
                            "rawdesc": "Can be a number id or a string name, this allows cancelling resurrection by passing `-1`.",
                            "start": [
                                962,
                                47
                            ],
                            "type": "local",
                            "view": "string|integer"
                        },
                        {
                            "desc": "(Default: `\"south\"`)",
                            "finish": [
                                962,
                                62
                            ],
                            "name": "facing",
                            "rawdesc": "(Default: `\"south\"`)",
                            "start": [
                                962,
                                56
                            ],
                            "type": "local",
                            "view": "(\"e\"|\"east\"|\"n\"|\"north\"|\"s\"...(+7))?"
                        },
                        {
                            "desc": "Set the level of progress.",
                            "finish": [
                                962,
                                72
                            ],
                            "name": "progress",
                            "rawdesc": "Set the level of progress.",
                            "start": [
                                962,
                                64
                            ],
                            "type": "local",
                            "view": "number?"
                        }
                    ],
                    "desc": "@*param* `unitDef` — Can be a number id or a string name, this allows cancelling resurrection by passing `-1`.\n\n@*param* `facing` — (Default: `\"south\"`)\n\n@*param* `progress` — Set the level of progress.\n\n```lua\nfacing:\n    | 0 -- South\n    | 1 -- East\n    | 2 -- North\n    | 3 -- West\n    | 0 -- South\n    | 1 -- East\n    | 2 -- North\n    | 3 -- West\n    | \"s\" -- South\n    | \"e\" -- East\n    | \"n\" -- North\n    | \"w\" -- West\n    | \"south\" -- South\n    | \"east\" -- East\n    | \"north\" -- North\n    | \"west\" -- West\n```",
                    "finish": [
                        962,
                        77
                    ],
                    "rawdesc": "```lua\nfacing:\n    | 0 -- South\n    | 1 -- East\n    | 2 -- North\n    | 3 -- West\n    | 0 -- South\n    | 1 -- East\n    | 2 -- North\n    | 3 -- West\n    | \"s\" -- South\n    | \"e\" -- East\n    | \"n\" -- North\n    | \"w\" -- West\n    | \"south\" -- South\n    | \"east\" -- East\n    | \"north\" -- North\n    | \"west\" -- West\n```",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        962,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetFeatureResurrect(featureID: integer, unitDef: string|integer, facing?: \"e\"|\"east\"|\"n\"|\"north\"|\"s\"...(+7), progress?: number)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    962,
                    35
                ],
                "name": "SetFeatureResurrect",
                "rawdesc": "```lua\nfacing:\n    | 0 -- South\n    | 1 -- East\n    | 2 -- North\n    | 3 -- West\n    | 0 -- South\n    | 1 -- East\n    | 2 -- North\n    | 3 -- West\n    | \"s\" -- South\n    | \"e\" -- East\n    | \"n\" -- North\n    | \"w\" -- West\n    | \"south\" -- South\n    | \"east\" -- East\n    | \"north\" -- North\n    | \"west\" -- West\n```",
                "start": [
                    962,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetFeatureResurrect",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1022,
                                44
                            ],
                            "name": "featureID",
                            "start": [
                                1022,
                                35
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                1022,
                                50
                            ],
                            "name": "rotX",
                            "start": [
                                1022,
                                46
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1022,
                                56
                            ],
                            "name": "rotY",
                            "start": [
                                1022,
                                52
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1022,
                                62
                            ],
                            "name": "rotZ",
                            "start": [
                                1022,
                                58
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "finish": [
                        1022,
                        67
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        1022,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetFeatureRotation(featureID: integer, rotX: number, rotY: number, rotZ: number)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    1022,
                    34
                ],
                "name": "SetFeatureRotation",
                "start": [
                    1022,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetFeatureRotation",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `paramValue` — numeric paramValues in quotes will be converted to number.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                192,
                                46
                            ],
                            "name": "featureID",
                            "start": [
                                192,
                                37
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                192,
                                57
                            ],
                            "name": "paramName",
                            "start": [
                                192,
                                48
                            ],
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "desc": "numeric paramValues in quotes will be converted to number.",
                            "finish": [
                                192,
                                69
                            ],
                            "name": "paramValue",
                            "rawdesc": "numeric paramValues in quotes will be converted to number.",
                            "start": [
                                192,
                                59
                            ],
                            "type": "local",
                            "view": "(string|number)?"
                        },
                        {
                            "desc": "Parameters for los access\n\n\nIf one condition is fulfilled all beneath it are too (e.g. if an unit is in\nLOS it can read params with `inradar=true` even if the param has\n`inlos=false`) All GameRulesParam are public, TeamRulesParams can just be\n`private`,`allied` and/or `public` You can read RulesParams from any Lua\nenvironments! With those losAccess policies you can limit their access.\n\nAll GameRulesParam are public, TeamRulesParams can just be `private`,`allied` and/or `public`\nYou can read RulesParams from any Lua environments! With those losAccess policies you can limit their access.\n",
                            "finish": [
                                192,
                                80
                            ],
                            "name": "losAccess",
                            "rawdesc": "Parameters for los access\n\n\nIf one condition is fulfilled all beneath it are too (e.g. if an unit is in\nLOS it can read params with `inradar=true` even if the param has\n`inlos=false`) All GameRulesParam are public, TeamRulesParams can just be\n`private`,`allied` and/or `public` You can read RulesParams from any Lua\nenvironments! With those losAccess policies you can limit their access.\n\nAll GameRulesParam are public, TeamRulesParams can just be `private`,`allied` and/or `public`\nYou can read RulesParams from any Lua environments! With those losAccess policies you can limit their access.\n",
                            "start": [
                                192,
                                71
                            ],
                            "type": "local",
                            "view": "losAccess?"
                        }
                    ],
                    "desc": "@*param* `paramValue` — numeric paramValues in quotes will be converted to number.",
                    "finish": [
                        192,
                        85
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        192,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetFeatureRulesParam(featureID: integer, paramName: string, paramValue?: string|number, losAccess?: losAccess)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    192,
                    36
                ],
                "name": "SetFeatureRulesParam",
                "start": [
                    192,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetFeatureRulesParam",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                542,
                                55
                            ],
                            "name": "featureID",
                            "start": [
                                542,
                                46
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                542,
                                63
                            ],
                            "name": "scaleX",
                            "start": [
                                542,
                                57
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                542,
                                71
                            ],
                            "name": "scaleY",
                            "start": [
                                542,
                                65
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                542,
                                79
                            ],
                            "name": "scaleZ",
                            "start": [
                                542,
                                73
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                542,
                                88
                            ],
                            "name": "offsetX",
                            "start": [
                                542,
                                81
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                542,
                                97
                            ],
                            "name": "offsetY",
                            "start": [
                                542,
                                90
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                542,
                                106
                            ],
                            "name": "offsetZ",
                            "start": [
                                542,
                                99
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                542,
                                113
                            ],
                            "name": "vType",
                            "start": [
                                542,
                                108
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                542,
                                120
                            ],
                            "name": "tType",
                            "start": [
                                542,
                                115
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                542,
                                126
                            ],
                            "name": "Axis",
                            "start": [
                                542,
                                122
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "finish": [
                        542,
                        131
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        542,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetFeatureSelectionVolumeData(featureID: integer, scaleX: number, scaleY: number, scaleZ: number, offsetX: number, offsetY: number, offsetZ: number, vType: number, tType: number, Axis: number)\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    542,
                    45
                ],
                "name": "SetFeatureSelectionVolumeData",
                "start": [
                    542,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetFeatureSelectionVolumeData",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                930,
                                45
                            ],
                            "name": "featureID",
                            "start": [
                                930,
                                36
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                930,
                                56
                            ],
                            "name": "useAirLos",
                            "start": [
                                930,
                                47
                            ],
                            "type": "local",
                            "view": "boolean"
                        }
                    ],
                    "finish": [
                        930,
                        61
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        930,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetFeatureUseAirLos(featureID: integer, useAirLos: boolean)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    930,
                    35
                ],
                "name": "SetFeatureUseAirLos",
                "start": [
                    930,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetFeatureUseAirLos",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1047,
                                44
                            ],
                            "name": "featureID",
                            "start": [
                                1047,
                                35
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                1047,
                                50
                            ],
                            "name": "velX",
                            "start": [
                                1047,
                                46
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1047,
                                56
                            ],
                            "name": "velY",
                            "start": [
                                1047,
                                52
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1047,
                                62
                            ],
                            "name": "velZ",
                            "start": [
                                1047,
                                58
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "finish": [
                        1047,
                        67
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        1047,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetFeatureVelocity(featureID: integer, velX: number, velY: number, velZ: number)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    1047,
                    34
                ],
                "name": "SetFeatureVelocity",
                "start": [
                    1047,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetFeatureVelocity",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `paramValue` — numeric paramValues in quotes will be converted to number.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                164,
                                43
                            ],
                            "name": "paramName",
                            "start": [
                                164,
                                34
                            ],
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "desc": "numeric paramValues in quotes will be converted to number.",
                            "finish": [
                                164,
                                55
                            ],
                            "name": "paramValue",
                            "rawdesc": "numeric paramValues in quotes will be converted to number.",
                            "start": [
                                164,
                                45
                            ],
                            "type": "local",
                            "view": "(string|number)?"
                        },
                        {
                            "desc": "Parameters for los access\n\n\nIf one condition is fulfilled all beneath it are too (e.g. if an unit is in\nLOS it can read params with `inradar=true` even if the param has\n`inlos=false`) All GameRulesParam are public, TeamRulesParams can just be\n`private`,`allied` and/or `public` You can read RulesParams from any Lua\nenvironments! With those losAccess policies you can limit their access.\n\nAll GameRulesParam are public, TeamRulesParams can just be `private`,`allied` and/or `public`\nYou can read RulesParams from any Lua environments! With those losAccess policies you can limit their access.\n",
                            "finish": [
                                164,
                                66
                            ],
                            "name": "losAccess",
                            "rawdesc": "Parameters for los access\n\n\nIf one condition is fulfilled all beneath it are too (e.g. if an unit is in\nLOS it can read params with `inradar=true` even if the param has\n`inlos=false`) All GameRulesParam are public, TeamRulesParams can just be\n`private`,`allied` and/or `public` You can read RulesParams from any Lua\nenvironments! With those losAccess policies you can limit their access.\n\nAll GameRulesParam are public, TeamRulesParams can just be `private`,`allied` and/or `public`\nYou can read RulesParams from any Lua environments! With those losAccess policies you can limit their access.\n",
                            "start": [
                                164,
                                57
                            ],
                            "type": "local",
                            "view": "losAccess?"
                        }
                    ],
                    "desc": "@*param* `paramValue` — numeric paramValues in quotes will be converted to number.",
                    "finish": [
                        164,
                        71
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        164,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetGameRulesParam(paramName: string, paramValue?: string|number, losAccess?: losAccess)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    164,
                    33
                ],
                "name": "SetGameRulesParam",
                "start": [
                    164,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetGameRulesParam",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Changes access to global line of sight for a team and its allies.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                47,
                                39
                            ],
                            "name": "allyTeamID",
                            "start": [
                                47,
                                29
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                47,
                                50
                            ],
                            "name": "globallos",
                            "start": [
                                47,
                                41
                            ],
                            "type": "local",
                            "view": "boolean"
                        }
                    ],
                    "desc": "Changes access to global line of sight for a team and its allies.",
                    "finish": [
                        47,
                        55
                    ],
                    "rawdesc": "Changes access to global line of sight for a team and its allies.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        47,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetGlobalLos(allyTeamID: integer, globallos: boolean)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    47,
                    28
                ],
                "name": "SetGlobalLos",
                "rawdesc": "Changes access to global line of sight for a team and its allies.",
                "start": [
                    47,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetGlobalLos",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `alpha` — (Default: currAlpha) Between 0 and 1\n\n@*param* `alphaFalloff` — (Default: currAlphaFalloff) Between 0 and 1, per second",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1166,
                                43
                            ],
                            "name": "decalID",
                            "start": [
                                1166,
                                36
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "desc": "(Default: currAlpha) Between 0 and 1",
                            "finish": [
                                1166,
                                50
                            ],
                            "name": "alpha",
                            "rawdesc": "(Default: currAlpha) Between 0 and 1",
                            "start": [
                                1166,
                                45
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "desc": "(Default: currAlphaFalloff) Between 0 and 1, per second",
                            "finish": [
                                1166,
                                64
                            ],
                            "name": "alphaFalloff",
                            "rawdesc": "(Default: currAlphaFalloff) Between 0 and 1, per second",
                            "start": [
                                1166,
                                52
                            ],
                            "type": "local",
                            "view": "number?"
                        }
                    ],
                    "desc": "@*param* `alpha` — (Default: currAlpha) Between 0 and 1\n\n@*param* `alphaFalloff` — (Default: currAlphaFalloff) Between 0 and 1, per second",
                    "finish": [
                        1166,
                        69
                    ],
                    "returns": [
                        {
                            "name": "decalSet",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        1166,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetGroundDecalAlpha(decalID: integer, alpha?: number, alphaFalloff?: number)\n  -> decalSet: boolean"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    1166,
                    35
                ],
                "name": "SetGroundDecalAlpha",
                "start": [
                    1166,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetGroundDecalAlpha",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nUse separate min and max for \"gradient\" style decals such as tank tracks\n\n@*param* `creationFrameMin` — (Default: currCreationFrameMin)\n\n@*param* `creationFrameMax` — (Default: currCreationFrameMax)",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1210,
                                51
                            ],
                            "name": "decalID",
                            "start": [
                                1210,
                                44
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "desc": "(Default: currCreationFrameMin)",
                            "finish": [
                                1210,
                                69
                            ],
                            "name": "creationFrameMin",
                            "rawdesc": "(Default: currCreationFrameMin)",
                            "start": [
                                1210,
                                53
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "desc": "(Default: currCreationFrameMax)",
                            "finish": [
                                1210,
                                87
                            ],
                            "name": "creationFrameMax",
                            "rawdesc": "(Default: currCreationFrameMax)",
                            "start": [
                                1210,
                                71
                            ],
                            "type": "local",
                            "view": "number?"
                        }
                    ],
                    "desc": "\nUse separate min and max for \"gradient\" style decals such as tank tracks\n\n@*param* `creationFrameMin` — (Default: currCreationFrameMin)\n\n@*param* `creationFrameMax` — (Default: currCreationFrameMax)",
                    "finish": [
                        1210,
                        92
                    ],
                    "rawdesc": "\nUse separate min and max for \"gradient\" style decals such as tank tracks",
                    "returns": [
                        {
                            "name": "decalSet",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        1210,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetGroundDecalCreationFrame(decalID: integer, creationFrameMin?: number, creationFrameMax?: number)\n  -> decalSet: boolean"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    1210,
                    43
                ],
                "name": "SetGroundDecalCreationFrame",
                "rawdesc": "\nUse separate min and max for \"gradient\" style decals such as tank tracks",
                "start": [
                    1210,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetGroundDecalCreationFrame",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nSets varios secondary parameters of a decal\n\n@*param* `dotElimExp` — (Default: curValue) pow(max(dot(decalProjVector, SurfaceNormal), 0.0), dotElimExp), used to reduce decal artifacts on surfaces non-collinear with the projection vector\n\n@*param* `refHeight` — (Default: curValue)\n\n@*param* `minHeight` — (Default: curValue)\n\n@*param* `maxHeight` — (Default: curValue)\n\n@*param* `forceHeightMode` — (Default: curValue) in case forceHeightMode==1.0 ==> force relative height: midPoint.y = refHeight + clamp(midPoint.y - refHeight, minHeight); forceHeightMode==2.0 ==> force absolute height: midPoint.y = midPoint.y, clamp(midPoint.y, minHeight, maxHeight); other forceHeightMode values do not enforce the height of the center position",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1201,
                                42
                            ],
                            "name": "decalID",
                            "start": [
                                1201,
                                35
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "desc": "(Default: curValue) pow(max(dot(decalProjVector, SurfaceNormal), 0.0), dotElimExp), used to reduce decal artifacts on surfaces non-collinear with the projection vector",
                            "finish": [
                                1201,
                                54
                            ],
                            "name": "dotElimExp",
                            "rawdesc": "(Default: curValue) pow(max(dot(decalProjVector, SurfaceNormal), 0.0), dotElimExp), used to reduce decal artifacts on surfaces non-collinear with the projection vector",
                            "start": [
                                1201,
                                44
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "desc": "(Default: curValue)",
                            "finish": [
                                1201,
                                65
                            ],
                            "name": "refHeight",
                            "rawdesc": "(Default: curValue)",
                            "start": [
                                1201,
                                56
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "desc": "(Default: curValue)",
                            "finish": [
                                1201,
                                76
                            ],
                            "name": "minHeight",
                            "rawdesc": "(Default: curValue)",
                            "start": [
                                1201,
                                67
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "desc": "(Default: curValue)",
                            "finish": [
                                1201,
                                87
                            ],
                            "name": "maxHeight",
                            "rawdesc": "(Default: curValue)",
                            "start": [
                                1201,
                                78
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "desc": "(Default: curValue) in case forceHeightMode==1.0 ==> force relative height: midPoint.y = refHeight + clamp(midPoint.y - refHeight, minHeight); forceHeightMode==2.0 ==> force absolute height: midPoint.y = midPoint.y, clamp(midPoint.y, minHeight, maxHeight); other forceHeightMode values do not enforce the height of the center position",
                            "finish": [
                                1201,
                                104
                            ],
                            "name": "forceHeightMode",
                            "rawdesc": "(Default: curValue) in case forceHeightMode==1.0 ==> force relative height: midPoint.y = refHeight + clamp(midPoint.y - refHeight, minHeight); forceHeightMode==2.0 ==> force absolute height: midPoint.y = midPoint.y, clamp(midPoint.y, minHeight, maxHeight); other forceHeightMode values do not enforce the height of the center position",
                            "start": [
                                1201,
                                89
                            ],
                            "type": "local",
                            "view": "number?"
                        }
                    ],
                    "desc": "\nSets varios secondary parameters of a decal\n\n@*param* `dotElimExp` — (Default: curValue) pow(max(dot(decalProjVector, SurfaceNormal), 0.0), dotElimExp), used to reduce decal artifacts on surfaces non-collinear with the projection vector\n\n@*param* `refHeight` — (Default: curValue)\n\n@*param* `minHeight` — (Default: curValue)\n\n@*param* `maxHeight` — (Default: curValue)\n\n@*param* `forceHeightMode` — (Default: curValue) in case forceHeightMode==1.0 ==> force relative height: midPoint.y = refHeight + clamp(midPoint.y - refHeight, minHeight); forceHeightMode==2.0 ==> force absolute height: midPoint.y = midPoint.y, clamp(midPoint.y, minHeight, maxHeight); other forceHeightMode values do not enforce the height of the center position",
                    "finish": [
                        1201,
                        109
                    ],
                    "rawdesc": "\nSets varios secondary parameters of a decal",
                    "returns": [
                        {
                            "name": "decalSet",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        1201,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetGroundDecalMisc(decalID: integer, dotElimExp?: number, refHeight?: number, minHeight?: number, maxHeight?: number, forceHeightMode?: number)\n  -> decalSet: boolean"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    1201,
                    34
                ],
                "name": "SetGroundDecalMisc",
                "rawdesc": "\nSets varios secondary parameters of a decal",
                "start": [
                    1201,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetGroundDecalMisc",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nSets projection cube normal to orient in 3D space.\nIn case the normal (0,0,0) then normal is picked from the terrain\n\n@*param* `normalX` — (Default: 0)\n\n@*param* `normalY` — (Default: 0)\n\n@*param* `normalZ` — (Default: 0)",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1177,
                                44
                            ],
                            "name": "decalID",
                            "start": [
                                1177,
                                37
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "desc": "(Default: 0)",
                            "finish": [
                                1177,
                                53
                            ],
                            "name": "normalX",
                            "rawdesc": "(Default: 0)",
                            "start": [
                                1177,
                                46
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "desc": "(Default: 0)",
                            "finish": [
                                1177,
                                62
                            ],
                            "name": "normalY",
                            "rawdesc": "(Default: 0)",
                            "start": [
                                1177,
                                55
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "desc": "(Default: 0)",
                            "finish": [
                                1177,
                                71
                            ],
                            "name": "normalZ",
                            "rawdesc": "(Default: 0)",
                            "start": [
                                1177,
                                64
                            ],
                            "type": "local",
                            "view": "number?"
                        }
                    ],
                    "desc": "\nSets projection cube normal to orient in 3D space.\nIn case the normal (0,0,0) then normal is picked from the terrain\n\n@*param* `normalX` — (Default: 0)\n\n@*param* `normalY` — (Default: 0)\n\n@*param* `normalZ` — (Default: 0)",
                    "finish": [
                        1177,
                        76
                    ],
                    "rawdesc": "\nSets projection cube normal to orient in 3D space.\nIn case the normal (0,0,0) then normal is picked from the terrain",
                    "returns": [
                        {
                            "name": "decalSet",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        1177,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetGroundDecalNormal(decalID: integer, normalX?: number, normalY?: number, normalZ?: number)\n  -> decalSet: boolean"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    1177,
                    36
                ],
                "name": "SetGroundDecalNormal",
                "rawdesc": "\nSets projection cube normal to orient in 3D space.\nIn case the normal (0,0,0) then normal is picked from the terrain",
                "start": [
                    1177,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetGroundDecalNormal",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `midPosX` — (Default: currMidPosX)\n\n@*param* `midPosZ` — (Default: currMidPosZ)\n\n@*param* `sizeX` — (Default: currSizeX)\n\n@*param* `sizeZ` — (Default: currSizeZ)\n\n@*param* `projCubeHeight` — (Default: calculateProjCubeHeight)",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1126,
                                48
                            ],
                            "name": "decalID",
                            "start": [
                                1126,
                                41
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "desc": "(Default: currMidPosX)",
                            "finish": [
                                1126,
                                57
                            ],
                            "name": "midPosX",
                            "rawdesc": "(Default: currMidPosX)",
                            "start": [
                                1126,
                                50
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "desc": "(Default: currMidPosZ)",
                            "finish": [
                                1126,
                                66
                            ],
                            "name": "midPosZ",
                            "rawdesc": "(Default: currMidPosZ)",
                            "start": [
                                1126,
                                59
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "desc": "(Default: currSizeX)",
                            "finish": [
                                1126,
                                73
                            ],
                            "name": "sizeX",
                            "rawdesc": "(Default: currSizeX)",
                            "start": [
                                1126,
                                68
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "desc": "(Default: currSizeZ)",
                            "finish": [
                                1126,
                                80
                            ],
                            "name": "sizeZ",
                            "rawdesc": "(Default: currSizeZ)",
                            "start": [
                                1126,
                                75
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "desc": "(Default: calculateProjCubeHeight)",
                            "finish": [
                                1126,
                                96
                            ],
                            "name": "projCubeHeight",
                            "rawdesc": "(Default: calculateProjCubeHeight)",
                            "start": [
                                1126,
                                82
                            ],
                            "type": "local",
                            "view": "number?"
                        }
                    ],
                    "desc": "@*param* `midPosX` — (Default: currMidPosX)\n\n@*param* `midPosZ` — (Default: currMidPosZ)\n\n@*param* `sizeX` — (Default: currSizeX)\n\n@*param* `sizeZ` — (Default: currSizeZ)\n\n@*param* `projCubeHeight` — (Default: calculateProjCubeHeight)",
                    "finish": [
                        1126,
                        101
                    ],
                    "returns": [
                        {
                            "name": "decalSet",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        1126,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetGroundDecalPosAndDims(decalID: integer, midPosX?: number, midPosZ?: number, sizeX?: number, sizeZ?: number, projCubeHeight?: number)\n  -> decalSet: boolean"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    1126,
                    40
                ],
                "name": "SetGroundDecalPosAndDims",
                "start": [
                    1126,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetGroundDecalPosAndDims",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nUse for non-rectangular decals\n\n@*param* `posTL` — (Default: currPosTL)\n\n@*param* `posTR` — (Default: currPosTR)\n\n@*param* `posBR` — (Default: currPosBR)\n\n@*param* `posBL` — (Default: currPosBL)\n\n@*param* `projCubeHeight` — (Default: calculateProjCubeHeight)",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1143,
                                54
                            ],
                            "name": "decalID",
                            "start": [
                                1143,
                                47
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "desc": "(Default: currPosTL)",
                            "finish": [
                                1143,
                                61
                            ],
                            "name": "posTL",
                            "rawdesc": "(Default: currPosTL)",
                            "start": [
                                1143,
                                56
                            ],
                            "type": "local",
                            "view": "xz?"
                        },
                        {
                            "desc": "(Default: currPosTR)",
                            "finish": [
                                1143,
                                68
                            ],
                            "name": "posTR",
                            "rawdesc": "(Default: currPosTR)",
                            "start": [
                                1143,
                                63
                            ],
                            "type": "local",
                            "view": "xz?"
                        },
                        {
                            "desc": "(Default: currPosBR)",
                            "finish": [
                                1143,
                                75
                            ],
                            "name": "posBR",
                            "rawdesc": "(Default: currPosBR)",
                            "start": [
                                1143,
                                70
                            ],
                            "type": "local",
                            "view": "xz?"
                        },
                        {
                            "desc": "(Default: currPosBL)",
                            "finish": [
                                1143,
                                82
                            ],
                            "name": "posBL",
                            "rawdesc": "(Default: currPosBL)",
                            "start": [
                                1143,
                                77
                            ],
                            "type": "local",
                            "view": "xz?"
                        },
                        {
                            "desc": "(Default: calculateProjCubeHeight)",
                            "finish": [
                                1143,
                                98
                            ],
                            "name": "projCubeHeight",
                            "rawdesc": "(Default: calculateProjCubeHeight)",
                            "start": [
                                1143,
                                84
                            ],
                            "type": "local",
                            "view": "number?"
                        }
                    ],
                    "desc": "\nUse for non-rectangular decals\n\n@*param* `posTL` — (Default: currPosTL)\n\n@*param* `posTR` — (Default: currPosTR)\n\n@*param* `posBR` — (Default: currPosBR)\n\n@*param* `posBL` — (Default: currPosBL)\n\n@*param* `projCubeHeight` — (Default: calculateProjCubeHeight)",
                    "finish": [
                        1143,
                        103
                    ],
                    "rawdesc": "\nUse for non-rectangular decals",
                    "returns": [
                        {
                            "name": "decalSet",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        1143,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetGroundDecalQuadPosAndHeight(decalID: integer, posTL?: xz, posTR?: xz, posBR?: xz, posBL?: xz, projCubeHeight?: number)\n  -> decalSet: boolean"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    1143,
                    46
                ],
                "name": "SetGroundDecalQuadPosAndHeight",
                "rawdesc": "\nUse for non-rectangular decals",
                "start": [
                    1143,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetGroundDecalQuadPosAndHeight",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `rot` — (Default: random) in radians",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1148,
                                46
                            ],
                            "name": "decalID",
                            "start": [
                                1148,
                                39
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "desc": "(Default: random) in radians",
                            "finish": [
                                1148,
                                51
                            ],
                            "name": "rot",
                            "rawdesc": "(Default: random) in radians",
                            "start": [
                                1148,
                                48
                            ],
                            "type": "local",
                            "view": "number?"
                        }
                    ],
                    "desc": "@*param* `rot` — (Default: random) in radians",
                    "finish": [
                        1148,
                        56
                    ],
                    "returns": [
                        {
                            "name": "decalSet",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        1148,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetGroundDecalRotation(decalID: integer, rot?: number)\n  -> decalSet: boolean"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    1148,
                    38
                ],
                "name": "SetGroundDecalRotation",
                "start": [
                    1148,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetGroundDecalRotation",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `textureName` — The texture has to be on the atlas which seems to mean it's defined as an explosion, unit tracks, or building plate decal on some unit already (no arbitrary textures)\n\n@*param* `isMainTex` — (Default: true) If false, it sets the normals/glow map",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1154,
                                45
                            ],
                            "name": "decalID",
                            "start": [
                                1154,
                                38
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "desc": "The texture has to be on the atlas which seems to mean it's defined as an explosion, unit tracks, or building plate decal on some unit already (no arbitrary textures)",
                            "finish": [
                                1154,
                                58
                            ],
                            "name": "textureName",
                            "rawdesc": "The texture has to be on the atlas which seems to mean it's defined as an explosion, unit tracks, or building plate decal on some unit already (no arbitrary textures)",
                            "start": [
                                1154,
                                47
                            ],
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "desc": "(Default: true) If false, it sets the normals/glow map",
                            "finish": [
                                1154,
                                69
                            ],
                            "name": "isMainTex",
                            "rawdesc": "(Default: true) If false, it sets the normals/glow map",
                            "start": [
                                1154,
                                60
                            ],
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "@*param* `textureName` — The texture has to be on the atlas which seems to mean it's defined as an explosion, unit tracks, or building plate decal on some unit already (no arbitrary textures)\n\n@*param* `isMainTex` — (Default: true) If false, it sets the normals/glow map",
                    "finish": [
                        1154,
                        74
                    ],
                    "returns": [
                        {
                            "name": "decalSet",
                            "type": "function.return",
                            "view": "boolean|nil"
                        }
                    ],
                    "start": [
                        1154,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetGroundDecalTexture(decalID: integer, textureName: string, isMainTex?: boolean)\n  -> decalSet: boolean|nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    1154,
                    37
                ],
                "name": "SetGroundDecalTexture",
                "start": [
                    1154,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetGroundDecalTexture",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `texWrapDistance` — (Default: currTexWrapDistance) if non-zero sets the mode to repeat the texture along the left-right direction of the decal every texWrapFactor elmos\n\n@*param* `texTraveledDistance` — (Default: currTexTraveledDistance) shifts the texture repetition defined by texWrapFactor so the texture of a next line in the continuous multiline can start where the previous finished. For that it should collect all elmo lengths of the previously set multiline segments.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1160,
                                51
                            ],
                            "name": "decalID",
                            "start": [
                                1160,
                                44
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "desc": "(Default: currTexWrapDistance) if non-zero sets the mode to repeat the texture along the left-right direction of the decal every texWrapFactor elmos",
                            "finish": [
                                1160,
                                68
                            ],
                            "name": "texWrapDistance",
                            "rawdesc": "(Default: currTexWrapDistance) if non-zero sets the mode to repeat the texture along the left-right direction of the decal every texWrapFactor elmos",
                            "start": [
                                1160,
                                53
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "desc": "(Default: currTexTraveledDistance) shifts the texture repetition defined by texWrapFactor so the texture of a next line in the continuous multiline can start where the previous finished. For that it should collect all elmo lengths of the previously set multiline segments.",
                            "finish": [
                                1160,
                                89
                            ],
                            "name": "texTraveledDistance",
                            "rawdesc": "(Default: currTexTraveledDistance) shifts the texture repetition defined by texWrapFactor so the texture of a next line in the continuous multiline can start where the previous finished. For that it should collect all elmo lengths of the previously set multiline segments.",
                            "start": [
                                1160,
                                70
                            ],
                            "type": "local",
                            "view": "number?"
                        }
                    ],
                    "desc": "@*param* `texWrapDistance` — (Default: currTexWrapDistance) if non-zero sets the mode to repeat the texture along the left-right direction of the decal every texWrapFactor elmos\n\n@*param* `texTraveledDistance` — (Default: currTexTraveledDistance) shifts the texture repetition defined by texWrapFactor so the texture of a next line in the continuous multiline can start where the previous finished. For that it should collect all elmo lengths of the previously set multiline segments.",
                    "finish": [
                        1160,
                        94
                    ],
                    "returns": [
                        {
                            "name": "decalSet",
                            "type": "function.return",
                            "view": "boolean|nil"
                        }
                    ],
                    "start": [
                        1160,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetGroundDecalTextureParams(decalID: integer, texWrapDistance?: number, texTraveledDistance?: number)\n  -> decalSet: boolean|nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    1160,
                    43
                ],
                "name": "SetGroundDecalTextureParams",
                "start": [
                    1160,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "@*return* `texWrapDistance` — if non-zero sets the mode to repeat the texture along the left-right direction of the decal every texWrapFactor elmos\n\n@*return* `texTraveledDistance` — shifts the texture repetition defined by texWrapFactor so the texture of a next line in the continuous multiline can start where the previous finished. For that it should collect all elmo lengths of the previously set multiline segments.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                980,
                                51
                            ],
                            "name": "decalID",
                            "start": [
                                980,
                                44
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "@*return* `texWrapDistance` — if non-zero sets the mode to repeat the texture along the left-right direction of the decal every texWrapFactor elmos\n\n@*return* `texTraveledDistance` — shifts the texture repetition defined by texWrapFactor so the texture of a next line in the continuous multiline can start where the previous finished. For that it should collect all elmo lengths of the previously set multiline segments.",
                    "finish": [
                        980,
                        56
                    ],
                    "returns": [
                        {
                            "desc": "if non-zero sets the mode to repeat the texture along the left-right direction of the decal every texWrapFactor elmos",
                            "name": "texWrapDistance",
                            "rawdesc": "if non-zero sets the mode to repeat the texture along the left-right direction of the decal every texWrapFactor elmos",
                            "type": "function.return",
                            "view": "number?"
                        },
                        {
                            "desc": "shifts the texture repetition defined by texWrapFactor so the texture of a next line in the continuous multiline can start where the previous finished. For that it should collect all elmo lengths of the previously set multiline segments.",
                            "name": "texTraveledDistance",
                            "rawdesc": "shifts the texture repetition defined by texWrapFactor so the texture of a next line in the continuous multiline can start where the previous finished. For that it should collect all elmo lengths of the previously set multiline segments.",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        980,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetGroundDecalTextureParams(decalID: integer)\n  -> texWrapDistance: number?\n  2. texTraveledDistance: number"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    980,
                    43
                ],
                "name": "SetGroundDecalTextureParams",
                "start": [
                    980,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetGroundDecalTextureParams",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nSets the tint of the ground decal. Color = 2 * textureColor * tintColor\nRespectively a color of (0.5, 0.5, 0.5, 0.5) is effectively no tint\n\n@*param* `tintColR` — (Default: curTintColR)\n\n@*param* `tintColG` — (Default: curTintColG)\n\n@*param* `tintColB` — (Default: curTintColB)\n\n@*param* `tintColA` — (Default: curTintColA)",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1189,
                                42
                            ],
                            "name": "decalID",
                            "start": [
                                1189,
                                35
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "desc": "(Default: curTintColR)",
                            "finish": [
                                1189,
                                52
                            ],
                            "name": "tintColR",
                            "rawdesc": "(Default: curTintColR)",
                            "start": [
                                1189,
                                44
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "desc": "(Default: curTintColG)",
                            "finish": [
                                1189,
                                62
                            ],
                            "name": "tintColG",
                            "rawdesc": "(Default: curTintColG)",
                            "start": [
                                1189,
                                54
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "desc": "(Default: curTintColB)",
                            "finish": [
                                1189,
                                72
                            ],
                            "name": "tintColB",
                            "rawdesc": "(Default: curTintColB)",
                            "start": [
                                1189,
                                64
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "desc": "(Default: curTintColA)",
                            "finish": [
                                1189,
                                82
                            ],
                            "name": "tintColA",
                            "rawdesc": "(Default: curTintColA)",
                            "start": [
                                1189,
                                74
                            ],
                            "type": "local",
                            "view": "number?"
                        }
                    ],
                    "desc": "\nSets the tint of the ground decal. Color = 2 * textureColor * tintColor\nRespectively a color of (0.5, 0.5, 0.5, 0.5) is effectively no tint\n\n@*param* `tintColR` — (Default: curTintColR)\n\n@*param* `tintColG` — (Default: curTintColG)\n\n@*param* `tintColB` — (Default: curTintColB)\n\n@*param* `tintColA` — (Default: curTintColA)",
                    "finish": [
                        1189,
                        87
                    ],
                    "rawdesc": "\nSets the tint of the ground decal. Color = 2 * textureColor * tintColor\nRespectively a color of (0.5, 0.5, 0.5, 0.5) is effectively no tint",
                    "returns": [
                        {
                            "name": "decalSet",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        1189,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetGroundDecalTint(decalID: integer, tintColR?: number, tintColG?: number, tintColB?: number, tintColA?: number)\n  -> decalSet: boolean"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    1189,
                    34
                ],
                "name": "SetGroundDecalTint",
                "rawdesc": "\nSets the tint of the ground decal. Color = 2 * textureColor * tintColor\nRespectively a color of (0.5, 0.5, 0.5, 0.5) is effectively no tint",
                "start": [
                    1189,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetGroundDecalTint",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nCan only be called in `Spring.SetHeightMapFunc`. The terraform argument is\n\n@*param* `terraform` — (Default: 1) Scaling factor.\n\n@*return* `absHeightDiff` — If `0`, nothing will be changed (the terraform starts), if `1` the terraform will be finished.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1333,
                                30
                            ],
                            "name": "x",
                            "start": [
                                1333,
                                29
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1333,
                                33
                            ],
                            "name": "z",
                            "start": [
                                1333,
                                32
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1333,
                                41
                            ],
                            "name": "height",
                            "start": [
                                1333,
                                35
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "desc": "(Default: 1) Scaling factor.",
                            "finish": [
                                1333,
                                52
                            ],
                            "name": "terraform",
                            "rawdesc": "(Default: 1) Scaling factor.",
                            "start": [
                                1333,
                                43
                            ],
                            "type": "local",
                            "view": "number?"
                        }
                    ],
                    "desc": "\nCan only be called in `Spring.SetHeightMapFunc`. The terraform argument is\n\n@*param* `terraform` — (Default: 1) Scaling factor.\n\n@*return* `absHeightDiff` — If `0`, nothing will be changed (the terraform starts), if `1` the terraform will be finished.",
                    "finish": [
                        1333,
                        57
                    ],
                    "rawdesc": "\nCan only be called in `Spring.SetHeightMapFunc`. The terraform argument is",
                    "returns": [
                        {
                            "desc": "If `0`, nothing will be changed (the terraform starts), if `1` the terraform will be finished.",
                            "name": "absHeightDiff",
                            "rawdesc": "If `0`, nothing will be changed (the terraform starts), if `1` the terraform will be finished.",
                            "type": "function.return",
                            "view": "integer?"
                        }
                    ],
                    "start": [
                        1333,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetHeightMap(x: number, z: number, height: number, terraform?: number)\n  -> absHeightDiff: integer?"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    1333,
                    28
                ],
                "name": "SetHeightMap",
                "rawdesc": "\nCan only be called in `Spring.SetHeightMapFunc`. The terraform argument is",
                "start": [
                    1333,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetHeightMap",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nExample code:\n\n```lua\nfunction Spring.SetHeightMapFunc(function()\nfor z=0,Game.mapSizeZ, Game.squareSize do\nfor x=0,Game.mapSizeX, Game.squareSize do\nSpring.SetHeightMap( x, z, 200 + 20 * math.cos((x + z) / 90) )\nend\nend\nend)\n```",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1352,
                                44
                            ],
                            "name": "luaFunction",
                            "start": [
                                1352,
                                33
                            ],
                            "type": "local",
                            "view": "function"
                        },
                        {
                            "finish": [
                                1352,
                                49
                            ],
                            "name": "arg",
                            "start": [
                                1352,
                                46
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1352,
                                54
                            ],
                            "start": [
                                1352,
                                51
                            ],
                            "type": "...",
                            "view": "number"
                        }
                    ],
                    "desc": "\nExample code:\n\n```lua\nfunction Spring.SetHeightMapFunc(function()\nfor z=0,Game.mapSizeZ, Game.squareSize do\nfor x=0,Game.mapSizeX, Game.squareSize do\nSpring.SetHeightMap( x, z, 200 + 20 * math.cos((x + z) / 90) )\nend\nend\nend)\n```",
                    "finish": [
                        1352,
                        59
                    ],
                    "rawdesc": "\nExample code:\n\n```lua\nfunction Spring.SetHeightMapFunc(function()\nfor z=0,Game.mapSizeZ, Game.squareSize do\nfor x=0,Game.mapSizeX, Game.squareSize do\nSpring.SetHeightMap( x, z, 200 + 20 * math.cos((x + z) / 90) )\nend\nend\nend)\n```",
                    "returns": [
                        {
                            "name": "absTotalHeightMapAmountChanged",
                            "type": "function.return",
                            "view": "integer?"
                        }
                    ],
                    "start": [
                        1352,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetHeightMapFunc(luaFunction: function, arg: number, ...number)\n  -> absTotalHeightMapAmountChanged: integer?"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    1352,
                    32
                ],
                "name": "SetHeightMapFunc",
                "rawdesc": "\nExample code:\n\n```lua\nfunction Spring.SetHeightMapFunc(function()\nfor z=0,Game.mapSizeZ, Game.squareSize do\nfor x=0,Game.mapSizeX, Game.squareSize do\nSpring.SetHeightMap( x, z, 200 + 20 * math.cos((x + z) / 90) )\nend\nend\nend)\n```",
                "start": [
                    1352,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetHeightMapFunc",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                867,
                                40
                            ],
                            "name": "x",
                            "start": [
                                867,
                                39
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                867,
                                43
                            ],
                            "name": "y",
                            "start": [
                                867,
                                42
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                867,
                                46
                            ],
                            "name": "z",
                            "start": [
                                867,
                                45
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "finish": [
                        867,
                        51
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        867,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetLastMessagePosition(x: number, y: number, z: number)\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    867,
                    38
                ],
                "name": "SetLastMessagePosition",
                "start": [
                    867,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetLastMessagePosition",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                980,
                                52
                            ],
                            "name": "sectionName",
                            "start": [
                                980,
                                41
                            ],
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": [
                                980,
                                62
                            ],
                            "name": "logLevel",
                            "start": [
                                980,
                                54
                            ],
                            "type": "local",
                            "view": "(string|number)?"
                        }
                    ],
                    "finish": [
                        980,
                        67
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        980,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetLogSectionFilterLevel(sectionName: string, logLevel?: string|number)\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    980,
                    40
                ],
                "name": "SetLogSectionFilterLevel",
                "start": [
                    980,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetLogSectionFilterLevel",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "desc": "Color triple (RGB)\n",
                            "finish": [
                                696,
                                39
                            ],
                            "name": "always",
                            "rawdesc": "Color triple (RGB)\n",
                            "start": [
                                696,
                                33
                            ],
                            "type": "local",
                            "view": "rgb"
                        },
                        {
                            "desc": "Color triple (RGB)\n",
                            "finish": [
                                696,
                                44
                            ],
                            "name": "LOS",
                            "rawdesc": "Color triple (RGB)\n",
                            "start": [
                                696,
                                41
                            ],
                            "type": "local",
                            "view": "rgb"
                        },
                        {
                            "desc": "Color triple (RGB)\n",
                            "finish": [
                                696,
                                51
                            ],
                            "name": "radar",
                            "rawdesc": "Color triple (RGB)\n",
                            "start": [
                                696,
                                46
                            ],
                            "type": "local",
                            "view": "rgb"
                        },
                        {
                            "desc": "Color triple (RGB)\n",
                            "finish": [
                                696,
                                56
                            ],
                            "name": "jam",
                            "rawdesc": "Color triple (RGB)\n",
                            "start": [
                                696,
                                53
                            ],
                            "type": "local",
                            "view": "rgb"
                        },
                        {
                            "desc": "Color triple (RGB)\n",
                            "finish": [
                                696,
                                64
                            ],
                            "name": "radar2",
                            "rawdesc": "Color triple (RGB)\n",
                            "start": [
                                696,
                                58
                            ],
                            "type": "local",
                            "view": "rgb"
                        }
                    ],
                    "finish": [
                        696,
                        69
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        696,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetLosViewColors(always: rgb, LOS: rgb, radar: rgb, jam: rgb, radar2: rgb)\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    696,
                    32
                ],
                "name": "SetLosViewColors",
                "start": [
                    696,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetLosViewColors",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Set a map-illuminating light to start/stop tracking the position of a moving object (unit or projectile)",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                412,
                                52
                            ],
                            "name": "lightHandle",
                            "start": [
                                412,
                                41
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                412,
                                72
                            ],
                            "name": "unitOrProjectileID",
                            "start": [
                                412,
                                54
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                412,
                                88
                            ],
                            "name": "enableTracking",
                            "start": [
                                412,
                                74
                            ],
                            "type": "local",
                            "view": "boolean"
                        },
                        {
                            "finish": [
                                412,
                                106
                            ],
                            "name": "unitOrProjectile",
                            "start": [
                                412,
                                90
                            ],
                            "type": "local",
                            "view": "boolean"
                        }
                    ],
                    "desc": "Set a map-illuminating light to start/stop tracking the position of a moving object (unit or projectile)",
                    "finish": [
                        412,
                        111
                    ],
                    "rawdesc": "Set a map-illuminating light to start/stop tracking the position of a moving object (unit or projectile)",
                    "returns": [
                        {
                            "name": "success",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        412,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetMapLightTrackingState(lightHandle: number, unitOrProjectileID: integer, enableTracking: boolean, unitOrProjectile: boolean)\n  -> success: boolean"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    412,
                    40
                ],
                "name": "SetMapLightTrackingState",
                "rawdesc": "Set a map-illuminating light to start/stop tracking the position of a moving object (unit or projectile)",
                "start": [
                    412,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetMapLightTrackingState",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Allows to change map rendering params at runtime.",
                "extends": {
                    "args": [
                        {
                            "desc": "Map rendering params\n",
                            "finish": [
                                957,
                                44
                            ],
                            "name": "params",
                            "rawdesc": "Map rendering params\n",
                            "start": [
                                957,
                                38
                            ],
                            "type": "local",
                            "view": "MapRenderingParams"
                        }
                    ],
                    "desc": "Allows to change map rendering params at runtime.",
                    "finish": [
                        957,
                        49
                    ],
                    "rawdesc": "Allows to change map rendering params at runtime.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        957,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetMapRenderingParams(params: MapRenderingParams)\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    957,
                    37
                ],
                "name": "SetMapRenderingParams",
                "rawdesc": "Allows to change map rendering params at runtime.",
                "start": [
                    957,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetMapRenderingParams",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nThe ID's must refer to valid programs returned by `gl.CreateShader`.\nPassing in a value of 0 will cause the respective shader to revert back to its engine default.\nCustom map shaders that declare a uniform ivec2 named \"texSquare\" can sample from the default diffuse texture(s), which are always bound to TU 0.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                435,
                                45
                            ],
                            "name": "standardShaderID",
                            "start": [
                                435,
                                29
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                435,
                                63
                            ],
                            "name": "deferredShaderID",
                            "start": [
                                435,
                                47
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "\nThe ID's must refer to valid programs returned by `gl.CreateShader`.\nPassing in a value of 0 will cause the respective shader to revert back to its engine default.\nCustom map shaders that declare a uniform ivec2 named \"texSquare\" can sample from the default diffuse texture(s), which are always bound to TU 0.",
                    "finish": [
                        435,
                        68
                    ],
                    "rawdesc": "\nThe ID's must refer to valid programs returned by `gl.CreateShader`.\nPassing in a value of 0 will cause the respective shader to revert back to its engine default.\nCustom map shaders that declare a uniform ivec2 named \"texSquare\" can sample from the default diffuse texture(s), which are always bound to TU 0.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        435,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetMapShader(standardShaderID: integer, deferredShaderID: integer)\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    435,
                    28
                ],
                "name": "SetMapShader",
                "rawdesc": "\nThe ID's must refer to valid programs returned by `gl.CreateShader`.\nPassing in a value of 0 will cause the respective shader to revert back to its engine default.\nCustom map shaders that declare a uniform ivec2 named \"texSquare\" can sample from the default diffuse texture(s), which are always bound to TU 0.",
                "start": [
                    435,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetMapShader",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                447,
                                44
                            ],
                            "name": "texType",
                            "start": [
                                447,
                                37
                            ],
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": [
                                447,
                                53
                            ],
                            "name": "texName",
                            "start": [
                                447,
                                46
                            ],
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "finish": [
                        447,
                        58
                    ],
                    "returns": [
                        {
                            "name": "success",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        447,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetMapShadingTexture(texType: string, texName: string)\n  -> success: boolean"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    447,
                    36
                ],
                "name": "SetMapShadingTexture",
                "start": [
                    447,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetMapShadingTexture",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1476,
                                41
                            ],
                            "name": "x",
                            "start": [
                                1476,
                                40
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1476,
                                44
                            ],
                            "name": "z",
                            "start": [
                                1476,
                                43
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1476,
                                53
                            ],
                            "name": "newType",
                            "start": [
                                1476,
                                46
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "finish": [
                        1476,
                        58
                    ],
                    "returns": [
                        {
                            "name": "oldType",
                            "type": "function.return",
                            "view": "integer?"
                        }
                    ],
                    "start": [
                        1476,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetMapSquareTerrainType(x: number, z: number, newType: number)\n  -> oldType: integer?"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    1476,
                    39
                ],
                "name": "SetMapSquareTerrainType",
                "start": [
                    1476,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetMapSquareTerrainType",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                441,
                                43
                            ],
                            "name": "texSqrX",
                            "start": [
                                441,
                                36
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                441,
                                52
                            ],
                            "name": "texSqrY",
                            "start": [
                                441,
                                45
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                441,
                                64
                            ],
                            "name": "luaTexName",
                            "start": [
                                441,
                                54
                            ],
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "finish": [
                        441,
                        69
                    ],
                    "returns": [
                        {
                            "name": "success",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        441,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetMapSquareTexture(texSqrX: number, texSqrY: number, luaTexName: string)\n  -> success: boolean"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    441,
                    35
                ],
                "name": "SetMapSquareTexture",
                "start": [
                    441,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetMapSquareTexture",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `x` — in worldspace/16.\n\n@*param* `z` — in worldspace/16.\n\n@*param* `metalAmount` — must be between 0 and 255*maxMetal (with maxMetal from the .smd or mapinfo.lua).",
                "extends": {
                    "args": [
                        {
                            "desc": "in worldspace/16.",
                            "finish": [
                                17,
                                32
                            ],
                            "name": "x",
                            "rawdesc": "in worldspace/16.",
                            "start": [
                                17,
                                31
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "desc": "in worldspace/16.",
                            "finish": [
                                17,
                                35
                            ],
                            "name": "z",
                            "rawdesc": "in worldspace/16.",
                            "start": [
                                17,
                                34
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "desc": "must be between 0 and 255*maxMetal (with maxMetal from the .smd or mapinfo.lua).",
                            "finish": [
                                17,
                                48
                            ],
                            "name": "metalAmount",
                            "rawdesc": "must be between 0 and 255*maxMetal (with maxMetal from the .smd or mapinfo.lua).",
                            "start": [
                                17,
                                37
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "@*param* `x` — in worldspace/16.\n\n@*param* `z` — in worldspace/16.\n\n@*param* `metalAmount` — must be between 0 and 255*maxMetal (with maxMetal from the .smd or mapinfo.lua).",
                    "finish": [
                        17,
                        53
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        17,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetMetalAmount(x: integer, z: integer, metalAmount: number)\n  -> nil"
                },
                "file": "/generated/LuaMetalMap.lua",
                "finish": [
                    17,
                    30
                ],
                "name": "SetMetalAmount",
                "start": [
                    17,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetMetalAmount",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Set a model-illuminating light to start/stop tracking the position of a moving object (unit or projectile)",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                421,
                                54
                            ],
                            "name": "lightHandle",
                            "start": [
                                421,
                                43
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                421,
                                74
                            ],
                            "name": "unitOrProjectileID",
                            "start": [
                                421,
                                56
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                421,
                                90
                            ],
                            "name": "enableTracking",
                            "start": [
                                421,
                                76
                            ],
                            "type": "local",
                            "view": "boolean"
                        },
                        {
                            "finish": [
                                421,
                                108
                            ],
                            "name": "unitOrProjectile",
                            "start": [
                                421,
                                92
                            ],
                            "type": "local",
                            "view": "boolean"
                        }
                    ],
                    "desc": "Set a model-illuminating light to start/stop tracking the position of a moving object (unit or projectile)",
                    "finish": [
                        421,
                        113
                    ],
                    "rawdesc": "Set a model-illuminating light to start/stop tracking the position of a moving object (unit or projectile)",
                    "returns": [
                        {
                            "name": "success",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        421,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetModelLightTrackingState(lightHandle: number, unitOrProjectileID: integer, enableTracking: boolean, unitOrProjectile: boolean)\n  -> success: boolean"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    421,
                    42
                ],
                "name": "SetModelLightTrackingState",
                "rawdesc": "Set a model-illuminating light to start/stop tracking the position of a moving object (unit or projectile)",
                "start": [
                    421,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetModelLightTrackingState",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `cursorScale` — (Default: 1.0)",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                684,
                                41
                            ],
                            "name": "cursorName",
                            "start": [
                                684,
                                31
                            ],
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "desc": "(Default: 1.0)",
                            "finish": [
                                684,
                                54
                            ],
                            "name": "cursorScale",
                            "rawdesc": "(Default: 1.0)",
                            "start": [
                                684,
                                43
                            ],
                            "type": "local",
                            "view": "number?"
                        }
                    ],
                    "desc": "@*param* `cursorScale` — (Default: 1.0)",
                    "finish": [
                        684,
                        59
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        684,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetMouseCursor(cursorName: string, cursorScale?: number)\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    684,
                    30
                ],
                "name": "SetMouseCursor",
                "start": [
                    684,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetMouseCursor",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `rotVal` — (Default: 0) in degrees\n\n@*param* `rotVel` — (Default: 0) in degrees\n\n@*param* `rotAcc` — (Default: 0) in degrees\n\n@*param* `rotValRng` — (Default: 0) in degrees\n\n@*param* `rotVelRng` — (Default: 0) in degrees\n\n@*param* `rotAccRng` — (Default: 0) in degrees",
                "extends": {
                    "args": [
                        {
                            "desc": "(Default: 0) in degrees",
                            "finish": [
                                705,
                                46
                            ],
                            "name": "rotVal",
                            "rawdesc": "(Default: 0) in degrees",
                            "start": [
                                705,
                                40
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "desc": "(Default: 0) in degrees",
                            "finish": [
                                705,
                                54
                            ],
                            "name": "rotVel",
                            "rawdesc": "(Default: 0) in degrees",
                            "start": [
                                705,
                                48
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "desc": "(Default: 0) in degrees",
                            "finish": [
                                705,
                                62
                            ],
                            "name": "rotAcc",
                            "rawdesc": "(Default: 0) in degrees",
                            "start": [
                                705,
                                56
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "desc": "(Default: 0) in degrees",
                            "finish": [
                                705,
                                73
                            ],
                            "name": "rotValRng",
                            "rawdesc": "(Default: 0) in degrees",
                            "start": [
                                705,
                                64
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "desc": "(Default: 0) in degrees",
                            "finish": [
                                705,
                                84
                            ],
                            "name": "rotVelRng",
                            "rawdesc": "(Default: 0) in degrees",
                            "start": [
                                705,
                                75
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "desc": "(Default: 0) in degrees",
                            "finish": [
                                705,
                                95
                            ],
                            "name": "rotAccRng",
                            "rawdesc": "(Default: 0) in degrees",
                            "start": [
                                705,
                                86
                            ],
                            "type": "local",
                            "view": "number?"
                        }
                    ],
                    "desc": "@*param* `rotVal` — (Default: 0) in degrees\n\n@*param* `rotVel` — (Default: 0) in degrees\n\n@*param* `rotAcc` — (Default: 0) in degrees\n\n@*param* `rotValRng` — (Default: 0) in degrees\n\n@*param* `rotVelRng` — (Default: 0) in degrees\n\n@*param* `rotAccRng` — (Default: 0) in degrees",
                    "finish": [
                        705,
                        100
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        705,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetNanoProjectileParams(rotVal?: number, rotVel?: number, rotAcc?: number, rotValRng?: number, rotVelRng?: number, rotAccRng?: number)\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    705,
                    39
                ],
                "name": "SetNanoProjectileParams",
                "start": [
                    705,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetNanoProjectileParams",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1616,
                                34
                            ],
                            "name": "noPause",
                            "start": [
                                1616,
                                27
                            ],
                            "type": "local",
                            "view": "boolean"
                        }
                    ],
                    "finish": [
                        1616,
                        39
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        1616,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetNoPause(noPause: boolean)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    1616,
                    26
                ],
                "name": "SetNoPause",
                "start": [
                    1616,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetNoPause",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nCan only be called in `Spring.SetOriginalHeightMapFunc`",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1405,
                                38
                            ],
                            "name": "x",
                            "start": [
                                1405,
                                37
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1405,
                                41
                            ],
                            "name": "y",
                            "start": [
                                1405,
                                40
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1405,
                                49
                            ],
                            "name": "height",
                            "start": [
                                1405,
                                43
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1405,
                                57
                            ],
                            "name": "factor",
                            "start": [
                                1405,
                                51
                            ],
                            "type": "local",
                            "view": "number?"
                        }
                    ],
                    "desc": "\nCan only be called in `Spring.SetOriginalHeightMapFunc`",
                    "finish": [
                        1405,
                        62
                    ],
                    "rawdesc": "\nCan only be called in `Spring.SetOriginalHeightMapFunc`",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        1405,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetOriginalHeightMap(x: number, y: number, height: number, factor?: number)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    1405,
                    36
                ],
                "name": "SetOriginalHeightMap",
                "rawdesc": "\nCan only be called in `Spring.SetOriginalHeightMapFunc`",
                "start": [
                    1405,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetOriginalHeightMap",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nCannot recurse on itself",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1412,
                                54
                            ],
                            "name": "heightMapFunc",
                            "start": [
                                1412,
                                41
                            ],
                            "type": "local",
                            "view": "function"
                        }
                    ],
                    "desc": "\nCannot recurse on itself",
                    "finish": [
                        1412,
                        59
                    ],
                    "rawdesc": "\nCannot recurse on itself",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        1412,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetOriginalHeightMapFunc(heightMapFunc: function)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    1412,
                    40
                ],
                "name": "SetOriginalHeightMapFunc",
                "rawdesc": "\nCannot recurse on itself",
                "start": [
                    1412,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetOriginalHeightMapFunc",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1230,
                                53
                            ],
                            "name": "projectileID",
                            "start": [
                                1230,
                                41
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                1230,
                                69
                            ],
                            "name": "explosionFlags",
                            "start": [
                                1230,
                                55
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "finish": [
                                1230,
                                80
                            ],
                            "name": "spinAngle",
                            "start": [
                                1230,
                                71
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "finish": [
                                1230,
                                91
                            ],
                            "name": "spinSpeed",
                            "start": [
                                1230,
                                82
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "finish": [
                                1230,
                                104
                            ],
                            "name": "spinVectorX",
                            "start": [
                                1230,
                                93
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "finish": [
                                1230,
                                117
                            ],
                            "name": "spinVectorY",
                            "start": [
                                1230,
                                106
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "finish": [
                                1230,
                                130
                            ],
                            "name": "spinVectorZ",
                            "start": [
                                1230,
                                119
                            ],
                            "type": "local",
                            "view": "number?"
                        }
                    ],
                    "finish": [
                        1230,
                        135
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        1230,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetPieceProjectileParams(projectileID: integer, explosionFlags?: number, spinAngle?: number, spinSpeed?: number, spinVectorX?: number, spinVectorY?: number, spinVectorZ?: number)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    1230,
                    40
                ],
                "name": "SetPieceProjectileParams",
                "start": [
                    1230,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetPieceProjectileParams",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `paramValue` — numeric paramValues in quotes will be converted to number.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                178,
                                44
                            ],
                            "name": "playerID",
                            "start": [
                                178,
                                36
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                178,
                                55
                            ],
                            "name": "paramName",
                            "start": [
                                178,
                                46
                            ],
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "desc": "numeric paramValues in quotes will be converted to number.",
                            "finish": [
                                178,
                                67
                            ],
                            "name": "paramValue",
                            "rawdesc": "numeric paramValues in quotes will be converted to number.",
                            "start": [
                                178,
                                57
                            ],
                            "type": "local",
                            "view": "(string|number)?"
                        },
                        {
                            "desc": "Parameters for los access\n\n\nIf one condition is fulfilled all beneath it are too (e.g. if an unit is in\nLOS it can read params with `inradar=true` even if the param has\n`inlos=false`) All GameRulesParam are public, TeamRulesParams can just be\n`private`,`allied` and/or `public` You can read RulesParams from any Lua\nenvironments! With those losAccess policies you can limit their access.\n\nAll GameRulesParam are public, TeamRulesParams can just be `private`,`allied` and/or `public`\nYou can read RulesParams from any Lua environments! With those losAccess policies you can limit their access.\n",
                            "finish": [
                                178,
                                78
                            ],
                            "name": "losAccess",
                            "rawdesc": "Parameters for los access\n\n\nIf one condition is fulfilled all beneath it are too (e.g. if an unit is in\nLOS it can read params with `inradar=true` even if the param has\n`inlos=false`) All GameRulesParam are public, TeamRulesParams can just be\n`private`,`allied` and/or `public` You can read RulesParams from any Lua\nenvironments! With those losAccess policies you can limit their access.\n\nAll GameRulesParam are public, TeamRulesParams can just be `private`,`allied` and/or `public`\nYou can read RulesParams from any Lua environments! With those losAccess policies you can limit their access.\n",
                            "start": [
                                178,
                                69
                            ],
                            "type": "local",
                            "view": "losAccess?"
                        }
                    ],
                    "desc": "@*param* `paramValue` — numeric paramValues in quotes will be converted to number.",
                    "finish": [
                        178,
                        83
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        178,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetPlayerRulesParam(playerID: integer, paramName: string, paramValue?: string|number, losAccess?: losAccess)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    178,
                    35
                ],
                "name": "SetPlayerRulesParam",
                "start": [
                    178,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetPlayerRulesParam",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1146,
                                55
                            ],
                            "name": "projectileID",
                            "start": [
                                1146,
                                43
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                1146,
                                70
                            ],
                            "name": "alwaysVisible",
                            "start": [
                                1146,
                                57
                            ],
                            "type": "local",
                            "view": "boolean"
                        }
                    ],
                    "finish": [
                        1146,
                        75
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        1146,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetProjectileAlwaysVisible(projectileID: integer, alwaysVisible: boolean)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    1146,
                    42
                ],
                "name": "SetProjectileAlwaysVisible",
                "start": [
                    1146,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetProjectileAlwaysVisible",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1235,
                                45
                            ],
                            "name": "projectileID",
                            "start": [
                                1235,
                                33
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                1235,
                                55
                            ],
                            "name": "ceg_name",
                            "start": [
                                1235,
                                47
                            ],
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "finish": [
                        1235,
                        60
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        1235,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetProjectileCEG(projectileID: integer, ceg_name: string)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    1235,
                    32
                ],
                "name": "SetProjectileCEG",
                "start": [
                    1235,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetProjectileCEG",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1176,
                                51
                            ],
                            "name": "projectileID",
                            "start": [
                                1176,
                                39
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        1176,
                        56
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        1176,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetProjectileCollision(projectileID: integer)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    1176,
                    38
                ],
                "name": "SetProjectileCollision",
                "start": [
                    1176,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetProjectileCollision",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1210,
                                43
                            ],
                            "name": "unitID",
                            "start": [
                                1210,
                                37
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                1210,
                                54
                            ],
                            "name": "weaponNum",
                            "start": [
                                1210,
                                45
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1210,
                                59
                            ],
                            "name": "key",
                            "start": [
                                1210,
                                56
                            ],
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": [
                                1210,
                                66
                            ],
                            "name": "value",
                            "start": [
                                1210,
                                61
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "finish": [
                        1210,
                        71
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        1210,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetProjectileDamages(unitID: integer, weaponNum: number, key: string, value: number)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    1210,
                    36
                ],
                "name": "SetProjectileDamages",
                "start": [
                    1210,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetProjectileDamages",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `grav` — (Default: 0)",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1220,
                                49
                            ],
                            "name": "projectileID",
                            "start": [
                                1220,
                                37
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "desc": "(Default: 0)",
                            "finish": [
                                1220,
                                55
                            ],
                            "name": "grav",
                            "rawdesc": "(Default: 0)",
                            "start": [
                                1220,
                                51
                            ],
                            "type": "local",
                            "view": "number?"
                        }
                    ],
                    "desc": "@*param* `grav` — (Default: 0)",
                    "finish": [
                        1220,
                        60
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        1220,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetProjectileGravity(projectileID: integer, grav?: number)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    1220,
                    36
                ],
                "name": "SetProjectileGravity",
                "start": [
                    1220,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetProjectileGravity",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1215,
                                61
                            ],
                            "name": "projectileID",
                            "start": [
                                1215,
                                49
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                1215,
                                69
                            ],
                            "name": "ignore",
                            "start": [
                                1215,
                                63
                            ],
                            "type": "local",
                            "view": "boolean"
                        }
                    ],
                    "finish": [
                        1215,
                        74
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        1215,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetProjectileIgnoreTrackingError(projectileID: integer, ignore: boolean)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    1215,
                    48
                ],
                "name": "SetProjectileIgnoreTrackingError",
                "start": [
                    1215,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetProjectileIgnoreTrackingError",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1203,
                                55
                            ],
                            "name": "projectileID",
                            "start": [
                                1203,
                                43
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        1203,
                        60
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        1203,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetProjectileIsIntercepted(projectileID: integer)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    1203,
                    42
                ],
                "name": "SetProjectileIsIntercepted",
                "start": [
                    1203,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetProjectileIsIntercepted",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Disables engine movecontrol, so lua can fully control the physics.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1158,
                                53
                            ],
                            "name": "projectileID",
                            "start": [
                                1158,
                                41
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                1158,
                                61
                            ],
                            "name": "enable",
                            "start": [
                                1158,
                                55
                            ],
                            "type": "local",
                            "view": "boolean"
                        }
                    ],
                    "desc": "Disables engine movecontrol, so lua can fully control the physics.",
                    "finish": [
                        1158,
                        66
                    ],
                    "rawdesc": "Disables engine movecontrol, so lua can fully control the physics.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        1158,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetProjectileMoveControl(projectileID: integer, enable: boolean)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    1158,
                    40
                ],
                "name": "SetProjectileMoveControl",
                "rawdesc": "Disables engine movecontrol, so lua can fully control the physics.",
                "start": [
                    1158,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetProjectileMoveControl",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `posX` — (Default: 0)\n\n@*param* `posY` — (Default: 0)\n\n@*param* `posZ` — (Default: 0)",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1165,
                                50
                            ],
                            "name": "projectileID",
                            "start": [
                                1165,
                                38
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "desc": "(Default: 0)",
                            "finish": [
                                1165,
                                56
                            ],
                            "name": "posX",
                            "rawdesc": "(Default: 0)",
                            "start": [
                                1165,
                                52
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "desc": "(Default: 0)",
                            "finish": [
                                1165,
                                62
                            ],
                            "name": "posY",
                            "rawdesc": "(Default: 0)",
                            "start": [
                                1165,
                                58
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "desc": "(Default: 0)",
                            "finish": [
                                1165,
                                68
                            ],
                            "name": "posZ",
                            "rawdesc": "(Default: 0)",
                            "start": [
                                1165,
                                64
                            ],
                            "type": "local",
                            "view": "number?"
                        }
                    ],
                    "desc": "@*param* `posX` — (Default: 0)\n\n@*param* `posY` — (Default: 0)\n\n@*param* `posZ` — (Default: 0)",
                    "finish": [
                        1165,
                        73
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        1165,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetProjectilePosition(projectileID: integer, posX?: number, posY?: number, posZ?: number)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    1165,
                    37
                ],
                "name": "SetProjectilePosition",
                "start": [
                    1165,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetProjectilePosition",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\ntargetTypeStr can be one of:\n'u' - unit\n'f' - feature\n'p' - projectile\nwhile targetTypeInt is one of:\nstring.byte('g') := GROUND\nstring.byte('u') := UNIT\nstring.byte('f') := FEATURE\nstring.byte('p') := PROJECTILE\n\n@*param* `arg1` — (Default: 0) targetID or posX\n\n@*param* `arg2` — (Default: 0) targetType or posY\n\n@*param* `posZ` — (Default: 0)",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1194,
                                48
                            ],
                            "name": "projectileID",
                            "start": [
                                1194,
                                36
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "desc": "(Default: 0) targetID or posX",
                            "finish": [
                                1194,
                                54
                            ],
                            "name": "arg1",
                            "rawdesc": "(Default: 0) targetID or posX",
                            "start": [
                                1194,
                                50
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "desc": "(Default: 0) targetType or posY",
                            "finish": [
                                1194,
                                60
                            ],
                            "name": "arg2",
                            "rawdesc": "(Default: 0) targetType or posY",
                            "start": [
                                1194,
                                56
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "desc": "(Default: 0)",
                            "finish": [
                                1194,
                                66
                            ],
                            "name": "posZ",
                            "rawdesc": "(Default: 0)",
                            "start": [
                                1194,
                                62
                            ],
                            "type": "local",
                            "view": "number?"
                        }
                    ],
                    "desc": "\ntargetTypeStr can be one of:\n'u' - unit\n'f' - feature\n'p' - projectile\nwhile targetTypeInt is one of:\nstring.byte('g') := GROUND\nstring.byte('u') := UNIT\nstring.byte('f') := FEATURE\nstring.byte('p') := PROJECTILE\n\n@*param* `arg1` — (Default: 0) targetID or posX\n\n@*param* `arg2` — (Default: 0) targetType or posY\n\n@*param* `posZ` — (Default: 0)",
                    "finish": [
                        1194,
                        71
                    ],
                    "rawdesc": "\ntargetTypeStr can be one of:\n'u' - unit\n'f' - feature\n'p' - projectile\nwhile targetTypeInt is one of:\nstring.byte('g') := GROUND\nstring.byte('u') := UNIT\nstring.byte('f') := FEATURE\nstring.byte('p') := PROJECTILE",
                    "returns": [
                        {
                            "name": "validTarget",
                            "type": "function.return",
                            "view": "boolean?"
                        }
                    ],
                    "start": [
                        1194,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetProjectileTarget(projectileID: integer, arg1?: number, arg2?: number, posZ?: number)\n  -> validTarget: boolean?"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    1194,
                    35
                ],
                "name": "SetProjectileTarget",
                "rawdesc": "\ntargetTypeStr can be one of:\n'u' - unit\n'f' - feature\n'p' - projectile\nwhile targetTypeInt is one of:\nstring.byte('g') := GROUND\nstring.byte('u') := UNIT\nstring.byte('f') := FEATURE\nstring.byte('p') := PROJECTILE",
                "start": [
                    1194,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetProjectileTarget",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `ttl` — Remaining time to live in frames",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1199,
                                52
                            ],
                            "name": "projectileID",
                            "start": [
                                1199,
                                40
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "desc": "Remaining time to live in frames",
                            "finish": [
                                1199,
                                57
                            ],
                            "name": "ttl",
                            "rawdesc": "Remaining time to live in frames",
                            "start": [
                                1199,
                                54
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "@*param* `ttl` — Remaining time to live in frames",
                    "finish": [
                        1199,
                        62
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        1199,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetProjectileTimeToLive(projectileID: integer, ttl: number)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    1199,
                    39
                ],
                "name": "SetProjectileTimeToLive",
                "start": [
                    1199,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetProjectileTimeToLive",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1151,
                                51
                            ],
                            "name": "projectileID",
                            "start": [
                                1151,
                                39
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                1151,
                                62
                            ],
                            "name": "useAirLos",
                            "start": [
                                1151,
                                53
                            ],
                            "type": "local",
                            "view": "boolean"
                        }
                    ],
                    "finish": [
                        1151,
                        67
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        1151,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetProjectileUseAirLos(projectileID: integer, useAirLos: boolean)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    1151,
                    38
                ],
                "name": "SetProjectileUseAirLos",
                "start": [
                    1151,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetProjectileUseAirLos",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `velX` — (Default: 0)\n\n@*param* `velY` — (Default: 0)\n\n@*param* `velZ` — (Default: 0)",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1172,
                                50
                            ],
                            "name": "projectileID",
                            "start": [
                                1172,
                                38
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "desc": "(Default: 0)",
                            "finish": [
                                1172,
                                56
                            ],
                            "name": "velX",
                            "rawdesc": "(Default: 0)",
                            "start": [
                                1172,
                                52
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "desc": "(Default: 0)",
                            "finish": [
                                1172,
                                62
                            ],
                            "name": "velY",
                            "rawdesc": "(Default: 0)",
                            "start": [
                                1172,
                                58
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "desc": "(Default: 0)",
                            "finish": [
                                1172,
                                68
                            ],
                            "name": "velZ",
                            "rawdesc": "(Default: 0)",
                            "start": [
                                1172,
                                64
                            ],
                            "type": "local",
                            "view": "number?"
                        }
                    ],
                    "desc": "@*param* `velX` — (Default: 0)\n\n@*param* `velY` — (Default: 0)\n\n@*param* `velZ` — (Default: 0)",
                    "finish": [
                        1172,
                        73
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        1172,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetProjectileVelocity(projectileID: integer, velX?: number, velY?: number, velZ?: number)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    1172,
                    37
                ],
                "name": "SetProjectileVelocity",
                "start": [
                    1172,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetProjectileVelocity",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1632,
                                46
                            ],
                            "name": "allyTeamID",
                            "start": [
                                1632,
                                36
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                1632,
                                65
                            ],
                            "name": "allyteamErrorSize",
                            "start": [
                                1632,
                                48
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1632,
                                80
                            ],
                            "name": "baseErrorSize",
                            "start": [
                                1632,
                                67
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "finish": [
                                1632,
                                95
                            ],
                            "name": "baseErrorMult",
                            "start": [
                                1632,
                                82
                            ],
                            "type": "local",
                            "view": "number?"
                        }
                    ],
                    "finish": [
                        1632,
                        100
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        1632,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetRadarErrorParams(allyTeamID: integer, allyteamErrorSize: number, baseErrorSize?: number, baseErrorMult?: number)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    1632,
                    35
                ],
                "name": "SetRadarErrorParams",
                "start": [
                    1632,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetRadarErrorParams",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `resource` — metal | energy",
                "extends": {
                    "args": [
                        {
                            "desc": "metal | energy",
                            "finish": [
                                846,
                                38
                            ],
                            "name": "resource",
                            "rawdesc": "metal | energy",
                            "start": [
                                846,
                                30
                            ],
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": [
                                846,
                                50
                            ],
                            "name": "shareLevel",
                            "start": [
                                846,
                                40
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "@*param* `resource` — metal | energy",
                    "finish": [
                        846,
                        55
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        846,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetShareLevel(resource: string, shareLevel: number)\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    846,
                    29
                ],
                "name": "SetShareLevel",
                "start": [
                    846,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetShareLevel",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                451,
                                40
                            ],
                            "name": "texName",
                            "start": [
                                451,
                                33
                            ],
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "finish": [
                        451,
                        45
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        451,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetSkyBoxTexture(texName: string)\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    451,
                    32
                ],
                "name": "SetSkyBoxTexture",
                "start": [
                    451,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetSkyBoxTexture",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Can only be called in `Spring.SetSmoothMeshFunc`.\n\n@*param* `terraform` — (Default: 1)\n\n@*return* `The` — absolute height difference, or `nil` if coordinates are invalid.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1460,
                                31
                            ],
                            "name": "x",
                            "start": [
                                1460,
                                30
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1460,
                                34
                            ],
                            "name": "z",
                            "start": [
                                1460,
                                33
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1460,
                                42
                            ],
                            "name": "height",
                            "start": [
                                1460,
                                36
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "desc": "(Default: 1)",
                            "finish": [
                                1460,
                                53
                            ],
                            "name": "terraform",
                            "rawdesc": "(Default: 1)",
                            "start": [
                                1460,
                                44
                            ],
                            "type": "local",
                            "view": "number?"
                        }
                    ],
                    "desc": "Can only be called in `Spring.SetSmoothMeshFunc`.\n\n@*param* `terraform` — (Default: 1)\n\n@*return* `The` — absolute height difference, or `nil` if coordinates are invalid.",
                    "finish": [
                        1460,
                        58
                    ],
                    "rawdesc": "Can only be called in `Spring.SetSmoothMeshFunc`.",
                    "returns": [
                        {
                            "desc": "absolute height difference, or `nil` if coordinates are invalid.",
                            "name": "The",
                            "rawdesc": "absolute height difference, or `nil` if coordinates are invalid.",
                            "type": "function.return",
                            "view": "number?"
                        }
                    ],
                    "start": [
                        1460,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetSmoothMesh(x: number, z: number, height: number, terraform?: number)\n  -> The: number?"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    1460,
                    29
                ],
                "name": "SetSmoothMesh",
                "rawdesc": "Can only be called in `Spring.SetSmoothMeshFunc`.",
                "start": [
                    1460,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetSmoothMesh",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1466,
                                45
                            ],
                            "name": "luaFunction",
                            "start": [
                                1466,
                                34
                            ],
                            "type": "local",
                            "view": "function"
                        },
                        {
                            "finish": [
                                1466,
                                50
                            ],
                            "name": "arg",
                            "start": [
                                1466,
                                47
                            ],
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": [
                                1466,
                                55
                            ],
                            "start": [
                                1466,
                                52
                            ],
                            "type": "...",
                            "view": "any"
                        }
                    ],
                    "finish": [
                        1466,
                        60
                    ],
                    "returns": [
                        {
                            "name": "absTotalHeightMapAmountChanged",
                            "type": "function.return",
                            "view": "number?"
                        }
                    ],
                    "start": [
                        1466,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetSmoothMeshFunc(luaFunction: function, arg?: any, ...any)\n  -> absTotalHeightMapAmountChanged: number?"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    1466,
                    33
                ],
                "name": "SetSmoothMeshFunc",
                "start": [
                    1466,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetSmoothMeshFunc",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [],
                    "finish": [
                        144,
                        42
                    ],
                    "start": [
                        144,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetSoundEffectParams()"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    144,
                    36
                ],
                "name": "SetSoundEffectParams",
                "start": [
                    144,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetSoundEffectParams",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Set volume for SoundStream",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                142,
                                43
                            ],
                            "name": "volume",
                            "start": [
                                142,
                                37
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "Set volume for SoundStream",
                    "finish": [
                        142,
                        48
                    ],
                    "rawdesc": "Set volume for SoundStream",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        142,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetSoundStreamVolume(volume: number)\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    142,
                    36
                ],
                "name": "SetSoundStreamVolume",
                "rawdesc": "Set volume for SoundStream",
                "start": [
                    142,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetSoundStreamVolume",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nSee also buildingMask unitdef tag.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1492,
                                39
                            ],
                            "name": "x",
                            "start": [
                                1492,
                                38
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1492,
                                42
                            ],
                            "name": "z",
                            "start": [
                                1492,
                                41
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1492,
                                48
                            ],
                            "name": "mask",
                            "start": [
                                1492,
                                44
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nSee also buildingMask unitdef tag.",
                    "finish": [
                        1492,
                        53
                    ],
                    "rawdesc": "\nSee also buildingMask unitdef tag.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        1492,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetSquareBuildingMask(x: number, z: number, mask: number)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    1492,
                    37
                ],
                "name": "SetSquareBuildingMask",
                "rawdesc": "\nSee also buildingMask unitdef tag.",
                "start": [
                    1492,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetSquareBuildingMask",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `intensity` — (Default: `1.0`)",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                932,
                                36
                            ],
                            "name": "dirX",
                            "start": [
                                932,
                                32
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                932,
                                42
                            ],
                            "name": "dirY",
                            "start": [
                                932,
                                38
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                932,
                                48
                            ],
                            "name": "dirZ",
                            "start": [
                                932,
                                44
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "desc": "(Default: `1.0`)",
                            "finish": [
                                932,
                                59
                            ],
                            "name": "intensity",
                            "rawdesc": "(Default: `1.0`)",
                            "start": [
                                932,
                                50
                            ],
                            "type": "local",
                            "view": "number?"
                        }
                    ],
                    "desc": "@*param* `intensity` — (Default: `1.0`)",
                    "finish": [
                        932,
                        64
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        932,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetSunDirection(dirX: number, dirY: number, dirZ: number, intensity?: number)\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    932,
                    31
                ],
                "name": "SetSunDirection",
                "start": [
                    932,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetSunDirection",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Modify sun lighting parameters.\n\n```lua\nSpring.SetSunLighting({groundAmbientColor = {1, 0.1, 1}, groundDiffuseColor = {1, 0.1, 1} })\n```",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                941,
                                37
                            ],
                            "name": "params",
                            "start": [
                                941,
                                31
                            ],
                            "type": "local",
                            "view": "{ groundAmbientColor: rgb, groundDiffuseColor: rgb }"
                        }
                    ],
                    "desc": "Modify sun lighting parameters.\n\n```lua\nSpring.SetSunLighting({groundAmbientColor = {1, 0.1, 1}, groundDiffuseColor = {1, 0.1, 1} })\n```",
                    "finish": [
                        941,
                        42
                    ],
                    "rawdesc": "Modify sun lighting parameters.\n\n```lua\nSpring.SetSunLighting({groundAmbientColor = {1, 0.1, 1}, groundDiffuseColor = {1, 0.1, 1} })\n```",
                    "start": [
                        941,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetSunLighting(params: { groundAmbientColor: rgb, groundDiffuseColor: rgb })"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    941,
                    30
                ],
                "name": "SetSunLighting",
                "rawdesc": "Modify sun lighting parameters.\n\n```lua\nSpring.SetSunLighting({groundAmbientColor = {1, 0.1, 1}, groundDiffuseColor = {1, 0.1, 1} })\n```",
                "start": [
                    941,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetSunLighting",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                644,
                                35
                            ],
                            "name": "teamID",
                            "start": [
                                644,
                                29
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                644,
                                38
                            ],
                            "name": "r",
                            "start": [
                                644,
                                37
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                644,
                                41
                            ],
                            "name": "g",
                            "start": [
                                644,
                                40
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                644,
                                44
                            ],
                            "name": "b",
                            "start": [
                                644,
                                43
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "finish": [
                        644,
                        49
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        644,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetTeamColor(teamID: integer, r: number, g: number, b: number)\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    644,
                    28
                ],
                "name": "SetTeamColor",
                "start": [
                    644,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetTeamColor",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "```lua\nresource:\n    | \"metal\"\n    | \"energy\"\n    | \"m\"\n    | \"e\"\n    | \"metalStorage\"\n    | \"energyStorage\"\n    | \"ms\"\n    | \"es\"\n```",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                117,
                                38
                            ],
                            "name": "teamID",
                            "start": [
                                117,
                                32
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                117,
                                48
                            ],
                            "name": "resource",
                            "start": [
                                117,
                                40
                            ],
                            "type": "local",
                            "view": "\"e\"|\"energy\"|\"energyStorage\"|\"es\"|\"m\"...(+3)"
                        },
                        {
                            "finish": [
                                117,
                                56
                            ],
                            "name": "amount",
                            "start": [
                                117,
                                50
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "```lua\nresource:\n    | \"metal\"\n    | \"energy\"\n    | \"m\"\n    | \"e\"\n    | \"metalStorage\"\n    | \"energyStorage\"\n    | \"ms\"\n    | \"es\"\n```",
                    "finish": [
                        117,
                        61
                    ],
                    "rawdesc": "```lua\nresource:\n    | \"metal\"\n    | \"energy\"\n    | \"m\"\n    | \"e\"\n    | \"metalStorage\"\n    | \"energyStorage\"\n    | \"ms\"\n    | \"es\"\n```",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        117,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetTeamResource(teamID: integer, resource: \"e\"|\"energy\"|\"energyStorage\"|\"es\"|\"m\"...(+3), amount: number)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    117,
                    31
                ],
                "name": "SetTeamResource",
                "rawdesc": "```lua\nresource:\n    | \"metal\"\n    | \"energy\"\n    | \"m\"\n    | \"e\"\n    | \"metalStorage\"\n    | \"energyStorage\"\n    | \"ms\"\n    | \"es\"\n```",
                "start": [
                    117,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetTeamResource",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `paramValue` — numeric paramValues in quotes will be converted to number.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                171,
                                40
                            ],
                            "name": "teamID",
                            "start": [
                                171,
                                34
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                171,
                                51
                            ],
                            "name": "paramName",
                            "start": [
                                171,
                                42
                            ],
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "desc": "numeric paramValues in quotes will be converted to number.",
                            "finish": [
                                171,
                                63
                            ],
                            "name": "paramValue",
                            "rawdesc": "numeric paramValues in quotes will be converted to number.",
                            "start": [
                                171,
                                53
                            ],
                            "type": "local",
                            "view": "(string|number)?"
                        },
                        {
                            "desc": "Parameters for los access\n\n\nIf one condition is fulfilled all beneath it are too (e.g. if an unit is in\nLOS it can read params with `inradar=true` even if the param has\n`inlos=false`) All GameRulesParam are public, TeamRulesParams can just be\n`private`,`allied` and/or `public` You can read RulesParams from any Lua\nenvironments! With those losAccess policies you can limit their access.\n\nAll GameRulesParam are public, TeamRulesParams can just be `private`,`allied` and/or `public`\nYou can read RulesParams from any Lua environments! With those losAccess policies you can limit their access.\n",
                            "finish": [
                                171,
                                74
                            ],
                            "name": "losAccess",
                            "rawdesc": "Parameters for los access\n\n\nIf one condition is fulfilled all beneath it are too (e.g. if an unit is in\nLOS it can read params with `inradar=true` even if the param has\n`inlos=false`) All GameRulesParam are public, TeamRulesParams can just be\n`private`,`allied` and/or `public` You can read RulesParams from any Lua\nenvironments! With those losAccess policies you can limit their access.\n\nAll GameRulesParam are public, TeamRulesParams can just be `private`,`allied` and/or `public`\nYou can read RulesParams from any Lua environments! With those losAccess policies you can limit their access.\n",
                            "start": [
                                171,
                                65
                            ],
                            "type": "local",
                            "view": "losAccess?"
                        }
                    ],
                    "desc": "@*param* `paramValue` — numeric paramValues in quotes will be converted to number.",
                    "finish": [
                        171,
                        79
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        171,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetTeamRulesParam(teamID: integer, paramName: string, paramValue?: string|number, losAccess?: losAccess)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    171,
                    33
                ],
                "name": "SetTeamRulesParam",
                "start": [
                    171,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetTeamRulesParam",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Changes the resource amount for a team beyond which resources aren't stored but transferred to other allied teams if possible.\n\n\n```lua\ntype:\n    | \"metal\"\n    | \"energy\"\n    | \"m\"\n    | \"e\"\n```",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                125,
                                40
                            ],
                            "name": "teamID",
                            "start": [
                                125,
                                34
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                125,
                                46
                            ],
                            "name": "type",
                            "start": [
                                125,
                                42
                            ],
                            "type": "local",
                            "view": "\"e\"|\"energy\"|\"m\"|\"metal\""
                        },
                        {
                            "finish": [
                                125,
                                54
                            ],
                            "name": "amount",
                            "start": [
                                125,
                                48
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "Changes the resource amount for a team beyond which resources aren't stored but transferred to other allied teams if possible.\n\n\n```lua\ntype:\n    | \"metal\"\n    | \"energy\"\n    | \"m\"\n    | \"e\"\n```",
                    "finish": [
                        125,
                        59
                    ],
                    "rawdesc": "Changes the resource amount for a team beyond which resources aren't stored but transferred to other allied teams if possible.\n\n\n```lua\ntype:\n    | \"metal\"\n    | \"energy\"\n    | \"m\"\n    | \"e\"\n```",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        125,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetTeamShareLevel(teamID: integer, type: \"e\"|\"energy\"|\"m\"|\"metal\", amount: number)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    125,
                    33
                ],
                "name": "SetTeamShareLevel",
                "rawdesc": "Changes the resource amount for a team beyond which resources aren't stored but transferred to other allied teams if possible.\n\n\n```lua\ntype:\n    | \"metal\"\n    | \"energy\"\n    | \"m\"\n    | \"e\"\n```",
                "start": [
                    125,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetTeamShareLevel",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `speedTanks` — (Default: nil)\n\n@*param* `speedKBOts` — (Default: nil)\n\n@*param* `speedHovers` — (Default: nil)\n\n@*param* `speedShips` — (Default: nil)",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1484,
                                44
                            ],
                            "name": "typeIndex",
                            "start": [
                                1484,
                                35
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "desc": "(Default: nil)",
                            "finish": [
                                1484,
                                56
                            ],
                            "name": "speedTanks",
                            "rawdesc": "(Default: nil)",
                            "start": [
                                1484,
                                46
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "desc": "(Default: nil)",
                            "finish": [
                                1484,
                                68
                            ],
                            "name": "speedKBOts",
                            "rawdesc": "(Default: nil)",
                            "start": [
                                1484,
                                58
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "desc": "(Default: nil)",
                            "finish": [
                                1484,
                                81
                            ],
                            "name": "speedHovers",
                            "rawdesc": "(Default: nil)",
                            "start": [
                                1484,
                                70
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "desc": "(Default: nil)",
                            "finish": [
                                1484,
                                93
                            ],
                            "name": "speedShips",
                            "rawdesc": "(Default: nil)",
                            "start": [
                                1484,
                                83
                            ],
                            "type": "local",
                            "view": "number?"
                        }
                    ],
                    "desc": "@*param* `speedTanks` — (Default: nil)\n\n@*param* `speedKBOts` — (Default: nil)\n\n@*param* `speedHovers` — (Default: nil)\n\n@*param* `speedShips` — (Default: nil)",
                    "finish": [
                        1484,
                        98
                    ],
                    "returns": [
                        {
                            "name": "true",
                            "type": "function.return",
                            "view": "boolean?"
                        }
                    ],
                    "start": [
                        1484,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetTerrainTypeData(typeIndex: number, speedTanks?: number, speedKBOts?: number, speedHovers?: number, speedShips?: number)\n  -> true: boolean?"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    1484,
                    34
                ],
                "name": "SetTerrainTypeData",
                "start": [
                    1484,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetTerrainTypeData",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Set tidal strength",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                79,
                                33
                            ],
                            "name": "strength",
                            "start": [
                                79,
                                25
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "Set tidal strength",
                    "finish": [
                        79,
                        38
                    ],
                    "rawdesc": "Set tidal strength",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        79,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetTidal(strength: number)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    79,
                    24
                ],
                "name": "SetTidal",
                "rawdesc": "Set tidal strength",
                "start": [
                    79,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetTidal",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                470,
                                48
                            ],
                            "name": "unitID",
                            "start": [
                                470,
                                42
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                470,
                                68
                            ],
                            "name": "alwaysUpdateMatrix",
                            "start": [
                                470,
                                50
                            ],
                            "type": "local",
                            "view": "boolean"
                        }
                    ],
                    "finish": [
                        470,
                        73
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        470,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetUnitAlwaysUpdateMatrix(unitID: integer, alwaysUpdateMatrix: boolean)\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    470,
                    41
                ],
                "name": "SetUnitAlwaysUpdateMatrix",
                "start": [
                    470,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetUnitAlwaysUpdateMatrix",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                472,
                                43
                            ],
                            "name": "unitID",
                            "start": [
                                472,
                                37
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                472,
                                58
                            ],
                            "name": "alwaysVisible",
                            "start": [
                                472,
                                45
                            ],
                            "type": "local",
                            "view": "boolean"
                        }
                    ],
                    "finish": [
                        472,
                        63
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        472,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetUnitAlwaysVisible(unitID: integer, alwaysVisible: boolean)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    472,
                    36
                ],
                "name": "SetUnitAlwaysVisible",
                "start": [
                    472,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetUnitAlwaysVisible",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                401,
                                37
                            ],
                            "name": "unitID",
                            "start": [
                                401,
                                31
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                401,
                                46
                            ],
                            "name": "armored",
                            "start": [
                                401,
                                39
                            ],
                            "type": "local",
                            "view": "boolean?"
                        },
                        {
                            "finish": [
                                401,
                                61
                            ],
                            "name": "armorMultiple",
                            "start": [
                                401,
                                48
                            ],
                            "type": "local",
                            "view": "number?"
                        }
                    ],
                    "finish": [
                        401,
                        66
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        401,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetUnitArmored(unitID: integer, armored?: boolean, armorMultiple?: number)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    401,
                    30
                ],
                "name": "SetUnitArmored",
                "start": [
                    401,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetUnitArmored",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                525,
                                38
                            ],
                            "name": "unitID",
                            "start": [
                                525,
                                32
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                525,
                                50
                            ],
                            "name": "isblocking",
                            "start": [
                                525,
                                40
                            ],
                            "type": "local",
                            "view": "boolean"
                        },
                        {
                            "finish": [
                                525,
                                75
                            ],
                            "name": "isSolidObjectCollidable",
                            "start": [
                                525,
                                52
                            ],
                            "type": "local",
                            "view": "boolean"
                        },
                        {
                            "finish": [
                                525,
                                99
                            ],
                            "name": "isProjectileCollidable",
                            "start": [
                                525,
                                77
                            ],
                            "type": "local",
                            "view": "boolean"
                        },
                        {
                            "finish": [
                                525,
                                123
                            ],
                            "name": "isRaySegmentCollidable",
                            "start": [
                                525,
                                101
                            ],
                            "type": "local",
                            "view": "boolean"
                        },
                        {
                            "finish": [
                                525,
                                134
                            ],
                            "name": "crushable",
                            "start": [
                                525,
                                125
                            ],
                            "type": "local",
                            "view": "boolean"
                        },
                        {
                            "finish": [
                                525,
                                153
                            ],
                            "name": "blockEnemyPushing",
                            "start": [
                                525,
                                136
                            ],
                            "type": "local",
                            "view": "boolean"
                        },
                        {
                            "finish": [
                                525,
                                173
                            ],
                            "name": "blockHeightChanges",
                            "start": [
                                525,
                                155
                            ],
                            "type": "local",
                            "view": "boolean"
                        }
                    ],
                    "finish": [
                        525,
                        178
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        525,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetUnitBlocking(unitID: integer, isblocking: boolean, isSolidObjectCollidable: boolean, isProjectileCollidable: boolean, isRaySegmentCollidable: boolean, crushable: boolean, blockEnemyPushing: boolean, blockHeightChanges: boolean)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    525,
                    31
                ],
                "name": "SetUnitBlocking",
                "start": [
                    525,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetUnitBlocking",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `paramName` — one of `buildRange`|`buildDistance`|`buildRange3D`\n\n@*param* `value` — boolean when `paramName` is `buildRange3D`, otherwise number.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                496,
                                41
                            ],
                            "name": "unitID",
                            "start": [
                                496,
                                35
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "desc": "one of `buildRange`|`buildDistance`|`buildRange3D`",
                            "finish": [
                                496,
                                52
                            ],
                            "name": "paramName",
                            "rawdesc": "one of `buildRange`|`buildDistance`|`buildRange3D`",
                            "start": [
                                496,
                                43
                            ],
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "desc": "boolean when `paramName` is `buildRange3D`, otherwise number.",
                            "finish": [
                                496,
                                59
                            ],
                            "name": "value",
                            "rawdesc": "boolean when `paramName` is `buildRange3D`, otherwise number.",
                            "start": [
                                496,
                                54
                            ],
                            "type": "local",
                            "view": "boolean|number"
                        }
                    ],
                    "desc": "@*param* `paramName` — one of `buildRange`|`buildDistance`|`buildRange3D`\n\n@*param* `value` — boolean when `paramName` is `buildRange3D`, otherwise number.",
                    "finish": [
                        496,
                        64
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        496,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetUnitBuildParams(unitID: integer, paramName: string, value: boolean|number)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    496,
                    34
                ],
                "name": "SetUnitBuildParams",
                "start": [
                    496,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetUnitBuildParams",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                505,
                                43
                            ],
                            "name": "builderID",
                            "start": [
                                505,
                                34
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                505,
                                55
                            ],
                            "name": "buildSpeed",
                            "start": [
                                505,
                                45
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                505,
                                68
                            ],
                            "name": "repairSpeed",
                            "start": [
                                505,
                                57
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "finish": [
                                505,
                                82
                            ],
                            "name": "reclaimSpeed",
                            "start": [
                                505,
                                70
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "finish": [
                                505,
                                96
                            ],
                            "name": "captureSpeed",
                            "start": [
                                505,
                                84
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "finish": [
                                505,
                                112
                            ],
                            "name": "terraformSpeed",
                            "start": [
                                505,
                                98
                            ],
                            "type": "local",
                            "view": "number?"
                        }
                    ],
                    "finish": [
                        505,
                        117
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        505,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetUnitBuildSpeed(builderID: integer, buildSpeed: number, repairSpeed?: number, reclaimSpeed?: number, captureSpeed?: number, terraformSpeed?: number)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    505,
                    33
                ],
                "name": "SetUnitBuildSpeed",
                "start": [
                    505,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetUnitBuildSpeed",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nSets the unit's radius for when targeted by build, repair, reclaim-type commands.\n\n@*param* `build` — radius for when targeted by build, repair, reclaim-type commands.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                610,
                                43
                            ],
                            "name": "unitID",
                            "start": [
                                610,
                                37
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "desc": "radius for when targeted by build, repair, reclaim-type commands.",
                            "finish": [
                                610,
                                50
                            ],
                            "name": "build",
                            "rawdesc": "radius for when targeted by build, repair, reclaim-type commands.",
                            "start": [
                                610,
                                45
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nSets the unit's radius for when targeted by build, repair, reclaim-type commands.\n\n@*param* `build` — radius for when targeted by build, repair, reclaim-type commands.",
                    "finish": [
                        610,
                        55
                    ],
                    "rawdesc": "\nSets the unit's radius for when targeted by build, repair, reclaim-type commands.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        610,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetUnitBuildeeRadius(unitID: integer, build: number)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    610,
                    36
                ],
                "name": "SetUnitBuildeeRadius",
                "rawdesc": "\nSets the unit's radius for when targeted by build, repair, reclaim-type commands.",
                "start": [
                    610,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetUnitBuildeeRadius",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nIf the 2nd argument is a number, the value works like this:\n1:=normal cloak\n2:=for free cloak (cost no E)\n3:=for free + no decloaking (except the unit is stunned)\n4:=ultimate cloak (no ecost, no decloaking, no stunned decloak)\n\nThe decloak distance is only changed:\n- if the 3th argument is a number or a boolean.\n- if the boolean is false it takes the default decloak distance for that unitdef,\n- if the boolean is true it takes the absolute value of it.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                452,
                                35
                            ],
                            "name": "unitID",
                            "start": [
                                452,
                                29
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                452,
                                42
                            ],
                            "name": "cloak",
                            "start": [
                                452,
                                37
                            ],
                            "type": "local",
                            "view": "boolean|number"
                        },
                        {
                            "finish": [
                                452,
                                52
                            ],
                            "name": "cloakArg",
                            "start": [
                                452,
                                44
                            ],
                            "type": "local",
                            "view": "boolean|number"
                        }
                    ],
                    "desc": "\nIf the 2nd argument is a number, the value works like this:\n1:=normal cloak\n2:=for free cloak (cost no E)\n3:=for free + no decloaking (except the unit is stunned)\n4:=ultimate cloak (no ecost, no decloaking, no stunned decloak)\n\nThe decloak distance is only changed:\n- if the 3th argument is a number or a boolean.\n- if the boolean is false it takes the default decloak distance for that unitdef,\n- if the boolean is true it takes the absolute value of it.",
                    "finish": [
                        452,
                        57
                    ],
                    "rawdesc": "\nIf the 2nd argument is a number, the value works like this:\n1:=normal cloak\n2:=for free cloak (cost no E)\n3:=for free + no decloaking (except the unit is stunned)\n4:=ultimate cloak (no ecost, no decloaking, no stunned decloak)\n\nThe decloak distance is only changed:\n- if the 3th argument is a number or a boolean.\n- if the boolean is false it takes the default decloak distance for that unitdef,\n- if the boolean is true it takes the absolute value of it.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        452,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetUnitCloak(unitID: integer, cloak: boolean|number, cloakArg: boolean|number)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    452,
                    28
                ],
                "name": "SetUnitCloak",
                "rawdesc": "\nIf the 2nd argument is a number, the value works like this:\n1:=normal cloak\n2:=for free cloak (cost no E)\n3:=for free + no decloaking (except the unit is stunned)\n4:=ultimate cloak (no ecost, no decloaking, no stunned decloak)\n\nThe decloak distance is only changed:\n- if the 3th argument is a number or a boolean.\n- if the boolean is false it takes the default decloak distance for that unitdef,\n- if the boolean is true it takes the absolute value of it.",
                "start": [
                    452,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetUnitCloak",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nenum COLVOL_TYPES {\nCOLVOL_TYPE_DISABLED = -1,\nCOLVOL_TYPE_ELLIPSOID = 0,\nCOLVOL_TYPE_CYLINDER,\nCOLVOL_TYPE_BOX,\nCOLVOL_TYPE_SPHERE,\nCOLVOL_NUM_TYPES       // number of non-disabled collision volume types\n};\nenum COLVOL_TESTS {\nCOLVOL_TEST_DISC = 0,\nCOLVOL_TEST_CONT = 1,\nCOLVOL_NUM_TESTS = 2   // number of tests\n};\nenum COLVOL_AXES {\nCOLVOL_AXIS_X   = 0,\nCOLVOL_AXIS_Y   = 1,\nCOLVOL_AXIS_Z   = 2,\nCOLVOL_NUM_AXES = 3    // number of collision volume axes\n};",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                661,
                                49
                            ],
                            "name": "unitID",
                            "start": [
                                661,
                                43
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                661,
                                57
                            ],
                            "name": "scaleX",
                            "start": [
                                661,
                                51
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                661,
                                65
                            ],
                            "name": "scaleY",
                            "start": [
                                661,
                                59
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                661,
                                73
                            ],
                            "name": "scaleZ",
                            "start": [
                                661,
                                67
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                661,
                                82
                            ],
                            "name": "offsetX",
                            "start": [
                                661,
                                75
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                661,
                                91
                            ],
                            "name": "offsetY",
                            "start": [
                                661,
                                84
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                661,
                                100
                            ],
                            "name": "offsetZ",
                            "start": [
                                661,
                                93
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                661,
                                107
                            ],
                            "name": "vType",
                            "start": [
                                661,
                                102
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                661,
                                114
                            ],
                            "name": "tType",
                            "start": [
                                661,
                                109
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                661,
                                120
                            ],
                            "name": "Axis",
                            "start": [
                                661,
                                116
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nenum COLVOL_TYPES {\nCOLVOL_TYPE_DISABLED = -1,\nCOLVOL_TYPE_ELLIPSOID = 0,\nCOLVOL_TYPE_CYLINDER,\nCOLVOL_TYPE_BOX,\nCOLVOL_TYPE_SPHERE,\nCOLVOL_NUM_TYPES       // number of non-disabled collision volume types\n};\nenum COLVOL_TESTS {\nCOLVOL_TEST_DISC = 0,\nCOLVOL_TEST_CONT = 1,\nCOLVOL_NUM_TESTS = 2   // number of tests\n};\nenum COLVOL_AXES {\nCOLVOL_AXIS_X   = 0,\nCOLVOL_AXIS_Y   = 1,\nCOLVOL_AXIS_Z   = 2,\nCOLVOL_NUM_AXES = 3    // number of collision volume axes\n};",
                    "finish": [
                        661,
                        125
                    ],
                    "rawdesc": "\nenum COLVOL_TYPES {\nCOLVOL_TYPE_DISABLED = -1,\nCOLVOL_TYPE_ELLIPSOID = 0,\nCOLVOL_TYPE_CYLINDER,\nCOLVOL_TYPE_BOX,\nCOLVOL_TYPE_SPHERE,\nCOLVOL_NUM_TYPES       // number of non-disabled collision volume types\n};\nenum COLVOL_TESTS {\nCOLVOL_TEST_DISC = 0,\nCOLVOL_TEST_CONT = 1,\nCOLVOL_NUM_TESTS = 2   // number of tests\n};\nenum COLVOL_AXES {\nCOLVOL_AXIS_X   = 0,\nCOLVOL_AXIS_Y   = 1,\nCOLVOL_AXIS_Z   = 2,\nCOLVOL_NUM_AXES = 3    // number of collision volume axes\n};",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        661,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetUnitCollisionVolumeData(unitID: integer, scaleX: number, scaleY: number, scaleZ: number, offsetX: number, offsetY: number, offsetZ: number, vType: number, tType: number, Axis: number)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    661,
                    42
                ],
                "name": "SetUnitCollisionVolumeData",
                "rawdesc": "\nenum COLVOL_TYPES {\nCOLVOL_TYPE_DISABLED = -1,\nCOLVOL_TYPE_ELLIPSOID = 0,\nCOLVOL_TYPE_CYLINDER,\nCOLVOL_TYPE_BOX,\nCOLVOL_TYPE_SPHERE,\nCOLVOL_NUM_TYPES       // number of non-disabled collision volume types\n};\nenum COLVOL_TESTS {\nCOLVOL_TEST_DISC = 0,\nCOLVOL_TEST_CONT = 1,\nCOLVOL_NUM_TESTS = 2   // number of tests\n};\nenum COLVOL_AXES {\nCOLVOL_AXIS_X   = 0,\nCOLVOL_AXIS_Y   = 1,\nCOLVOL_AXIS_Z   = 2,\nCOLVOL_NUM_AXES = 3    // number of collision volume axes\n};",
                "start": [
                    661,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetUnitCollisionVolumeData",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `where` — keys and values are, respectively and in this order: buildTime=amount, metalCost=amount, energyCost=amount",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                252,
                                35
                            ],
                            "name": "unitID",
                            "start": [
                                252,
                                29
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "desc": "keys and values are, respectively and in this order: buildTime=amount, metalCost=amount, energyCost=amount",
                            "finish": [
                                252,
                                42
                            ],
                            "name": "where",
                            "rawdesc": "keys and values are, respectively and in this order: buildTime=amount, metalCost=amount, energyCost=amount",
                            "start": [
                                252,
                                37
                            ],
                            "type": "local",
                            "view": "table<number, number>"
                        }
                    ],
                    "desc": "@*param* `where` — keys and values are, respectively and in this order: buildTime=amount, metalCost=amount, energyCost=amount",
                    "finish": [
                        252,
                        47
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        252,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetUnitCosts(unitID: integer, where: table<number, number>)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    252,
                    28
                ],
                "name": "SetUnitCosts",
                "start": [
                    252,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetUnitCosts",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                530,
                                38
                            ],
                            "name": "unitID",
                            "start": [
                                530,
                                32
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                530,
                                48
                            ],
                            "name": "crashing",
                            "start": [
                                530,
                                40
                            ],
                            "type": "local",
                            "view": "boolean"
                        }
                    ],
                    "finish": [
                        530,
                        53
                    ],
                    "returns": [
                        {
                            "name": "success",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        530,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetUnitCrashing(unitID: integer, crashing: boolean)\n  -> success: boolean"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    530,
                    31
                ],
                "name": "SetUnitCrashing",
                "start": [
                    530,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetUnitCrashing",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                577,
                                40
                            ],
                            "name": "unitDefID",
                            "start": [
                                577,
                                31
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                577,
                                50
                            ],
                            "name": "iconName",
                            "start": [
                                577,
                                42
                            ],
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "finish": [
                        577,
                        55
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        577,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetUnitDefIcon(unitDefID: integer, iconName: string)\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    577,
                    30
                ],
                "name": "SetUnitDefIcon",
                "start": [
                    577,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetUnitDefIcon",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `image` — luaTexture|texFile",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                582,
                                41
                            ],
                            "name": "unitDefID",
                            "start": [
                                582,
                                32
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "desc": "luaTexture|texFile",
                            "finish": [
                                582,
                                48
                            ],
                            "name": "image",
                            "rawdesc": "luaTexture|texFile",
                            "start": [
                                582,
                                43
                            ],
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "desc": "@*param* `image` — luaTexture|texFile",
                    "finish": [
                        582,
                        53
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        582,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetUnitDefImage(unitDefID: integer, image: string)\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    582,
                    31
                ],
                "name": "SetUnitDefImage",
                "start": [
                    582,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetUnitDefImage",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                788,
                                39
                            ],
                            "name": "unitID",
                            "start": [
                                788,
                                33
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                788,
                                42
                            ],
                            "name": "x",
                            "start": [
                                788,
                                41
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                788,
                                45
                            ],
                            "name": "y",
                            "start": [
                                788,
                                44
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                788,
                                48
                            ],
                            "name": "z",
                            "start": [
                                788,
                                47
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "finish": [
                        788,
                        53
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        788,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetUnitDirection(unitID: integer, x: number, y: number, z: number)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    788,
                    32
                ],
                "name": "SetUnitDirection",
                "start": [
                    788,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetUnitDirection",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                465,
                                44
                            ],
                            "name": "unitID",
                            "start": [
                                465,
                                38
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                465,
                                54
                            ],
                            "name": "drawMask",
                            "start": [
                                465,
                                46
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "finish": [
                        465,
                        59
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        465,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetUnitEngineDrawMask(unitID: integer, drawMask: number)\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    465,
                    37
                ],
                "name": "SetUnitEngineDrawMask",
                "start": [
                    465,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetUnitEngineDrawMask",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "See:\n  * [Spring.AddUnitExperience](file:///home/runner/work/spring/spring/rts/Lua/library/generated/LuaSyncedCtrl.lua#396#9)\n  * [Spring.GetUnitExperience](file:///home/runner/work/spring/spring/rts/Lua/library/generated/LuaSyncedRead.lua#710#9)",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                388,
                                40
                            ],
                            "name": "unitID",
                            "start": [
                                388,
                                34
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                388,
                                52
                            ],
                            "name": "experience",
                            "start": [
                                388,
                                42
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "See:\n  * [Spring.AddUnitExperience](file:///home/runner/work/spring/spring/rts/Lua/library/generated/LuaSyncedCtrl.lua#396#9)\n  * [Spring.GetUnitExperience](file:///home/runner/work/spring/spring/rts/Lua/library/generated/LuaSyncedRead.lua#710#9)",
                    "finish": [
                        388,
                        57
                    ],
                    "rawdesc": "See:\n  * [Spring.AddUnitExperience](file:///home/runner/work/spring/spring/rts/Lua/library/generated/LuaSyncedCtrl.lua#396#9)\n  * [Spring.GetUnitExperience](file:///home/runner/work/spring/spring/rts/Lua/library/generated/LuaSyncedRead.lua#710#9)",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        388,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetUnitExperience(unitID: integer, experience: number)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    388,
                    33
                ],
                "name": "SetUnitExperience",
                "rawdesc": "See:\n  * [Spring.AddUnitExperience](file:///home/runner/work/spring/spring/rts/Lua/library/generated/LuaSyncedCtrl.lua#396#9)\n  * [Spring.GetUnitExperience](file:///home/runner/work/spring/spring/rts/Lua/library/generated/LuaSyncedRead.lua#710#9)",
                "start": [
                    388,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetUnitExperience",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `type` — dir\n\n@*param* `arg1` — x|minDamage|maxDamage|moveFactor|mode\n\n@*param* `y` — only when type is \"dir\"\n\n@*param* `z` — only when type is \"dir\"",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                551,
                                38
                            ],
                            "name": "unitID",
                            "start": [
                                551,
                                32
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "desc": "dir",
                            "finish": [
                                551,
                                44
                            ],
                            "name": "type",
                            "rawdesc": "dir",
                            "start": [
                                551,
                                40
                            ],
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "desc": "x|minDamage|maxDamage|moveFactor|mode",
                            "finish": [
                                551,
                                50
                            ],
                            "name": "arg1",
                            "rawdesc": "x|minDamage|maxDamage|moveFactor|mode",
                            "start": [
                                551,
                                46
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "desc": "only when type is \"dir\"",
                            "finish": [
                                551,
                                53
                            ],
                            "name": "y",
                            "rawdesc": "only when type is \"dir\"",
                            "start": [
                                551,
                                52
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "desc": "only when type is \"dir\"",
                            "finish": [
                                551,
                                56
                            ],
                            "name": "z",
                            "rawdesc": "only when type is \"dir\"",
                            "start": [
                                551,
                                55
                            ],
                            "type": "local",
                            "view": "number?"
                        }
                    ],
                    "desc": "@*param* `type` — dir\n\n@*param* `arg1` — x|minDamage|maxDamage|moveFactor|mode\n\n@*param* `y` — only when type is \"dir\"\n\n@*param* `z` — only when type is \"dir\"",
                    "finish": [
                        551,
                        61
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        551,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetUnitFlanking(unitID: integer, type: string, arg1: number, y?: number, z?: number)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    551,
                    31
                ],
                "name": "SetUnitFlanking",
                "start": [
                    551,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetUnitFlanking",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `groupID` — the group number to be assigned, or -1 for deassignment",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                743,
                                35
                            ],
                            "name": "unitID",
                            "start": [
                                743,
                                29
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "desc": "the group number to be assigned, or -1 for deassignment",
                            "finish": [
                                743,
                                44
                            ],
                            "name": "groupID",
                            "rawdesc": "the group number to be assigned, or -1 for deassignment",
                            "start": [
                                743,
                                37
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "@*param* `groupID` — the group number to be assigned, or -1 for deassignment",
                    "finish": [
                        743,
                        49
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        743,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetUnitGroup(unitID: integer, groupID: number)\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    743,
                    28
                ],
                "name": "SetUnitGroup",
                "start": [
                    743,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetUnitGroup",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "See also harvestStorage UnitDef tag.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                490,
                                44
                            ],
                            "name": "unitID",
                            "start": [
                                490,
                                38
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                490,
                                51
                            ],
                            "name": "metal",
                            "start": [
                                490,
                                46
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "See also harvestStorage UnitDef tag.",
                    "finish": [
                        490,
                        56
                    ],
                    "rawdesc": "See also harvestStorage UnitDef tag.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        490,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetUnitHarvestStorage(unitID: integer, metal: number)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    490,
                    37
                ],
                "name": "SetUnitHarvestStorage",
                "rawdesc": "See also harvestStorage UnitDef tag.",
                "start": [
                    490,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetUnitHarvestStorage",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nUse this call to set up unit direction in a robust way. Heading (-32768 to 32767) represents a 2D (xz plane) unit orientation if unit was completely upright, new {upx,upy,upz} direction will be used as new \"up\" vector, the rotation set by \"heading\" will remain preserved.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                799,
                                45
                            ],
                            "name": "unitID",
                            "start": [
                                799,
                                39
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                799,
                                54
                            ],
                            "name": "heading",
                            "start": [
                                799,
                                47
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                799,
                                59
                            ],
                            "name": "upx",
                            "start": [
                                799,
                                56
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                799,
                                64
                            ],
                            "name": "upy",
                            "start": [
                                799,
                                61
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                799,
                                69
                            ],
                            "name": "upz",
                            "start": [
                                799,
                                66
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nUse this call to set up unit direction in a robust way. Heading (-32768 to 32767) represents a 2D (xz plane) unit orientation if unit was completely upright, new {upx,upy,upz} direction will be used as new \"up\" vector, the rotation set by \"heading\" will remain preserved.",
                    "finish": [
                        799,
                        74
                    ],
                    "rawdesc": "\nUse this call to set up unit direction in a robust way. Heading (-32768 to 32767) represents a 2D (xz plane) unit orientation if unit was completely upright, new {upx,upy,upz} direction will be used as new \"up\" vector, the rotation set by \"heading\" will remain preserved.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        799,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetUnitHeadingAndUpDir(unitID: integer, heading: number, upx: number, upy: number, upz: number)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    799,
                    38
                ],
                "name": "SetUnitHeadingAndUpDir",
                "rawdesc": "\nUse this call to set up unit direction in a robust way. Heading (-32768 to 32767) represents a 2D (xz plane) unit orientation if unit was completely upright, new {upx,upy,upz} direction will be used as new \"up\" vector, the rotation set by \"heading\" will remain preserved.",
                "start": [
                    799,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetUnitHeadingAndUpDir",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `health` — where keys can be one of health|capture|paralyze|build and values are amounts",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                290,
                                36
                            ],
                            "name": "unitID",
                            "start": [
                                290,
                                30
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "desc": "where keys can be one of health|capture|paralyze|build and values are amounts",
                            "finish": [
                                290,
                                44
                            ],
                            "name": "health",
                            "rawdesc": "where keys can be one of health|capture|paralyze|build and values are amounts",
                            "start": [
                                290,
                                38
                            ],
                            "type": "local",
                            "view": "number|table<string, number>"
                        }
                    ],
                    "desc": "@*param* `health` — where keys can be one of health|capture|paralyze|build and values are amounts",
                    "finish": [
                        290,
                        49
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        290,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetUnitHealth(unitID: integer, health: number|table<string, number>)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    290,
                    29
                ],
                "name": "SetUnitHealth",
                "start": [
                    290,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetUnitHealth",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                572,
                                38
                            ],
                            "name": "unitID",
                            "start": [
                                572,
                                32
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                572,
                                48
                            ],
                            "name": "drawIcon",
                            "start": [
                                572,
                                40
                            ],
                            "type": "local",
                            "view": "boolean"
                        }
                    ],
                    "finish": [
                        572,
                        53
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        572,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetUnitIconDraw(unitID: integer, drawIcon: boolean)\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    572,
                    31
                ],
                "name": "SetUnitIconDraw",
                "start": [
                    572,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetUnitIconDraw",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Used in conjunction with Spring.UnitAttach et al. to re-implement old airbase & fuel system in Lua.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                727,
                                38
                            ],
                            "name": "unitID",
                            "start": [
                                727,
                                32
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                727,
                                45
                            ],
                            "name": "goalX",
                            "start": [
                                727,
                                40
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                727,
                                52
                            ],
                            "name": "goalY",
                            "start": [
                                727,
                                47
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                727,
                                59
                            ],
                            "name": "goalZ",
                            "start": [
                                727,
                                54
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                727,
                                71
                            ],
                            "name": "goalRadius",
                            "start": [
                                727,
                                61
                            ],
                            "type": "local",
                            "view": "number?"
                        }
                    ],
                    "desc": "Used in conjunction with Spring.UnitAttach et al. to re-implement old airbase & fuel system in Lua.",
                    "finish": [
                        727,
                        76
                    ],
                    "rawdesc": "Used in conjunction with Spring.UnitAttach et al. to re-implement old airbase & fuel system in Lua.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        727,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetUnitLandGoal(unitID: integer, goalX: number, goalY: number, goalZ: number, goalRadius?: number)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    727,
                    31
                ],
                "name": "SetUnitLandGoal",
                "rawdesc": "Used in conjunction with Spring.UnitAttach et al. to re-implement old airbase & fuel system in Lua.",
                "start": [
                    727,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetUnitLandGoal",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `unitLeaveTracks` — whether unit leaves tracks on movement",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                489,
                                41
                            ],
                            "name": "unitID",
                            "start": [
                                489,
                                35
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "desc": "whether unit leaves tracks on movement",
                            "finish": [
                                489,
                                58
                            ],
                            "name": "unitLeaveTracks",
                            "rawdesc": "whether unit leaves tracks on movement",
                            "start": [
                                489,
                                43
                            ],
                            "type": "local",
                            "view": "boolean"
                        }
                    ],
                    "desc": "@*param* `unitLeaveTracks` — whether unit leaves tracks on movement",
                    "finish": [
                        489,
                        63
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        489,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetUnitLeaveTracks(unitID: integer, unitLeaveTracks: boolean)\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    489,
                    34
                ],
                "name": "SetUnitLeaveTracks",
                "start": [
                    489,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetUnitLeaveTracks",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Disables collisions between the two units to allow colvol intersection during the approach.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1538,
                                51
                            ],
                            "name": "passengerID",
                            "start": [
                                1538,
                                40
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                1538,
                                64
                            ],
                            "name": "transportID",
                            "start": [
                                1538,
                                53
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Disables collisions between the two units to allow colvol intersection during the approach.",
                    "finish": [
                        1538,
                        69
                    ],
                    "rawdesc": "Disables collisions between the two units to allow colvol intersection during the approach.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        1538,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetUnitLoadingTransport(passengerID: integer, transportID: integer)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    1538,
                    39
                ],
                "name": "SetUnitLoadingTransport",
                "rawdesc": "Disables collisions between the two units to allow colvol intersection during the approach.",
                "start": [
                    1538,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetUnitLoadingTransport",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nThe 3rd argument is either the bit-and combination of the following numbers:\n\nLOS_INLOS = 1\nLOS_INRADAR = 2\nLOS_PREVLOS = 4\nLOS_CONTRADAR = 8\n\nor a table of the following form:\n\nlosTypes = {\n[los = boolean,]\n[radar = boolean,]\n[prevLos = boolean,]\n[contRadar = boolean]\n}",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                428,
                                37
                            ],
                            "name": "unitID",
                            "start": [
                                428,
                                31
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                428,
                                47
                            ],
                            "name": "allyTeam",
                            "start": [
                                428,
                                39
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                428,
                                57
                            ],
                            "name": "losTypes",
                            "start": [
                                428,
                                49
                            ],
                            "type": "local",
                            "view": "number|table"
                        }
                    ],
                    "desc": "\nThe 3rd argument is either the bit-and combination of the following numbers:\n\nLOS_INLOS = 1\nLOS_INRADAR = 2\nLOS_PREVLOS = 4\nLOS_CONTRADAR = 8\n\nor a table of the following form:\n\nlosTypes = {\n[los = boolean,]\n[radar = boolean,]\n[prevLos = boolean,]\n[contRadar = boolean]\n}",
                    "finish": [
                        428,
                        62
                    ],
                    "rawdesc": "\nThe 3rd argument is either the bit-and combination of the following numbers:\n\nLOS_INLOS = 1\nLOS_INRADAR = 2\nLOS_PREVLOS = 4\nLOS_CONTRADAR = 8\n\nor a table of the following form:\n\nlosTypes = {\n[los = boolean,]\n[radar = boolean,]\n[prevLos = boolean,]\n[contRadar = boolean]\n}",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        428,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetUnitLosMask(unitID: integer, allyTeam: number, losTypes: number|table)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    428,
                    30
                ],
                "name": "SetUnitLosMask",
                "rawdesc": "\nThe 3rd argument is either the bit-and combination of the following numbers:\n\nLOS_INLOS = 1\nLOS_INRADAR = 2\nLOS_PREVLOS = 4\nLOS_CONTRADAR = 8\n\nor a table of the following form:\n\nlosTypes = {\n[los = boolean,]\n[radar = boolean,]\n[prevLos = boolean,]\n[contRadar = boolean]\n}",
                "start": [
                    428,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetUnitLosMask",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                434,
                                38
                            ],
                            "name": "unitID",
                            "start": [
                                434,
                                32
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                434,
                                48
                            ],
                            "name": "allyTeam",
                            "start": [
                                434,
                                40
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                434,
                                53
                            ],
                            "name": "los",
                            "start": [
                                434,
                                50
                            ],
                            "type": "local",
                            "view": "number|table"
                        }
                    ],
                    "finish": [
                        434,
                        58
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        434,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetUnitLosState(unitID: integer, allyTeam: number, los: number|table)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    434,
                    31
                ],
                "name": "SetUnitLosState",
                "start": [
                    434,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetUnitLosState",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                752,
                                34
                            ],
                            "name": "unitID",
                            "start": [
                                752,
                                28
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                752,
                                40
                            ],
                            "name": "mass",
                            "start": [
                                752,
                                36
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "finish": [
                        752,
                        45
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        752,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetUnitMass(unitID: integer, mass: number)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    752,
                    27
                ],
                "name": "SetUnitMass",
                "start": [
                    752,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetUnitMass",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                295,
                                39
                            ],
                            "name": "unitID",
                            "start": [
                                295,
                                33
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                295,
                                50
                            ],
                            "name": "maxHealth",
                            "start": [
                                295,
                                41
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "finish": [
                        295,
                        55
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        295,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetUnitMaxHealth(unitID: integer, maxHealth: number)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    295,
                    32
                ],
                "name": "SetUnitMaxHealth",
                "start": [
                    295,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetUnitMaxHealth",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                381,
                                38
                            ],
                            "name": "unitID",
                            "start": [
                                381,
                                32
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                381,
                                48
                            ],
                            "name": "maxRange",
                            "start": [
                                381,
                                40
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "finish": [
                        381,
                        53
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        381,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetUnitMaxRange(unitID: integer, maxRange: number)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    381,
                    31
                ],
                "name": "SetUnitMaxRange",
                "start": [
                    381,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetUnitMaxRange",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `depth` — corresponds to metal extraction rate\n\n@*param* `range` — similar to \"extractsMetal\" in unitDefs.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                483,
                                45
                            ],
                            "name": "unitID",
                            "start": [
                                483,
                                39
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "desc": "corresponds to metal extraction rate",
                            "finish": [
                                483,
                                52
                            ],
                            "name": "depth",
                            "rawdesc": "corresponds to metal extraction rate",
                            "start": [
                                483,
                                47
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "desc": "similar to \"extractsMetal\" in unitDefs.",
                            "finish": [
                                483,
                                59
                            ],
                            "name": "range",
                            "rawdesc": "similar to \"extractsMetal\" in unitDefs.",
                            "start": [
                                483,
                                54
                            ],
                            "type": "local",
                            "view": "number?"
                        }
                    ],
                    "desc": "@*param* `depth` — corresponds to metal extraction rate\n\n@*param* `range` — similar to \"extractsMetal\" in unitDefs.",
                    "finish": [
                        483,
                        64
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        483,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetUnitMetalExtraction(unitID: integer, depth: number, range?: number)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    483,
                    38
                ],
                "name": "SetUnitMetalExtraction",
                "start": [
                    483,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetUnitMetalExtraction",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `mpX` — new middle positionX of unit\n\n@*param* `mpY` — new middle positionY of unit\n\n@*param* `mpZ` — new middle positionZ of unit\n\n@*param* `apX` — new positionX that enemies aim at on this unit\n\n@*param* `apY` — new positionY that enemies aim at on this unit\n\n@*param* `apZ` — new positionZ that enemies aim at on this unit\n\n@*param* `relative` — (Default: false) are the new coordinates relative to world (false) or unit (true) coordinates? Also, note that apy is inverted!",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                596,
                                42
                            ],
                            "name": "unitID",
                            "start": [
                                596,
                                36
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "desc": "new middle positionX of unit",
                            "finish": [
                                596,
                                47
                            ],
                            "name": "mpX",
                            "rawdesc": "new middle positionX of unit",
                            "start": [
                                596,
                                44
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "desc": "new middle positionY of unit",
                            "finish": [
                                596,
                                52
                            ],
                            "name": "mpY",
                            "rawdesc": "new middle positionY of unit",
                            "start": [
                                596,
                                49
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "desc": "new middle positionZ of unit",
                            "finish": [
                                596,
                                57
                            ],
                            "name": "mpZ",
                            "rawdesc": "new middle positionZ of unit",
                            "start": [
                                596,
                                54
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "desc": "new positionX that enemies aim at on this unit",
                            "finish": [
                                596,
                                62
                            ],
                            "name": "apX",
                            "rawdesc": "new positionX that enemies aim at on this unit",
                            "start": [
                                596,
                                59
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "desc": "new positionY that enemies aim at on this unit",
                            "finish": [
                                596,
                                67
                            ],
                            "name": "apY",
                            "rawdesc": "new positionY that enemies aim at on this unit",
                            "start": [
                                596,
                                64
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "desc": "new positionZ that enemies aim at on this unit",
                            "finish": [
                                596,
                                72
                            ],
                            "name": "apZ",
                            "rawdesc": "new positionZ that enemies aim at on this unit",
                            "start": [
                                596,
                                69
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "desc": "(Default: false) are the new coordinates relative to world (false) or unit (true) coordinates? Also, note that apy is inverted!",
                            "finish": [
                                596,
                                82
                            ],
                            "name": "relative",
                            "rawdesc": "(Default: false) are the new coordinates relative to world (false) or unit (true) coordinates? Also, note that apy is inverted!",
                            "start": [
                                596,
                                74
                            ],
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "@*param* `mpX` — new middle positionX of unit\n\n@*param* `mpY` — new middle positionY of unit\n\n@*param* `mpZ` — new middle positionZ of unit\n\n@*param* `apX` — new positionX that enemies aim at on this unit\n\n@*param* `apY` — new positionY that enemies aim at on this unit\n\n@*param* `apZ` — new positionZ that enemies aim at on this unit\n\n@*param* `relative` — (Default: false) are the new coordinates relative to world (false) or unit (true) coordinates? Also, note that apy is inverted!",
                    "finish": [
                        596,
                        87
                    ],
                    "returns": [
                        {
                            "name": "success",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        596,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetUnitMidAndAimPos(unitID: integer, mpX: number, mpY: number, mpZ: number, apX: number, apY: number, apZ: number, relative?: boolean)\n  -> success: boolean"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    596,
                    35
                ],
                "name": "SetUnitMidAndAimPos",
                "start": [
                    596,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetUnitMidAndAimPos",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Used by default commands to get in build-, attackrange etc.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                717,
                                38
                            ],
                            "name": "unitID",
                            "start": [
                                717,
                                32
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                717,
                                45
                            ],
                            "name": "goalX",
                            "start": [
                                717,
                                40
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                717,
                                52
                            ],
                            "name": "goalY",
                            "start": [
                                717,
                                47
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                717,
                                59
                            ],
                            "name": "goalZ",
                            "start": [
                                717,
                                54
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                717,
                                71
                            ],
                            "name": "goalRadius",
                            "start": [
                                717,
                                61
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "finish": [
                                717,
                                82
                            ],
                            "name": "moveSpeed",
                            "start": [
                                717,
                                73
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "finish": [
                                717,
                                91
                            ],
                            "name": "moveRaw",
                            "start": [
                                717,
                                84
                            ],
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "Used by default commands to get in build-, attackrange etc.",
                    "finish": [
                        717,
                        96
                    ],
                    "rawdesc": "Used by default commands to get in build-, attackrange etc.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        717,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetUnitMoveGoal(unitID: integer, goalX: number, goalY: number, goalZ: number, goalRadius?: number, moveSpeed?: number, moveRaw?: boolean)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    717,
                    31
                ],
                "name": "SetUnitMoveGoal",
                "rawdesc": "Used by default commands to get in build-, attackrange etc.",
                "start": [
                    717,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetUnitMoveGoal",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nThis saves a lot of engine calls, by replacing: function script.QueryNanoPiece() return currentpiece end\nUse it!",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                514,
                                43
                            ],
                            "name": "builderID",
                            "start": [
                                514,
                                34
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                514,
                                51
                            ],
                            "name": "pieces",
                            "start": [
                                514,
                                45
                            ],
                            "type": "local",
                            "view": "table"
                        }
                    ],
                    "desc": "\nThis saves a lot of engine calls, by replacing: function script.QueryNanoPiece() return currentpiece end\nUse it!",
                    "finish": [
                        514,
                        56
                    ],
                    "rawdesc": "\nThis saves a lot of engine calls, by replacing: function script.QueryNanoPiece() return currentpiece end\nUse it!",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        514,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetUnitNanoPieces(builderID: integer, pieces: table)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    514,
                    33
                ],
                "name": "SetUnitNanoPieces",
                "rawdesc": "\nThis saves a lot of engine calls, by replacing: function script.QueryNanoPiece() return currentpiece end\nUse it!",
                "start": [
                    514,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetUnitNanoPieces",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                565,
                                37
                            ],
                            "name": "unitID",
                            "start": [
                                565,
                                31
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                565,
                                46
                            ],
                            "name": "neutral",
                            "start": [
                                565,
                                39
                            ],
                            "type": "local",
                            "view": "boolean"
                        }
                    ],
                    "finish": [
                        565,
                        51
                    ],
                    "returns": [
                        {
                            "name": "setNeutral",
                            "type": "function.return",
                            "view": "boolean|nil"
                        }
                    ],
                    "start": [
                        565,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetUnitNeutral(unitID: integer, neutral: boolean)\n  -> setNeutral: boolean|nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    565,
                    30
                ],
                "name": "SetUnitNeutral",
                "start": [
                    565,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetUnitNeutral",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                460,
                                36
                            ],
                            "name": "unitID",
                            "start": [
                                460,
                                30
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                460,
                                44
                            ],
                            "name": "noDraw",
                            "start": [
                                460,
                                38
                            ],
                            "type": "local",
                            "view": "boolean"
                        }
                    ],
                    "finish": [
                        460,
                        49
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        460,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetUnitNoDraw(unitID: integer, noDraw: boolean)\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    460,
                    29
                ],
                "name": "SetUnitNoDraw",
                "start": [
                    460,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetUnitNoDraw",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `unitNoGroup` — Whether unit can be added to selection groups",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                479,
                                37
                            ],
                            "name": "unitID",
                            "start": [
                                479,
                                31
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "desc": "Whether unit can be added to selection groups",
                            "finish": [
                                479,
                                50
                            ],
                            "name": "unitNoGroup",
                            "rawdesc": "Whether unit can be added to selection groups",
                            "start": [
                                479,
                                39
                            ],
                            "type": "local",
                            "view": "boolean"
                        }
                    ],
                    "desc": "@*param* `unitNoGroup` — Whether unit can be added to selection groups",
                    "finish": [
                        479,
                        55
                    ],
                    "start": [
                        479,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetUnitNoGroup(unitID: integer, unitNoGroup: boolean)"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    479,
                    30
                ],
                "name": "SetUnitNoGroup",
                "start": [
                    479,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetUnitNoGroup",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                475,
                                39
                            ],
                            "name": "unitID",
                            "start": [
                                475,
                                33
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                475,
                                54
                            ],
                            "name": "unitNoMinimap",
                            "start": [
                                475,
                                41
                            ],
                            "type": "local",
                            "view": "boolean"
                        }
                    ],
                    "finish": [
                        475,
                        59
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        475,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetUnitNoMinimap(unitID: integer, unitNoMinimap: boolean)\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    475,
                    32
                ],
                "name": "SetUnitNoMinimap",
                "start": [
                    475,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetUnitNoMinimap",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `unitNoSelect` — whether unit can be selected or not",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                484,
                                38
                            ],
                            "name": "unitID",
                            "start": [
                                484,
                                32
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "desc": "whether unit can be selected or not",
                            "finish": [
                                484,
                                52
                            ],
                            "name": "unitNoSelect",
                            "rawdesc": "whether unit can be selected or not",
                            "start": [
                                484,
                                40
                            ],
                            "type": "local",
                            "view": "boolean"
                        }
                    ],
                    "desc": "@*param* `unitNoSelect` — whether unit can be selected or not",
                    "finish": [
                        484,
                        57
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        484,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetUnitNoSelect(unitID: integer, unitNoSelect: boolean)\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    484,
                    31
                ],
                "name": "SetUnitNoSelect",
                "start": [
                    484,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetUnitNoSelect",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `Physical` — [bit] state bit",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                556,
                                46
                            ],
                            "name": "unitID",
                            "start": [
                                556,
                                40
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "desc": "[bit] state bit",
                            "finish": [
                                556,
                                56
                            ],
                            "name": "Physical",
                            "rawdesc": "[bit] state bit",
                            "start": [
                                556,
                                48
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "@*param* `Physical` — [bit] state bit",
                    "finish": [
                        556,
                        61
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        556,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetUnitPhysicalStateBit(unitID: integer, Physical: number)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    556,
                    39
                ],
                "name": "SetUnitPhysicalStateBit",
                "start": [
                    556,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetUnitPhysicalStateBit",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                747,
                                37
                            ],
                            "name": "unitID",
                            "start": [
                                747,
                                31
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                747,
                                43
                            ],
                            "name": "posX",
                            "start": [
                                747,
                                39
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                747,
                                49
                            ],
                            "name": "posY",
                            "start": [
                                747,
                                45
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                747,
                                55
                            ],
                            "name": "posZ",
                            "start": [
                                747,
                                51
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                747,
                                61
                            ],
                            "name": "velX",
                            "start": [
                                747,
                                57
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                747,
                                67
                            ],
                            "name": "velY",
                            "start": [
                                747,
                                63
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                747,
                                73
                            ],
                            "name": "velZ",
                            "start": [
                                747,
                                69
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                747,
                                79
                            ],
                            "name": "rotX",
                            "start": [
                                747,
                                75
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                747,
                                85
                            ],
                            "name": "rotY",
                            "start": [
                                747,
                                81
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                747,
                                91
                            ],
                            "name": "rotZ",
                            "start": [
                                747,
                                87
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                747,
                                98
                            ],
                            "name": "dragX",
                            "start": [
                                747,
                                93
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                747,
                                105
                            ],
                            "name": "dragY",
                            "start": [
                                747,
                                100
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                747,
                                112
                            ],
                            "name": "dragZ",
                            "start": [
                                747,
                                107
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "finish": [
                        747,
                        117
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        747,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetUnitPhysics(unitID: integer, posX: number, posY: number, posZ: number, velX: number, velY: number, velZ: number, rotX: number, rotY: number, rotZ: number, dragX: number, dragY: number, dragZ: number)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    747,
                    30
                ],
                "name": "SetUnitPhysics",
                "start": [
                    747,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetUnitPhysics",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                675,
                                54
                            ],
                            "name": "unitID",
                            "start": [
                                675,
                                48
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                675,
                                66
                            ],
                            "name": "pieceIndex",
                            "start": [
                                675,
                                56
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                675,
                                74
                            ],
                            "name": "enable",
                            "start": [
                                675,
                                68
                            ],
                            "type": "local",
                            "view": "boolean"
                        },
                        {
                            "finish": [
                                675,
                                82
                            ],
                            "name": "scaleX",
                            "start": [
                                675,
                                76
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                675,
                                90
                            ],
                            "name": "scaleY",
                            "start": [
                                675,
                                84
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                675,
                                98
                            ],
                            "name": "scaleZ",
                            "start": [
                                675,
                                92
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                675,
                                107
                            ],
                            "name": "offsetX",
                            "start": [
                                675,
                                100
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                675,
                                116
                            ],
                            "name": "offsetY",
                            "start": [
                                675,
                                109
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                675,
                                125
                            ],
                            "name": "offsetZ",
                            "start": [
                                675,
                                118
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                675,
                                137
                            ],
                            "name": "volumeType",
                            "start": [
                                675,
                                127
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "finish": [
                                675,
                                150
                            ],
                            "name": "primaryAxis",
                            "start": [
                                675,
                                139
                            ],
                            "type": "local",
                            "view": "number?"
                        }
                    ],
                    "finish": [
                        675,
                        155
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        675,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetUnitPieceCollisionVolumeData(unitID: integer, pieceIndex: number, enable: boolean, scaleX: number, scaleY: number, scaleZ: number, offsetX: number, offsetY: number, offsetZ: number, volumeType?: number, primaryAxis?: number)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    675,
                    47
                ],
                "name": "SetUnitPieceCollisionVolumeData",
                "start": [
                    675,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetUnitPieceCollisionVolumeData",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Sets the local (i.e. parent-relative) matrix of the given piece.\n\nIf any of the first three elements are non-zero, and also blocks all script animations from modifying it until {0, 0, 0} is passed.\n\n@*param* `matrix` — an array of 16 floats",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                628,
                                41
                            ],
                            "name": "unitID",
                            "start": [
                                628,
                                35
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                628,
                                51
                            ],
                            "name": "pieceNum",
                            "start": [
                                628,
                                43
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "desc": "an array of 16 floats",
                            "finish": [
                                628,
                                59
                            ],
                            "name": "matrix",
                            "rawdesc": "an array of 16 floats",
                            "start": [
                                628,
                                53
                            ],
                            "type": "local",
                            "view": "number[]"
                        }
                    ],
                    "desc": "Sets the local (i.e. parent-relative) matrix of the given piece.\n\nIf any of the first three elements are non-zero, and also blocks all script animations from modifying it until {0, 0, 0} is passed.\n\n@*param* `matrix` — an array of 16 floats",
                    "finish": [
                        628,
                        64
                    ],
                    "rawdesc": "Sets the local (i.e. parent-relative) matrix of the given piece.\n\nIf any of the first three elements are non-zero, and also blocks all script animations from modifying it until {0, 0, 0} is passed.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        628,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetUnitPieceMatrix(unitID: integer, pieceNum: number, matrix: number[])\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    628,
                    34
                ],
                "name": "SetUnitPieceMatrix",
                "rawdesc": "Sets the local (i.e. parent-relative) matrix of the given piece.\n\nIf any of the first three elements are non-zero, and also blocks all script animations from modifying it until {0, 0, 0} is passed.",
                "start": [
                    628,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetUnitPieceMatrix",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Changes the pieces hierarchy of a unit by attaching a piece to a new parent.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                618,
                                41
                            ],
                            "name": "unitID",
                            "start": [
                                618,
                                35
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                618,
                                55
                            ],
                            "name": "AlteredPiece",
                            "start": [
                                618,
                                43
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                618,
                                68
                            ],
                            "name": "ParentPiece",
                            "start": [
                                618,
                                57
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "Changes the pieces hierarchy of a unit by attaching a piece to a new parent.",
                    "finish": [
                        618,
                        73
                    ],
                    "rawdesc": "Changes the pieces hierarchy of a unit by attaching a piece to a new parent.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        618,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetUnitPieceParent(unitID: integer, AlteredPiece: number, ParentPiece: number)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    618,
                    34
                ],
                "name": "SetUnitPieceParent",
                "rawdesc": "Changes the pieces hierarchy of a unit by attaching a piece to a new parent.",
                "start": [
                    618,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetUnitPieceParent",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                681,
                                42
                            ],
                            "name": "unitID",
                            "start": [
                                681,
                                36
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                681,
                                54
                            ],
                            "name": "pieceIndex",
                            "start": [
                                681,
                                44
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                681,
                                63
                            ],
                            "name": "visible",
                            "start": [
                                681,
                                56
                            ],
                            "type": "local",
                            "view": "boolean"
                        }
                    ],
                    "finish": [
                        681,
                        68
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        681,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetUnitPieceVisible(unitID: integer, pieceIndex: number, visible: boolean)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    681,
                    35
                ],
                "name": "SetUnitPieceVisible",
                "start": [
                    681,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetUnitPieceVisible",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Sets a unit's radar wobble\n\nControls how much a unit's radar dot will wobble. Note that setting\nthis above the allyTeam's default wobble may result in the edgemost\ndot positions failing to register in ray traces, i.e. things like\nnative \"is under cursor\" checks and some Lua interfaces.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                705,
                                44
                            ],
                            "name": "unitID",
                            "start": [
                                705,
                                38
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                705,
                                61
                            ],
                            "name": "posErrorVectorX",
                            "start": [
                                705,
                                46
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                705,
                                78
                            ],
                            "name": "posErrorVectorY",
                            "start": [
                                705,
                                63
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                705,
                                95
                            ],
                            "name": "posErrorVectorZ",
                            "start": [
                                705,
                                80
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                705,
                                111
                            ],
                            "name": "posErrorDeltaX",
                            "start": [
                                705,
                                97
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                705,
                                127
                            ],
                            "name": "posErrorDeltaY",
                            "start": [
                                705,
                                113
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                705,
                                143
                            ],
                            "name": "posErrorDeltaZ",
                            "start": [
                                705,
                                129
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                705,
                                163
                            ],
                            "name": "nextPosErrorUpdate",
                            "start": [
                                705,
                                145
                            ],
                            "type": "local",
                            "view": "number?"
                        }
                    ],
                    "desc": "Sets a unit's radar wobble\n\nControls how much a unit's radar dot will wobble. Note that setting\nthis above the allyTeam's default wobble may result in the edgemost\ndot positions failing to register in ray traces, i.e. things like\nnative \"is under cursor\" checks and some Lua interfaces.",
                    "finish": [
                        705,
                        168
                    ],
                    "rawdesc": "Sets a unit's radar wobble\n\nControls how much a unit's radar dot will wobble. Note that setting\nthis above the allyTeam's default wobble may result in the edgemost\ndot positions failing to register in ray traces, i.e. things like\nnative \"is under cursor\" checks and some Lua interfaces.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        705,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetUnitPosErrorParams(unitID: integer, posErrorVectorX: number, posErrorVectorY: number, posErrorVectorZ: number, posErrorDeltaX: number, posErrorDeltaY: number, posErrorDeltaZ: number, nextPosErrorUpdate?: number)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    705,
                    37
                ],
                "name": "SetUnitPosErrorParams",
                "rawdesc": "Sets a unit's radar wobble\n\nControls how much a unit's radar dot will wobble. Note that setting\nthis above the allyTeam's default wobble may result in the edgemost\ndot positions failing to register in ray traces, i.e. things like\nnative \"is under cursor\" checks and some Lua interfaces.",
                "start": [
                    705,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetUnitPosErrorParams",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Set unit position (2D)\n\nSets a unit's position in 2D, at terrain height.\n\n@*param* `floating` — (Default: false) If true, over water the position is on surface. If false, on seafloor.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                763,
                                38
                            ],
                            "name": "unitID",
                            "start": [
                                763,
                                32
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                763,
                                41
                            ],
                            "name": "x",
                            "start": [
                                763,
                                40
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                763,
                                44
                            ],
                            "name": "z",
                            "start": [
                                763,
                                43
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "desc": "(Default: false) If true, over water the position is on surface. If false, on seafloor.",
                            "finish": [
                                763,
                                54
                            ],
                            "name": "floating",
                            "rawdesc": "(Default: false) If true, over water the position is on surface. If false, on seafloor.",
                            "start": [
                                763,
                                46
                            ],
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "Set unit position (2D)\n\nSets a unit's position in 2D, at terrain height.\n\n@*param* `floating` — (Default: false) If true, over water the position is on surface. If false, on seafloor.",
                    "finish": [
                        763,
                        59
                    ],
                    "rawdesc": "Set unit position (2D)\n\nSets a unit's position in 2D, at terrain height.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        763,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetUnitPosition(unitID: integer, x: number, z: number, floating?: boolean)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    763,
                    31
                ],
                "name": "SetUnitPosition",
                "rawdesc": "Set unit position (2D)\n\nSets a unit's position in 2D, at terrain height.",
                "start": [
                    763,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Set unit position (3D)\n\nSets a unit's position in 3D, at an arbitrary height.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                774,
                                38
                            ],
                            "name": "unitID",
                            "start": [
                                774,
                                32
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                774,
                                41
                            ],
                            "name": "x",
                            "start": [
                                774,
                                40
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                774,
                                44
                            ],
                            "name": "y",
                            "start": [
                                774,
                                43
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                774,
                                47
                            ],
                            "name": "z",
                            "start": [
                                774,
                                46
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "Set unit position (3D)\n\nSets a unit's position in 3D, at an arbitrary height.",
                    "finish": [
                        774,
                        52
                    ],
                    "rawdesc": "Set unit position (3D)\n\nSets a unit's position in 3D, at an arbitrary height.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        774,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetUnitPosition(unitID: integer, x: number, y: number, z: number)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    774,
                    31
                ],
                "name": "SetUnitPosition",
                "rawdesc": "Set unit position (3D)\n\nSets a unit's position in 3D, at an arbitrary height.",
                "start": [
                    774,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetUnitPosition",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                602,
                                45
                            ],
                            "name": "unitID",
                            "start": [
                                602,
                                39
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                602,
                                53
                            ],
                            "name": "radius",
                            "start": [
                                602,
                                47
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                602,
                                61
                            ],
                            "name": "height",
                            "start": [
                                602,
                                55
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "finish": [
                        602,
                        66
                    ],
                    "returns": [
                        {
                            "name": "success",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        602,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetUnitRadiusAndHeight(unitID: integer, radius: number, height: number)\n  -> success: boolean"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    602,
                    38
                ],
                "name": "SetUnitRadiusAndHeight",
                "start": [
                    602,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetUnitRadiusAndHeight",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                262,
                                40
                            ],
                            "name": "unitID",
                            "start": [
                                262,
                                34
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                262,
                                45
                            ],
                            "name": "res",
                            "start": [
                                262,
                                42
                            ],
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": [
                                262,
                                53
                            ],
                            "name": "amount",
                            "start": [
                                262,
                                47
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "finish": [
                        262,
                        58
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        262,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetUnitResourcing(unitID: integer, res: string, amount: number)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    262,
                    33
                ],
                "name": "SetUnitResourcing",
                "start": [
                    262,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `res` — keys are: \"[u|c][u|m][m|e]\" unconditional | conditional, use | make, metal | energy. Values are amounts",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                267,
                                40
                            ],
                            "name": "unitID",
                            "start": [
                                267,
                                34
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "desc": "keys are: \"[u|c][u|m][m|e]\" unconditional | conditional, use | make, metal | energy. Values are amounts",
                            "finish": [
                                267,
                                45
                            ],
                            "name": "res",
                            "rawdesc": "keys are: \"[u|c][u|m][m|e]\" unconditional | conditional, use | make, metal | energy. Values are amounts",
                            "start": [
                                267,
                                42
                            ],
                            "type": "local",
                            "view": "table<string, number>"
                        }
                    ],
                    "desc": "@*param* `res` — keys are: \"[u|c][u|m][m|e]\" unconditional | conditional, use | make, metal | energy. Values are amounts",
                    "finish": [
                        267,
                        50
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        267,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetUnitResourcing(unitID: integer, res: table<string, number>)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    267,
                    33
                ],
                "name": "SetUnitResourcing",
                "start": [
                    267,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetUnitResourcing",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                781,
                                38
                            ],
                            "name": "unitID",
                            "start": [
                                781,
                                32
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                781,
                                43
                            ],
                            "name": "yaw",
                            "start": [
                                781,
                                40
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                781,
                                50
                            ],
                            "name": "pitch",
                            "start": [
                                781,
                                45
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                781,
                                56
                            ],
                            "name": "roll",
                            "start": [
                                781,
                                52
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "finish": [
                        781,
                        61
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        781,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetUnitRotation(unitID: integer, yaw: number, pitch: number, roll: number)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    781,
                    31
                ],
                "name": "SetUnitRotation",
                "start": [
                    781,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetUnitRotation",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `paramValue` — numeric paramValues in quotes will be converted to number.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                185,
                                40
                            ],
                            "name": "unitID",
                            "start": [
                                185,
                                34
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                185,
                                51
                            ],
                            "name": "paramName",
                            "start": [
                                185,
                                42
                            ],
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "desc": "numeric paramValues in quotes will be converted to number.",
                            "finish": [
                                185,
                                63
                            ],
                            "name": "paramValue",
                            "rawdesc": "numeric paramValues in quotes will be converted to number.",
                            "start": [
                                185,
                                53
                            ],
                            "type": "local",
                            "view": "(string|number)?"
                        },
                        {
                            "desc": "Parameters for los access\n\n\nIf one condition is fulfilled all beneath it are too (e.g. if an unit is in\nLOS it can read params with `inradar=true` even if the param has\n`inlos=false`) All GameRulesParam are public, TeamRulesParams can just be\n`private`,`allied` and/or `public` You can read RulesParams from any Lua\nenvironments! With those losAccess policies you can limit their access.\n\nAll GameRulesParam are public, TeamRulesParams can just be `private`,`allied` and/or `public`\nYou can read RulesParams from any Lua environments! With those losAccess policies you can limit their access.\n",
                            "finish": [
                                185,
                                74
                            ],
                            "name": "losAccess",
                            "rawdesc": "Parameters for los access\n\n\nIf one condition is fulfilled all beneath it are too (e.g. if an unit is in\nLOS it can read params with `inradar=true` even if the param has\n`inlos=false`) All GameRulesParam are public, TeamRulesParams can just be\n`private`,`allied` and/or `public` You can read RulesParams from any Lua\nenvironments! With those losAccess policies you can limit their access.\n\nAll GameRulesParam are public, TeamRulesParams can just be `private`,`allied` and/or `public`\nYou can read RulesParams from any Lua environments! With those losAccess policies you can limit their access.\n",
                            "start": [
                                185,
                                65
                            ],
                            "type": "local",
                            "view": "losAccess?"
                        }
                    ],
                    "desc": "@*param* `paramValue` — numeric paramValues in quotes will be converted to number.",
                    "finish": [
                        185,
                        79
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        185,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetUnitRulesParam(unitID: integer, paramName: string, paramValue?: string|number, losAccess?: losAccess)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    185,
                    33
                ],
                "name": "SetUnitRulesParam",
                "start": [
                    185,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetUnitRulesParam",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                467,
                                46
                            ],
                            "name": "unitID",
                            "start": [
                                467,
                                40
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                467,
                                64
                            ],
                            "name": "seismicSignature",
                            "start": [
                                467,
                                48
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "finish": [
                        467,
                        69
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        467,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetUnitSeismicSignature(unitID: integer, seismicSignature: number)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    467,
                    39
                ],
                "name": "SetUnitSeismicSignature",
                "start": [
                    467,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetUnitSeismicSignature",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                503,
                                49
                            ],
                            "name": "unitID",
                            "start": [
                                503,
                                43
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                503,
                                60
                            ],
                            "name": "featureID",
                            "start": [
                                503,
                                51
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                503,
                                68
                            ],
                            "name": "scaleX",
                            "start": [
                                503,
                                62
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                503,
                                76
                            ],
                            "name": "scaleY",
                            "start": [
                                503,
                                70
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                503,
                                84
                            ],
                            "name": "scaleZ",
                            "start": [
                                503,
                                78
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                503,
                                93
                            ],
                            "name": "offsetX",
                            "start": [
                                503,
                                86
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                503,
                                102
                            ],
                            "name": "offsetY",
                            "start": [
                                503,
                                95
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                503,
                                111
                            ],
                            "name": "offsetZ",
                            "start": [
                                503,
                                104
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                503,
                                118
                            ],
                            "name": "vType",
                            "start": [
                                503,
                                113
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                503,
                                125
                            ],
                            "name": "tType",
                            "start": [
                                503,
                                120
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                503,
                                131
                            ],
                            "name": "Axis",
                            "start": [
                                503,
                                127
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "finish": [
                        503,
                        136
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        503,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetUnitSelectionVolumeData(unitID: integer, featureID: integer, scaleX: number, scaleY: number, scaleZ: number, offsetX: number, offsetY: number, offsetZ: number, vType: number, tType: number, Axis: number)\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    503,
                    42
                ],
                "name": "SetUnitSelectionVolumeData",
                "start": [
                    503,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetUnitSelectionVolumeData",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*return* `New` — radius, or `nil` if unit is invalid.\n\n```lua\ntype:\n    | \"los\"\n    | \"airLos\"\n    | \"radar\"\n    | \"sonar\"\n    | \"seismic\"\n    | \"radarJammer\"\n    | \"sonarJammer\"\n```",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                687,
                                42
                            ],
                            "name": "unitID",
                            "start": [
                                687,
                                36
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                687,
                                48
                            ],
                            "name": "type",
                            "start": [
                                687,
                                44
                            ],
                            "type": "local",
                            "view": "\"airLos\"|\"los\"|\"radar\"|\"radarJammer\"|\"seismic\"...(+2)"
                        },
                        {
                            "finish": [
                                687,
                                56
                            ],
                            "name": "radius",
                            "start": [
                                687,
                                50
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "@*return* `New` — radius, or `nil` if unit is invalid.\n\n```lua\ntype:\n    | \"los\"\n    | \"airLos\"\n    | \"radar\"\n    | \"sonar\"\n    | \"seismic\"\n    | \"radarJammer\"\n    | \"sonarJammer\"\n```",
                    "finish": [
                        687,
                        61
                    ],
                    "rawdesc": "```lua\ntype:\n    | \"los\"\n    | \"airLos\"\n    | \"radar\"\n    | \"sonar\"\n    | \"seismic\"\n    | \"radarJammer\"\n    | \"sonarJammer\"\n```",
                    "returns": [
                        {
                            "desc": "radius, or `nil` if unit is invalid.",
                            "name": "New",
                            "rawdesc": "radius, or `nil` if unit is invalid.",
                            "type": "function.return",
                            "view": "number?"
                        }
                    ],
                    "start": [
                        687,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetUnitSensorRadius(unitID: integer, type: \"airLos\"|\"los\"|\"radar\"|\"radarJammer\"|\"seismic\"...(+2), radius: number)\n  -> New: number?"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    687,
                    35
                ],
                "name": "SetUnitSensorRadius",
                "rawdesc": "```lua\ntype:\n    | \"los\"\n    | \"airLos\"\n    | \"radar\"\n    | \"sonar\"\n    | \"seismic\"\n    | \"radarJammer\"\n    | \"sonarJammer\"\n```",
                "start": [
                    687,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetUnitSensorRadius",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `weaponID` — (optional if the unit only has one shield)\n\n@*param* `rechargeTime` — (in seconds; emulates a regular hit if nil)",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                543,
                                49
                            ],
                            "name": "unitID",
                            "start": [
                                543,
                                43
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "desc": "(optional if the unit only has one shield)",
                            "finish": [
                                543,
                                59
                            ],
                            "name": "weaponID",
                            "rawdesc": "(optional if the unit only has one shield)",
                            "start": [
                                543,
                                51
                            ],
                            "type": "local",
                            "view": "integer?"
                        },
                        {
                            "desc": "(in seconds; emulates a regular hit if nil)",
                            "finish": [
                                543,
                                73
                            ],
                            "name": "rechargeTime",
                            "rawdesc": "(in seconds; emulates a regular hit if nil)",
                            "start": [
                                543,
                                61
                            ],
                            "type": "local",
                            "view": "number?"
                        }
                    ],
                    "desc": "@*param* `weaponID` — (optional if the unit only has one shield)\n\n@*param* `rechargeTime` — (in seconds; emulates a regular hit if nil)",
                    "finish": [
                        543,
                        78
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        543,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetUnitShieldRechargeDelay(unitID: integer, weaponID?: integer, rechargeTime?: number)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    543,
                    42
                ],
                "name": "SetUnitShieldRechargeDelay",
                "start": [
                    543,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetUnitShieldRechargeDelay",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `weaponID` — (Default: -1)",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                537,
                                41
                            ],
                            "name": "unitID",
                            "start": [
                                537,
                                35
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "desc": "(Default: -1)",
                            "finish": [
                                537,
                                51
                            ],
                            "name": "weaponID",
                            "rawdesc": "(Default: -1)",
                            "start": [
                                537,
                                43
                            ],
                            "type": "local",
                            "view": "integer?"
                        },
                        {
                            "finish": [
                                537,
                                60
                            ],
                            "name": "enabled",
                            "start": [
                                537,
                                53
                            ],
                            "type": "local",
                            "view": "boolean?"
                        },
                        {
                            "finish": [
                                537,
                                67
                            ],
                            "name": "power",
                            "start": [
                                537,
                                62
                            ],
                            "type": "local",
                            "view": "number?"
                        }
                    ],
                    "desc": "@*param* `weaponID` — (Default: -1)",
                    "finish": [
                        537,
                        72
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        537,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetUnitShieldState(unitID: integer, weaponID?: integer, enabled?: boolean, power?: number)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    537,
                    34
                ],
                "name": "SetUnitShieldState",
                "start": [
                    537,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetUnitShieldState",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                462,
                                42
                            ],
                            "name": "unitID",
                            "start": [
                                462,
                                36
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                462,
                                56
                            ],
                            "name": "sonarStealth",
                            "start": [
                                462,
                                44
                            ],
                            "type": "local",
                            "view": "boolean"
                        }
                    ],
                    "finish": [
                        462,
                        61
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        462,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetUnitSonarStealth(unitID: integer, sonarStealth: boolean)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    462,
                    35
                ],
                "name": "SetUnitSonarStealth",
                "start": [
                    462,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetUnitSonarStealth",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                457,
                                37
                            ],
                            "name": "unitID",
                            "start": [
                                457,
                                31
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                457,
                                46
                            ],
                            "name": "stealth",
                            "start": [
                                457,
                                39
                            ],
                            "type": "local",
                            "view": "boolean"
                        }
                    ],
                    "finish": [
                        457,
                        51
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        457,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetUnitStealth(unitID: integer, stealth: boolean)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    457,
                    30
                ],
                "name": "SetUnitStealth",
                "start": [
                    457,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetUnitStealth",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                301,
                                39
                            ],
                            "name": "unitID",
                            "start": [
                                301,
                                33
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                301,
                                50
                            ],
                            "name": "stockpile",
                            "start": [
                                301,
                                41
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "finish": [
                                301,
                                64
                            ],
                            "name": "buildPercent",
                            "start": [
                                301,
                                52
                            ],
                            "type": "local",
                            "view": "number?"
                        }
                    ],
                    "finish": [
                        301,
                        69
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        301,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetUnitStockpile(unitID: integer, stockpile?: number, buildPercent?: number)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    301,
                    32
                ],
                "name": "SetUnitStockpile",
                "start": [
                    301,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetUnitStockpile",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                276,
                                37
                            ],
                            "name": "unitID",
                            "start": [
                                276,
                                31
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                276,
                                42
                            ],
                            "name": "res",
                            "start": [
                                276,
                                39
                            ],
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": [
                                276,
                                50
                            ],
                            "name": "amount",
                            "start": [
                                276,
                                44
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "finish": [
                        276,
                        55
                    ],
                    "start": [
                        276,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetUnitStorage(unitID: number, res: string, amount: number)"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    276,
                    30
                ],
                "name": "SetUnitStorage",
                "start": [
                    276,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `res` — keys are: \"[m|e]\" metal | energy. Values are amounts",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                280,
                                37
                            ],
                            "name": "unitID",
                            "start": [
                                280,
                                31
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "desc": "keys are: \"[m|e]\" metal | energy. Values are amounts",
                            "finish": [
                                280,
                                42
                            ],
                            "name": "res",
                            "rawdesc": "keys are: \"[m|e]\" metal | energy. Values are amounts",
                            "start": [
                                280,
                                39
                            ],
                            "type": "local",
                            "view": "table<\"e\"|\"energy\"|\"m\"|\"metal\", number>"
                        }
                    ],
                    "desc": "@*param* `res` — keys are: \"[m|e]\" metal | energy. Values are amounts",
                    "finish": [
                        280,
                        47
                    ],
                    "start": [
                        280,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetUnitStorage(unitID: number, res: table<\"e\"|\"energy\"|\"m\"|\"metal\", number>)"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    280,
                    30
                ],
                "name": "SetUnitStorage",
                "start": [
                    280,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetUnitStorage",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Defines a unit's target.\n\n@*param* `enemyUnitID` — when nil drops the units current target.\n\n@*param* `dgun` — (Default: false)\n\n@*param* `userTarget` — (Default: false)\n\n@*param* `weaponNum` — (Default: -1)",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                575,
                                36
                            ],
                            "name": "unitID",
                            "start": [
                                575,
                                30
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "desc": "when nil drops the units current target.",
                            "finish": [
                                575,
                                49
                            ],
                            "name": "enemyUnitID",
                            "rawdesc": "when nil drops the units current target.",
                            "start": [
                                575,
                                38
                            ],
                            "type": "local",
                            "view": "integer?"
                        },
                        {
                            "desc": "(Default: false)",
                            "finish": [
                                575,
                                55
                            ],
                            "name": "dgun",
                            "rawdesc": "(Default: false)",
                            "start": [
                                575,
                                51
                            ],
                            "type": "local",
                            "view": "boolean?"
                        },
                        {
                            "desc": "(Default: false)",
                            "finish": [
                                575,
                                67
                            ],
                            "name": "userTarget",
                            "rawdesc": "(Default: false)",
                            "start": [
                                575,
                                57
                            ],
                            "type": "local",
                            "view": "boolean?"
                        },
                        {
                            "desc": "(Default: -1)",
                            "finish": [
                                575,
                                78
                            ],
                            "name": "weaponNum",
                            "rawdesc": "(Default: -1)",
                            "start": [
                                575,
                                69
                            ],
                            "type": "local",
                            "view": "number?"
                        }
                    ],
                    "desc": "Defines a unit's target.\n\n@*param* `enemyUnitID` — when nil drops the units current target.\n\n@*param* `dgun` — (Default: false)\n\n@*param* `userTarget` — (Default: false)\n\n@*param* `weaponNum` — (Default: -1)",
                    "finish": [
                        575,
                        83
                    ],
                    "rawdesc": "Defines a unit's target.",
                    "returns": [
                        {
                            "name": "success",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        575,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetUnitTarget(unitID: integer, enemyUnitID?: integer, dgun?: boolean, userTarget?: boolean, weaponNum?: number)\n  -> success: boolean"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    575,
                    29
                ],
                "name": "SetUnitTarget",
                "rawdesc": "Defines a unit's target.",
                "start": [
                    575,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `x` — when nil or not passed it will drop target and ignore other parameters\n\n@*param* `dgun` — (Default: false)\n\n@*param* `userTarget` — (Default: false)\n\n@*param* `weaponNum` — (Default: -1)",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                585,
                                36
                            ],
                            "name": "unitID",
                            "start": [
                                585,
                                30
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "desc": "when nil or not passed it will drop target and ignore other parameters",
                            "finish": [
                                585,
                                39
                            ],
                            "name": "x",
                            "rawdesc": "when nil or not passed it will drop target and ignore other parameters",
                            "start": [
                                585,
                                38
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "finish": [
                                585,
                                42
                            ],
                            "name": "y",
                            "start": [
                                585,
                                41
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "finish": [
                                585,
                                45
                            ],
                            "name": "z",
                            "start": [
                                585,
                                44
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "desc": "(Default: false)",
                            "finish": [
                                585,
                                51
                            ],
                            "name": "dgun",
                            "rawdesc": "(Default: false)",
                            "start": [
                                585,
                                47
                            ],
                            "type": "local",
                            "view": "boolean?"
                        },
                        {
                            "desc": "(Default: false)",
                            "finish": [
                                585,
                                63
                            ],
                            "name": "userTarget",
                            "rawdesc": "(Default: false)",
                            "start": [
                                585,
                                53
                            ],
                            "type": "local",
                            "view": "boolean?"
                        },
                        {
                            "desc": "(Default: -1)",
                            "finish": [
                                585,
                                74
                            ],
                            "name": "weaponNum",
                            "rawdesc": "(Default: -1)",
                            "start": [
                                585,
                                65
                            ],
                            "type": "local",
                            "view": "number?"
                        }
                    ],
                    "desc": "@*param* `x` — when nil or not passed it will drop target and ignore other parameters\n\n@*param* `dgun` — (Default: false)\n\n@*param* `userTarget` — (Default: false)\n\n@*param* `weaponNum` — (Default: -1)",
                    "finish": [
                        585,
                        79
                    ],
                    "returns": [
                        {
                            "name": "success",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        585,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetUnitTarget(unitID: integer, x?: number, y?: number, z?: number, dgun?: boolean, userTarget?: boolean, weaponNum?: number)\n  -> success: boolean"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    585,
                    29
                ],
                "name": "SetUnitTarget",
                "start": [
                    585,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetUnitTarget",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                285,
                                37
                            ],
                            "name": "unitID",
                            "start": [
                                285,
                                31
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                285,
                                46
                            ],
                            "name": "tooltip",
                            "start": [
                                285,
                                39
                            ],
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "finish": [
                        285,
                        51
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        285,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetUnitTooltip(unitID: integer, tooltip: string)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    285,
                    30
                ],
                "name": "SetUnitTooltip",
                "start": [
                    285,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetUnitTooltip",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                477,
                                39
                            ],
                            "name": "unitID",
                            "start": [
                                477,
                                33
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                477,
                                50
                            ],
                            "name": "useAirLos",
                            "start": [
                                477,
                                41
                            ],
                            "type": "local",
                            "view": "boolean"
                        }
                    ],
                    "finish": [
                        477,
                        55
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        477,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetUnitUseAirLos(unitID: integer, useAirLos: boolean)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    477,
                    32
                ],
                "name": "SetUnitUseAirLos",
                "start": [
                    477,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetUnitUseAirLos",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                331,
                                40
                            ],
                            "name": "unitID",
                            "start": [
                                331,
                                34
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                331,
                                57
                            ],
                            "name": "forceUseWeapons",
                            "start": [
                                331,
                                42
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "finish": [
                                331,
                                74
                            ],
                            "name": "allowUseWeapons",
                            "start": [
                                331,
                                59
                            ],
                            "type": "local",
                            "view": "number?"
                        }
                    ],
                    "finish": [
                        331,
                        79
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        331,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetUnitUseWeapons(unitID: integer, forceUseWeapons?: number, allowUseWeapons?: number)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    331,
                    33
                ],
                "name": "SetUnitUseWeapons",
                "start": [
                    331,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetUnitUseWeapons",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                806,
                                38
                            ],
                            "name": "unitID",
                            "start": [
                                806,
                                32
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                806,
                                44
                            ],
                            "name": "velX",
                            "start": [
                                806,
                                40
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                806,
                                50
                            ],
                            "name": "velY",
                            "start": [
                                806,
                                46
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                806,
                                56
                            ],
                            "name": "velZ",
                            "start": [
                                806,
                                52
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "finish": [
                        806,
                        61
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        806,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetUnitVelocity(unitID: integer, velX: number, velY: number, velZ: number)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    806,
                    31
                ],
                "name": "SetUnitVelocity",
                "start": [
                    806,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetUnitVelocity",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "```lua\nweaponNum:\n    | \"selfDestruct\"\n    | \"explode\"\n```",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                369,
                                43
                            ],
                            "name": "unitID",
                            "start": [
                                369,
                                37
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                369,
                                54
                            ],
                            "name": "weaponNum",
                            "start": [
                                369,
                                45
                            ],
                            "type": "local",
                            "view": "number|\"explode\"|\"selfDestruct\""
                        },
                        {
                            "desc": "Parameters for damage\n",
                            "finish": [
                                369,
                                63
                            ],
                            "name": "damages",
                            "rawdesc": "Parameters for damage\n",
                            "start": [
                                369,
                                56
                            ],
                            "type": "local",
                            "view": "WeaponDamages"
                        }
                    ],
                    "desc": "```lua\nweaponNum:\n    | \"selfDestruct\"\n    | \"explode\"\n```",
                    "finish": [
                        369,
                        68
                    ],
                    "rawdesc": "```lua\nweaponNum:\n    | \"selfDestruct\"\n    | \"explode\"\n```",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        369,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetUnitWeaponDamages(unitID: integer, weaponNum: number|\"explode\"|\"selfDestruct\", damages: WeaponDamages)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    369,
                    36
                ],
                "name": "SetUnitWeaponDamages",
                "rawdesc": "```lua\nweaponNum:\n    | \"selfDestruct\"\n    | \"explode\"\n```",
                "start": [
                    369,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "```lua\nweaponNum:\n    | \"selfDestruct\"\n    | \"explode\"\n```",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                376,
                                43
                            ],
                            "name": "unitID",
                            "start": [
                                376,
                                37
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                376,
                                54
                            ],
                            "name": "weaponNum",
                            "start": [
                                376,
                                45
                            ],
                            "type": "local",
                            "view": "number|\"explode\"|\"selfDestruct\""
                        },
                        {
                            "finish": [
                                376,
                                59
                            ],
                            "name": "key",
                            "start": [
                                376,
                                56
                            ],
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": [
                                376,
                                66
                            ],
                            "name": "value",
                            "start": [
                                376,
                                61
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "```lua\nweaponNum:\n    | \"selfDestruct\"\n    | \"explode\"\n```",
                    "finish": [
                        376,
                        71
                    ],
                    "rawdesc": "```lua\nweaponNum:\n    | \"selfDestruct\"\n    | \"explode\"\n```",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        376,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetUnitWeaponDamages(unitID: integer, weaponNum: number|\"explode\"|\"selfDestruct\", key: string, value: number)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    376,
                    36
                ],
                "name": "SetUnitWeaponDamages",
                "rawdesc": "```lua\nweaponNum:\n    | \"selfDestruct\"\n    | \"explode\"\n```",
                "start": [
                    376,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetUnitWeaponDamages",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                337,
                                41
                            ],
                            "name": "unitID",
                            "start": [
                                337,
                                35
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                337,
                                52
                            ],
                            "name": "weaponNum",
                            "start": [
                                337,
                                43
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "desc": "Parameter for weapon states\n",
                            "finish": [
                                337,
                                60
                            ],
                            "name": "states",
                            "rawdesc": "Parameter for weapon states\n",
                            "start": [
                                337,
                                54
                            ],
                            "type": "local",
                            "view": "WeaponState"
                        }
                    ],
                    "finish": [
                        337,
                        65
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        337,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetUnitWeaponState(unitID: integer, weaponNum: number, states: WeaponState)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    337,
                    34
                ],
                "name": "SetUnitWeaponState",
                "start": [
                    337,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                344,
                                41
                            ],
                            "name": "unitID",
                            "start": [
                                344,
                                35
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                344,
                                52
                            ],
                            "name": "weaponNum",
                            "start": [
                                344,
                                43
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                344,
                                57
                            ],
                            "name": "key",
                            "start": [
                                344,
                                54
                            ],
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": [
                                344,
                                64
                            ],
                            "name": "value",
                            "start": [
                                344,
                                59
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "finish": [
                        344,
                        69
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        344,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetUnitWeaponState(unitID: integer, weaponNum: number, key: string, value: number)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    344,
                    34
                ],
                "name": "SetUnitWeaponState",
                "start": [
                    344,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetUnitWeaponState",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "This doesn't actually record the game in any way, it just regulates the framerate and interpolations.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1025,
                                54
                            ],
                            "name": "allowCaptureMode",
                            "start": [
                                1025,
                                38
                            ],
                            "type": "local",
                            "view": "boolean"
                        }
                    ],
                    "desc": "This doesn't actually record the game in any way, it just regulates the framerate and interpolations.",
                    "finish": [
                        1025,
                        59
                    ],
                    "rawdesc": "This doesn't actually record the game in any way, it just regulates the framerate and interpolations.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        1025,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetVideoCapturingMode(allowCaptureMode: boolean)\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    1025,
                    37
                ],
                "name": "SetVideoCapturingMode",
                "rawdesc": "This doesn't actually record the game in any way, it just regulates the framerate and interpolations.",
                "start": [
                    1025,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetVideoCapturingMode",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1029,
                                54
                            ],
                            "name": "timeOffset",
                            "start": [
                                1029,
                                44
                            ],
                            "type": "local",
                            "view": "boolean"
                        }
                    ],
                    "finish": [
                        1029,
                        59
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        1029,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetVideoCapturingTimeOffset(timeOffset: boolean)\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    1029,
                    43
                ],
                "name": "SetVideoCapturingTimeOffset",
                "start": [
                    1029,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetVideoCapturingTimeOffset",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Sets the icon for the process which is seen in the OS task-bar and other places (default: spring-logo).\n\nNote: has to be 24bit or 32bit.\nNote: on windows, it has to be 32x32 pixels in size (recommended for cross-platform)\nNote: *.bmp images have to be in BGR format (default for m$ ones).\nNote: *.ico images are not supported.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1283,
                                38
                            ],
                            "name": "iconFileName",
                            "start": [
                                1283,
                                26
                            ],
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "desc": "Sets the icon for the process which is seen in the OS task-bar and other places (default: spring-logo).\n\nNote: has to be 24bit or 32bit.\nNote: on windows, it has to be 32x32 pixels in size (recommended for cross-platform)\nNote: *.bmp images have to be in BGR format (default for m$ ones).\nNote: *.ico images are not supported.",
                    "finish": [
                        1283,
                        43
                    ],
                    "rawdesc": "Sets the icon for the process which is seen in the OS task-bar and other places (default: spring-logo).\n\nNote: has to be 24bit or 32bit.\nNote: on windows, it has to be 32x32 pixels in size (recommended for cross-platform)\nNote: *.bmp images have to be in BGR format (default for m$ ones).\nNote: *.ico images are not supported.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        1283,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetWMIcon(iconFileName: string)\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    1283,
                    25
                ],
                "name": "SetWMIcon",
                "rawdesc": "Sets the icon for the process which is seen in the OS task-bar and other places (default: spring-logo).\n\nNote: has to be 24bit or 32bit.\nNote: on windows, it has to be 32x32 pixels in size (recommended for cross-platform)\nNote: *.bmp images have to be in BGR format (default for m$ ones).\nNote: *.ico images are not supported.",
                "start": [
                    1283,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetWMIcon",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Does not need cheating enabled.\n\nAllows to change water params (mostly `BumpWater` ones) at runtime. You may\nwant to set `BumpWaterUseUniforms` in your `springrc` to 1, then you don't even\nneed to restart `BumpWater` via `/water 4`.",
                "extends": {
                    "args": [
                        {
                            "desc": "Water params\n",
                            "finish": [
                                1082,
                                42
                            ],
                            "name": "waterParams",
                            "rawdesc": "Water params\n",
                            "start": [
                                1082,
                                31
                            ],
                            "type": "local",
                            "view": "WaterParams"
                        }
                    ],
                    "desc": "Does not need cheating enabled.\n\nAllows to change water params (mostly `BumpWater` ones) at runtime. You may\nwant to set `BumpWaterUseUniforms` in your `springrc` to 1, then you don't even\nneed to restart `BumpWater` via `/water 4`.",
                    "finish": [
                        1082,
                        47
                    ],
                    "rawdesc": "Does not need cheating enabled.\n\nAllows to change water params (mostly `BumpWater` ones) at runtime. You may\nwant to set `BumpWaterUseUniforms` in your `springrc` to 1, then you don't even\nneed to restart `BumpWater` via `/water 4`.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        1082,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetWaterParams(waterParams: WaterParams)\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    1082,
                    30
                ],
                "name": "SetWaterParams",
                "rawdesc": "Does not need cheating enabled.\n\nAllows to change water params (mostly `BumpWater` ones) at runtime. You may\nwant to set `BumpWaterUseUniforms` in your `springrc` to 1, then you don't even\nneed to restart `BumpWater` via `/water 4`.",
                "start": [
                    1082,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetWaterParams",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Set wind strength",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                86,
                                35
                            ],
                            "name": "minStrength",
                            "start": [
                                86,
                                24
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                86,
                                48
                            ],
                            "name": "maxStrength",
                            "start": [
                                86,
                                37
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "Set wind strength",
                    "finish": [
                        86,
                        53
                    ],
                    "rawdesc": "Set wind strength",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        86,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetWind(minStrength: number, maxStrength: number)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    86,
                    23
                ],
                "name": "SetWind",
                "rawdesc": "Set wind strength",
                "start": [
                    86,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetWind",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1241,
                                46
                            ],
                            "name": "displayIndex",
                            "start": [
                                1241,
                                34
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1241,
                                58
                            ],
                            "name": "winRelPosX",
                            "start": [
                                1241,
                                48
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1241,
                                70
                            ],
                            "name": "winRelPosY",
                            "start": [
                                1241,
                                60
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1241,
                                80
                            ],
                            "name": "winSizeX",
                            "start": [
                                1241,
                                72
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1241,
                                90
                            ],
                            "name": "winSizeY",
                            "start": [
                                1241,
                                82
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1241,
                                102
                            ],
                            "name": "fullScreen",
                            "start": [
                                1241,
                                92
                            ],
                            "type": "local",
                            "view": "boolean"
                        },
                        {
                            "finish": [
                                1241,
                                114
                            ],
                            "name": "borderless",
                            "start": [
                                1241,
                                104
                            ],
                            "type": "local",
                            "view": "boolean"
                        }
                    ],
                    "finish": [
                        1241,
                        119
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        1241,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetWindowGeometry(displayIndex: number, winRelPosX: number, winRelPosY: number, winSizeX: number, winSizeY: number, fullScreen: boolean, borderless: boolean)\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    1241,
                    33
                ],
                "name": "SetWindowGeometry",
                "start": [
                    1241,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetWindowGeometry",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [],
                    "finish": [
                        1247,
                        40
                    ],
                    "returns": [
                        {
                            "name": "maximized",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        1247,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetWindowMaximized()\n  -> maximized: boolean"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    1247,
                    34
                ],
                "name": "SetWindowMaximized",
                "start": [
                    1247,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetWindowMaximized",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [],
                    "finish": [
                        1244,
                        40
                    ],
                    "returns": [
                        {
                            "name": "minimized",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        1244,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SetWindowMinimized()\n  -> minimized: boolean"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    1244,
                    34
                ],
                "name": "SetWindowMinimized",
                "start": [
                    1244,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SetWindowMinimized",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                851,
                                37
                            ],
                            "name": "teamID",
                            "start": [
                                851,
                                31
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                851,
                                44
                            ],
                            "name": "units",
                            "start": [
                                851,
                                39
                            ],
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "finish": [
                        851,
                        49
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        851,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.ShareResources(teamID: integer, units: string)\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    851,
                    30
                ],
                "name": "ShareResources",
                "start": [
                    851,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `resource` — metal | energy",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                857,
                                37
                            ],
                            "name": "teamID",
                            "start": [
                                857,
                                31
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "desc": "metal | energy",
                            "finish": [
                                857,
                                47
                            ],
                            "name": "resource",
                            "rawdesc": "metal | energy",
                            "start": [
                                857,
                                39
                            ],
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": [
                                857,
                                55
                            ],
                            "name": "amount",
                            "start": [
                                857,
                                49
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "@*param* `resource` — metal | energy",
                    "finish": [
                        857,
                        60
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        857,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.ShareResources(teamID: integer, resource: string, amount: number)\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    857,
                    30
                ],
                "name": "ShareResources",
                "start": [
                    857,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.ShareResources",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Transfers resources between two teams.\n\n\n```lua\ntype:\n    | \"metal\"\n    | \"energy\"\n    | \"m\"\n    | \"e\"\n```",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                134,
                                44
                            ],
                            "name": "teamID_src",
                            "start": [
                                134,
                                34
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                134,
                                57
                            ],
                            "name": "teamID_recv",
                            "start": [
                                134,
                                46
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                134,
                                63
                            ],
                            "name": "type",
                            "start": [
                                134,
                                59
                            ],
                            "type": "local",
                            "view": "\"e\"|\"energy\"|\"m\"|\"metal\""
                        },
                        {
                            "finish": [
                                134,
                                71
                            ],
                            "name": "amount",
                            "start": [
                                134,
                                65
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "Transfers resources between two teams.\n\n\n```lua\ntype:\n    | \"metal\"\n    | \"energy\"\n    | \"m\"\n    | \"e\"\n```",
                    "finish": [
                        134,
                        76
                    ],
                    "rawdesc": "Transfers resources between two teams.\n\n\n```lua\ntype:\n    | \"metal\"\n    | \"energy\"\n    | \"m\"\n    | \"e\"\n```",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        134,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.ShareTeamResource(teamID_src: integer, teamID_recv: integer, type: \"e\"|\"energy\"|\"m\"|\"metal\", amount: number)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    134,
                    33
                ],
                "name": "ShareTeamResource",
                "rawdesc": "Transfers resources between two teams.\n\n\n```lua\ntype:\n    | \"metal\"\n    | \"energy\"\n    | \"m\"\n    | \"e\"\n```",
                "start": [
                    134,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.ShareTeamResource",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1044,
                                39
                            ],
                            "name": "groupID",
                            "start": [
                                1044,
                                32
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        1044,
                        44
                    ],
                    "returns": [
                        {
                            "name": "unitIDs",
                            "type": "function.return",
                            "view": "number[]?"
                        }
                    ],
                    "start": [
                        1044,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SolveNURBSCurve(groupID: integer)\n  -> unitIDs: number[]?"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    1044,
                    31
                ],
                "name": "SolveNURBSCurve",
                "start": [
                    1044,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SolveNURBSCurve",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `posX` — (Default: 0)\n\n@*param* `posY` — (Default: 0)\n\n@*param* `posZ` — (Default: 0)\n\n@*param* `dirX` — (Default: 0)\n\n@*param* `dirY` — (Default: 0)\n\n@*param* `dirZ` — (Default: 0)\n\n@*param* `radius` — (Default: 0)\n\n@*param* `damage` — (Default: 0)",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1592,
                                32
                            ],
                            "name": "cegname",
                            "start": [
                                1592,
                                25
                            ],
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "desc": "(Default: 0)",
                            "finish": [
                                1592,
                                38
                            ],
                            "name": "posX",
                            "rawdesc": "(Default: 0)",
                            "start": [
                                1592,
                                34
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "desc": "(Default: 0)",
                            "finish": [
                                1592,
                                44
                            ],
                            "name": "posY",
                            "rawdesc": "(Default: 0)",
                            "start": [
                                1592,
                                40
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "desc": "(Default: 0)",
                            "finish": [
                                1592,
                                50
                            ],
                            "name": "posZ",
                            "rawdesc": "(Default: 0)",
                            "start": [
                                1592,
                                46
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "desc": "(Default: 0)",
                            "finish": [
                                1592,
                                56
                            ],
                            "name": "dirX",
                            "rawdesc": "(Default: 0)",
                            "start": [
                                1592,
                                52
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "desc": "(Default: 0)",
                            "finish": [
                                1592,
                                62
                            ],
                            "name": "dirY",
                            "rawdesc": "(Default: 0)",
                            "start": [
                                1592,
                                58
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "desc": "(Default: 0)",
                            "finish": [
                                1592,
                                68
                            ],
                            "name": "dirZ",
                            "rawdesc": "(Default: 0)",
                            "start": [
                                1592,
                                64
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "desc": "(Default: 0)",
                            "finish": [
                                1592,
                                76
                            ],
                            "name": "radius",
                            "rawdesc": "(Default: 0)",
                            "start": [
                                1592,
                                70
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "desc": "(Default: 0)",
                            "finish": [
                                1592,
                                84
                            ],
                            "name": "damage",
                            "rawdesc": "(Default: 0)",
                            "start": [
                                1592,
                                78
                            ],
                            "type": "local",
                            "view": "number?"
                        }
                    ],
                    "desc": "@*param* `posX` — (Default: 0)\n\n@*param* `posY` — (Default: 0)\n\n@*param* `posZ` — (Default: 0)\n\n@*param* `dirX` — (Default: 0)\n\n@*param* `dirY` — (Default: 0)\n\n@*param* `dirZ` — (Default: 0)\n\n@*param* `radius` — (Default: 0)\n\n@*param* `damage` — (Default: 0)",
                    "finish": [
                        1592,
                        89
                    ],
                    "returns": [
                        {
                            "name": "success",
                            "type": "function.return",
                            "view": "boolean?"
                        },
                        {
                            "name": "cegID",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        1592,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SpawnCEG(cegname: string, posX?: number, posY?: number, posZ?: number, dirX?: number, dirY?: number, dirZ?: number, radius?: number, damage?: number)\n  -> success: boolean?\n  2. cegID: number"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    1592,
                    24
                ],
                "name": "SpawnCEG",
                "start": [
                    1592,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SpawnCEG",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `posX` — (Default: 0)\n\n@*param* `posY` — (Default: 0)\n\n@*param* `posZ` — (Default: 0)\n\n@*param* `dirX` — (Default: 0)\n\n@*param* `dirY` — (Default: 0)\n\n@*param* `dirZ` — (Default: 0)",
                "extends": {
                    "args": [
                        {
                            "desc": "(Default: 0)",
                            "finish": [
                                1579,
                                35
                            ],
                            "name": "posX",
                            "rawdesc": "(Default: 0)",
                            "start": [
                                1579,
                                31
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "desc": "(Default: 0)",
                            "finish": [
                                1579,
                                41
                            ],
                            "name": "posY",
                            "rawdesc": "(Default: 0)",
                            "start": [
                                1579,
                                37
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "desc": "(Default: 0)",
                            "finish": [
                                1579,
                                47
                            ],
                            "name": "posZ",
                            "rawdesc": "(Default: 0)",
                            "start": [
                                1579,
                                43
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "desc": "(Default: 0)",
                            "finish": [
                                1579,
                                53
                            ],
                            "name": "dirX",
                            "rawdesc": "(Default: 0)",
                            "start": [
                                1579,
                                49
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "desc": "(Default: 0)",
                            "finish": [
                                1579,
                                59
                            ],
                            "name": "dirY",
                            "rawdesc": "(Default: 0)",
                            "start": [
                                1579,
                                55
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "desc": "(Default: 0)",
                            "finish": [
                                1579,
                                65
                            ],
                            "name": "dirZ",
                            "rawdesc": "(Default: 0)",
                            "start": [
                                1579,
                                61
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "desc": "Parameters for explosion.\n\nPlease note the explosion defaults to 1 damage regardless of what it's defined in the weaponDef.\nThe weapondefID is only used for visuals and for passing into callins like UnitDamaged.\n",
                            "finish": [
                                1579,
                                82
                            ],
                            "name": "explosionParams",
                            "rawdesc": "Parameters for explosion.\n\nPlease note the explosion defaults to 1 damage regardless of what it's defined in the weaponDef.\nThe weapondefID is only used for visuals and for passing into callins like UnitDamaged.\n",
                            "start": [
                                1579,
                                67
                            ],
                            "type": "local",
                            "view": "ExplosionParams"
                        }
                    ],
                    "desc": "@*param* `posX` — (Default: 0)\n\n@*param* `posY` — (Default: 0)\n\n@*param* `posZ` — (Default: 0)\n\n@*param* `dirX` — (Default: 0)\n\n@*param* `dirY` — (Default: 0)\n\n@*param* `dirZ` — (Default: 0)",
                    "finish": [
                        1579,
                        87
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        1579,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SpawnExplosion(posX?: number, posY?: number, posZ?: number, dirX?: number, dirY?: number, dirZ?: number, explosionParams: ExplosionParams)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    1579,
                    30
                ],
                "name": "SpawnExplosion",
                "start": [
                    1579,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SpawnExplosion",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1543,
                                43
                            ],
                            "name": "weaponDefID",
                            "start": [
                                1543,
                                32
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                1543,
                                61
                            ],
                            "name": "projectileParams",
                            "start": [
                                1543,
                                45
                            ],
                            "type": "local",
                            "view": "ProjectileParams"
                        }
                    ],
                    "finish": [
                        1543,
                        66
                    ],
                    "returns": [
                        {
                            "name": "projectileID",
                            "type": "function.return",
                            "view": "integer?"
                        }
                    ],
                    "start": [
                        1543,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SpawnProjectile(weaponDefID: integer, projectileParams: ProjectileParams)\n  -> projectileID: integer?"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    1543,
                    31
                ],
                "name": "SpawnProjectile",
                "start": [
                    1543,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SpawnProjectile",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Equal to the UnitScript versions of EmitSFX, but takes position and direction arguments (in either unit- or piece-space) instead of a piece index.\n\n@*param* `unitID` — (Default: 0)\n\n@*param* `sfxID` — (Default: 0)\n\n@*param* `posX` — (Default: 0)\n\n@*param* `posY` — (Default: 0)\n\n@*param* `posZ` — (Default: 0)\n\n@*param* `dirX` — (Default: 0)\n\n@*param* `dirY` — (Default: 0)\n\n@*param* `dirZ` — (Default: 0)\n\n@*param* `radius` — (Default: 0)\n\n@*param* `damage` — (Default: 0)",
                "extends": {
                    "args": [
                        {
                            "desc": "(Default: 0)",
                            "finish": [
                                1608,
                                31
                            ],
                            "name": "unitID",
                            "rawdesc": "(Default: 0)",
                            "start": [
                                1608,
                                25
                            ],
                            "type": "local",
                            "view": "integer?"
                        },
                        {
                            "desc": "(Default: 0)",
                            "finish": [
                                1608,
                                38
                            ],
                            "name": "sfxID",
                            "rawdesc": "(Default: 0)",
                            "start": [
                                1608,
                                33
                            ],
                            "type": "local",
                            "view": "integer?"
                        },
                        {
                            "desc": "(Default: 0)",
                            "finish": [
                                1608,
                                44
                            ],
                            "name": "posX",
                            "rawdesc": "(Default: 0)",
                            "start": [
                                1608,
                                40
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "desc": "(Default: 0)",
                            "finish": [
                                1608,
                                50
                            ],
                            "name": "posY",
                            "rawdesc": "(Default: 0)",
                            "start": [
                                1608,
                                46
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "desc": "(Default: 0)",
                            "finish": [
                                1608,
                                56
                            ],
                            "name": "posZ",
                            "rawdesc": "(Default: 0)",
                            "start": [
                                1608,
                                52
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "desc": "(Default: 0)",
                            "finish": [
                                1608,
                                62
                            ],
                            "name": "dirX",
                            "rawdesc": "(Default: 0)",
                            "start": [
                                1608,
                                58
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "desc": "(Default: 0)",
                            "finish": [
                                1608,
                                68
                            ],
                            "name": "dirY",
                            "rawdesc": "(Default: 0)",
                            "start": [
                                1608,
                                64
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "desc": "(Default: 0)",
                            "finish": [
                                1608,
                                74
                            ],
                            "name": "dirZ",
                            "rawdesc": "(Default: 0)",
                            "start": [
                                1608,
                                70
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "desc": "(Default: 0)",
                            "finish": [
                                1608,
                                82
                            ],
                            "name": "radius",
                            "rawdesc": "(Default: 0)",
                            "start": [
                                1608,
                                76
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "desc": "(Default: 0)",
                            "finish": [
                                1608,
                                90
                            ],
                            "name": "damage",
                            "rawdesc": "(Default: 0)",
                            "start": [
                                1608,
                                84
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "finish": [
                                1608,
                                100
                            ],
                            "name": "absolute",
                            "start": [
                                1608,
                                92
                            ],
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "Equal to the UnitScript versions of EmitSFX, but takes position and direction arguments (in either unit- or piece-space) instead of a piece index.\n\n@*param* `unitID` — (Default: 0)\n\n@*param* `sfxID` — (Default: 0)\n\n@*param* `posX` — (Default: 0)\n\n@*param* `posY` — (Default: 0)\n\n@*param* `posZ` — (Default: 0)\n\n@*param* `dirX` — (Default: 0)\n\n@*param* `dirY` — (Default: 0)\n\n@*param* `dirZ` — (Default: 0)\n\n@*param* `radius` — (Default: 0)\n\n@*param* `damage` — (Default: 0)",
                    "finish": [
                        1608,
                        105
                    ],
                    "rawdesc": "Equal to the UnitScript versions of EmitSFX, but takes position and direction arguments (in either unit- or piece-space) instead of a piece index.",
                    "returns": [
                        {
                            "name": "success",
                            "type": "function.return",
                            "view": "boolean?"
                        }
                    ],
                    "start": [
                        1608,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.SpawnSFX(unitID?: integer, sfxID?: integer, posX?: number, posY?: number, posZ?: number, dirX?: number, dirY?: number, dirZ?: number, radius?: number, damage?: number, absolute?: boolean)\n  -> success: boolean?"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    1608,
                    24
                ],
                "name": "SpawnSFX",
                "rawdesc": "Equal to the UnitScript versions of EmitSFX, but takes position and direction arguments (in either unit- or piece-space) instead of a piece index.",
                "start": [
                    1608,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.SpawnSFX",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Launches a new Spring instance without terminating the existing one.\n\nIf this call returns, something went wrong\n\n@*param* `commandline_args` — commandline arguments passed to spring executable.\n\n@*param* `startScript` — the CONTENT of the script.txt spring should use to start (if empty, no start-script is added, you can still point spring to your custom script.txt when you add the file-path to commandline_args.",
                "extends": {
                    "args": [
                        {
                            "desc": "commandline arguments passed to spring executable.",
                            "finish": [
                                1272,
                                38
                            ],
                            "name": "commandline_args",
                            "rawdesc": "commandline arguments passed to spring executable.",
                            "start": [
                                1272,
                                22
                            ],
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "desc": "the CONTENT of the script.txt spring should use to start (if empty, no start-script is added, you can still point spring to your custom script.txt when you add the file-path to commandline_args.",
                            "finish": [
                                1272,
                                51
                            ],
                            "name": "startScript",
                            "rawdesc": "the CONTENT of the script.txt spring should use to start (if empty, no start-script is added, you can still point spring to your custom script.txt when you add the file-path to commandline_args.",
                            "start": [
                                1272,
                                40
                            ],
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "desc": "Launches a new Spring instance without terminating the existing one.\n\nIf this call returns, something went wrong\n\n@*param* `commandline_args` — commandline arguments passed to spring executable.\n\n@*param* `startScript` — the CONTENT of the script.txt spring should use to start (if empty, no start-script is added, you can still point spring to your custom script.txt when you add the file-path to commandline_args.",
                    "finish": [
                        1272,
                        56
                    ],
                    "rawdesc": "Launches a new Spring instance without terminating the existing one.\n\nIf this call returns, something went wrong",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        1272,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.Start(commandline_args: string, startScript: string)\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    1272,
                    21
                ],
                "name": "Start",
                "rawdesc": "Launches a new Spring instance without terminating the existing one.\n\nIf this call returns, something went wrong",
                "start": [
                    1272,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.Start",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Terminates any SoundStream currently running.",
                "extends": {
                    "args": [],
                    "desc": "Terminates any SoundStream currently running.",
                    "finish": [
                        131,
                        37
                    ],
                    "rawdesc": "Terminates any SoundStream currently running.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        131,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.StopSoundStream()\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    131,
                    31
                ],
                "name": "StopSoundStream",
                "rawdesc": "Terminates any SoundStream currently running.",
                "start": [
                    131,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.StopSoundStream",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*return* `blocking`\n\n@*return* `featureID` — A reclaimable feature in the way.\n\n```lua\nfacing:\n    | 0 -- South\n    | 1 -- East\n    | 2 -- North\n    | 3 -- West\n    | 0 -- South\n    | 1 -- East\n    | 2 -- North\n    | 3 -- West\n    | \"s\" -- South\n    | \"e\" -- East\n    | \"n\" -- North\n    | \"w\" -- West\n    | \"south\" -- South\n    | \"east\" -- East\n    | \"north\" -- North\n    | \"west\" -- West\n\nblocking:\n    | 0 -- blocked\n    | 1 -- mobile unit on the way\n    | 2 -- reclaimable\n    | 3 -- open\n```",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1441,
                                40
                            ],
                            "name": "unitDefID",
                            "start": [
                                1441,
                                31
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                1441,
                                43
                            ],
                            "name": "x",
                            "start": [
                                1441,
                                42
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1441,
                                46
                            ],
                            "name": "y",
                            "start": [
                                1441,
                                45
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1441,
                                49
                            ],
                            "name": "z",
                            "start": [
                                1441,
                                48
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1441,
                                57
                            ],
                            "name": "facing",
                            "start": [
                                1441,
                                51
                            ],
                            "type": "local",
                            "view": "\"e\"|\"east\"|\"n\"|\"north\"|\"s\"...(+7)"
                        }
                    ],
                    "desc": "@*return* `blocking`\n\n@*return* `featureID` — A reclaimable feature in the way.\n\n```lua\nfacing:\n    | 0 -- South\n    | 1 -- East\n    | 2 -- North\n    | 3 -- West\n    | 0 -- South\n    | 1 -- East\n    | 2 -- North\n    | 3 -- West\n    | \"s\" -- South\n    | \"e\" -- East\n    | \"n\" -- North\n    | \"w\" -- West\n    | \"south\" -- South\n    | \"east\" -- East\n    | \"north\" -- North\n    | \"west\" -- West\n\nblocking:\n    | 0 -- blocked\n    | 1 -- mobile unit on the way\n    | 2 -- reclaimable\n    | 3 -- open\n```",
                    "finish": [
                        1441,
                        62
                    ],
                    "rawdesc": "```lua\nfacing:\n    | 0 -- South\n    | 1 -- East\n    | 2 -- North\n    | 3 -- West\n    | 0 -- South\n    | 1 -- East\n    | 2 -- North\n    | 3 -- West\n    | \"s\" -- South\n    | \"e\" -- East\n    | \"n\" -- North\n    | \"w\" -- West\n    | \"south\" -- South\n    | \"east\" -- East\n    | \"north\" -- North\n    | \"west\" -- West\n\nblocking:\n    | 0 -- blocked\n    | 1 -- mobile unit on the way\n    | 2 -- reclaimable\n    | 3 -- open\n```",
                    "returns": [
                        {
                            "name": "blocking",
                            "type": "function.return",
                            "view": "0|1|2|3"
                        },
                        {
                            "desc": "A reclaimable feature in the way.",
                            "name": "featureID",
                            "rawdesc": "A reclaimable feature in the way.",
                            "type": "function.return",
                            "view": "integer?"
                        }
                    ],
                    "start": [
                        1441,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.TestBuildOrder(unitDefID: integer, x: number, y: number, z: number, facing: \"e\"|\"east\"|\"n\"|\"north\"|\"s\"...(+7))\n  -> blocking: 0|1|2|3\n  2. featureID: integer?"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1441,
                    30
                ],
                "name": "TestBuildOrder",
                "rawdesc": "```lua\nfacing:\n    | 0 -- South\n    | 1 -- East\n    | 2 -- North\n    | 3 -- West\n    | 0 -- South\n    | 1 -- East\n    | 2 -- North\n    | 3 -- West\n    | \"s\" -- South\n    | \"e\" -- East\n    | \"n\" -- North\n    | \"w\" -- West\n    | \"south\" -- South\n    | \"east\" -- East\n    | \"north\" -- North\n    | \"west\" -- West\n\nblocking:\n    | 0 -- blocked\n    | 1 -- mobile unit on the way\n    | 2 -- reclaimable\n    | 3 -- open\n```",
                "start": [
                    1441,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.TestBuildOrder",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `dir` — (Default: `{ x: 0, y: 0, z: 0 }`)\n\n@*param* `testTerrain` — (Default: true)\n\n@*param* `testObjects` — (Default: true)\n\n@*param* `centerOnly` — (Default: false)",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1426,
                                39
                            ],
                            "name": "unitDefID",
                            "start": [
                                1426,
                                30
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "desc": "Cartesian triple (XYZ)\n",
                            "finish": [
                                1426,
                                44
                            ],
                            "name": "pos",
                            "rawdesc": "Cartesian triple (XYZ)\n",
                            "start": [
                                1426,
                                41
                            ],
                            "type": "local",
                            "view": "xyz"
                        },
                        {
                            "desc": "(Default: `{ x: 0, y: 0, z: 0 }`)",
                            "finish": [
                                1426,
                                49
                            ],
                            "name": "dir",
                            "rawdesc": "(Default: `{ x: 0, y: 0, z: 0 }`)",
                            "start": [
                                1426,
                                46
                            ],
                            "type": "local",
                            "view": "xyz?"
                        },
                        {
                            "desc": "(Default: true)",
                            "finish": [
                                1426,
                                62
                            ],
                            "name": "testTerrain",
                            "rawdesc": "(Default: true)",
                            "start": [
                                1426,
                                51
                            ],
                            "type": "local",
                            "view": "boolean?"
                        },
                        {
                            "desc": "(Default: true)",
                            "finish": [
                                1426,
                                75
                            ],
                            "name": "testObjects",
                            "rawdesc": "(Default: true)",
                            "start": [
                                1426,
                                64
                            ],
                            "type": "local",
                            "view": "boolean?"
                        },
                        {
                            "desc": "(Default: false)",
                            "finish": [
                                1426,
                                87
                            ],
                            "name": "centerOnly",
                            "rawdesc": "(Default: false)",
                            "start": [
                                1426,
                                77
                            ],
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "@*param* `dir` — (Default: `{ x: 0, y: 0, z: 0 }`)\n\n@*param* `testTerrain` — (Default: true)\n\n@*param* `testObjects` — (Default: true)\n\n@*param* `centerOnly` — (Default: false)",
                    "finish": [
                        1426,
                        92
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        1426,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.TestMoveOrder(unitDefID: integer, pos: xyz, dir?: xyz, testTerrain?: boolean, testObjects?: boolean, centerOnly?: boolean)\n  -> boolean"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1426,
                    29
                ],
                "name": "TestMoveOrder",
                "start": [
                    1426,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.TestMoveOrder",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Checks for a ground collision between two positions\n\nChecks if there is surface (ground, optionally water) between two positions\nand returns the distance to the closest hit and its position, if any.\n\n@*param* `testWater` — (Default: `true`)",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1736,
                                53
                            ],
                            "name": "startX",
                            "start": [
                                1736,
                                47
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1736,
                                61
                            ],
                            "name": "startY",
                            "start": [
                                1736,
                                55
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1736,
                                69
                            ],
                            "name": "startZ",
                            "start": [
                                1736,
                                63
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1736,
                                75
                            ],
                            "name": "endX",
                            "start": [
                                1736,
                                71
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1736,
                                81
                            ],
                            "name": "endY",
                            "start": [
                                1736,
                                77
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1736,
                                87
                            ],
                            "name": "endZ",
                            "start": [
                                1736,
                                83
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "desc": "(Default: `true`)",
                            "finish": [
                                1736,
                                98
                            ],
                            "name": "testWater",
                            "rawdesc": "(Default: `true`)",
                            "start": [
                                1736,
                                89
                            ],
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "Checks for a ground collision between two positions\n\nChecks if there is surface (ground, optionally water) between two positions\nand returns the distance to the closest hit and its position, if any.\n\n@*param* `testWater` — (Default: `true`)",
                    "finish": [
                        1736,
                        103
                    ],
                    "rawdesc": "Checks for a ground collision between two positions\n\nChecks if there is surface (ground, optionally water) between two positions\nand returns the distance to the closest hit and its position, if any.",
                    "returns": [
                        {
                            "name": "rayLength",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "posX",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "posY",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "posZ",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        1736,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.TraceRayGroundBetweenPositions(startX: number, startY: number, startZ: number, endX: number, endY: number, endZ: number, testWater?: boolean)\n  -> rayLength: number\n  2. posX: number\n  3. posY: number\n  4. posZ: number"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1736,
                    46
                ],
                "name": "TraceRayGroundBetweenPositions",
                "rawdesc": "Checks for a ground collision between two positions\n\nChecks if there is surface (ground, optionally water) between two positions\nand returns the distance to the closest hit and its position, if any.",
                "start": [
                    1736,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.TraceRayGroundBetweenPositions",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Checks for a ground collision in given direction\n\nChecks if there is surface (ground, optionally water) towards a vector\nand returns the distance to the closest hit and its position, if any.\n\n@*param* `testWater` — (Default: `true`)",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1718,
                                46
                            ],
                            "name": "posX",
                            "start": [
                                1718,
                                42
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1718,
                                52
                            ],
                            "name": "posY",
                            "start": [
                                1718,
                                48
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1718,
                                58
                            ],
                            "name": "posZ",
                            "start": [
                                1718,
                                54
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1718,
                                64
                            ],
                            "name": "dirX",
                            "start": [
                                1718,
                                60
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1718,
                                70
                            ],
                            "name": "dirY",
                            "start": [
                                1718,
                                66
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                1718,
                                76
                            ],
                            "name": "dirZ",
                            "start": [
                                1718,
                                72
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "desc": "(Default: `true`)",
                            "finish": [
                                1718,
                                87
                            ],
                            "name": "testWater",
                            "rawdesc": "(Default: `true`)",
                            "start": [
                                1718,
                                78
                            ],
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "Checks for a ground collision in given direction\n\nChecks if there is surface (ground, optionally water) towards a vector\nand returns the distance to the closest hit and its position, if any.\n\n@*param* `testWater` — (Default: `true`)",
                    "finish": [
                        1718,
                        92
                    ],
                    "rawdesc": "Checks for a ground collision in given direction\n\nChecks if there is surface (ground, optionally water) towards a vector\nand returns the distance to the closest hit and its position, if any.",
                    "returns": [
                        {
                            "name": "rayLength",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "posX",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "posY",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "posZ",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        1718,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.TraceRayGroundInDirection(posX: number, posY: number, posZ: number, dirX: number, dirY: number, dirZ: number, testWater?: boolean)\n  -> rayLength: number\n  2. posX: number\n  3. posY: number\n  4. posZ: number"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1718,
                    41
                ],
                "name": "TraceRayGroundInDirection",
                "rawdesc": "Checks for a ground collision in given direction\n\nChecks if there is surface (ground, optionally water) towards a vector\nand returns the distance to the closest hit and its position, if any.",
                "start": [
                    1718,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.TraceRayGroundInDirection",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Get information about a ray traced from screen to world position\n\nExtended to allow a custom plane, parameters are (0, 1, 0, D=0) where D is the offset D can be specified in the third argument (if all the bools are false) or in the seventh (as shown).\n\nIntersection coordinates are returned in t[4],t[5],t[6] when the ray goes offmap and includeSky is true), or when no unit or feature is hit (or onlyCoords is true).\n\nThis will only work for units & objects with the default collision sphere. Per Piece collision and custom collision objects are not supported.\n\nThe unit must be selectable, to appear to a screen trace ray.\n\n@*param* `screenX` — position on x axis in mouse coordinates (origin on left border of view)\n\n@*param* `screenY` — position on y axis in mouse coordinates (origin on top border of view)\n\n@*param* `onlyCoords` — (Default: false) return only description (1st return value) and coordinates (2nd return value)\n\n@*param* `useMinimap` — (Default: false) if position arguments are contained by minimap, use the minimap corresponding world position\n\n@*param* `includeSky` — (Default: false)\n\n@*param* `ignoreWater` — (Default: false)\n\n@*param* `heightOffset` — (Default: 0)\n\n@*return* `description` — of traced position\n\n@*return* `unitID` — or feature, position triple when onlyCoords=true\n\n@*return* `featureID` — or ground\n\n@*return* `coords`",
                "extends": {
                    "args": [
                        {
                            "desc": "position on x axis in mouse coordinates (origin on left border of view)",
                            "finish": [
                                605,
                                38
                            ],
                            "name": "screenX",
                            "rawdesc": "position on x axis in mouse coordinates (origin on left border of view)",
                            "start": [
                                605,
                                31
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "desc": "position on y axis in mouse coordinates (origin on top border of view)",
                            "finish": [
                                605,
                                47
                            ],
                            "name": "screenY",
                            "rawdesc": "position on y axis in mouse coordinates (origin on top border of view)",
                            "start": [
                                605,
                                40
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "desc": "(Default: false) return only description (1st return value) and coordinates (2nd return value)",
                            "finish": [
                                605,
                                59
                            ],
                            "name": "onlyCoords",
                            "rawdesc": "(Default: false) return only description (1st return value) and coordinates (2nd return value)",
                            "start": [
                                605,
                                49
                            ],
                            "type": "local",
                            "view": "boolean?"
                        },
                        {
                            "desc": "(Default: false) if position arguments are contained by minimap, use the minimap corresponding world position",
                            "finish": [
                                605,
                                71
                            ],
                            "name": "useMinimap",
                            "rawdesc": "(Default: false) if position arguments are contained by minimap, use the minimap corresponding world position",
                            "start": [
                                605,
                                61
                            ],
                            "type": "local",
                            "view": "boolean?"
                        },
                        {
                            "desc": "(Default: false)",
                            "finish": [
                                605,
                                83
                            ],
                            "name": "includeSky",
                            "rawdesc": "(Default: false)",
                            "start": [
                                605,
                                73
                            ],
                            "type": "local",
                            "view": "boolean?"
                        },
                        {
                            "desc": "(Default: false)",
                            "finish": [
                                605,
                                96
                            ],
                            "name": "ignoreWater",
                            "rawdesc": "(Default: false)",
                            "start": [
                                605,
                                85
                            ],
                            "type": "local",
                            "view": "boolean?"
                        },
                        {
                            "desc": "(Default: 0)",
                            "finish": [
                                605,
                                110
                            ],
                            "name": "heightOffset",
                            "rawdesc": "(Default: 0)",
                            "start": [
                                605,
                                98
                            ],
                            "type": "local",
                            "view": "number?"
                        }
                    ],
                    "desc": "Get information about a ray traced from screen to world position\n\nExtended to allow a custom plane, parameters are (0, 1, 0, D=0) where D is the offset D can be specified in the third argument (if all the bools are false) or in the seventh (as shown).\n\nIntersection coordinates are returned in t[4],t[5],t[6] when the ray goes offmap and includeSky is true), or when no unit or feature is hit (or onlyCoords is true).\n\nThis will only work for units & objects with the default collision sphere. Per Piece collision and custom collision objects are not supported.\n\nThe unit must be selectable, to appear to a screen trace ray.\n\n@*param* `screenX` — position on x axis in mouse coordinates (origin on left border of view)\n\n@*param* `screenY` — position on y axis in mouse coordinates (origin on top border of view)\n\n@*param* `onlyCoords` — (Default: false) return only description (1st return value) and coordinates (2nd return value)\n\n@*param* `useMinimap` — (Default: false) if position arguments are contained by minimap, use the minimap corresponding world position\n\n@*param* `includeSky` — (Default: false)\n\n@*param* `ignoreWater` — (Default: false)\n\n@*param* `heightOffset` — (Default: 0)\n\n@*return* `description` — of traced position\n\n@*return* `unitID` — or feature, position triple when onlyCoords=true\n\n@*return* `featureID` — or ground\n\n@*return* `coords`",
                    "finish": [
                        605,
                        115
                    ],
                    "rawdesc": "Get information about a ray traced from screen to world position\n\nExtended to allow a custom plane, parameters are (0, 1, 0, D=0) where D is the offset D can be specified in the third argument (if all the bools are false) or in the seventh (as shown).\n\nIntersection coordinates are returned in t[4],t[5],t[6] when the ray goes offmap and includeSky is true), or when no unit or feature is hit (or onlyCoords is true).\n\nThis will only work for units & objects with the default collision sphere. Per Piece collision and custom collision objects are not supported.\n\nThe unit must be selectable, to appear to a screen trace ray.",
                    "returns": [
                        {
                            "desc": "of traced position",
                            "name": "description",
                            "rawdesc": "of traced position",
                            "type": "function.return",
                            "view": "string|nil"
                        },
                        {
                            "desc": "or feature, position triple when onlyCoords=true",
                            "name": "unitID",
                            "rawdesc": "or feature, position triple when onlyCoords=true",
                            "type": "function.return",
                            "view": "string|number|xyz|nil"
                        },
                        {
                            "desc": "or ground",
                            "name": "featureID",
                            "rawdesc": "or ground",
                            "type": "function.return",
                            "view": "string|number|nil"
                        },
                        {
                            "name": "coords",
                            "type": "function.return",
                            "view": "xyz|nil"
                        }
                    ],
                    "start": [
                        605,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.TraceScreenRay(screenX: number, screenY: number, onlyCoords?: boolean, useMinimap?: boolean, includeSky?: boolean, ignoreWater?: boolean, heightOffset?: number)\n  -> description: string|nil\n  2. unitID: string|number|xyz|nil\n  3. featureID: string|number|nil\n  4. coords: xyz|nil"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    605,
                    30
                ],
                "name": "TraceScreenRay",
                "rawdesc": "Get information about a ray traced from screen to world position\n\nExtended to allow a custom plane, parameters are (0, 1, 0, D=0) where D is the offset D can be specified in the third argument (if all the bools are false) or in the seventh (as shown).\n\nIntersection coordinates are returned in t[4],t[5],t[6] when the ray goes offmap and includeSky is true), or when no unit or feature is hit (or onlyCoords is true).\n\nThis will only work for units & objects with the default collision sphere. Per Piece collision and custom collision objects are not supported.\n\nThe unit must be selectable, to appear to a screen trace ray.",
                "start": [
                    605,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.TraceScreenRay",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Feature Control",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                920,
                                44
                            ],
                            "name": "featureDefID",
                            "start": [
                                920,
                                32
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                920,
                                52
                            ],
                            "name": "teamID",
                            "start": [
                                920,
                                46
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Feature Control",
                    "finish": [
                        920,
                        57
                    ],
                    "rawdesc": "Feature Control",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        920,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.TransferFeature(featureDefID: integer, teamID: integer)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    920,
                    31
                ],
                "name": "TransferFeature",
                "rawdesc": "Feature Control",
                "start": [
                    920,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.TransferFeature",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `given` — (Default: true) if false, the unit is captured.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                243,
                                35
                            ],
                            "name": "unitID",
                            "start": [
                                243,
                                29
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                243,
                                46
                            ],
                            "name": "newTeamID",
                            "start": [
                                243,
                                37
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "desc": "(Default: true) if false, the unit is captured.",
                            "finish": [
                                243,
                                53
                            ],
                            "name": "given",
                            "rawdesc": "(Default: true) if false, the unit is captured.",
                            "start": [
                                243,
                                48
                            ],
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "@*param* `given` — (Default: true) if false, the unit is captured.",
                    "finish": [
                        243,
                        58
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        243,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.TransferUnit(unitID: integer, newTeamID: integer, given?: boolean)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    243,
                    28
                ],
                "name": "TransferUnit",
                "start": [
                    243,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.TransferUnit",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1523,
                                40
                            ],
                            "name": "transporterID",
                            "start": [
                                1523,
                                27
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                1523,
                                53
                            ],
                            "name": "passengerID",
                            "start": [
                                1523,
                                42
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                1523,
                                63
                            ],
                            "name": "pieceNum",
                            "start": [
                                1523,
                                55
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "finish": [
                        1523,
                        68
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        1523,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.UnitAttach(transporterID: integer, passengerID: integer, pieceNum: number)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    1523,
                    26
                ],
                "name": "UnitAttach",
                "start": [
                    1523,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.UnitAttach",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1527,
                                38
                            ],
                            "name": "passengerID",
                            "start": [
                                1527,
                                27
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        1527,
                        43
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        1527,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.UnitDetach(passengerID: integer)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    1527,
                    26
                ],
                "name": "UnitDetach",
                "start": [
                    1527,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.UnitDetach",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1531,
                                45
                            ],
                            "name": "passengerID",
                            "start": [
                                1531,
                                34
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        1531,
                        50
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        1531,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.UnitDetachFromAir(passengerID: integer)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    1531,
                    33
                ],
                "name": "UnitDetachFromAir",
                "start": [
                    1531,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.UnitDetachFromAir",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1244,
                                40
                            ],
                            "name": "unitID",
                            "start": [
                                1244,
                                34
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        1244,
                        45
                    ],
                    "start": [
                        1244,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.UnitFinishCommand(unitID: integer)"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    1244,
                    33
                ],
                "name": "UnitFinishCommand",
                "start": [
                    1244,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.UnitFinishCommand",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "`true` if icon is being drawn, `nil` when unitID is invalid, otherwise `false`.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                260,
                                38
                            ],
                            "name": "unitID",
                            "start": [
                                260,
                                32
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "`true` if icon is being drawn, `nil` when unitID is invalid, otherwise `false`.",
                    "finish": [
                        260,
                        43
                    ],
                    "rawdesc": "`true` if icon is being drawn, `nil` when unitID is invalid, otherwise `false`.",
                    "returns": [
                        {
                            "name": "drawIcon",
                            "type": "function.return",
                            "view": "boolean?"
                        }
                    ],
                    "start": [
                        260,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.UnitIconGetDraw(unitID: integer)\n  -> drawIcon: boolean?"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    260,
                    31
                ],
                "name": "UnitIconGetDraw",
                "rawdesc": "`true` if icon is being drawn, `nil` when unitID is invalid, otherwise `false`.",
                "start": [
                    260,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.UnitIconGetDraw",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": true,
                "desc": "\nUse Spring.SetUnitIconDraw instead.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                567,
                                38
                            ],
                            "name": "unitID",
                            "start": [
                                567,
                                32
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                567,
                                48
                            ],
                            "name": "drawIcon",
                            "start": [
                                567,
                                40
                            ],
                            "type": "local",
                            "view": "boolean"
                        }
                    ],
                    "desc": "\nUse Spring.SetUnitIconDraw instead.",
                    "finish": [
                        567,
                        53
                    ],
                    "rawdesc": "\nUse Spring.SetUnitIconDraw instead.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        567,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.UnitIconSetDraw(unitID: integer, drawIcon: boolean)\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    567,
                    31
                ],
                "name": "UnitIconSetDraw",
                "rawdesc": "\nUse Spring.SetUnitIconDraw instead.",
                "start": [
                    567,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.UnitIconSetDraw",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1497,
                                37
                            ],
                            "name": "unitID",
                            "start": [
                                1497,
                                31
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                1497,
                                47
                            ],
                            "name": "weaponID",
                            "start": [
                                1497,
                                39
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        1497,
                        52
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        1497,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.UnitWeaponFire(unitID: integer, weaponID: integer)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    1497,
                    30
                ],
                "name": "UnitWeaponFire",
                "start": [
                    1497,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.UnitWeaponFire",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1502,
                                41
                            ],
                            "name": "unitID",
                            "start": [
                                1502,
                                35
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                1502,
                                51
                            ],
                            "name": "weaponID",
                            "start": [
                                1502,
                                43
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        1502,
                        56
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        1502,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.UnitWeaponHoldFire(unitID: integer, weaponID: integer)\n  -> nil"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    1502,
                    34
                ],
                "name": "UnitWeaponHoldFire",
                "start": [
                    1502,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.UnitWeaponHoldFire",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                396,
                                42
                            ],
                            "name": "lightHandle",
                            "start": [
                                396,
                                31
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "desc": "Parameters for lighting\n",
                            "finish": [
                                396,
                                55
                            ],
                            "name": "lightParams",
                            "rawdesc": "Parameters for lighting\n",
                            "start": [
                                396,
                                44
                            ],
                            "type": "local",
                            "view": "LightParams"
                        }
                    ],
                    "finish": [
                        396,
                        60
                    ],
                    "returns": [
                        {
                            "name": "success",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        396,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.UpdateMapLight(lightHandle: number, lightParams: LightParams)\n  -> success: boolean"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    396,
                    30
                ],
                "name": "UpdateMapLight",
                "start": [
                    396,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.UpdateMapLight",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                401,
                                44
                            ],
                            "name": "lightHandle",
                            "start": [
                                401,
                                33
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "desc": "Parameters for lighting\n",
                            "finish": [
                                401,
                                57
                            ],
                            "name": "lightParams",
                            "rawdesc": "Parameters for lighting\n",
                            "start": [
                                401,
                                46
                            ],
                            "type": "local",
                            "view": "LightParams"
                        }
                    ],
                    "finish": [
                        401,
                        62
                    ],
                    "returns": [
                        {
                            "name": "success",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        401,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.UpdateModelLight(lightHandle: number, lightParams: LightParams)\n  -> success: boolean"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    401,
                    32
                ],
                "name": "UpdateModelLight",
                "start": [
                    401,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.UpdateModelLight",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Consumes metal or energy resources of the specified team.\n\n@*param* `type` — Resource type.\n\n@*param* `amount` — Amount of resource to use.\n\nTrue if enough of the resource type was available and was consumed, otherwise false.\n\n```lua\ntype:\n    | \"metal\"\n    | \"energy\"\n    | \"m\"\n    | \"e\"\n```",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                103,
                                38
                            ],
                            "name": "teamID",
                            "start": [
                                103,
                                32
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "desc": "Resource type.",
                            "finish": [
                                103,
                                44
                            ],
                            "name": "type",
                            "rawdesc": "Resource type.",
                            "start": [
                                103,
                                40
                            ],
                            "type": "local",
                            "view": "\"e\"|\"energy\"|\"m\"|\"metal\""
                        },
                        {
                            "desc": "Amount of resource to use.",
                            "finish": [
                                103,
                                52
                            ],
                            "name": "amount",
                            "rawdesc": "Amount of resource to use.",
                            "start": [
                                103,
                                46
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "Consumes metal or energy resources of the specified team.\n\n@*param* `type` — Resource type.\n\n@*param* `amount` — Amount of resource to use.\n\nTrue if enough of the resource type was available and was consumed, otherwise false.\n\n```lua\ntype:\n    | \"metal\"\n    | \"energy\"\n    | \"m\"\n    | \"e\"\n```",
                    "finish": [
                        103,
                        57
                    ],
                    "rawdesc": "Consumes metal or energy resources of the specified team.\n\nTrue if enough of the resource type was available and was consumed, otherwise false.\n\n```lua\ntype:\n    | \"metal\"\n    | \"energy\"\n    | \"m\"\n    | \"e\"\n```",
                    "returns": [
                        {
                            "name": "hadEnough",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        103,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.UseTeamResource(teamID: integer, type: \"e\"|\"energy\"|\"m\"|\"metal\", amount: number)\n  -> hadEnough: boolean"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    103,
                    31
                ],
                "name": "UseTeamResource",
                "rawdesc": "Consumes metal or energy resources of the specified team.\n\nTrue if enough of the resource type was available and was consumed, otherwise false.\n\n```lua\ntype:\n    | \"metal\"\n    | \"energy\"\n    | \"m\"\n    | \"e\"\n```",
                "start": [
                    103,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Consumes metal and/or energy resources of the specified team.\n\nTrue if enough of the resource type(s) were available and was consumed, otherwise false.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                111,
                                38
                            ],
                            "name": "teamID",
                            "start": [
                                111,
                                32
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                111,
                                46
                            ],
                            "name": "amount",
                            "start": [
                                111,
                                40
                            ],
                            "type": "local",
                            "view": "table<\"e\"|\"energy\"|\"m\"|\"metal\", number>"
                        }
                    ],
                    "desc": "Consumes metal and/or energy resources of the specified team.\n\nTrue if enough of the resource type(s) were available and was consumed, otherwise false.",
                    "finish": [
                        111,
                        51
                    ],
                    "rawdesc": "Consumes metal and/or energy resources of the specified team.\n\nTrue if enough of the resource type(s) were available and was consumed, otherwise false.",
                    "returns": [
                        {
                            "name": "hadEnough",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        111,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.UseTeamResource(teamID: integer, amount: table<\"e\"|\"energy\"|\"m\"|\"metal\", number>)\n  -> hadEnough: boolean"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    111,
                    31
                ],
                "name": "UseTeamResource",
                "rawdesc": "Consumes metal and/or energy resources of the specified team.\n\nTrue if enough of the resource type(s) were available and was consumed, otherwise false.",
                "start": [
                    111,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.UseTeamResource",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "```lua\nresource:\n    | \"metal\"\n    | \"energy\"\n    | \"m\"\n    | \"e\"\n```",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                864,
                                38
                            ],
                            "name": "unitID",
                            "start": [
                                864,
                                32
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                864,
                                48
                            ],
                            "name": "resource",
                            "start": [
                                864,
                                40
                            ],
                            "type": "local",
                            "view": "\"e\"|\"energy\"|\"m\"|\"metal\""
                        },
                        {
                            "finish": [
                                864,
                                56
                            ],
                            "name": "amount",
                            "start": [
                                864,
                                50
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "```lua\nresource:\n    | \"metal\"\n    | \"energy\"\n    | \"m\"\n    | \"e\"\n```",
                    "finish": [
                        864,
                        61
                    ],
                    "rawdesc": "```lua\nresource:\n    | \"metal\"\n    | \"energy\"\n    | \"m\"\n    | \"e\"\n```",
                    "returns": [
                        {
                            "name": "okay",
                            "type": "function.return",
                            "view": "boolean?"
                        }
                    ],
                    "start": [
                        864,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.UseUnitResource(unitID: integer, resource: \"e\"|\"energy\"|\"m\"|\"metal\", amount: number)\n  -> okay: boolean?"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    864,
                    31
                ],
                "name": "UseUnitResource",
                "rawdesc": "```lua\nresource:\n    | \"metal\"\n    | \"energy\"\n    | \"m\"\n    | \"e\"\n```",
                "start": [
                    864,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                869,
                                38
                            ],
                            "name": "unitID",
                            "start": [
                                869,
                                32
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                869,
                                49
                            ],
                            "name": "resources",
                            "start": [
                                869,
                                40
                            ],
                            "type": "local",
                            "view": "table<\"e\"|\"energy\"|\"m\"|\"metal\", number>"
                        }
                    ],
                    "finish": [
                        869,
                        54
                    ],
                    "returns": [
                        {
                            "name": "okay",
                            "type": "function.return",
                            "view": "boolean?"
                        }
                    ],
                    "start": [
                        869,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.UseUnitResource(unitID: integer, resources: table<\"e\"|\"energy\"|\"m\"|\"metal\", number>)\n  -> okay: boolean?"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    869,
                    31
                ],
                "name": "UseUnitResource",
                "start": [
                    869,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.UseUnitResource",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                1122,
                                40
                            ],
                            "name": "featureID",
                            "start": [
                                1122,
                                31
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        1122,
                        45
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        1122,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.ValidFeatureID(featureID: integer)\n  -> boolean"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    1122,
                    30
                ],
                "name": "ValidFeatureID",
                "start": [
                    1122,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.ValidFeatureID",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                556,
                                34
                            ],
                            "name": "unitID",
                            "start": [
                                556,
                                28
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        556,
                        39
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        556,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.ValidUnitID(unitID: integer)\n  -> boolean"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    556,
                    27
                ],
                "name": "ValidUnitID",
                "start": [
                    556,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.ValidUnitID",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                679,
                                27
                            ],
                            "name": "x",
                            "start": [
                                679,
                                26
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                679,
                                30
                            ],
                            "name": "y",
                            "start": [
                                679,
                                29
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "finish": [
                        679,
                        35
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        679,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.WarpMouse(x: number, y: number)\n  -> nil"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    679,
                    25
                ],
                "name": "WarpMouse",
                "start": [
                    679,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.WarpMouse",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                582,
                                37
                            ],
                            "name": "x",
                            "start": [
                                582,
                                36
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                582,
                                40
                            ],
                            "name": "y",
                            "start": [
                                582,
                                39
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                582,
                                43
                            ],
                            "name": "z",
                            "start": [
                                582,
                                42
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "finish": [
                        582,
                        48
                    ],
                    "returns": [
                        {
                            "name": "viewPortX",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "viewPortY",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "viewPortZ",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        582,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.WorldToScreenCoords(x: number, y: number, z: number)\n  -> viewPortX: number\n  2. viewPortY: number\n  3. viewPortZ: number"
                },
                "file": "/generated/LuaUnsyncedRead.lua",
                "finish": [
                    582,
                    35
                ],
                "name": "WorldToScreenCoords",
                "start": [
                    582,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.WorldToScreenCoords",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Relinquish control of the game loading thread and OpenGL context back to the UI (LuaIntro).\n\nShould be called after each widget/unsynced gadget is loaded in widget/gadget handler. Use it to draw screen updates and process windows events.\n\nfor wupget in pairs(wupgetsToLoad) do\nloadWupget(wupget)\nwantYield = wantYield and Spring.Yield()\nend\n\n@*return* `when` — true caller should continue calling `Spring.Yield` during the widgets/gadgets load, when false it shouldn't call it any longer.",
                "extends": {
                    "args": [],
                    "desc": "Relinquish control of the game loading thread and OpenGL context back to the UI (LuaIntro).\n\nShould be called after each widget/unsynced gadget is loaded in widget/gadget handler. Use it to draw screen updates and process windows events.\n\nfor wupget in pairs(wupgetsToLoad) do\nloadWupget(wupget)\nwantYield = wantYield and Spring.Yield()\nend\n\n@*return* `when` — true caller should continue calling `Spring.Yield` during the widgets/gadgets load, when false it shouldn't call it any longer.",
                    "finish": [
                        1314,
                        27
                    ],
                    "rawdesc": "Relinquish control of the game loading thread and OpenGL context back to the UI (LuaIntro).\n\nShould be called after each widget/unsynced gadget is loaded in widget/gadget handler. Use it to draw screen updates and process windows events.\n\nfor wupget in pairs(wupgetsToLoad) do\nloadWupget(wupget)\nwantYield = wantYield and Spring.Yield()\nend",
                    "returns": [
                        {
                            "desc": "true caller should continue calling `Spring.Yield` during the widgets/gadgets load, when false it shouldn't call it any longer.",
                            "name": "when",
                            "rawdesc": "true caller should continue calling `Spring.Yield` during the widgets/gadgets load, when false it shouldn't call it any longer.",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        1314,
                        0
                    ],
                    "type": "function",
                    "view": "function Spring.Yield()\n  -> when: boolean"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    1314,
                    21
                ],
                "name": "Yield",
                "rawdesc": "Relinquish control of the game loading thread and OpenGL context back to the UI (LuaIntro).\n\nShould be called after each widget/unsynced gadget is loaded in widget/gadget handler. Use it to draw screen updates and process windows events.\n\nfor wupget in pairs(wupgetsToLoad) do\nloadWupget(wupget)\nwantYield = wantYield and Spring.Yield()\nend",
                "start": [
                    1314,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Spring.Yield",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Called when a units stockpile of weapons increases or decreases.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                492,
                                32
                            ],
                            "name": "unitID",
                            "start": [
                                492,
                                26
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                492,
                                43
                            ],
                            "name": "unitDefID",
                            "start": [
                                492,
                                34
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                492,
                                53
                            ],
                            "name": "unitTeam",
                            "start": [
                                492,
                                45
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                492,
                                64
                            ],
                            "name": "weaponNum",
                            "start": [
                                492,
                                55
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                492,
                                74
                            ],
                            "name": "oldCount",
                            "start": [
                                492,
                                66
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                492,
                                84
                            ],
                            "name": "newCount",
                            "start": [
                                492,
                                76
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Called when a units stockpile of weapons increases or decreases.",
                    "finish": [
                        492,
                        89
                    ],
                    "rawdesc": "Called when a units stockpile of weapons increases or decreases.",
                    "start": [
                        492,
                        0
                    ],
                    "type": "function",
                    "view": "function StockpileChanged(unitID: integer, unitDefID: integer, unitTeam: integer, weaponNum: integer, oldCount: integer, newCount: integer)"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    492,
                    25
                ],
                "rawdesc": "Called when a units stockpile of weapons increases or decreases.",
                "start": [
                    492,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "StockpileChanged",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "desc": "```lua\nStorageName:\n    | \"metalStorage\"\n    | \"energyStorage\"\n    | \"ms\"\n    | \"es\"\n```",
                "finish": [
                    117,
                    62
                ],
                "rawdesc": "```lua\nStorageName:\n    | \"metalStorage\"\n    | \"energyStorage\"\n    | \"ms\"\n    | \"es\"\n```",
                "start": [
                    117,
                    10
                ],
                "type": "doc.alias",
                "view": "\"energyStorage\"|\"es\"|\"metalStorage\"|\"ms\""
            }
        ],
        "fields": [],
        "name": "StorageName",
        "type": "type",
        "view": "StorageName"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [],
                    "finish": [
                        530,
                        25
                    ],
                    "start": [
                        530,
                        0
                    ],
                    "type": "function",
                    "view": "function SunChanged()"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    530,
                    19
                ],
                "start": [
                    530,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "SunChanged",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "desc": "```lua\nTargetType:\n    | 0 -- none\n    | 1 -- unit\n    | 2 -- position\n    | 3 -- projectile\n```",
                "finish": [
                    946,
                    6
                ],
                "rawdesc": "```lua\nTargetType:\n    | 0 -- none\n    | 1 -- unit\n    | 2 -- position\n    | 3 -- projectile\n```",
                "start": [
                    942,
                    10
                ],
                "type": "doc.alias",
                "view": "0|1|2|3"
            }
        ],
        "fields": [],
        "name": "TargetType",
        "type": "type",
        "view": "TargetType"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                104,
                                27
                            ],
                            "name": "teamID",
                            "start": [
                                104,
                                21
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "finish": [
                        104,
                        32
                    ],
                    "start": [
                        104,
                        0
                    ],
                    "type": "function",
                    "view": "function TeamChanged(teamID: number)"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    104,
                    20
                ],
                "start": [
                    104,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "TeamChanged",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Called when a team dies (see `Spring.KillTeam`).",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                101,
                                24
                            ],
                            "name": "teamID",
                            "start": [
                                101,
                                18
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "Called when a team dies (see `Spring.KillTeam`).",
                    "finish": [
                        101,
                        29
                    ],
                    "rawdesc": "Called when a team dies (see `Spring.KillTeam`).",
                    "start": [
                        101,
                        0
                    ],
                    "type": "function",
                    "view": "function TeamDied(teamID: number)"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    101,
                    17
                ],
                "rawdesc": "Called when a team dies (see `Spring.KillTeam`).",
                "start": [
                    101,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "TeamDied",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    290,
                    19
                ],
                "start": [
                    290,
                    10
                ],
                "type": "doc.class",
                "view": "TeamStats",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        303,
                        28
                    ],
                    "start": [
                        303,
                        22
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                303,
                                28
                            ],
                            "start": [
                                303,
                                22
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    303,
                    28
                ],
                "name": "damageDealt",
                "start": [
                    303,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        304,
                        31
                    ],
                    "start": [
                        304,
                        25
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                304,
                                31
                            ],
                            "start": [
                                304,
                                25
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    304,
                    31
                ],
                "name": "damageReceived",
                "start": [
                    304,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        300,
                        29
                    ],
                    "start": [
                        300,
                        23
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                300,
                                29
                            ],
                            "start": [
                                300,
                                23
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    300,
                    29
                ],
                "name": "energyExcess",
                "start": [
                    300,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        299,
                        31
                    ],
                    "start": [
                        299,
                        25
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                299,
                                31
                            ],
                            "start": [
                                299,
                                25
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    299,
                    31
                ],
                "name": "energyProduced",
                "start": [
                    299,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        301,
                        31
                    ],
                    "start": [
                        301,
                        25
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                301,
                                31
                            ],
                            "start": [
                                301,
                                25
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    301,
                    31
                ],
                "name": "energyReceived",
                "start": [
                    301,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        302,
                        27
                    ],
                    "start": [
                        302,
                        21
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                302,
                                27
                            ],
                            "start": [
                                302,
                                21
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    302,
                    27
                ],
                "name": "energySent",
                "start": [
                    302,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        298,
                        27
                    ],
                    "start": [
                        298,
                        21
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                298,
                                27
                            ],
                            "start": [
                                298,
                                21
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    298,
                    27
                ],
                "name": "energyUsed",
                "start": [
                    298,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        292,
                        22
                    ],
                    "start": [
                        292,
                        16
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                292,
                                22
                            ],
                            "start": [
                                292,
                                16
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    292,
                    22
                ],
                "name": "frame",
                "start": [
                    292,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        295,
                        28
                    ],
                    "start": [
                        295,
                        22
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                295,
                                28
                            ],
                            "start": [
                                295,
                                22
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    295,
                    28
                ],
                "name": "metalExcess",
                "start": [
                    295,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        294,
                        30
                    ],
                    "start": [
                        294,
                        24
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                294,
                                30
                            ],
                            "start": [
                                294,
                                24
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    294,
                    30
                ],
                "name": "metalProduced",
                "start": [
                    294,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        296,
                        30
                    ],
                    "start": [
                        296,
                        24
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                296,
                                30
                            ],
                            "start": [
                                296,
                                24
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    296,
                    30
                ],
                "name": "metalReceived",
                "start": [
                    296,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        297,
                        26
                    ],
                    "start": [
                        297,
                        20
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                297,
                                26
                            ],
                            "start": [
                                297,
                                20
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    297,
                    26
                ],
                "name": "metalSent",
                "start": [
                    297,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        293,
                        26
                    ],
                    "start": [
                        293,
                        20
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                293,
                                26
                            ],
                            "start": [
                                293,
                                20
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    293,
                    26
                ],
                "name": "metalUsed",
                "start": [
                    293,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        291,
                        21
                    ],
                    "start": [
                        291,
                        15
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                291,
                                21
                            ],
                            "start": [
                                291,
                                15
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    291,
                    21
                ],
                "name": "time",
                "start": [
                    291,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        309,
                        31
                    ],
                    "start": [
                        309,
                        24
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                309,
                                31
                            ],
                            "start": [
                                309,
                                24
                            ],
                            "type": "doc.type.name",
                            "view": "integer"
                        }
                    ],
                    "view": "integer"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    309,
                    31
                ],
                "name": "unitsCaptured",
                "start": [
                    309,
                    10
                ],
                "type": "doc.field",
                "view": "integer",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        306,
                        27
                    ],
                    "start": [
                        306,
                        20
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                306,
                                27
                            ],
                            "start": [
                                306,
                                20
                            ],
                            "type": "doc.type.name",
                            "view": "integer"
                        }
                    ],
                    "view": "integer"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    306,
                    27
                ],
                "name": "unitsDied",
                "start": [
                    306,
                    10
                ],
                "type": "doc.field",
                "view": "integer",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        310,
                        34
                    ],
                    "start": [
                        310,
                        27
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                310,
                                34
                            ],
                            "start": [
                                310,
                                27
                            ],
                            "type": "doc.type.name",
                            "view": "integer"
                        }
                    ],
                    "view": "integer"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    310,
                    34
                ],
                "name": "unitsOutCaptured",
                "start": [
                    310,
                    10
                ],
                "type": "doc.field",
                "view": "integer",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        305,
                        31
                    ],
                    "start": [
                        305,
                        24
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                305,
                                31
                            ],
                            "start": [
                                305,
                                24
                            ],
                            "type": "doc.type.name",
                            "view": "integer"
                        }
                    ],
                    "view": "integer"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    305,
                    31
                ],
                "name": "unitsProduced",
                "start": [
                    305,
                    10
                ],
                "type": "doc.field",
                "view": "integer",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        307,
                        31
                    ],
                    "start": [
                        307,
                        24
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                307,
                                31
                            ],
                            "start": [
                                307,
                                24
                            ],
                            "type": "doc.type.name",
                            "view": "integer"
                        }
                    ],
                    "view": "integer"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    307,
                    31
                ],
                "name": "unitsReceived",
                "start": [
                    307,
                    10
                ],
                "type": "doc.field",
                "view": "integer",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        308,
                        27
                    ],
                    "start": [
                        308,
                        20
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                308,
                                27
                            ],
                            "start": [
                                308,
                                20
                            ],
                            "type": "doc.type.name",
                            "view": "integer"
                        }
                    ],
                    "view": "integer"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    308,
                    27
                ],
                "name": "unitsSent",
                "start": [
                    308,
                    10
                ],
                "type": "doc.field",
                "view": "integer",
                "visible": "public"
            }
        ],
        "name": "TeamStats",
        "type": "type",
        "view": "TeamStats"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Called when pre-building terrain levelling terraforms are completed (c.f. levelGround)\n\n@*return* `if` — true the current build order is terminated",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                290,
                                33
                            ],
                            "name": "unitID",
                            "start": [
                                290,
                                27
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                290,
                                44
                            ],
                            "name": "unitDefID",
                            "start": [
                                290,
                                35
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                290,
                                54
                            ],
                            "name": "unitTeam",
                            "start": [
                                290,
                                46
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                290,
                                67
                            ],
                            "name": "buildUnitID",
                            "start": [
                                290,
                                56
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                290,
                                83
                            ],
                            "name": "buildUnitDefID",
                            "start": [
                                290,
                                69
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                290,
                                98
                            ],
                            "name": "buildUnitTeam",
                            "start": [
                                290,
                                85
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Called when pre-building terrain levelling terraforms are completed (c.f. levelGround)\n\n@*return* `if` — true the current build order is terminated",
                    "finish": [
                        290,
                        103
                    ],
                    "rawdesc": "Called when pre-building terrain levelling terraforms are completed (c.f. levelGround)",
                    "returns": [
                        {
                            "desc": "true the current build order is terminated",
                            "name": "if",
                            "rawdesc": "true the current build order is terminated",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        290,
                        0
                    ],
                    "type": "function",
                    "view": "function TerraformComplete(unitID: integer, unitDefID: integer, unitTeam: integer, buildUnitID: integer, buildUnitDefID: integer, buildUnitTeam: integer)\n  -> if: boolean"
                },
                "file": "/generated/LuaHandleSynced.lua",
                "finish": [
                    290,
                    26
                ],
                "rawdesc": "Called when pre-building terrain levelling terraforms are completed (c.f. levelGround)",
                "start": [
                    290,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "TerraformComplete",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                692,
                                25
                            ],
                            "name": "utf8",
                            "start": [
                                692,
                                21
                            ],
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": [
                                692,
                                32
                            ],
                            "name": "start",
                            "start": [
                                692,
                                27
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                692,
                                40
                            ],
                            "name": "length",
                            "start": [
                                692,
                                34
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "finish": [
                        692,
                        45
                    ],
                    "start": [
                        692,
                        0
                    ],
                    "type": "function",
                    "view": "function TextEditing(utf8: string, start: number, length: number)"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    692,
                    20
                ],
                "start": [
                    692,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "TextEditing",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Called whenever a key press results in text input.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                687,
                                27
                            ],
                            "name": "utf8char",
                            "start": [
                                687,
                                19
                            ],
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "desc": "Called whenever a key press results in text input.",
                    "finish": [
                        687,
                        32
                    ],
                    "rawdesc": "Called whenever a key press results in text input.",
                    "start": [
                        687,
                        0
                    ],
                    "type": "function",
                    "view": "function TextInput(utf8char: string)"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    687,
                    18
                ],
                "rawdesc": "Called whenever a key press results in text input.",
                "start": [
                    687,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "TextInput",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "desc": "```lua\nUniformArrayType:\n    | 1 -- int\n    | 2 -- float\n    | 3 -- float matrix\n```",
                "finish": [
                    155,
                    6
                ],
                "rawdesc": "```lua\nUniformArrayType:\n    | 1 -- int\n    | 2 -- float\n    | 3 -- float matrix\n```",
                "start": [
                    152,
                    10
                ],
                "type": "doc.alias",
                "view": "1|2|3"
            }
        ],
        "fields": [],
        "name": "UniformArrayType",
        "type": "type",
        "view": "UniformArrayType"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "A table of uniform name to value.\n\nThe Uniforms are the values you send along with the shader-program. To use\nthem in the shader-program declare them like this: `uniform float frame;`\n\nSpecify a Lua array to initialize GLSL arrays.\n\nThe engine will automatically fill in an appropriately named uniform for team\ncolour if it is declared;\n\n```glsl\nuniform vec4 teamColor;\n```\n",
                "extends": [
                    {
                        "fields": [
                            {
                                "finish": [
                                    35,
                                    45
                                ],
                                "name": {
                                    "finish": [
                                        35,
                                        37
                                    ],
                                    "start": [
                                        35,
                                        31
                                    ],
                                    "type": "doc.type",
                                    "types": [
                                        {
                                            "finish": [
                                                35,
                                                37
                                            ],
                                            "start": [
                                                35,
                                                31
                                            ],
                                            "type": "doc.type.name",
                                            "view": "string"
                                        }
                                    ],
                                    "view": "string"
                                },
                                "start": [
                                    35,
                                    31
                                ],
                                "type": "doc.type.field",
                                "view": "<T>|<T>[]"
                            }
                        ],
                        "finish": [
                            35,
                            47
                        ],
                        "start": [
                            35,
                            28
                        ],
                        "type": "doc.type.table",
                        "view": "{ [string]: <T>|<T>[] }"
                    }
                ],
                "file": "/generated/LuaShaders.lua",
                "finish": [
                    35,
                    47
                ],
                "rawdesc": "A table of uniform name to value.\n\nThe Uniforms are the values you send along with the shader-program. To use\nthem in the shader-program declare them like this: `uniform float frame;`\n\nSpecify a Lua array to initialize GLSL arrays.\n\nThe engine will automatically fill in an appropriately named uniform for team\ncolour if it is declared;\n\n```glsl\nuniform vec4 teamColor;\n```\n",
                "start": [
                    35,
                    10
                ],
                "type": "doc.class",
                "view": "UniformParam",
                "visible": "public"
            }
        ],
        "fields": [],
        "name": "UniformParam",
        "type": "type",
        "view": "UniformParam"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                413,
                                33
                            ],
                            "name": "unitID",
                            "start": [
                                413,
                                27
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                413,
                                44
                            ],
                            "name": "unitDefID",
                            "start": [
                                413,
                                35
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                413,
                                54
                            ],
                            "name": "unitTeam",
                            "start": [
                                413,
                                46
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        413,
                        59
                    ],
                    "start": [
                        413,
                        0
                    ],
                    "type": "function",
                    "view": "function UnitArrivedAtGoal(unitID: integer, unitDefID: integer, unitTeam: integer)"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    413,
                    26
                ],
                "start": [
                    413,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "UnitArrivedAtGoal",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Called when a unit cloaks.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                380,
                                27
                            ],
                            "name": "unitID",
                            "start": [
                                380,
                                21
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                380,
                                38
                            ],
                            "name": "unitDefID",
                            "start": [
                                380,
                                29
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                380,
                                48
                            ],
                            "name": "unitTeam",
                            "start": [
                                380,
                                40
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Called when a unit cloaks.",
                    "finish": [
                        380,
                        53
                    ],
                    "rawdesc": "Called when a unit cloaks.",
                    "start": [
                        380,
                        0
                    ],
                    "type": "function",
                    "view": "function UnitCloaked(unitID: integer, unitDefID: integer, unitTeam: integer)"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    380,
                    20
                ],
                "rawdesc": "Called when a unit cloaks.",
                "start": [
                    380,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "UnitCloaked",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Called when a unit completes a command.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                222,
                                27
                            ],
                            "name": "unitID",
                            "start": [
                                222,
                                21
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                222,
                                38
                            ],
                            "name": "unitDefID",
                            "start": [
                                222,
                                29
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                222,
                                48
                            ],
                            "name": "unitTeam",
                            "start": [
                                222,
                                40
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                222,
                                55
                            ],
                            "name": "cmdID",
                            "start": [
                                222,
                                50
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                222,
                                66
                            ],
                            "name": "cmdParams",
                            "start": [
                                222,
                                57
                            ],
                            "type": "local",
                            "view": "table"
                        },
                        {
                            "desc": "Parameters for command options\n",
                            "finish": [
                                222,
                                75
                            ],
                            "name": "options",
                            "rawdesc": "Parameters for command options\n",
                            "start": [
                                222,
                                68
                            ],
                            "type": "local",
                            "view": "CommandOptions"
                        },
                        {
                            "finish": [
                                222,
                                83
                            ],
                            "name": "cmdTag",
                            "start": [
                                222,
                                77
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "Called when a unit completes a command.",
                    "finish": [
                        222,
                        88
                    ],
                    "rawdesc": "Called when a unit completes a command.",
                    "start": [
                        222,
                        0
                    ],
                    "type": "function",
                    "view": "function UnitCmdDone(unitID: integer, unitDefID: integer, unitTeam: integer, cmdID: number, cmdParams: table, options: CommandOptions, cmdTag: number)"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    222,
                    20
                ],
                "rawdesc": "Called when a unit completes a command.",
                "start": [
                    222,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "UnitCmdDone",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Called after when a unit accepts a command, after `AllowCommand` returns true.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                211,
                                27
                            ],
                            "name": "unitID",
                            "start": [
                                211,
                                21
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                211,
                                38
                            ],
                            "name": "unitDefID",
                            "start": [
                                211,
                                29
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                211,
                                48
                            ],
                            "name": "unitTeam",
                            "start": [
                                211,
                                40
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                211,
                                55
                            ],
                            "name": "cmdID",
                            "start": [
                                211,
                                50
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                211,
                                66
                            ],
                            "name": "cmdParams",
                            "start": [
                                211,
                                57
                            ],
                            "type": "local",
                            "view": "table"
                        },
                        {
                            "desc": "Parameters for command options\n",
                            "finish": [
                                211,
                                75
                            ],
                            "name": "options",
                            "rawdesc": "Parameters for command options\n",
                            "start": [
                                211,
                                68
                            ],
                            "type": "local",
                            "view": "CommandOptions"
                        },
                        {
                            "finish": [
                                211,
                                83
                            ],
                            "name": "cmdTag",
                            "start": [
                                211,
                                77
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "Called after when a unit accepts a command, after `AllowCommand` returns true.",
                    "finish": [
                        211,
                        88
                    ],
                    "rawdesc": "Called after when a unit accepts a command, after `AllowCommand` returns true.",
                    "start": [
                        211,
                        0
                    ],
                    "type": "function",
                    "view": "function UnitCommand(unitID: integer, unitDefID: integer, unitTeam: integer, cmdID: number, cmdParams: table, options: CommandOptions, cmdTag: number)"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    211,
                    20
                ],
                "rawdesc": "Called after when a unit accepts a command, after `AllowCommand` returns true.",
                "start": [
                    211,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "UnitCommand",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Called when a unit being built starts decaying.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                166,
                                39
                            ],
                            "name": "unitID",
                            "start": [
                                166,
                                33
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                166,
                                50
                            ],
                            "name": "unitDefID",
                            "start": [
                                166,
                                41
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                166,
                                60
                            ],
                            "name": "unitTeam",
                            "start": [
                                166,
                                52
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                166,
                                80
                            ],
                            "name": "timeSinceLastBuild",
                            "start": [
                                166,
                                62
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                166,
                                97
                            ],
                            "name": "iterationPeriod",
                            "start": [
                                166,
                                82
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                166,
                                103
                            ],
                            "name": "part",
                            "start": [
                                166,
                                99
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "Called when a unit being built starts decaying.",
                    "finish": [
                        166,
                        108
                    ],
                    "rawdesc": "Called when a unit being built starts decaying.",
                    "start": [
                        166,
                        0
                    ],
                    "type": "function",
                    "view": "function UnitConstructionDecayed(unitID: integer, unitDefID: integer, unitTeam: integer, timeSinceLastBuild: number, iterationPeriod: number, part: number)"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    166,
                    32
                ],
                "rawdesc": "Called when a unit being built starts decaying.",
                "start": [
                    166,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "UnitConstructionDecayed",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Called at the moment the unit is created.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                132,
                                27
                            ],
                            "name": "unitID",
                            "start": [
                                132,
                                21
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                132,
                                38
                            ],
                            "name": "unitDefID",
                            "start": [
                                132,
                                29
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                132,
                                48
                            ],
                            "name": "unitTeam",
                            "start": [
                                132,
                                40
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                132,
                                59
                            ],
                            "name": "builderID",
                            "start": [
                                132,
                                50
                            ],
                            "type": "local",
                            "view": "number?"
                        }
                    ],
                    "desc": "Called at the moment the unit is created.",
                    "finish": [
                        132,
                        64
                    ],
                    "rawdesc": "Called at the moment the unit is created.",
                    "start": [
                        132,
                        0
                    ],
                    "type": "function",
                    "view": "function UnitCreated(unitID: integer, unitDefID: integer, unitTeam: integer, builderID?: number)"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    132,
                    20
                ],
                "rawdesc": "Called at the moment the unit is created.",
                "start": [
                    132,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "UnitCreated",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Called when a unit is damaged (after UnitPreDamaged).",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                236,
                                27
                            ],
                            "name": "unitID",
                            "start": [
                                236,
                                21
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                236,
                                38
                            ],
                            "name": "unitDefID",
                            "start": [
                                236,
                                29
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                236,
                                48
                            ],
                            "name": "unitTeam",
                            "start": [
                                236,
                                40
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                236,
                                56
                            ],
                            "name": "damage",
                            "start": [
                                236,
                                50
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                236,
                                67
                            ],
                            "name": "paralyzer",
                            "start": [
                                236,
                                58
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                236,
                                80
                            ],
                            "name": "weaponDefID",
                            "start": [
                                236,
                                69
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                236,
                                94
                            ],
                            "name": "projectileID",
                            "start": [
                                236,
                                82
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                236,
                                106
                            ],
                            "name": "attackerID",
                            "start": [
                                236,
                                96
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                236,
                                121
                            ],
                            "name": "attackerDefID",
                            "start": [
                                236,
                                108
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                236,
                                135
                            ],
                            "name": "attackerTeam",
                            "start": [
                                236,
                                123
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "Called when a unit is damaged (after UnitPreDamaged).",
                    "finish": [
                        236,
                        140
                    ],
                    "rawdesc": "Called when a unit is damaged (after UnitPreDamaged).",
                    "start": [
                        236,
                        0
                    ],
                    "type": "function",
                    "view": "function UnitDamaged(unitID: integer, unitDefID: integer, unitTeam: integer, damage: number, paralyzer: number, weaponDefID: number, projectileID: number, attackerID: number, attackerDefID: number, attackerTeam: number)"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    236,
                    20
                ],
                "rawdesc": "Called when a unit is damaged (after UnitPreDamaged).",
                "start": [
                    236,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "UnitDamaged",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Called when a unit decloaks.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                387,
                                29
                            ],
                            "name": "unitID",
                            "start": [
                                387,
                                23
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                387,
                                40
                            ],
                            "name": "unitDefID",
                            "start": [
                                387,
                                31
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                387,
                                50
                            ],
                            "name": "unitTeam",
                            "start": [
                                387,
                                42
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Called when a unit decloaks.",
                    "finish": [
                        387,
                        55
                    ],
                    "rawdesc": "Called when a unit decloaks.",
                    "start": [
                        387,
                        0
                    ],
                    "type": "function",
                    "view": "function UnitDecloaked(unitID: integer, unitDefID: integer, unitTeam: integer)"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    387,
                    22
                ],
                "rawdesc": "Called when a unit decloaks.",
                "start": [
                    387,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "UnitDecloaked",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Called when a unit is destroyed.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                177,
                                29
                            ],
                            "name": "unitID",
                            "start": [
                                177,
                                23
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                177,
                                40
                            ],
                            "name": "unitDefID",
                            "start": [
                                177,
                                31
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                177,
                                50
                            ],
                            "name": "unitTeam",
                            "start": [
                                177,
                                42
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                177,
                                62
                            ],
                            "name": "attackerID",
                            "start": [
                                177,
                                52
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                177,
                                77
                            ],
                            "name": "attackerDefID",
                            "start": [
                                177,
                                64
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                177,
                                91
                            ],
                            "name": "attackerTeam",
                            "start": [
                                177,
                                79
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                177,
                                104
                            ],
                            "name": "weaponDefID",
                            "start": [
                                177,
                                93
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "Called when a unit is destroyed.",
                    "finish": [
                        177,
                        109
                    ],
                    "rawdesc": "Called when a unit is destroyed.",
                    "start": [
                        177,
                        0
                    ],
                    "type": "function",
                    "view": "function UnitDestroyed(unitID: integer, unitDefID: integer, unitTeam: integer, attackerID: number, attackerDefID: number, attackerTeam: number, weaponDefID: number)"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    177,
                    22
                ],
                "rawdesc": "Called when a unit is destroyed.",
                "start": [
                    177,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "UnitDestroyed",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                373,
                                30
                            ],
                            "name": "unitID",
                            "start": [
                                373,
                                24
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                373,
                                41
                            ],
                            "name": "unitDefID",
                            "start": [
                                373,
                                32
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                373,
                                51
                            ],
                            "name": "unitTeam",
                            "start": [
                                373,
                                43
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        373,
                        56
                    ],
                    "start": [
                        373,
                        0
                    ],
                    "type": "function",
                    "view": "function UnitEnteredAir(unitID: integer, unitDefID: integer, unitTeam: integer)"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    373,
                    23
                ],
                "start": [
                    373,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "UnitEnteredAir",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Called when a unit enters LOS of an allyteam.\n\nIts called after the unit is in LOS, so you can query that unit.\n\n@*param* `allyTeam` — who's LOS the unit entered.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                295,
                                30
                            ],
                            "name": "unitID",
                            "start": [
                                295,
                                24
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                295,
                                40
                            ],
                            "name": "unitTeam",
                            "start": [
                                295,
                                32
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "desc": "who's LOS the unit entered.",
                            "finish": [
                                295,
                                50
                            ],
                            "name": "allyTeam",
                            "rawdesc": "who's LOS the unit entered.",
                            "start": [
                                295,
                                42
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                295,
                                61
                            ],
                            "name": "unitDefID",
                            "start": [
                                295,
                                52
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Called when a unit enters LOS of an allyteam.\n\nIts called after the unit is in LOS, so you can query that unit.\n\n@*param* `allyTeam` — who's LOS the unit entered.",
                    "finish": [
                        295,
                        66
                    ],
                    "rawdesc": "Called when a unit enters LOS of an allyteam.\n\nIts called after the unit is in LOS, so you can query that unit.",
                    "start": [
                        295,
                        0
                    ],
                    "type": "function",
                    "view": "function UnitEnteredLos(unitID: integer, unitTeam: integer, allyTeam: integer, unitDefID: integer)"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    295,
                    23
                ],
                "rawdesc": "Called when a unit enters LOS of an allyteam.\n\nIts called after the unit is in LOS, so you can query that unit.",
                "start": [
                    295,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "UnitEnteredLos",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Called when a unit enters radar of an allyteam.\n\nAlso called when a unit enters LOS without any radar coverage.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                285,
                                32
                            ],
                            "name": "unitID",
                            "start": [
                                285,
                                26
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                285,
                                42
                            ],
                            "name": "unitTeam",
                            "start": [
                                285,
                                34
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                285,
                                52
                            ],
                            "name": "allyTeam",
                            "start": [
                                285,
                                44
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                285,
                                63
                            ],
                            "name": "unitDefID",
                            "start": [
                                285,
                                54
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Called when a unit enters radar of an allyteam.\n\nAlso called when a unit enters LOS without any radar coverage.",
                    "finish": [
                        285,
                        68
                    ],
                    "rawdesc": "Called when a unit enters radar of an allyteam.\n\nAlso called when a unit enters LOS without any radar coverage.",
                    "start": [
                        285,
                        0
                    ],
                    "type": "function",
                    "view": "function UnitEnteredRadar(unitID: integer, unitTeam: integer, allyTeam: integer, unitDefID: integer)"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    285,
                    25
                ],
                "rawdesc": "Called when a unit enters radar of an allyteam.\n\nAlso called when a unit enters LOS without any radar coverage.",
                "start": [
                    285,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "UnitEnteredRadar",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                348,
                                37
                            ],
                            "name": "unitID",
                            "start": [
                                348,
                                31
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                348,
                                48
                            ],
                            "name": "unitDefID",
                            "start": [
                                348,
                                39
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                348,
                                58
                            ],
                            "name": "unitTeam",
                            "start": [
                                348,
                                50
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        348,
                        63
                    ],
                    "start": [
                        348,
                        0
                    ],
                    "type": "function",
                    "view": "function UnitEnteredUnderwater(unitID: integer, unitDefID: integer, unitTeam: integer)"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    348,
                    30
                ],
                "start": [
                    348,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "UnitEnteredUnderwater",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                353,
                                32
                            ],
                            "name": "unitID",
                            "start": [
                                353,
                                26
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                353,
                                43
                            ],
                            "name": "unitDefID",
                            "start": [
                                353,
                                34
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                353,
                                53
                            ],
                            "name": "unitTeam",
                            "start": [
                                353,
                                45
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        353,
                        58
                    ],
                    "start": [
                        353,
                        0
                    ],
                    "type": "function",
                    "view": "function UnitEnteredWater(unitID: integer, unitDefID: integer, unitTeam: integer)"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    353,
                    25
                ],
                "start": [
                    353,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "UnitEnteredWater",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Called when a unit gains experience greater or equal to the minimum limit set by calling `Spring.SetExperienceGrade`.\n\nShould be called more reliably with small values of experience grade.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                255,
                                30
                            ],
                            "name": "unitID",
                            "start": [
                                255,
                                24
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                255,
                                41
                            ],
                            "name": "unitDefID",
                            "start": [
                                255,
                                32
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                255,
                                51
                            ],
                            "name": "unitTeam",
                            "start": [
                                255,
                                43
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                255,
                                63
                            ],
                            "name": "experience",
                            "start": [
                                255,
                                53
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                255,
                                78
                            ],
                            "name": "oldExperience",
                            "start": [
                                255,
                                65
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "Called when a unit gains experience greater or equal to the minimum limit set by calling `Spring.SetExperienceGrade`.\n\nShould be called more reliably with small values of experience grade.",
                    "finish": [
                        255,
                        83
                    ],
                    "rawdesc": "Called when a unit gains experience greater or equal to the minimum limit set by calling `Spring.SetExperienceGrade`.\n\nShould be called more reliably with small values of experience grade.",
                    "start": [
                        255,
                        0
                    ],
                    "type": "function",
                    "view": "function UnitExperience(unitID: integer, unitDefID: integer, unitTeam: integer, experience: number, oldExperience: number)"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    255,
                    23
                ],
                "rawdesc": "Called when a unit gains experience greater or equal to the minimum limit set by calling `Spring.SetExperienceGrade`.\n\nShould be called more reliably with small values of experience grade.",
                "start": [
                    255,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "UnitExperience",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Called when a unit collides with a feature.\n\nThe unit must be registered with `Script.SetWatchUnit` and the feature registered with `Script.SetWatchFeature`.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                403,
                                40
                            ],
                            "name": "colliderID",
                            "start": [
                                403,
                                30
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                403,
                                52
                            ],
                            "name": "collideeID",
                            "start": [
                                403,
                                42
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "Called when a unit collides with a feature.\n\nThe unit must be registered with `Script.SetWatchUnit` and the feature registered with `Script.SetWatchFeature`.",
                    "finish": [
                        403,
                        57
                    ],
                    "rawdesc": "Called when a unit collides with a feature.\n\nThe unit must be registered with `Script.SetWatchUnit` and the feature registered with `Script.SetWatchFeature`.",
                    "start": [
                        403,
                        0
                    ],
                    "type": "function",
                    "view": "function UnitFeatureCollision(colliderID: number, collideeID: number)"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    403,
                    29
                ],
                "rawdesc": "Called when a unit collides with a feature.\n\nThe unit must be registered with `Script.SetWatchUnit` and the feature registered with `Script.SetWatchFeature`.",
                "start": [
                    403,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "UnitFeatureCollision",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Called at the moment the unit is completed.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                139,
                                28
                            ],
                            "name": "unitID",
                            "start": [
                                139,
                                22
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                139,
                                39
                            ],
                            "name": "unitDefID",
                            "start": [
                                139,
                                30
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                139,
                                49
                            ],
                            "name": "unitTeam",
                            "start": [
                                139,
                                41
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Called at the moment the unit is completed.",
                    "finish": [
                        139,
                        54
                    ],
                    "rawdesc": "Called at the moment the unit is completed.",
                    "start": [
                        139,
                        0
                    ],
                    "type": "function",
                    "view": "function UnitFinished(unitID: integer, unitDefID: integer, unitTeam: integer)"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    139,
                    21
                ],
                "rawdesc": "Called at the moment the unit is completed.",
                "start": [
                    139,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "UnitFinished",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Called when a factory finishes construction of a unit.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                149,
                                31
                            ],
                            "name": "unitID",
                            "start": [
                                149,
                                25
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                149,
                                42
                            ],
                            "name": "unitDefID",
                            "start": [
                                149,
                                33
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                149,
                                52
                            ],
                            "name": "unitTeam",
                            "start": [
                                149,
                                44
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                149,
                                60
                            ],
                            "name": "factID",
                            "start": [
                                149,
                                54
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                149,
                                71
                            ],
                            "name": "factDefID",
                            "start": [
                                149,
                                62
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                149,
                                83
                            ],
                            "name": "userOrders",
                            "start": [
                                149,
                                73
                            ],
                            "type": "local",
                            "view": "boolean"
                        }
                    ],
                    "desc": "Called when a factory finishes construction of a unit.",
                    "finish": [
                        149,
                        88
                    ],
                    "rawdesc": "Called when a factory finishes construction of a unit.",
                    "start": [
                        149,
                        0
                    ],
                    "type": "function",
                    "view": "function UnitFromFactory(unitID: integer, unitDefID: integer, unitTeam: integer, factID: number, factDefID: number, userOrders: boolean)"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    149,
                    24
                ],
                "rawdesc": "Called when a factory finishes construction of a unit.",
                "start": [
                    149,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "UnitFromFactory",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Called when a unit is transferred between teams. This is called after `UnitTaken` and in that moment unit is assigned to the newTeam.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                193,
                                25
                            ],
                            "name": "unitID",
                            "start": [
                                193,
                                19
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                193,
                                36
                            ],
                            "name": "unitDefID",
                            "start": [
                                193,
                                27
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                193,
                                45
                            ],
                            "name": "newTeam",
                            "start": [
                                193,
                                38
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                193,
                                54
                            ],
                            "name": "oldTeam",
                            "start": [
                                193,
                                47
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "Called when a unit is transferred between teams. This is called after `UnitTaken` and in that moment unit is assigned to the newTeam.",
                    "finish": [
                        193,
                        59
                    ],
                    "rawdesc": "Called when a unit is transferred between teams. This is called after `UnitTaken` and in that moment unit is assigned to the newTeam.",
                    "start": [
                        193,
                        0
                    ],
                    "type": "function",
                    "view": "function UnitGiven(unitID: integer, unitDefID: integer, newTeam: number, oldTeam: number)"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    193,
                    18
                ],
                "rawdesc": "Called when a unit is transferred between teams. This is called after `UnitTaken` and in that moment unit is assigned to the newTeam.",
                "start": [
                    193,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "UnitGiven",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Called when a unit's harvestStorage is full (according to its unitDef's entry).",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                262,
                                38
                            ],
                            "name": "unitID",
                            "start": [
                                262,
                                32
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                262,
                                49
                            ],
                            "name": "unitDefID",
                            "start": [
                                262,
                                40
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                262,
                                59
                            ],
                            "name": "unitTeam",
                            "start": [
                                262,
                                51
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Called when a unit's harvestStorage is full (according to its unitDef's entry).",
                    "finish": [
                        262,
                        64
                    ],
                    "rawdesc": "Called when a unit's harvestStorage is full (according to its unitDef's entry).",
                    "start": [
                        262,
                        0
                    ],
                    "type": "function",
                    "view": "function UnitHarvestStorageFull(unitID: integer, unitDefID: integer, unitTeam: integer)"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    262,
                    31
                ],
                "rawdesc": "Called when a unit's harvestStorage is full (according to its unitDef's entry).",
                "start": [
                    262,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "UnitHarvestStorageFull",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Called when a unit is idle (empty command queue).",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                200,
                                24
                            ],
                            "name": "unitID",
                            "start": [
                                200,
                                18
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                200,
                                35
                            ],
                            "name": "unitDefID",
                            "start": [
                                200,
                                26
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                200,
                                45
                            ],
                            "name": "unitTeam",
                            "start": [
                                200,
                                37
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Called when a unit is idle (empty command queue).",
                    "finish": [
                        200,
                        50
                    ],
                    "rawdesc": "Called when a unit is idle (empty command queue).",
                    "start": [
                        200,
                        0
                    ],
                    "type": "function",
                    "view": "function UnitIdle(unitID: integer, unitDefID: integer, unitTeam: integer)"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    200,
                    17
                ],
                "rawdesc": "Called when a unit is idle (empty command queue).",
                "start": [
                    200,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "UnitIdle",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                358,
                                27
                            ],
                            "name": "unitID",
                            "start": [
                                358,
                                21
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                358,
                                38
                            ],
                            "name": "unitDefID",
                            "start": [
                                358,
                                29
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                358,
                                48
                            ],
                            "name": "unitTeam",
                            "start": [
                                358,
                                40
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        358,
                        53
                    ],
                    "start": [
                        358,
                        0
                    ],
                    "type": "function",
                    "view": "function UnitLeftAir(unitID: integer, unitDefID: integer, unitTeam: integer)"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    358,
                    20
                ],
                "start": [
                    358,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "UnitLeftAir",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Called when a unit leaves LOS of an allyteam.\n\nFor widgets, this one is called just before the unit leaves los, so you can still get the position of a unit that left los.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                317,
                                27
                            ],
                            "name": "unitID",
                            "start": [
                                317,
                                21
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                317,
                                37
                            ],
                            "name": "unitTeam",
                            "start": [
                                317,
                                29
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                317,
                                47
                            ],
                            "name": "allyTeam",
                            "start": [
                                317,
                                39
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                317,
                                58
                            ],
                            "name": "unitDefID",
                            "start": [
                                317,
                                49
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Called when a unit leaves LOS of an allyteam.\n\nFor widgets, this one is called just before the unit leaves los, so you can still get the position of a unit that left los.",
                    "finish": [
                        317,
                        63
                    ],
                    "rawdesc": "Called when a unit leaves LOS of an allyteam.\n\nFor widgets, this one is called just before the unit leaves los, so you can still get the position of a unit that left los.",
                    "start": [
                        317,
                        0
                    ],
                    "type": "function",
                    "view": "function UnitLeftLos(unitID: integer, unitTeam: integer, allyTeam: integer, unitDefID: integer)"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    317,
                    20
                ],
                "rawdesc": "Called when a unit leaves LOS of an allyteam.\n\nFor widgets, this one is called just before the unit leaves los, so you can still get the position of a unit that left los.",
                "start": [
                    317,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "UnitLeftLos",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Called when a unit leaves radar of an allyteam.\n\nAlso called when a unit leaves LOS without any radar coverage.\nFor widgets, this is called just after a unit leaves radar coverage, so\nwidgets cannot get the position of units that left their radar.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                307,
                                29
                            ],
                            "name": "unitID",
                            "start": [
                                307,
                                23
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                307,
                                39
                            ],
                            "name": "unitTeam",
                            "start": [
                                307,
                                31
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                307,
                                49
                            ],
                            "name": "allyTeam",
                            "start": [
                                307,
                                41
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                307,
                                60
                            ],
                            "name": "unitDefID",
                            "start": [
                                307,
                                51
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Called when a unit leaves radar of an allyteam.\n\nAlso called when a unit leaves LOS without any radar coverage.\nFor widgets, this is called just after a unit leaves radar coverage, so\nwidgets cannot get the position of units that left their radar.",
                    "finish": [
                        307,
                        65
                    ],
                    "rawdesc": "Called when a unit leaves radar of an allyteam.\n\nAlso called when a unit leaves LOS without any radar coverage.\nFor widgets, this is called just after a unit leaves radar coverage, so\nwidgets cannot get the position of units that left their radar.",
                    "start": [
                        307,
                        0
                    ],
                    "type": "function",
                    "view": "function UnitLeftRadar(unitID: integer, unitTeam: integer, allyTeam: integer, unitDefID: integer)"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    307,
                    22
                ],
                "rawdesc": "Called when a unit leaves radar of an allyteam.\n\nAlso called when a unit leaves LOS without any radar coverage.\nFor widgets, this is called just after a unit leaves radar coverage, so\nwidgets cannot get the position of units that left their radar.",
                "start": [
                    307,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "UnitLeftRadar",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                363,
                                34
                            ],
                            "name": "unitID",
                            "start": [
                                363,
                                28
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                363,
                                45
                            ],
                            "name": "unitDefID",
                            "start": [
                                363,
                                36
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                363,
                                55
                            ],
                            "name": "unitTeam",
                            "start": [
                                363,
                                47
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        363,
                        60
                    ],
                    "start": [
                        363,
                        0
                    ],
                    "type": "function",
                    "view": "function UnitLeftUnderwater(unitID: integer, unitDefID: integer, unitTeam: integer)"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    363,
                    27
                ],
                "start": [
                    363,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "UnitLeftUnderwater",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                368,
                                29
                            ],
                            "name": "unitID",
                            "start": [
                                368,
                                23
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                368,
                                40
                            ],
                            "name": "unitDefID",
                            "start": [
                                368,
                                31
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                368,
                                50
                            ],
                            "name": "unitTeam",
                            "start": [
                                368,
                                42
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        368,
                        55
                    ],
                    "start": [
                        368,
                        0
                    ],
                    "type": "function",
                    "view": "function UnitLeftWater(unitID: integer, unitDefID: integer, unitTeam: integer)"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    368,
                    22
                ],
                "start": [
                    368,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "UnitLeftWater",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Called when a unit is loaded by a transport.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                330,
                                26
                            ],
                            "name": "unitID",
                            "start": [
                                330,
                                20
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                330,
                                37
                            ],
                            "name": "unitDefID",
                            "start": [
                                330,
                                28
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                330,
                                47
                            ],
                            "name": "unitTeam",
                            "start": [
                                330,
                                39
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                330,
                                60
                            ],
                            "name": "transportID",
                            "start": [
                                330,
                                49
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                330,
                                75
                            ],
                            "name": "transportTeam",
                            "start": [
                                330,
                                62
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Called when a unit is loaded by a transport.",
                    "finish": [
                        330,
                        80
                    ],
                    "rawdesc": "Called when a unit is loaded by a transport.",
                    "start": [
                        330,
                        0
                    ],
                    "type": "function",
                    "view": "function UnitLoaded(unitID: integer, unitDefID: integer, unitTeam: integer, transportID: integer, transportTeam: integer)"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    330,
                    19
                ],
                "rawdesc": "Called when a unit is loaded by a transport.",
                "start": [
                    330,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "UnitLoaded",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                408,
                                30
                            ],
                            "name": "unitID",
                            "start": [
                                408,
                                24
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                408,
                                41
                            ],
                            "name": "unitDefID",
                            "start": [
                                408,
                                32
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                408,
                                51
                            ],
                            "name": "unitTeam",
                            "start": [
                                408,
                                43
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "finish": [
                        408,
                        56
                    ],
                    "start": [
                        408,
                        0
                    ],
                    "type": "function",
                    "view": "function UnitMoveFailed(unitID: integer, unitDefID: integer, unitTeam: integer)"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    408,
                    23
                ],
                "start": [
                    408,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "UnitMoveFailed",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Called before damage is applied to the unit, allows fine control over how much damage and impulse is applied.\n\nCalled after every damage modification (even `HitByWeaponId`) but before the damage is applied\n\nexpects two numbers returned by lua code:\n1st is stored under *newDamage if newDamage != NULL\n2nd is stored under *impulseMult if impulseMult != NULL\n\n@*param* `weaponDefID` — Synced Only\n\n@*param* `projectileID` — Synced Only\n\n@*param* `attackerID` — Synced Only\n\n@*param* `attackerDefID` — Synced Only\n\n@*param* `attackerTeam` — Synced Only",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                323,
                                30
                            ],
                            "name": "unitID",
                            "start": [
                                323,
                                24
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                323,
                                41
                            ],
                            "name": "unitDefID",
                            "start": [
                                323,
                                32
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                323,
                                51
                            ],
                            "name": "unitTeam",
                            "start": [
                                323,
                                43
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                323,
                                59
                            ],
                            "name": "damage",
                            "start": [
                                323,
                                53
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                323,
                                70
                            ],
                            "name": "paralyzer",
                            "start": [
                                323,
                                61
                            ],
                            "type": "local",
                            "view": "boolean"
                        },
                        {
                            "desc": "Synced Only",
                            "finish": [
                                323,
                                83
                            ],
                            "name": "weaponDefID",
                            "rawdesc": "Synced Only",
                            "start": [
                                323,
                                72
                            ],
                            "type": "local",
                            "view": "integer?"
                        },
                        {
                            "desc": "Synced Only",
                            "finish": [
                                323,
                                97
                            ],
                            "name": "projectileID",
                            "rawdesc": "Synced Only",
                            "start": [
                                323,
                                85
                            ],
                            "type": "local",
                            "view": "integer?"
                        },
                        {
                            "desc": "Synced Only",
                            "finish": [
                                323,
                                109
                            ],
                            "name": "attackerID",
                            "rawdesc": "Synced Only",
                            "start": [
                                323,
                                99
                            ],
                            "type": "local",
                            "view": "integer?"
                        },
                        {
                            "desc": "Synced Only",
                            "finish": [
                                323,
                                124
                            ],
                            "name": "attackerDefID",
                            "rawdesc": "Synced Only",
                            "start": [
                                323,
                                111
                            ],
                            "type": "local",
                            "view": "integer?"
                        },
                        {
                            "desc": "Synced Only",
                            "finish": [
                                323,
                                138
                            ],
                            "name": "attackerTeam",
                            "rawdesc": "Synced Only",
                            "start": [
                                323,
                                126
                            ],
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "Called before damage is applied to the unit, allows fine control over how much damage and impulse is applied.\n\nCalled after every damage modification (even `HitByWeaponId`) but before the damage is applied\n\nexpects two numbers returned by lua code:\n1st is stored under *newDamage if newDamage != NULL\n2nd is stored under *impulseMult if impulseMult != NULL\n\n@*param* `weaponDefID` — Synced Only\n\n@*param* `projectileID` — Synced Only\n\n@*param* `attackerID` — Synced Only\n\n@*param* `attackerDefID` — Synced Only\n\n@*param* `attackerTeam` — Synced Only",
                    "finish": [
                        323,
                        143
                    ],
                    "rawdesc": "Called before damage is applied to the unit, allows fine control over how much damage and impulse is applied.\n\nCalled after every damage modification (even `HitByWeaponId`) but before the damage is applied\n\nexpects two numbers returned by lua code:\n1st is stored under *newDamage if newDamage != NULL\n2nd is stored under *impulseMult if impulseMult != NULL",
                    "returns": [
                        {
                            "name": "newDamage",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "impulseMult",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        323,
                        0
                    ],
                    "type": "function",
                    "view": "function UnitPreDamaged(unitID: integer, unitDefID: integer, unitTeam: integer, damage: number, paralyzer: boolean, weaponDefID?: integer, projectileID?: integer, attackerID?: integer, attackerDefID?: integer, attackerTeam?: integer)\n  -> newDamage: number\n  2. impulseMult: number"
                },
                "file": "/generated/LuaHandleSynced.lua",
                "finish": [
                    323,
                    23
                ],
                "rawdesc": "Called before damage is applied to the unit, allows fine control over how much damage and impulse is applied.\n\nCalled after every damage modification (even `HitByWeaponId`) but before the damage is applied\n\nexpects two numbers returned by lua code:\n1st is stored under *newDamage if newDamage != NULL\n2nd is stored under *impulseMult if impulseMult != NULL",
                "start": [
                    323,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "UnitPreDamaged",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Called when a living unit becomes a nanoframe again.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                156,
                                32
                            ],
                            "name": "unitID",
                            "start": [
                                156,
                                26
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                156,
                                43
                            ],
                            "name": "unitDefID",
                            "start": [
                                156,
                                34
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                156,
                                53
                            ],
                            "name": "unitTeam",
                            "start": [
                                156,
                                45
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Called when a living unit becomes a nanoframe again.",
                    "finish": [
                        156,
                        58
                    ],
                    "rawdesc": "Called when a living unit becomes a nanoframe again.",
                    "start": [
                        156,
                        0
                    ],
                    "type": "function",
                    "view": "function UnitReverseBuilt(unitID: integer, unitDefID: integer, unitTeam: integer)"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    156,
                    25
                ],
                "rawdesc": "Called when a living unit becomes a nanoframe again.",
                "start": [
                    156,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "UnitReverseBuilt",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Called when a unit emits a seismic ping.\n\nSee `seismicSignature`.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                275,
                                26
                            ],
                            "name": "x",
                            "start": [
                                275,
                                25
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                275,
                                29
                            ],
                            "name": "y",
                            "start": [
                                275,
                                28
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                275,
                                32
                            ],
                            "name": "z",
                            "start": [
                                275,
                                31
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                275,
                                42
                            ],
                            "name": "strength",
                            "start": [
                                275,
                                34
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                275,
                                52
                            ],
                            "name": "allyTeam",
                            "start": [
                                275,
                                44
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                275,
                                60
                            ],
                            "name": "unitID",
                            "start": [
                                275,
                                54
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                275,
                                71
                            ],
                            "name": "unitDefID",
                            "start": [
                                275,
                                62
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Called when a unit emits a seismic ping.\n\nSee `seismicSignature`.",
                    "finish": [
                        275,
                        76
                    ],
                    "rawdesc": "Called when a unit emits a seismic ping.\n\nSee `seismicSignature`.",
                    "start": [
                        275,
                        0
                    ],
                    "type": "function",
                    "view": "function UnitSeismicPing(x: number, y: number, z: number, strength: number, allyTeam: integer, unitID: integer, unitDefID: integer)"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    275,
                    24
                ],
                "rawdesc": "Called when a unit emits a seismic ping.\n\nSee `seismicSignature`.",
                "start": [
                    275,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "UnitSeismicPing",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    558,
                    19
                ],
                "start": [
                    558,
                    10
                ],
                "type": "doc.class",
                "view": "UnitState",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        563,
                        24
                    ],
                    "start": [
                        563,
                        17
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                563,
                                24
                            ],
                            "start": [
                                563,
                                17
                            ],
                            "type": "doc.type.name",
                            "view": "boolean"
                        }
                    ],
                    "view": "boolean"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    563,
                    24
                ],
                "name": "active",
                "start": [
                    563,
                    10
                ],
                "type": "doc.field",
                "view": "boolean",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        565,
                        27
                    ],
                    "start": [
                        565,
                        19
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                565,
                                26
                            ],
                            "start": [
                                565,
                                19
                            ],
                            "type": "doc.type.name",
                            "view": "boolean"
                        }
                    ],
                    "view": "boolean?"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    565,
                    27
                ],
                "name": "autoland",
                "start": [
                    565,
                    10
                ],
                "type": "doc.field",
                "view": "boolean?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        566,
                        33
                    ],
                    "start": [
                        566,
                        26
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                566,
                                32
                            ],
                            "start": [
                                566,
                                26
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number?"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    566,
                    33
                ],
                "name": "autorepairlevel",
                "start": [
                    566,
                    10
                ],
                "type": "doc.field",
                "view": "number?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        562,
                        23
                    ],
                    "start": [
                        562,
                        16
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                562,
                                23
                            ],
                            "start": [
                                562,
                                16
                            ],
                            "type": "doc.type.name",
                            "view": "boolean"
                        }
                    ],
                    "view": "boolean"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    562,
                    23
                ],
                "name": "cloak",
                "start": [
                    562,
                    10
                ],
                "type": "doc.field",
                "view": "boolean",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        559,
                        26
                    ],
                    "start": [
                        559,
                        20
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                559,
                                26
                            ],
                            "start": [
                                559,
                                20
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    559,
                    26
                ],
                "name": "firestate",
                "start": [
                    559,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        567,
                        33
                    ],
                    "start": [
                        567,
                        25
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                567,
                                32
                            ],
                            "start": [
                                567,
                                25
                            ],
                            "type": "doc.type.name",
                            "view": "boolean"
                        }
                    ],
                    "view": "boolean?"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    567,
                    33
                ],
                "name": "loopbackattack",
                "start": [
                    567,
                    10
                ],
                "type": "doc.field",
                "view": "boolean?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        560,
                        26
                    ],
                    "start": [
                        560,
                        20
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                560,
                                26
                            ],
                            "start": [
                                560,
                                20
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    560,
                    26
                ],
                "name": "movestate",
                "start": [
                    560,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        561,
                        24
                    ],
                    "start": [
                        561,
                        17
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                561,
                                24
                            ],
                            "start": [
                                561,
                                17
                            ],
                            "type": "doc.type.name",
                            "view": "boolean"
                        }
                    ],
                    "view": "boolean"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    561,
                    24
                ],
                "name": "repeat",
                "start": [
                    561,
                    10
                ],
                "type": "doc.field",
                "view": "boolean",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        564,
                        28
                    ],
                    "start": [
                        564,
                        21
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                564,
                                28
                            ],
                            "start": [
                                564,
                                21
                            ],
                            "type": "doc.type.name",
                            "view": "boolean"
                        }
                    ],
                    "view": "boolean"
                },
                "file": "/generated/LuaSyncedRead.lua",
                "finish": [
                    564,
                    28
                ],
                "name": "trajectory",
                "start": [
                    564,
                    10
                ],
                "type": "doc.field",
                "view": "boolean",
                "visible": "public"
            }
        ],
        "name": "UnitState",
        "type": "type",
        "view": "UnitState"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Called when a unit changes its stun status.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                244,
                                27
                            ],
                            "name": "unitID",
                            "start": [
                                244,
                                21
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                244,
                                38
                            ],
                            "name": "unitDefID",
                            "start": [
                                244,
                                29
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                244,
                                48
                            ],
                            "name": "unitTeam",
                            "start": [
                                244,
                                40
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                244,
                                57
                            ],
                            "name": "stunned",
                            "start": [
                                244,
                                50
                            ],
                            "type": "local",
                            "view": "boolean"
                        }
                    ],
                    "desc": "Called when a unit changes its stun status.",
                    "finish": [
                        244,
                        62
                    ],
                    "rawdesc": "Called when a unit changes its stun status.",
                    "start": [
                        244,
                        0
                    ],
                    "type": "function",
                    "view": "function UnitStunned(unitID: integer, unitDefID: integer, unitTeam: integer, stunned: boolean)"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    244,
                    20
                ],
                "rawdesc": "Called when a unit changes its stun status.",
                "start": [
                    244,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "UnitStunned",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Called when a unit is transferred between teams. This is called before `UnitGiven` and in that moment unit is still assigned to the oldTeam.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                185,
                                25
                            ],
                            "name": "unitID",
                            "start": [
                                185,
                                19
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                185,
                                36
                            ],
                            "name": "unitDefID",
                            "start": [
                                185,
                                27
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                185,
                                45
                            ],
                            "name": "oldTeam",
                            "start": [
                                185,
                                38
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                185,
                                54
                            ],
                            "name": "newTeam",
                            "start": [
                                185,
                                47
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "Called when a unit is transferred between teams. This is called before `UnitGiven` and in that moment unit is still assigned to the oldTeam.",
                    "finish": [
                        185,
                        59
                    ],
                    "rawdesc": "Called when a unit is transferred between teams. This is called before `UnitGiven` and in that moment unit is still assigned to the oldTeam.",
                    "start": [
                        185,
                        0
                    ],
                    "type": "function",
                    "view": "function UnitTaken(unitID: integer, unitDefID: integer, oldTeam: number, newTeam: number)"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    185,
                    18
                ],
                "rawdesc": "Called when a unit is transferred between teams. This is called before `UnitGiven` and in that moment unit is still assigned to the oldTeam.",
                "start": [
                    185,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "UnitTaken",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Called when two units collide.\n\nBoth units must be registered with `Script.SetWatchUnit`.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                395,
                                37
                            ],
                            "name": "colliderID",
                            "start": [
                                395,
                                27
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                395,
                                49
                            ],
                            "name": "collideeID",
                            "start": [
                                395,
                                39
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "Called when two units collide.\n\nBoth units must be registered with `Script.SetWatchUnit`.",
                    "finish": [
                        395,
                        54
                    ],
                    "rawdesc": "Called when two units collide.\n\nBoth units must be registered with `Script.SetWatchUnit`.",
                    "start": [
                        395,
                        0
                    ],
                    "type": "function",
                    "view": "function UnitUnitCollision(colliderID: number, collideeID: number)"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    395,
                    26
                ],
                "rawdesc": "Called when two units collide.\n\nBoth units must be registered with `Script.SetWatchUnit`.",
                "start": [
                    395,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "UnitUnitCollision",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Called when a unit is unloaded by a transport.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                339,
                                28
                            ],
                            "name": "unitID",
                            "start": [
                                339,
                                22
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                339,
                                39
                            ],
                            "name": "unitDefID",
                            "start": [
                                339,
                                30
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                339,
                                49
                            ],
                            "name": "unitTeam",
                            "start": [
                                339,
                                41
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                339,
                                62
                            ],
                            "name": "transportID",
                            "start": [
                                339,
                                51
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                339,
                                77
                            ],
                            "name": "transportTeam",
                            "start": [
                                339,
                                64
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Called when a unit is unloaded by a transport.",
                    "finish": [
                        339,
                        82
                    ],
                    "rawdesc": "Called when a unit is unloaded by a transport.",
                    "start": [
                        339,
                        0
                    ],
                    "type": "function",
                    "view": "function UnitUnloaded(unitID: integer, unitDefID: integer, unitTeam: integer, transportID: integer, transportTeam: integer)"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    339,
                    21
                ],
                "rawdesc": "Called when a unit is unloaded by a transport.",
                "start": [
                    339,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "UnitUnloaded",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Called when the unsynced copy of the height-map is altered.",
                "extends": {
                    "args": [],
                    "desc": "Called when the unsynced copy of the height-map is altered.",
                    "finish": [
                        511,
                        38
                    ],
                    "rawdesc": "Called when the unsynced copy of the height-map is altered.",
                    "returns": [
                        {
                            "name": "x1",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "z1",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "x2",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "z2",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        511,
                        0
                    ],
                    "type": "function",
                    "view": "function UnsyncedHeightMapUpdate()\n  -> x1: number\n  2. z1: number\n  3. x2: number\n  4. z2: number"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    511,
                    32
                ],
                "rawdesc": "Called when the unsynced copy of the height-map is altered.",
                "start": [
                    511,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "UnsyncedHeightMapUpdate",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Called for every draw frame (including when the game is paused) and at least once per sim frame except when catching up.\n\n@*param* `dt` — the time since the last update.",
                "extends": {
                    "args": [
                        {
                            "desc": "the time since the last update.",
                            "finish": [
                                516,
                                18
                            ],
                            "name": "dt",
                            "rawdesc": "the time since the last update.",
                            "start": [
                                516,
                                16
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "Called for every draw frame (including when the game is paused) and at least once per sim frame except when catching up.\n\n@*param* `dt` — the time since the last update.",
                    "finish": [
                        516,
                        23
                    ],
                    "rawdesc": "Called for every draw frame (including when the game is paused) and at least once per sim frame except when catching up.",
                    "start": [
                        516,
                        0
                    ],
                    "type": "function",
                    "view": "function Update(dt: number)"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    516,
                    15
                ],
                "rawdesc": "Called for every draw frame (including when the game is paused) and at least once per sim frame except when catching up.",
                "start": [
                    516,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "Update",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "See:\n  * ~LuaVAO.GetVAO~\n  * ~rts~ /Lua/LuaVAOImpl.cpp",
                "extends": {
                    "finish": [
                        14,
                        8
                    ],
                    "start": [
                        14,
                        6
                    ],
                    "type": "table",
                    "view": "table"
                },
                "file": "/generated/LuaVAOImpl.lua",
                "finish": [
                    14,
                    3
                ],
                "rawdesc": "See:\n  * ~LuaVAO.GetVAO~\n  * ~rts~ /Lua/LuaVAOImpl.cpp",
                "start": [
                    14,
                    0
                ],
                "type": "setglobal",
                "view": "table",
                "visible": "public"
            }
        ],
        "name": "VAO",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Vertex Array Object\n",
                "file": "/generated/LuaVAOImpl.lua",
                "finish": [
                    11,
                    13
                ],
                "rawdesc": "Vertex Array Object\n",
                "start": [
                    11,
                    10
                ],
                "type": "doc.class",
                "view": "VAO",
                "visible": "public"
            }
        ],
        "fields": [],
        "name": "VAO",
        "type": "type",
        "view": "VAO"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                68,
                                8
                            ],
                            "name": "self",
                            "start": [
                                68,
                                8
                            ],
                            "type": "self",
                            "view": "table"
                        },
                        {
                            "finish": [
                                68,
                                53
                            ],
                            "name": "featureDefIDs",
                            "start": [
                                68,
                                40
                            ],
                            "type": "local",
                            "view": "number|number[]"
                        }
                    ],
                    "finish": [
                        68,
                        58
                    ],
                    "returns": [
                        {
                            "name": "submittedCount",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        68,
                        0
                    ],
                    "type": "function",
                    "view": "(method) VAO:AddFeatureDefsToSubmission(featureDefIDs: number|number[])\n  -> submittedCount: number"
                },
                "file": "/generated/LuaVAOImpl.lua",
                "finish": [
                    68,
                    39
                ],
                "name": "AddFeatureDefsToSubmission",
                "start": [
                    68,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "VAO.AddFeatureDefsToSubmission",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                60,
                                8
                            ],
                            "name": "self",
                            "start": [
                                60,
                                8
                            ],
                            "type": "self",
                            "view": "table"
                        },
                        {
                            "finish": [
                                60,
                                47
                            ],
                            "name": "featureIDs",
                            "start": [
                                60,
                                37
                            ],
                            "type": "local",
                            "view": "number|number[]"
                        }
                    ],
                    "finish": [
                        60,
                        52
                    ],
                    "returns": [
                        {
                            "name": "submittedCount",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        60,
                        0
                    ],
                    "type": "function",
                    "view": "(method) VAO:AddFeaturesToSubmission(featureIDs: number|number[])\n  -> submittedCount: number"
                },
                "file": "/generated/LuaVAOImpl.lua",
                "finish": [
                    60,
                    36
                ],
                "name": "AddFeaturesToSubmission",
                "start": [
                    60,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "VAO.AddFeaturesToSubmission",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                64,
                                8
                            ],
                            "name": "self",
                            "start": [
                                64,
                                8
                            ],
                            "type": "self",
                            "view": "table"
                        },
                        {
                            "finish": [
                                64,
                                47
                            ],
                            "name": "unitDefIDs",
                            "start": [
                                64,
                                37
                            ],
                            "type": "local",
                            "view": "number|number[]"
                        }
                    ],
                    "finish": [
                        64,
                        52
                    ],
                    "returns": [
                        {
                            "name": "submittedCount",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        64,
                        0
                    ],
                    "type": "function",
                    "view": "(method) VAO:AddUnitDefsToSubmission(unitDefIDs: number|number[])\n  -> submittedCount: number"
                },
                "file": "/generated/LuaVAOImpl.lua",
                "finish": [
                    64,
                    36
                ],
                "name": "AddUnitDefsToSubmission",
                "start": [
                    64,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "VAO.AddUnitDefsToSubmission",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                56,
                                8
                            ],
                            "name": "self",
                            "start": [
                                56,
                                8
                            ],
                            "type": "self",
                            "view": "table"
                        },
                        {
                            "finish": [
                                56,
                                41
                            ],
                            "name": "unitIDs",
                            "start": [
                                56,
                                34
                            ],
                            "type": "local",
                            "view": "number|number[]"
                        }
                    ],
                    "finish": [
                        56,
                        46
                    ],
                    "returns": [
                        {
                            "name": "submittedCount",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        56,
                        0
                    ],
                    "type": "function",
                    "view": "(method) VAO:AddUnitsToSubmission(unitIDs: number|number[])\n  -> submittedCount: number"
                },
                "file": "/generated/LuaVAOImpl.lua",
                "finish": [
                    56,
                    33
                ],
                "name": "AddUnitsToSubmission",
                "start": [
                    56,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "VAO.AddUnitsToSubmission",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Attaches a VBO to be used as an index buffer",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                35,
                                8
                            ],
                            "name": "self",
                            "start": [
                                35,
                                8
                            ],
                            "type": "self",
                            "view": "table"
                        },
                        {
                            "desc": "Vertex Buffer Object\n",
                            "finish": [
                                35,
                                34
                            ],
                            "name": "vbo",
                            "rawdesc": "Vertex Buffer Object\n",
                            "start": [
                                35,
                                31
                            ],
                            "type": "local",
                            "view": "VBO"
                        }
                    ],
                    "desc": "Attaches a VBO to be used as an index buffer",
                    "finish": [
                        35,
                        39
                    ],
                    "rawdesc": "Attaches a VBO to be used as an index buffer",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        35,
                        0
                    ],
                    "type": "function",
                    "view": "(method) VAO:AttachIndexBuffer(vbo: VBO)\n  -> nil"
                },
                "file": "/generated/LuaVAOImpl.lua",
                "finish": [
                    35,
                    30
                ],
                "name": "AttachIndexBuffer",
                "rawdesc": "Attaches a VBO to be used as an index buffer",
                "start": [
                    35,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "VAO.AttachIndexBuffer",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Attaches a VBO to be used as an instance buffer",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                29,
                                8
                            ],
                            "name": "self",
                            "start": [
                                29,
                                8
                            ],
                            "type": "self",
                            "view": "table"
                        },
                        {
                            "desc": "Vertex Buffer Object\n",
                            "finish": [
                                29,
                                37
                            ],
                            "name": "vbo",
                            "rawdesc": "Vertex Buffer Object\n",
                            "start": [
                                29,
                                34
                            ],
                            "type": "local",
                            "view": "VBO"
                        }
                    ],
                    "desc": "Attaches a VBO to be used as an instance buffer",
                    "finish": [
                        29,
                        42
                    ],
                    "rawdesc": "Attaches a VBO to be used as an instance buffer",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        29,
                        0
                    ],
                    "type": "function",
                    "view": "(method) VAO:AttachInstanceBuffer(vbo: VBO)\n  -> nil"
                },
                "file": "/generated/LuaVAOImpl.lua",
                "finish": [
                    29,
                    33
                ],
                "name": "AttachInstanceBuffer",
                "rawdesc": "Attaches a VBO to be used as an instance buffer",
                "start": [
                    29,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "VAO.AttachInstanceBuffer",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Attaches a VBO to be used as a vertex buffer",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                23,
                                8
                            ],
                            "name": "self",
                            "start": [
                                23,
                                8
                            ],
                            "type": "self",
                            "view": "table"
                        },
                        {
                            "desc": "Vertex Buffer Object\n",
                            "finish": [
                                23,
                                35
                            ],
                            "name": "vbo",
                            "rawdesc": "Vertex Buffer Object\n",
                            "start": [
                                23,
                                32
                            ],
                            "type": "local",
                            "view": "VBO"
                        }
                    ],
                    "desc": "Attaches a VBO to be used as a vertex buffer",
                    "finish": [
                        23,
                        40
                    ],
                    "rawdesc": "Attaches a VBO to be used as a vertex buffer",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        23,
                        0
                    ],
                    "type": "function",
                    "view": "(method) VAO:AttachVertexBuffer(vbo: VBO)\n  -> nil"
                },
                "file": "/generated/LuaVAOImpl.lua",
                "finish": [
                    23,
                    31
                ],
                "name": "AttachVertexBuffer",
                "rawdesc": "Attaches a VBO to be used as a vertex buffer",
                "start": [
                    23,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "VAO.AttachVertexBuffer",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                17,
                                8
                            ],
                            "name": "self",
                            "start": [
                                17,
                                8
                            ],
                            "type": "self",
                            "view": "table"
                        }
                    ],
                    "finish": [
                        17,
                        25
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        17,
                        0
                    ],
                    "type": "function",
                    "view": "(method) VAO:Delete()\n  -> nil"
                },
                "file": "/generated/LuaVAOImpl.lua",
                "finish": [
                    17,
                    19
                ],
                "name": "Delete",
                "start": [
                    17,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "VAO.Delete",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `glEnum` — primitivesMode",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                43,
                                8
                            ],
                            "name": "self",
                            "start": [
                                43,
                                8
                            ],
                            "type": "self",
                            "view": "table"
                        },
                        {
                            "desc": "primitivesMode",
                            "finish": [
                                43,
                                30
                            ],
                            "name": "glEnum",
                            "rawdesc": "primitivesMode",
                            "start": [
                                43,
                                24
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                43,
                                43
                            ],
                            "name": "vertexCount",
                            "start": [
                                43,
                                32
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "finish": [
                                43,
                                56
                            ],
                            "name": "vertexFirst",
                            "start": [
                                43,
                                45
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "finish": [
                                43,
                                71
                            ],
                            "name": "instanceCount",
                            "start": [
                                43,
                                58
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "finish": [
                                43,
                                86
                            ],
                            "name": "instanceFirst",
                            "start": [
                                43,
                                73
                            ],
                            "type": "local",
                            "view": "number?"
                        }
                    ],
                    "desc": "@*param* `glEnum` — primitivesMode",
                    "finish": [
                        43,
                        91
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        43,
                        0
                    ],
                    "type": "function",
                    "view": "(method) VAO:DrawArrays(glEnum: number, vertexCount?: number, vertexFirst?: number, instanceCount?: number, instanceFirst?: number)\n  -> nil"
                },
                "file": "/generated/LuaVAOImpl.lua",
                "finish": [
                    43,
                    23
                ],
                "name": "DrawArrays",
                "start": [
                    43,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "VAO.DrawArrays",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `glEnum` — primitivesMode",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                52,
                                8
                            ],
                            "name": "self",
                            "start": [
                                52,
                                8
                            ],
                            "type": "self",
                            "view": "table"
                        },
                        {
                            "desc": "primitivesMode",
                            "finish": [
                                52,
                                32
                            ],
                            "name": "glEnum",
                            "rawdesc": "primitivesMode",
                            "start": [
                                52,
                                26
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                52,
                                43
                            ],
                            "name": "drawCount",
                            "start": [
                                52,
                                34
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "finish": [
                                52,
                                54
                            ],
                            "name": "baseIndex",
                            "start": [
                                52,
                                45
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "finish": [
                                52,
                                69
                            ],
                            "name": "instanceCount",
                            "start": [
                                52,
                                56
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "finish": [
                                52,
                                81
                            ],
                            "name": "baseVertex",
                            "start": [
                                52,
                                71
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "finish": [
                                52,
                                95
                            ],
                            "name": "baseInstance",
                            "start": [
                                52,
                                83
                            ],
                            "type": "local",
                            "view": "number?"
                        }
                    ],
                    "desc": "@*param* `glEnum` — primitivesMode",
                    "finish": [
                        52,
                        100
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        52,
                        0
                    ],
                    "type": "function",
                    "view": "(method) VAO:DrawElements(glEnum: number, drawCount?: number, baseIndex?: number, instanceCount?: number, baseVertex?: number, baseInstance?: number)\n  -> nil"
                },
                "file": "/generated/LuaVAOImpl.lua",
                "finish": [
                    52,
                    25
                ],
                "name": "DrawElements",
                "start": [
                    52,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "VAO.DrawElements",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                72,
                                8
                            ],
                            "name": "self",
                            "start": [
                                72,
                                8
                            ],
                            "type": "self",
                            "view": "table"
                        },
                        {
                            "finish": [
                                72,
                                39
                            ],
                            "name": "index",
                            "start": [
                                72,
                                34
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "finish": [
                        72,
                        44
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        72,
                        0
                    ],
                    "type": "function",
                    "view": "(method) VAO:RemoveFromSubmission(index: number)\n  -> nil"
                },
                "file": "/generated/LuaVAOImpl.lua",
                "finish": [
                    72,
                    33
                ],
                "name": "RemoveFromSubmission",
                "start": [
                    72,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "VAO.RemoveFromSubmission",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                75,
                                8
                            ],
                            "name": "self",
                            "start": [
                                75,
                                8
                            ],
                            "type": "self",
                            "view": "table"
                        }
                    ],
                    "finish": [
                        75,
                        25
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        75,
                        0
                    ],
                    "type": "function",
                    "view": "(method) VAO:Submit()\n  -> nil"
                },
                "file": "/generated/LuaVAOImpl.lua",
                "finish": [
                    75,
                    19
                ],
                "name": "Submit",
                "start": [
                    75,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "VAO.Submit",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Vertex Buffer Object\n",
                "file": "/generated/LuaVBOImpl.lua",
                "finish": [
                    11,
                    13
                ],
                "rawdesc": "Vertex Buffer Object\n",
                "start": [
                    11,
                    10
                ],
                "type": "doc.class",
                "view": "VBO",
                "visible": "public"
            }
        ],
        "fields": [],
        "name": "VBO",
        "type": "type",
        "view": "VBO"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "file": "/generated/LuaVBOImpl.lua",
                "finish": [
                    28,
                    25
                ],
                "start": [
                    28,
                    10
                ],
                "type": "doc.class",
                "view": "VBOAttributeDef",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        29,
                        20
                    ],
                    "start": [
                        29,
                        13
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                29,
                                20
                            ],
                            "start": [
                                29,
                                13
                            ],
                            "type": "doc.type.name",
                            "view": "integer"
                        }
                    ],
                    "view": "integer"
                },
                "file": "/generated/LuaVBOImpl.lua",
                "finish": [
                    29,
                    20
                ],
                "name": "id",
                "start": [
                    29,
                    10
                ],
                "type": "doc.field",
                "view": "integer",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "The location in the vertex shader layout e.g.: layout (location = 0) in vec2\naPos. optional attrib, specifies location in the vertex shader. If not\nspecified the implementation will increment the counter starting from 0.\nThere can be maximum 16 attributes (so id of 15 is max).",
                "extends": {
                    "finish": [
                        34,
                        21
                    ],
                    "start": [
                        34,
                        15
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                34,
                                21
                            ],
                            "start": [
                                34,
                                15
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string"
                },
                "file": "/generated/LuaVBOImpl.lua",
                "finish": [
                    34,
                    21
                ],
                "name": "name",
                "rawdesc": "The location in the vertex shader layout e.g.: layout (location = 0) in vec2\naPos. optional attrib, specifies location in the vertex shader. If not\nspecified the implementation will increment the counter starting from 0.\nThere can be maximum 16 attributes (so id of 15 is max).",
                "start": [
                    34,
                    10
                ],
                "type": "doc.field",
                "view": "string",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "(Defaults: `false`)",
                "extends": {
                    "finish": [
                        45,
                        29
                    ],
                    "start": [
                        45,
                        21
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                45,
                                28
                            ],
                            "start": [
                                45,
                                21
                            ],
                            "type": "doc.type.name",
                            "view": "boolean"
                        }
                    ],
                    "view": "boolean?"
                },
                "file": "/generated/LuaVBOImpl.lua",
                "finish": [
                    45,
                    29
                ],
                "name": "normalized",
                "rawdesc": "(Defaults: `false`)",
                "start": [
                    45,
                    10
                ],
                "type": "doc.field",
                "view": "boolean?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "\nThe name for this VBO, only used for debugging.",
                "extends": {
                    "finish": [
                        37,
                        23
                    ],
                    "start": [
                        37,
                        15
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                37,
                                22
                            ],
                            "start": [
                                37,
                                15
                            ],
                            "type": "doc.type.name",
                            "view": "integer"
                        }
                    ],
                    "view": "integer?"
                },
                "file": "/generated/LuaVBOImpl.lua",
                "finish": [
                    37,
                    23
                ],
                "name": "size",
                "rawdesc": "\nThe name for this VBO, only used for debugging.",
                "start": [
                    37,
                    10
                ],
                "type": "doc.field",
                "view": "integer?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "(Default: `GL.FLOAT`)",
                "extends": {
                    "finish": [
                        42,
                        26
                    ],
                    "start": [
                        42,
                        15
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                42,
                                26
                            ],
                            "start": [
                                42,
                                15
                            ],
                            "type": "doc.type.name",
                            "view": "GL.BYTE|GL.FLOAT|GL.INT|GL.SHORT|GL.UNSIGNED_BYTE...(+2)"
                        }
                    ],
                    "view": "GL.BYTE|GL.FLOAT|GL.INT|GL.SHORT|GL.UNSIGNED_BYTE...(+2)"
                },
                "file": "/generated/LuaVBOImpl.lua",
                "finish": [
                    42,
                    26
                ],
                "name": "type",
                "rawdesc": "(Default: `GL.FLOAT`)",
                "start": [
                    42,
                    10
                ],
                "type": "doc.field",
                "view": "GL.BYTE|GL.FLOAT|GL.INT|GL.SHORT|GL.UNSIGNED_BYTE...(+2)",
                "visible": "public"
            }
        ],
        "name": "VBOAttributeDef",
        "type": "type",
        "view": "VBOAttributeDef"
    },
    {
        "defines": [
            {
                "finish": [
                    26,
                    13
                ],
                "start": [
                    19,
                    10
                ],
                "type": "doc.alias",
                "view": "GL.BYTE|GL.FLOAT|GL.INT|GL.SHORT|GL.UNSIGNED_BYTE...(+2)"
            }
        ],
        "fields": [],
        "name": "VBODataType",
        "type": "type",
        "view": "VBODataType"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Called whenever the window is resized.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                522,
                                29
                            ],
                            "name": "viewSizeX",
                            "start": [
                                522,
                                20
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                522,
                                40
                            ],
                            "name": "viewSizeY",
                            "start": [
                                522,
                                31
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "Called whenever the window is resized.",
                    "finish": [
                        522,
                        45
                    ],
                    "rawdesc": "Called whenever the window is resized.",
                    "start": [
                        522,
                        0
                    ],
                    "type": "function",
                    "view": "function ViewResize(viewSizeX: number, viewSizeY: number)"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    522,
                    19
                ],
                "rawdesc": "Called whenever the window is resized.",
                "start": [
                    522,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "ViewResize",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Water params\n",
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    1033,
                    21
                ],
                "rawdesc": "Water params\n",
                "start": [
                    1033,
                    10
                ],
                "type": "doc.class",
                "view": "WaterParams",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Color triple (RGB)\n",
                "extends": {
                    "desc": "Color triple (RGB)\n",
                    "finish": [
                        1034,
                        20
                    ],
                    "rawdesc": "Color triple (RGB)\n",
                    "start": [
                        1034,
                        17
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "desc": "Color triple (RGB)\n",
                            "finish": [
                                1034,
                                20
                            ],
                            "rawdesc": "Color triple (RGB)\n",
                            "start": [
                                1034,
                                17
                            ],
                            "type": "doc.type.name",
                            "view": "rgb"
                        }
                    ],
                    "view": "rgb"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    1034,
                    20
                ],
                "name": "absorb",
                "rawdesc": "Color triple (RGB)\n",
                "start": [
                    1034,
                    10
                ],
                "type": "doc.field",
                "view": "rgb",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        1048,
                        30
                    ],
                    "start": [
                        1048,
                        24
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                1048,
                                30
                            ],
                            "start": [
                                1048,
                                24
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    1048,
                    30
                ],
                "name": "ambientFactor",
                "start": [
                    1048,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Color triple (RGB)\n",
                "extends": {
                    "desc": "Color triple (RGB)\n",
                    "finish": [
                        1035,
                        23
                    ],
                    "rawdesc": "Color triple (RGB)\n",
                    "start": [
                        1035,
                        20
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "desc": "Color triple (RGB)\n",
                            "finish": [
                                1035,
                                23
                            ],
                            "rawdesc": "Color triple (RGB)\n",
                            "start": [
                                1035,
                                20
                            ],
                            "type": "doc.type.name",
                            "view": "rgb"
                        }
                    ],
                    "view": "rgb"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    1035,
                    23
                ],
                "name": "baseColor",
                "rawdesc": "Color triple (RGB)\n",
                "start": [
                    1035,
                    10
                ],
                "type": "doc.field",
                "view": "rgb",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        1056,
                        25
                    ],
                    "start": [
                        1056,
                        19
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                1056,
                                25
                            ],
                            "start": [
                                1056,
                                19
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    1056,
                    25
                ],
                "name": "blurBase",
                "start": [
                    1056,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        1057,
                        29
                    ],
                    "start": [
                        1057,
                        23
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                1057,
                                29
                            ],
                            "start": [
                                1057,
                                23
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    1057,
                    29
                ],
                "name": "blurExponent",
                "start": [
                    1057,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        1066,
                        35
                    ],
                    "start": [
                        1066,
                        29
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                1066,
                                35
                            ],
                            "start": [
                                1066,
                                29
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    1066,
                    35
                ],
                "name": "causticsResolution",
                "start": [
                    1066,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        1067,
                        33
                    ],
                    "start": [
                        1067,
                        27
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                1067,
                                33
                            ],
                            "start": [
                                1067,
                                27
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    1067,
                    33
                ],
                "name": "causticsStrength",
                "start": [
                    1067,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        1044,
                        23
                    ],
                    "start": [
                        1044,
                        17
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                1044,
                                23
                            ],
                            "start": [
                                1044,
                                17
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    1044,
                    23
                ],
                "name": "damage",
                "start": [
                    1044,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Color triple (RGB)\n",
                "extends": {
                    "desc": "Color triple (RGB)\n",
                    "finish": [
                        1038,
                        26
                    ],
                    "rawdesc": "Color triple (RGB)\n",
                    "start": [
                        1038,
                        23
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "desc": "Color triple (RGB)\n",
                            "finish": [
                                1038,
                                26
                            ],
                            "rawdesc": "Color triple (RGB)\n",
                            "start": [
                                1038,
                                23
                            ],
                            "type": "doc.type.name",
                            "view": "rgb"
                        }
                    ],
                    "view": "rgb"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    1038,
                    26
                ],
                "name": "diffuseColor",
                "rawdesc": "Color triple (RGB)\n",
                "start": [
                    1038,
                    10
                ],
                "type": "doc.field",
                "view": "rgb",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        1049,
                        30
                    ],
                    "start": [
                        1049,
                        24
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                1049,
                                30
                            ],
                            "start": [
                                1049,
                                24
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    1049,
                    30
                ],
                "name": "diffuseFactor",
                "start": [
                    1049,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "file",
                "extends": {
                    "finish": [
                        1042,
                        28
                    ],
                    "start": [
                        1042,
                        22
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                1042,
                                28
                            ],
                            "start": [
                                1042,
                                22
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    1042,
                    28
                ],
                "name": "foamTexture",
                "rawdesc": "file",
                "start": [
                    1042,
                    10
                ],
                "type": "doc.field",
                "view": "string",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        1070,
                        32
                    ],
                    "start": [
                        1070,
                        25
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                1070,
                                32
                            ],
                            "start": [
                                1070,
                                25
                            ],
                            "type": "doc.type.name",
                            "view": "boolean"
                        }
                    ],
                    "view": "boolean"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    1070,
                    32
                ],
                "name": "forceRendering",
                "start": [
                    1070,
                    10
                ],
                "type": "doc.field",
                "view": "boolean",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        1053,
                        27
                    ],
                    "start": [
                        1053,
                        21
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                1053,
                                27
                            ],
                            "start": [
                                1053,
                                21
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    1053,
                    27
                ],
                "name": "fresnelMax",
                "start": [
                    1053,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        1052,
                        27
                    ],
                    "start": [
                        1052,
                        21
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                1052,
                                27
                            ],
                            "start": [
                                1052,
                                21
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    1052,
                    27
                ],
                "name": "fresnelMin",
                "start": [
                    1052,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        1054,
                        29
                    ],
                    "start": [
                        1054,
                        23
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                1054,
                                29
                            ],
                            "start": [
                                1054,
                                23
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    1054,
                    29
                ],
                "name": "fresnelPower",
                "start": [
                    1054,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        1071,
                        31
                    ],
                    "start": [
                        1071,
                        24
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                1071,
                                31
                            ],
                            "start": [
                                1071,
                                24
                            ],
                            "type": "doc.type.name",
                            "view": "boolean"
                        }
                    ],
                    "view": "boolean"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    1071,
                    31
                ],
                "name": "hasWaterPlane",
                "start": [
                    1071,
                    10
                ],
                "type": "doc.field",
                "view": "boolean",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Color triple (RGB)\n",
                "extends": {
                    "desc": "Color triple (RGB)\n",
                    "finish": [
                        1036,
                        22
                    ],
                    "rawdesc": "Color triple (RGB)\n",
                    "start": [
                        1036,
                        19
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "desc": "Color triple (RGB)\n",
                            "finish": [
                                1036,
                                22
                            ],
                            "rawdesc": "Color triple (RGB)\n",
                            "start": [
                                1036,
                                19
                            ],
                            "type": "doc.type.name",
                            "view": "rgb"
                        }
                    ],
                    "view": "rgb"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    1036,
                    22
                ],
                "name": "minColor",
                "rawdesc": "Color triple (RGB)\n",
                "start": [
                    1036,
                    10
                ],
                "type": "doc.field",
                "view": "rgb",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "file",
                "extends": {
                    "finish": [
                        1043,
                        30
                    ],
                    "start": [
                        1043,
                        24
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                1043,
                                30
                            ],
                            "start": [
                                1043,
                                24
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    1043,
                    30
                ],
                "name": "normalTexture",
                "rawdesc": "file",
                "start": [
                    1043,
                    10
                ],
                "type": "doc.field",
                "view": "string",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        1068,
                        26
                    ],
                    "start": [
                        1068,
                        19
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                1068,
                                26
                            ],
                            "start": [
                                1068,
                                19
                            ],
                            "type": "doc.type.name",
                            "view": "integer"
                        }
                    ],
                    "view": "integer"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    1068,
                    26
                ],
                "name": "numTiles",
                "start": [
                    1068,
                    10
                ],
                "type": "doc.field",
                "view": "integer",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        1060,
                        32
                    ],
                    "start": [
                        1060,
                        26
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                1060,
                                32
                            ],
                            "start": [
                                1060,
                                26
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    1060,
                    32
                ],
                "name": "perlinAmplitude",
                "start": [
                    1060,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        1059,
                        33
                    ],
                    "start": [
                        1059,
                        27
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                1059,
                                33
                            ],
                            "start": [
                                1059,
                                27
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    1059,
                    33
                ],
                "name": "perlinLacunarity",
                "start": [
                    1059,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        1058,
                        32
                    ],
                    "start": [
                        1058,
                        26
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                1058,
                                32
                            ],
                            "start": [
                                1058,
                                26
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    1058,
                    32
                ],
                "name": "perlinStartFreq",
                "start": [
                    1058,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Color triple (RGB)\n",
                "extends": {
                    "desc": "Color triple (RGB)\n",
                    "finish": [
                        1040,
                        24
                    ],
                    "rawdesc": "Color triple (RGB)\n",
                    "start": [
                        1040,
                        21
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "desc": "Color triple (RGB)\n",
                            "finish": [
                                1040,
                                24
                            ],
                            "rawdesc": "Color triple (RGB)\n",
                            "start": [
                                1040,
                                21
                            ],
                            "type": "doc.type.name",
                            "view": "rgb"
                        }
                    ],
                    "view": "rgb"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    1040,
                    24
                ],
                "name": "planeColor",
                "rawdesc": "Color triple (RGB)\n",
                "start": [
                    1040,
                    10
                ],
                "type": "doc.field",
                "view": "rgb",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        1055,
                        37
                    ],
                    "start": [
                        1055,
                        31
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                1055,
                                37
                            ],
                            "start": [
                                1055,
                                31
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    1055,
                    37
                ],
                "name": "reflectionDistortion",
                "start": [
                    1055,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        1045,
                        24
                    ],
                    "start": [
                        1045,
                        18
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                1045,
                                24
                            ],
                            "start": [
                                1045,
                                18
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    1045,
                    24
                ],
                "name": "repeatX",
                "start": [
                    1045,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        1046,
                        24
                    ],
                    "start": [
                        1046,
                        18
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                1046,
                                24
                            ],
                            "start": [
                                1046,
                                18
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    1046,
                    24
                ],
                "name": "repeatY",
                "start": [
                    1046,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        1069,
                        28
                    ],
                    "start": [
                        1069,
                        21
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                1069,
                                28
                            ],
                            "start": [
                                1069,
                                21
                            ],
                            "type": "doc.type.name",
                            "view": "boolean"
                        }
                    ],
                    "view": "boolean"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    1069,
                    28
                ],
                "name": "shoreWaves",
                "start": [
                    1069,
                    10
                ],
                "type": "doc.field",
                "view": "boolean",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Color triple (RGB)\n",
                "extends": {
                    "desc": "Color triple (RGB)\n",
                    "finish": [
                        1039,
                        27
                    ],
                    "rawdesc": "Color triple (RGB)\n",
                    "start": [
                        1039,
                        24
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "desc": "Color triple (RGB)\n",
                            "finish": [
                                1039,
                                27
                            ],
                            "rawdesc": "Color triple (RGB)\n",
                            "start": [
                                1039,
                                24
                            ],
                            "type": "doc.type.name",
                            "view": "rgb"
                        }
                    ],
                    "view": "rgb"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    1039,
                    27
                ],
                "name": "specularColor",
                "rawdesc": "Color triple (RGB)\n",
                "start": [
                    1039,
                    10
                ],
                "type": "doc.field",
                "view": "rgb",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        1050,
                        31
                    ],
                    "start": [
                        1050,
                        25
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                1050,
                                31
                            ],
                            "start": [
                                1050,
                                25
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    1050,
                    31
                ],
                "name": "specularFactor",
                "start": [
                    1050,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        1051,
                        30
                    ],
                    "start": [
                        1051,
                        24
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                1051,
                                30
                            ],
                            "start": [
                                1051,
                                24
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    1051,
                    30
                ],
                "name": "specularPower",
                "start": [
                    1051,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        1047,
                        29
                    ],
                    "start": [
                        1047,
                        23
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                1047,
                                29
                            ],
                            "start": [
                                1047,
                                23
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    1047,
                    29
                ],
                "name": "surfaceAlpha",
                "start": [
                    1047,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Color triple (RGB)\n",
                "extends": {
                    "desc": "Color triple (RGB)\n",
                    "finish": [
                        1037,
                        26
                    ],
                    "rawdesc": "Color triple (RGB)\n",
                    "start": [
                        1037,
                        23
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "desc": "Color triple (RGB)\n",
                            "finish": [
                                1037,
                                26
                            ],
                            "rawdesc": "Color triple (RGB)\n",
                            "start": [
                                1037,
                                23
                            ],
                            "type": "doc.type.name",
                            "view": "rgb"
                        }
                    ],
                    "view": "rgb"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    1037,
                    26
                ],
                "name": "surfaceColor",
                "rawdesc": "Color triple (RGB)\n",
                "start": [
                    1037,
                    10
                ],
                "type": "doc.field",
                "view": "rgb",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "file",
                "extends": {
                    "finish": [
                        1041,
                        24
                    ],
                    "start": [
                        1041,
                        18
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                1041,
                                24
                            ],
                            "start": [
                                1041,
                                18
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    1041,
                    24
                ],
                "name": "texture",
                "rawdesc": "file",
                "start": [
                    1041,
                    10
                ],
                "type": "doc.field",
                "view": "string",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        1064,
                        35
                    ],
                    "start": [
                        1064,
                        29
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                1064,
                                35
                            ],
                            "start": [
                                1064,
                                29
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    1064,
                    35
                ],
                "name": "waveFoamDistortion",
                "start": [
                    1064,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        1065,
                        34
                    ],
                    "start": [
                        1065,
                        28
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                1065,
                                34
                            ],
                            "start": [
                                1065,
                                28
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    1065,
                    34
                ],
                "name": "waveFoamIntensity",
                "start": [
                    1065,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        1063,
                        27
                    ],
                    "start": [
                        1063,
                        21
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                1063,
                                27
                            ],
                            "start": [
                                1063,
                                21
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    1063,
                    27
                ],
                "name": "waveLength",
                "start": [
                    1063,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        1062,
                        33
                    ],
                    "start": [
                        1062,
                        27
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                1062,
                                33
                            ],
                            "start": [
                                1062,
                                27
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    1062,
                    33
                ],
                "name": "waveOffsetFactor",
                "start": [
                    1062,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        1061,
                        26
                    ],
                    "start": [
                        1061,
                        20
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                1061,
                                26
                            ],
                            "start": [
                                1061,
                                20
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    1061,
                    26
                ],
                "name": "windSpeed",
                "start": [
                    1061,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            }
        ],
        "name": "WaterParams",
        "type": "type",
        "view": "WaterParams"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Parameters for damage\n",
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    348,
                    23
                ],
                "rawdesc": "Parameters for damage\n",
                "start": [
                    348,
                    10
                ],
                "type": "doc.class",
                "view": "WeaponDamages",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Set to `true` if a non-zero value is passed, `false` is zero is passed.",
                "extends": {
                    "finish": [
                        359,
                        35
                    ],
                    "start": [
                        359,
                        29
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                359,
                                35
                            ],
                            "start": [
                                359,
                                29
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    359,
                    35
                ],
                "name": "craterAreaOfEffect",
                "rawdesc": "Set to `true` if a non-zero value is passed, `false` is zero is passed.",
                "start": [
                    359,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        353,
                        28
                    ],
                    "start": [
                        353,
                        22
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                353,
                                28
                            ],
                            "start": [
                                353,
                                22
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    353,
                    28
                ],
                "name": "craterBoost",
                "start": [
                    353,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        352,
                        27
                    ],
                    "start": [
                        352,
                        21
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                352,
                                27
                            ],
                            "start": [
                                352,
                                21
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    352,
                    27
                ],
                "name": "craterMult",
                "start": [
                    352,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        360,
                        35
                    ],
                    "start": [
                        360,
                        29
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                360,
                                35
                            ],
                            "start": [
                                360,
                                29
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    360,
                    35
                ],
                "name": "damageAreaOfEffect",
                "start": [
                    360,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        354,
                        29
                    ],
                    "start": [
                        354,
                        23
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                354,
                                29
                            ],
                            "start": [
                                354,
                                23
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    354,
                    29
                ],
                "name": "dynDamageExp",
                "start": [
                    354,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        357,
                        34
                    ],
                    "start": [
                        357,
                        28
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                357,
                                34
                            ],
                            "start": [
                                357,
                                28
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    357,
                    34
                ],
                "name": "dynDamageInverted",
                "start": [
                    357,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        355,
                        29
                    ],
                    "start": [
                        355,
                        23
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                355,
                                29
                            ],
                            "start": [
                                355,
                                23
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    355,
                    29
                ],
                "name": "dynDamageMin",
                "start": [
                    355,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        356,
                        31
                    ],
                    "start": [
                        356,
                        25
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                356,
                                31
                            ],
                            "start": [
                                356,
                                25
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    356,
                    31
                ],
                "name": "dynDamageRange",
                "start": [
                    356,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        361,
                        34
                    ],
                    "start": [
                        361,
                        28
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                361,
                                34
                            ],
                            "start": [
                                361,
                                28
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    361,
                    34
                ],
                "name": "edgeEffectiveness",
                "start": [
                    361,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        362,
                        31
                    ],
                    "start": [
                        362,
                        25
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                362,
                                31
                            ],
                            "start": [
                                362,
                                25
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    362,
                    31
                ],
                "name": "explosionSpeed",
                "start": [
                    362,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        351,
                        29
                    ],
                    "start": [
                        351,
                        23
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                351,
                                29
                            ],
                            "start": [
                                351,
                                23
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    351,
                    29
                ],
                "name": "impulseBoost",
                "start": [
                    351,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        350,
                        30
                    ],
                    "start": [
                        350,
                        24
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                350,
                                30
                            ],
                            "start": [
                                350,
                                24
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    350,
                    30
                ],
                "name": "impulseFactor",
                "start": [
                    350,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        349,
                        36
                    ],
                    "start": [
                        349,
                        29
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                349,
                                36
                            ],
                            "start": [
                                349,
                                29
                            ],
                            "type": "doc.type.name",
                            "view": "integer"
                        }
                    ],
                    "view": "integer"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    349,
                    36
                ],
                "name": "paralyzeDamageTime",
                "start": [
                    349,
                    10
                ],
                "type": "doc.field",
                "view": "integer",
                "visible": "public"
            }
        ],
        "name": "WeaponDamages",
        "type": "type",
        "view": "WeaponDamages"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Parameter for weapon states\n",
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    305,
                    21
                ],
                "rawdesc": "Parameter for weapon states\n",
                "start": [
                    305,
                    10
                ],
                "type": "doc.class",
                "view": "WeaponState",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        310,
                        26
                    ],
                    "start": [
                        310,
                        19
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                310,
                                25
                            ],
                            "start": [
                                310,
                                19
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number?"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    310,
                    26
                ],
                "name": "accuracy",
                "start": [
                    310,
                    10
                ],
                "type": "doc.field",
                "view": "number?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        320,
                        26
                    ],
                    "start": [
                        320,
                        19
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                320,
                                25
                            ],
                            "start": [
                                320,
                                19
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number?"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    320,
                    26
                ],
                "name": "aimReady",
                "start": [
                    320,
                    10
                ],
                "type": "doc.field",
                "view": "number?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        323,
                        29
                    ],
                    "start": [
                        323,
                        21
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                323,
                                28
                            ],
                            "start": [
                                323,
                                21
                            ],
                            "type": "doc.type.name",
                            "view": "integer"
                        }
                    ],
                    "view": "integer?"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    323,
                    29
                ],
                "name": "avoidFlags",
                "start": [
                    323,
                    10
                ],
                "type": "doc.field",
                "view": "integer?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        315,
                        24
                    ],
                    "start": [
                        315,
                        16
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                315,
                                23
                            ],
                            "start": [
                                315,
                                16
                            ],
                            "type": "doc.type.name",
                            "view": "integer"
                        }
                    ],
                    "view": "integer?"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    315,
                    24
                ],
                "name": "burst",
                "start": [
                    315,
                    10
                ],
                "type": "doc.field",
                "view": "integer?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        316,
                        27
                    ],
                    "start": [
                        316,
                        20
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                316,
                                26
                            ],
                            "start": [
                                316,
                                20
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number?"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    316,
                    27
                ],
                "name": "burstRate",
                "start": [
                    316,
                    10
                ],
                "type": "doc.field",
                "view": "number?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        324,
                        33
                    ],
                    "start": [
                        324,
                        25
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                324,
                                32
                            ],
                            "start": [
                                324,
                                25
                            ],
                            "type": "doc.type.name",
                            "view": "integer"
                        }
                    ],
                    "view": "integer?"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    324,
                    33
                ],
                "name": "collisionFlags",
                "start": [
                    324,
                    10
                ],
                "type": "doc.field",
                "view": "integer?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Set to `true` if a non-zero value is passed, `false` is zero is passed.",
                "extends": {
                    "finish": [
                        322,
                        27
                    ],
                    "start": [
                        322,
                        19
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                322,
                                26
                            ],
                            "start": [
                                322,
                                19
                            ],
                            "type": "doc.type.name",
                            "view": "integer"
                        }
                    ],
                    "view": "integer?"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    322,
                    27
                ],
                "name": "forceAim",
                "rawdesc": "Set to `true` if a non-zero value is passed, `false` is zero is passed.",
                "start": [
                    322,
                    10
                ],
                "type": "doc.field",
                "view": "integer?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        319,
                        28
                    ],
                    "start": [
                        319,
                        20
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                319,
                                27
                            ],
                            "start": [
                                319,
                                20
                            ],
                            "type": "doc.type.name",
                            "view": "integer"
                        }
                    ],
                    "view": "integer?"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    319,
                    28
                ],
                "name": "nextSalvo",
                "start": [
                    319,
                    10
                ],
                "type": "doc.field",
                "view": "integer?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "If you change the range of a weapon with dynamic damage make sure you use `SetUnitWeaponDamages` to change dynDamageRange as well.",
                "extends": {
                    "finish": [
                        314,
                        33
                    ],
                    "start": [
                        314,
                        26
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                314,
                                32
                            ],
                            "start": [
                                314,
                                26
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number?"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    314,
                    33
                ],
                "name": "projectileSpeed",
                "rawdesc": "If you change the range of a weapon with dynamic damage make sure you use `SetUnitWeaponDamages` to change dynDamageRange as well.",
                "start": [
                    314,
                    10
                ],
                "type": "doc.field",
                "view": "number?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        317,
                        30
                    ],
                    "start": [
                        317,
                        22
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                317,
                                29
                            ],
                            "start": [
                                317,
                                22
                            ],
                            "type": "doc.type.name",
                            "view": "integer"
                        }
                    ],
                    "view": "integer?"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    317,
                    30
                ],
                "name": "projectiles",
                "start": [
                    317,
                    10
                ],
                "type": "doc.field",
                "view": "integer?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        312,
                        23
                    ],
                    "start": [
                        312,
                        16
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                312,
                                22
                            ],
                            "start": [
                                312,
                                16
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number?"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    312,
                    23
                ],
                "name": "range",
                "start": [
                    312,
                    10
                ],
                "type": "doc.field",
                "view": "number?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        309,
                        28
                    ],
                    "start": [
                        309,
                        20
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                309,
                                27
                            ],
                            "start": [
                                309,
                                20
                            ],
                            "type": "doc.type.name",
                            "view": "integer"
                        }
                    ],
                    "view": "integer?"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    309,
                    28
                ],
                "name": "reaimTime",
                "start": [
                    309,
                    10
                ],
                "type": "doc.field",
                "view": "integer?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Alias for `reloadState`.",
                "extends": {
                    "finish": [
                        307,
                        30
                    ],
                    "start": [
                        307,
                        22
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                307,
                                29
                            ],
                            "start": [
                                307,
                                22
                            ],
                            "type": "doc.type.name",
                            "view": "integer"
                        }
                    ],
                    "view": "integer?"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    307,
                    30
                ],
                "name": "reloadFrame",
                "rawdesc": "Alias for `reloadState`.",
                "start": [
                    307,
                    10
                ],
                "type": "doc.field",
                "view": "integer?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        306,
                        30
                    ],
                    "start": [
                        306,
                        22
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                306,
                                29
                            ],
                            "start": [
                                306,
                                22
                            ],
                            "type": "doc.type.name",
                            "view": "integer"
                        }
                    ],
                    "view": "integer?"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    306,
                    30
                ],
                "name": "reloadState",
                "start": [
                    306,
                    10
                ],
                "type": "doc.field",
                "view": "integer?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        308,
                        28
                    ],
                    "start": [
                        308,
                        21
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                308,
                                27
                            ],
                            "start": [
                                308,
                                21
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number?"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    308,
                    28
                ],
                "name": "reloadTime",
                "start": [
                    308,
                    10
                ],
                "type": "doc.field",
                "view": "number?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        318,
                        28
                    ],
                    "start": [
                        318,
                        20
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                318,
                                27
                            ],
                            "start": [
                                318,
                                20
                            ],
                            "type": "doc.type.name",
                            "view": "integer"
                        }
                    ],
                    "view": "integer?"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    318,
                    28
                ],
                "name": "salvoLeft",
                "start": [
                    318,
                    10
                ],
                "type": "doc.field",
                "view": "integer?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        311,
                        28
                    ],
                    "start": [
                        311,
                        21
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                311,
                                27
                            ],
                            "start": [
                                311,
                                21
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number?"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    311,
                    28
                ],
                "name": "sprayAngle",
                "start": [
                    311,
                    10
                ],
                "type": "doc.field",
                "view": "number?",
                "visible": "public"
            }
        ],
        "name": "WeaponState",
        "type": "type",
        "view": "WeaponState"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `ttType` — unit\n\n@*param* `data1` — unitID | featureID | posX\n\n@*param* `data2` — posY\n\n@*param* `data3` — posZ",
                "extends": {
                    "args": [
                        {
                            "desc": "unit",
                            "finish": [
                                775,
                                28
                            ],
                            "name": "ttType",
                            "rawdesc": "unit",
                            "start": [
                                775,
                                22
                            ],
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "desc": "unitID | featureID | posX",
                            "finish": [
                                775,
                                35
                            ],
                            "name": "data1",
                            "rawdesc": "unitID | featureID | posX",
                            "start": [
                                775,
                                30
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "desc": "posY",
                            "finish": [
                                775,
                                42
                            ],
                            "name": "data2",
                            "rawdesc": "posY",
                            "start": [
                                775,
                                37
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "desc": "posZ",
                            "finish": [
                                775,
                                49
                            ],
                            "name": "data3",
                            "rawdesc": "posZ",
                            "start": [
                                775,
                                44
                            ],
                            "type": "local",
                            "view": "number?"
                        }
                    ],
                    "desc": "@*param* `ttType` — unit\n\n@*param* `data1` — unitID | featureID | posX\n\n@*param* `data2` — posY\n\n@*param* `data3` — posZ",
                    "finish": [
                        775,
                        54
                    ],
                    "returns": [
                        {
                            "name": "newTooltip",
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": [
                        775,
                        0
                    ],
                    "type": "function",
                    "view": "function WorldTooltip(ttType: string, data1: number, data2?: number, data3?: number)\n  -> newTooltip: string"
                },
                "file": "/generated/LuaHandle.lua",
                "finish": [
                    775,
                    21
                ],
                "start": [
                    775,
                    9
                ],
                "type": "setglobal",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "WorldTooltip",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "attachment ::= luaTex or `RBO.rbo` or nil or { luaTex [, num target [, num level ] ] }\n",
                "file": "/generated/LuaFBOs.lua",
                "finish": [
                    19,
                    20
                ],
                "rawdesc": "attachment ::= luaTex or `RBO.rbo` or nil or { luaTex [, num target [, num level ] ] }\n",
                "start": [
                    19,
                    10
                ],
                "type": "doc.class",
                "view": "attachment",
                "visible": "public"
            }
        ],
        "fields": [],
        "name": "attachment",
        "type": "type",
        "view": "attachment"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Parameters for camera state\n\nHighly dependent on the type of the current camera controller\n",
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    186,
                    18
                ],
                "rawdesc": "Parameters for camera state\n\nHighly dependent on the type of the current camera controller\n",
                "start": [
                    186,
                    10
                ],
                "type": "doc.class",
                "view": "camState",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Camera rotation angle on X axis (aka tilt/pitch) (ta)",
                "extends": {
                    "finish": [
                        199,
                        22
                    ],
                    "start": [
                        199,
                        16
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                199,
                                22
                            ],
                            "start": [
                                199,
                                16
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    199,
                    22
                ],
                "name": "angle",
                "rawdesc": "Camera rotation angle on X axis (aka tilt/pitch) (ta)",
                "start": [
                    199,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Camera distance from the ground (spring)",
                "extends": {
                    "finish": [
                        201,
                        21
                    ],
                    "start": [
                        201,
                        15
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                201,
                                21
                            ],
                            "start": [
                                201,
                                15
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    201,
                    21
                ],
                "name": "dist",
                "rawdesc": "Camera distance from the ground (spring)",
                "start": [
                    201,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Camera direction vector X",
                "extends": {
                    "finish": [
                        193,
                        19
                    ],
                    "start": [
                        193,
                        13
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                193,
                                19
                            ],
                            "start": [
                                193,
                                13
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    193,
                    19
                ],
                "name": "dx",
                "rawdesc": "Camera direction vector X",
                "start": [
                    193,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Camera direction vector Y",
                "extends": {
                    "finish": [
                        194,
                        19
                    ],
                    "start": [
                        194,
                        13
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                194,
                                19
                            ],
                            "start": [
                                194,
                                13
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    194,
                    19
                ],
                "name": "dy",
                "rawdesc": "Camera direction vector Y",
                "start": [
                    194,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Camera direction vector Z",
                "extends": {
                    "finish": [
                        195,
                        19
                    ],
                    "start": [
                        195,
                        13
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                195,
                                19
                            ],
                            "start": [
                                195,
                                13
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    195,
                    19
                ],
                "name": "dz",
                "rawdesc": "Camera direction vector Z",
                "start": [
                    195,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "1 for when south is down, 1 for when north is down (ta)",
                "extends": {
                    "finish": [
                        200,
                        24
                    ],
                    "start": [
                        200,
                        18
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                200,
                                24
                            ],
                            "start": [
                                200,
                                18
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    200,
                    24
                ],
                "name": "flipped",
                "rawdesc": "1 for when south is down, 1 for when north is down (ta)",
                "start": [
                    200,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        189,
                        20
                    ],
                    "start": [
                        189,
                        14
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                189,
                                20
                            ],
                            "start": [
                                189,
                                14
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    189,
                    20
                ],
                "name": "fov",
                "start": [
                    189,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Camera distance from the ground (ta)",
                "extends": {
                    "finish": [
                        202,
                        23
                    ],
                    "start": [
                        202,
                        17
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                202,
                                23
                            ],
                            "start": [
                                202,
                                17
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    202,
                    23
                ],
                "name": "height",
                "rawdesc": "Camera distance from the ground (ta)",
                "start": [
                    202,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "the camera mode: 0 (fps), 1 (ta), 2 (spring), 3 (rot), 4 (free), 5 (ov), 6 (dummy)",
                "extends": {
                    "finish": [
                        188,
                        21
                    ],
                    "start": [
                        188,
                        15
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                188,
                                21
                            ],
                            "start": [
                                188,
                                15
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    188,
                    21
                ],
                "name": "mode",
                "rawdesc": "the camera mode: 0 (fps), 1 (ta), 2 (spring), 3 (rot), 4 (free), 5 (ov), 6 (dummy)",
                "start": [
                    188,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        187,
                        60
                    ],
                    "start": [
                        187,
                        15
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                187,
                                19
                            ],
                            "start": [
                                187,
                                15
                            ],
                            "type": "doc.type.string",
                            "view": "\"ta\""
                        },
                        {
                            "finish": [
                                187,
                                28
                            ],
                            "start": [
                                187,
                                20
                            ],
                            "type": "doc.type.string",
                            "view": "\"spring\""
                        },
                        {
                            "finish": [
                                187,
                                34
                            ],
                            "start": [
                                187,
                                29
                            ],
                            "type": "doc.type.string",
                            "view": "\"rot\""
                        },
                        {
                            "finish": [
                                187,
                                39
                            ],
                            "start": [
                                187,
                                35
                            ],
                            "type": "doc.type.string",
                            "view": "\"ov\""
                        },
                        {
                            "finish": [
                                187,
                                46
                            ],
                            "start": [
                                187,
                                40
                            ],
                            "type": "doc.type.string",
                            "view": "\"free\""
                        },
                        {
                            "finish": [
                                187,
                                52
                            ],
                            "start": [
                                187,
                                47
                            ],
                            "type": "doc.type.string",
                            "view": "\"fps\""
                        },
                        {
                            "finish": [
                                187,
                                60
                            ],
                            "start": [
                                187,
                                53
                            ],
                            "type": "doc.type.string",
                            "view": "\"dummy\""
                        }
                    ],
                    "view": "\"dummy\"|\"fps\"|\"free\"|\"ov\"|\"rot\"...(+2)"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    187,
                    60
                ],
                "name": "name",
                "start": [
                    187,
                    10
                ],
                "type": "doc.field",
                "view": "\"dummy\"|\"fps\"|\"free\"|\"ov\"|\"rot\"...(+2)",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Camera distance from the ground, cannot be changed (rot)",
                "extends": {
                    "finish": [
                        203,
                        26
                    ],
                    "start": [
                        203,
                        20
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                203,
                                26
                            ],
                            "start": [
                                203,
                                20
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    203,
                    26
                ],
                "name": "oldHeight",
                "rawdesc": "Camera distance from the ground, cannot be changed (rot)",
                "start": [
                    203,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Position X of the ground point in screen center",
                "extends": {
                    "finish": [
                        190,
                        19
                    ],
                    "start": [
                        190,
                        13
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                190,
                                19
                            ],
                            "start": [
                                190,
                                13
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    190,
                    19
                ],
                "name": "px",
                "rawdesc": "Position X of the ground point in screen center",
                "start": [
                    190,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Position Y of the ground point in screen center",
                "extends": {
                    "finish": [
                        191,
                        19
                    ],
                    "start": [
                        191,
                        13
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                191,
                                19
                            ],
                            "start": [
                                191,
                                13
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    191,
                    19
                ],
                "name": "py",
                "rawdesc": "Position Y of the ground point in screen center",
                "start": [
                    191,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Position Z of the ground point in screen center",
                "extends": {
                    "finish": [
                        192,
                        19
                    ],
                    "start": [
                        192,
                        13
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                192,
                                19
                            ],
                            "start": [
                                192,
                                13
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    192,
                    19
                ],
                "name": "pz",
                "rawdesc": "Position Z of the ground point in screen center",
                "start": [
                    192,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Camera rotation angle on X axis (spring)",
                "extends": {
                    "finish": [
                        196,
                        19
                    ],
                    "start": [
                        196,
                        13
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                196,
                                19
                            ],
                            "start": [
                                196,
                                13
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    196,
                    19
                ],
                "name": "rx",
                "rawdesc": "Camera rotation angle on X axis (spring)",
                "start": [
                    196,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Camera rotation angle on Y axis (spring)",
                "extends": {
                    "finish": [
                        197,
                        19
                    ],
                    "start": [
                        197,
                        13
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                197,
                                19
                            ],
                            "start": [
                                197,
                                13
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    197,
                    19
                ],
                "name": "ry",
                "rawdesc": "Camera rotation angle on Y axis (spring)",
                "start": [
                    197,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Camera rotation angle on Z axis (spring)",
                "extends": {
                    "finish": [
                        198,
                        19
                    ],
                    "start": [
                        198,
                        13
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                198,
                                19
                            ],
                            "start": [
                                198,
                                13
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    198,
                    19
                ],
                "name": "rz",
                "rawdesc": "Camera rotation angle on Z axis (spring)",
                "start": [
                    198,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            }
        ],
        "name": "camState",
        "type": "type",
        "view": "camState"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Command Options params\n",
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    751,
                    17
                ],
                "rawdesc": "Command Options params\n",
                "start": [
                    751,
                    10
                ],
                "type": "doc.class",
                "view": "cmdOpts",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Alt key pressed",
                "extends": {
                    "finish": [
                        756,
                        21
                    ],
                    "start": [
                        756,
                        14
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                756,
                                21
                            ],
                            "start": [
                                756,
                                14
                            ],
                            "type": "doc.type.name",
                            "view": "boolean"
                        }
                    ],
                    "view": "boolean"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    756,
                    21
                ],
                "name": "alt",
                "rawdesc": "Alt key pressed",
                "start": [
                    756,
                    10
                ],
                "type": "doc.field",
                "view": "boolean",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Ctrl key pressed",
                "extends": {
                    "finish": [
                        757,
                        22
                    ],
                    "start": [
                        757,
                        15
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                757,
                                22
                            ],
                            "start": [
                                757,
                                15
                            ],
                            "type": "doc.type.name",
                            "view": "boolean"
                        }
                    ],
                    "view": "boolean"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    757,
                    22
                ],
                "name": "ctrl",
                "rawdesc": "Ctrl key pressed",
                "start": [
                    757,
                    10
                ],
                "type": "doc.field",
                "view": "boolean",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Meta (windows/mac/mod4) key pressed",
                "extends": {
                    "finish": [
                        759,
                        22
                    ],
                    "start": [
                        759,
                        15
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                759,
                                22
                            ],
                            "start": [
                                759,
                                15
                            ],
                            "type": "doc.type.name",
                            "view": "boolean"
                        }
                    ],
                    "view": "boolean"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    759,
                    22
                ],
                "name": "meta",
                "rawdesc": "Meta (windows/mac/mod4) key pressed",
                "start": [
                    759,
                    10
                ],
                "type": "doc.field",
                "view": "boolean",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Right mouse key pressed",
                "extends": {
                    "finish": [
                        755,
                        23
                    ],
                    "start": [
                        755,
                        16
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                755,
                                23
                            ],
                            "start": [
                                755,
                                16
                            ],
                            "type": "doc.type.name",
                            "view": "boolean"
                        }
                    ],
                    "view": "boolean"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    755,
                    23
                ],
                "name": "right",
                "rawdesc": "Right mouse key pressed",
                "start": [
                    755,
                    10
                ],
                "type": "doc.field",
                "view": "boolean",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Shift key pressed",
                "extends": {
                    "finish": [
                        758,
                        23
                    ],
                    "start": [
                        758,
                        16
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                758,
                                23
                            ],
                            "start": [
                                758,
                                16
                            ],
                            "type": "doc.type.name",
                            "view": "boolean"
                        }
                    ],
                    "view": "boolean"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    758,
                    23
                ],
                "name": "shift",
                "rawdesc": "Shift key pressed",
                "start": [
                    758,
                    10
                ],
                "type": "doc.field",
                "view": "boolean",
                "visible": "public"
            }
        ],
        "name": "cmdOpts",
        "type": "type",
        "view": "cmdOpts"
    },
    {
        "defines": [
            {
                "desc": "Cartesian triple (XYZ)\n",
                "finish": [
                    13,
                    20
                ],
                "rawdesc": "Cartesian triple (XYZ)\n",
                "start": [
                    13,
                    10
                ],
                "type": "doc.alias",
                "view": "xyz"
            }
        ],
        "fields": [],
        "name": "float3",
        "type": "type",
        "view": "float3"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        15,
                        1
                    ],
                    "start": [
                        13,
                        5
                    ],
                    "type": "table",
                    "view": "table"
                },
                "file": "/generated/LuaFBOs.lua",
                "finish": [
                    13,
                    2
                ],
                "start": [
                    13,
                    0
                ],
                "type": "setglobal",
                "view": "table",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        19,
                        1
                    ],
                    "start": [
                        17,
                        5
                    ],
                    "type": "table",
                    "view": "table"
                },
                "file": "/generated/LuaOpenGL.lua",
                "finish": [
                    17,
                    2
                ],
                "start": [
                    17,
                    0
                ],
                "type": "setglobal",
                "view": "table",
                "visible": "public"
            }
        ],
        "name": "gl",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "desc": "User Data FBO\n",
                            "finish": [
                                57,
                                25
                            ],
                            "name": "fbo",
                            "rawdesc": "User Data FBO\n",
                            "start": [
                                57,
                                22
                            ],
                            "type": "local",
                            "view": "Fbo"
                        },
                        {
                            "finish": [
                                57,
                                33
                            ],
                            "name": "target",
                            "start": [
                                57,
                                27
                            ],
                            "type": "local",
                            "view": "GL?"
                        },
                        {
                            "finish": [
                                57,
                                45
                            ],
                            "name": "identities",
                            "start": [
                                57,
                                35
                            ],
                            "type": "local",
                            "view": "boolean?"
                        },
                        {
                            "finish": [
                                57,
                                59
                            ],
                            "name": "lua_function",
                            "start": [
                                57,
                                47
                            ],
                            "type": "local",
                            "view": "function?"
                        },
                        {
                            "finish": [
                                57,
                                65
                            ],
                            "name": "arg1",
                            "start": [
                                57,
                                61
                            ],
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": [
                                57,
                                71
                            ],
                            "name": "arg2",
                            "start": [
                                57,
                                67
                            ],
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": [
                                57,
                                77
                            ],
                            "name": "argn",
                            "start": [
                                57,
                                73
                            ],
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": [
                        57,
                        82
                    ],
                    "start": [
                        57,
                        0
                    ],
                    "type": "function",
                    "view": "function gl.ActiveFBO(fbo: Fbo, target?: GL, identities?: boolean, lua_function?: function, arg1?: any, arg2?: any, argn?: any)"
                },
                "file": "/generated/LuaFBOs.lua",
                "finish": [
                    57,
                    21
                ],
                "name": "ActiveFBO",
                "start": [
                    57,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "gl.ActiveFBO",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Binds a shader program identified by shaderID, and calls the Lua func with\nthe specified arguments.\n\nCan be used in NON-drawing events (to update uniforms etc.)!\n\n@*param* `...` — Arguments",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                107,
                                33
                            ],
                            "name": "shaderID",
                            "start": [
                                107,
                                25
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                107,
                                39
                            ],
                            "name": "func",
                            "start": [
                                107,
                                35
                            ],
                            "type": "local",
                            "view": "function"
                        },
                        {
                            "desc": "Arguments",
                            "finish": [
                                107,
                                44
                            ],
                            "rawdesc": "Arguments",
                            "start": [
                                107,
                                41
                            ],
                            "type": "...",
                            "view": "any"
                        }
                    ],
                    "desc": "Binds a shader program identified by shaderID, and calls the Lua func with\nthe specified arguments.\n\nCan be used in NON-drawing events (to update uniforms etc.)!\n\n@*param* `...` — Arguments",
                    "finish": [
                        107,
                        49
                    ],
                    "rawdesc": "Binds a shader program identified by shaderID, and calls the Lua func with\nthe specified arguments.\n\nCan be used in NON-drawing events (to update uniforms etc.)!",
                    "start": [
                        107,
                        0
                    ],
                    "type": "function",
                    "view": "function gl.ActiveShader(shaderID: integer, func: function, ...any)"
                },
                "file": "/generated/LuaShaders.lua",
                "finish": [
                    107,
                    24
                ],
                "name": "ActiveShader",
                "rawdesc": "Binds a shader program identified by shaderID, and calls the Lua func with\nthe specified arguments.\n\nCan be used in NON-drawing events (to update uniforms etc.)!",
                "start": [
                    107,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "gl.ActiveShader",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Adds a fallback font for the font rendering engine.\n\nFonts added first will have higher priority.\nWhen a glyph isn't found when rendering a font, the fallback fonts\nwill be searched first, otherwise os fonts will be used.\n\nThe application should listen for the unsynced 'FontsChanged' callin so\nmodules can clear any already reserved display lists or other relevant\ncaches.\n\nNote the callin won't be executed at the time of calling this method,\nbut later, on the Update cycle (before other Update and Draw callins).\n\n@*param* `filePath` — VFS path to the file, for example \"fonts/myfont.ttf\". Uses VFS.RAW_FIRST access mode.",
                "extends": {
                    "args": [
                        {
                            "desc": "VFS path to the file, for example \"fonts/myfont.ttf\". Uses VFS.RAW_FIRST access mode.",
                            "finish": [
                                24,
                                36
                            ],
                            "name": "filePath",
                            "rawdesc": "VFS path to the file, for example \"fonts/myfont.ttf\". Uses VFS.RAW_FIRST access mode.",
                            "start": [
                                24,
                                28
                            ],
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "desc": "Adds a fallback font for the font rendering engine.\n\nFonts added first will have higher priority.\nWhen a glyph isn't found when rendering a font, the fallback fonts\nwill be searched first, otherwise os fonts will be used.\n\nThe application should listen for the unsynced 'FontsChanged' callin so\nmodules can clear any already reserved display lists or other relevant\ncaches.\n\nNote the callin won't be executed at the time of calling this method,\nbut later, on the Update cycle (before other Update and Draw callins).\n\n@*param* `filePath` — VFS path to the file, for example \"fonts/myfont.ttf\". Uses VFS.RAW_FIRST access mode.",
                    "finish": [
                        24,
                        41
                    ],
                    "rawdesc": "Adds a fallback font for the font rendering engine.\n\nFonts added first will have higher priority.\nWhen a glyph isn't found when rendering a font, the fallback fonts\nwill be searched first, otherwise os fonts will be used.\n\nThe application should listen for the unsynced 'FontsChanged' callin so\nmodules can clear any already reserved display lists or other relevant\ncaches.\n\nNote the callin won't be executed at the time of calling this method,\nbut later, on the Update cycle (before other Update and Draw callins).",
                    "returns": [
                        {
                            "name": "success",
                            "type": "function.return",
                            "view": "bool"
                        }
                    ],
                    "start": [
                        24,
                        0
                    ],
                    "type": "function",
                    "view": "function gl.AddFallbackFont(filePath: string)\n  -> success: bool"
                },
                "file": "/generated/LuaFonts.lua",
                "finish": [
                    24,
                    27
                ],
                "name": "AddFallbackFont",
                "rawdesc": "Adds a fallback font for the font rendering engine.\n\nFonts added first will have higher priority.\nWhen a glyph isn't found when rendering a font, the fallback fonts\nwill be searched first, otherwise os fonts will be used.\n\nThe application should listen for the unsynced 'FontsChanged' callin so\nmodules can clear any already reserved display lists or other relevant\ncaches.\n\nNote the callin won't be executed at the time of calling this method,\nbut later, on the Update cycle (before other Update and Draw callins).",
                "start": [
                    24,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "gl.AddFallbackFont",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "needs `GLAD_GL_EXT_framebuffer_blit`\n\n@*param* `mask` — (Default: GL_COLOR_BUFFER_BIT)\n\n@*param* `filter` — (Default: GL_NEAREST)",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                84,
                                25
                            ],
                            "name": "x0Src",
                            "start": [
                                84,
                                20
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                84,
                                32
                            ],
                            "name": "y0Src",
                            "start": [
                                84,
                                27
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                84,
                                39
                            ],
                            "name": "x1Src",
                            "start": [
                                84,
                                34
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                84,
                                46
                            ],
                            "name": "y1Src",
                            "start": [
                                84,
                                41
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                84,
                                53
                            ],
                            "name": "x0Dst",
                            "start": [
                                84,
                                48
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                84,
                                60
                            ],
                            "name": "y0Dst",
                            "start": [
                                84,
                                55
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                84,
                                67
                            ],
                            "name": "x1Dst",
                            "start": [
                                84,
                                62
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                84,
                                74
                            ],
                            "name": "y1Dst",
                            "start": [
                                84,
                                69
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "desc": "(Default: GL_COLOR_BUFFER_BIT)",
                            "finish": [
                                84,
                                80
                            ],
                            "name": "mask",
                            "rawdesc": "(Default: GL_COLOR_BUFFER_BIT)",
                            "start": [
                                84,
                                76
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "desc": "(Default: GL_NEAREST)",
                            "finish": [
                                84,
                                88
                            ],
                            "name": "filter",
                            "rawdesc": "(Default: GL_NEAREST)",
                            "start": [
                                84,
                                82
                            ],
                            "type": "local",
                            "view": "number?"
                        }
                    ],
                    "desc": "needs `GLAD_GL_EXT_framebuffer_blit`\n\n@*param* `mask` — (Default: GL_COLOR_BUFFER_BIT)\n\n@*param* `filter` — (Default: GL_NEAREST)",
                    "finish": [
                        84,
                        93
                    ],
                    "rawdesc": "needs `GLAD_GL_EXT_framebuffer_blit`",
                    "start": [
                        84,
                        0
                    ],
                    "type": "function",
                    "view": "function gl.BlitFBO(x0Src: number, y0Src: number, x1Src: number, y1Src: number, x0Dst: number, y0Dst: number, x1Dst: number, y1Dst: number, mask?: number, filter?: number)"
                },
                "file": "/generated/LuaFBOs.lua",
                "finish": [
                    84,
                    19
                ],
                "name": "BlitFBO",
                "rawdesc": "needs `GLAD_GL_EXT_framebuffer_blit`",
                "start": [
                    84,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "needs `GLAD_GL_EXT_framebuffer_blit`\n\n@*param* `mask` — (Default: GL_COLOR_BUFFER_BIT)\n\n@*param* `filter` — (Default: GL_NEAREST)",
                "extends": {
                    "args": [
                        {
                            "desc": "User Data FBO\n",
                            "finish": [
                                100,
                                26
                            ],
                            "name": "fboSrc",
                            "rawdesc": "User Data FBO\n",
                            "start": [
                                100,
                                20
                            ],
                            "type": "local",
                            "view": "Fbo"
                        },
                        {
                            "finish": [
                                100,
                                33
                            ],
                            "name": "x0Src",
                            "start": [
                                100,
                                28
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                100,
                                40
                            ],
                            "name": "y0Src",
                            "start": [
                                100,
                                35
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                100,
                                47
                            ],
                            "name": "x1Src",
                            "start": [
                                100,
                                42
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                100,
                                54
                            ],
                            "name": "y1Src",
                            "start": [
                                100,
                                49
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "desc": "User Data FBO\n",
                            "finish": [
                                100,
                                62
                            ],
                            "name": "fboDst",
                            "rawdesc": "User Data FBO\n",
                            "start": [
                                100,
                                56
                            ],
                            "type": "local",
                            "view": "Fbo"
                        },
                        {
                            "finish": [
                                100,
                                69
                            ],
                            "name": "x0Dst",
                            "start": [
                                100,
                                64
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                100,
                                76
                            ],
                            "name": "y0Dst",
                            "start": [
                                100,
                                71
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                100,
                                83
                            ],
                            "name": "x1Dst",
                            "start": [
                                100,
                                78
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                100,
                                90
                            ],
                            "name": "y1Dst",
                            "start": [
                                100,
                                85
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "desc": "(Default: GL_COLOR_BUFFER_BIT)",
                            "finish": [
                                100,
                                96
                            ],
                            "name": "mask",
                            "rawdesc": "(Default: GL_COLOR_BUFFER_BIT)",
                            "start": [
                                100,
                                92
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "desc": "(Default: GL_NEAREST)",
                            "finish": [
                                100,
                                104
                            ],
                            "name": "filter",
                            "rawdesc": "(Default: GL_NEAREST)",
                            "start": [
                                100,
                                98
                            ],
                            "type": "local",
                            "view": "number?"
                        }
                    ],
                    "desc": "needs `GLAD_GL_EXT_framebuffer_blit`\n\n@*param* `mask` — (Default: GL_COLOR_BUFFER_BIT)\n\n@*param* `filter` — (Default: GL_NEAREST)",
                    "finish": [
                        100,
                        109
                    ],
                    "rawdesc": "needs `GLAD_GL_EXT_framebuffer_blit`",
                    "start": [
                        100,
                        0
                    ],
                    "type": "function",
                    "view": "function gl.BlitFBO(fboSrc: Fbo, x0Src: number, y0Src: number, x1Src: number, y1Src: number, fboDst: Fbo, x0Dst: number, y0Dst: number, x1Dst: number, y1Dst: number, mask?: number, filter?: number)"
                },
                "file": "/generated/LuaFBOs.lua",
                "finish": [
                    100,
                    19
                ],
                "name": "BlitFBO",
                "rawdesc": "needs `GLAD_GL_EXT_framebuffer_blit`",
                "start": [
                    100,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "gl.BlitFBO",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "needs `Platform.glVersionNum >= 30`\nClears the \"attachment\" of the currently bound FBO type \"target\" with \"clearValues\"\n\n@*param* `target` — (Default: GL.FRAMEBUFFER)\n\n@*param* `attachment` — (e.g. `\"color0\"` or `GL.COLOR_ATTACHMENT0`)",
                "extends": {
                    "args": [
                        {
                            "desc": "(Default: GL.FRAMEBUFFER)",
                            "finish": [
                                111,
                                37
                            ],
                            "name": "target",
                            "rawdesc": "(Default: GL.FRAMEBUFFER)",
                            "start": [
                                111,
                                31
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "desc": "(e.g. `\"color0\"` or `GL.COLOR_ATTACHMENT0`)",
                            "finish": [
                                111,
                                49
                            ],
                            "name": "attachment",
                            "rawdesc": "(e.g. `\"color0\"` or `GL.COLOR_ATTACHMENT0`)",
                            "start": [
                                111,
                                39
                            ],
                            "type": "local",
                            "view": "string|GL"
                        },
                        {
                            "finish": [
                                111,
                                62
                            ],
                            "name": "clearValue0",
                            "start": [
                                111,
                                51
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                111,
                                75
                            ],
                            "name": "clearValue1",
                            "start": [
                                111,
                                64
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                111,
                                88
                            ],
                            "name": "clearValue2",
                            "start": [
                                111,
                                77
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                111,
                                101
                            ],
                            "name": "clearValue3",
                            "start": [
                                111,
                                90
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "needs `Platform.glVersionNum >= 30`\nClears the \"attachment\" of the currently bound FBO type \"target\" with \"clearValues\"\n\n@*param* `target` — (Default: GL.FRAMEBUFFER)\n\n@*param* `attachment` — (e.g. `\"color0\"` or `GL.COLOR_ATTACHMENT0`)",
                    "finish": [
                        111,
                        106
                    ],
                    "rawdesc": "needs `Platform.glVersionNum >= 30`\nClears the \"attachment\" of the currently bound FBO type \"target\" with \"clearValues\"",
                    "start": [
                        111,
                        0
                    ],
                    "type": "function",
                    "view": "function gl.ClearAttachmentFBO(target?: number, attachment: string|GL, clearValue0: number, clearValue1: number, clearValue2: number, clearValue3: number)"
                },
                "file": "/generated/LuaFBOs.lua",
                "finish": [
                    111,
                    30
                ],
                "name": "ClearAttachmentFBO",
                "rawdesc": "needs `Platform.glVersionNum >= 30`\nClears the \"attachment\" of the currently bound FBO type \"target\" with \"clearValues\"",
                "start": [
                    111,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "gl.ClearAttachmentFBO",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Clears all fallback fonts.\n\nSee the note at 'AddFallbackFont' about the 'FontsChanged' callin,\nit also applies when calling this method.",
                "extends": {
                    "args": [],
                    "desc": "Clears all fallback fonts.\n\nSee the note at 'AddFallbackFont' about the 'FontsChanged' callin,\nit also applies when calling this method.",
                    "finish": [
                        32,
                        36
                    ],
                    "rawdesc": "Clears all fallback fonts.\n\nSee the note at 'AddFallbackFont' about the 'FontsChanged' callin,\nit also applies when calling this method.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        32,
                        0
                    ],
                    "type": "function",
                    "view": "function gl.ClearFallbackFonts()\n  -> nil"
                },
                "file": "/generated/LuaFonts.lua",
                "finish": [
                    32,
                    30
                ],
                "name": "ClearFallbackFonts",
                "rawdesc": "Clears all fallback fonts.\n\nSee the note at 'AddFallbackFont' about the 'FontsChanged' callin,\nit also applies when calling this method.",
                "start": [
                    32,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "gl.ClearFallbackFonts",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `r` — Red\n\n@*param* `g` — Green\n\n@*param* `b` — Blue\n\n@*param* `a` — Alpha (Default: 1.0f)",
                "extends": {
                    "args": [
                        {
                            "desc": "Red",
                            "finish": [
                                54,
                                19
                            ],
                            "name": "r",
                            "rawdesc": "Red",
                            "start": [
                                54,
                                18
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "desc": "Green",
                            "finish": [
                                54,
                                22
                            ],
                            "name": "g",
                            "rawdesc": "Green",
                            "start": [
                                54,
                                21
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "desc": "Blue",
                            "finish": [
                                54,
                                25
                            ],
                            "name": "b",
                            "rawdesc": "Blue",
                            "start": [
                                54,
                                24
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "desc": "Alpha (Default: 1.0f)",
                            "finish": [
                                54,
                                28
                            ],
                            "name": "a",
                            "rawdesc": "Alpha (Default: 1.0f)",
                            "start": [
                                54,
                                27
                            ],
                            "type": "local",
                            "view": "number?"
                        }
                    ],
                    "desc": "@*param* `r` — Red\n\n@*param* `g` — Green\n\n@*param* `b` — Blue\n\n@*param* `a` — Alpha (Default: 1.0f)",
                    "finish": [
                        54,
                        33
                    ],
                    "start": [
                        54,
                        0
                    ],
                    "type": "function",
                    "view": "function gl.Color(r: number, g: number, b: number, a?: number)"
                },
                "file": "/generated/LuaOpenGL.lua",
                "finish": [
                    54,
                    17
                ],
                "name": "Color",
                "start": [
                    54,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `rgbs` — Red, green, blue, alpha",
                "extends": {
                    "args": [
                        {
                            "desc": "Red, green, blue, alpha",
                            "finish": [
                                57,
                                22
                            ],
                            "name": "rgbs",
                            "rawdesc": "Red, green, blue, alpha",
                            "start": [
                                57,
                                18
                            ],
                            "type": "local",
                            "view": "[number, number, number, number]"
                        }
                    ],
                    "desc": "@*param* `rgbs` — Red, green, blue, alpha",
                    "finish": [
                        57,
                        27
                    ],
                    "start": [
                        57,
                        0
                    ],
                    "type": "function",
                    "view": "function gl.Color(rgbs: [number, number, number, number])"
                },
                "file": "/generated/LuaOpenGL.lua",
                "finish": [
                    57,
                    17
                ],
                "name": "Color",
                "start": [
                    57,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `rgb` — Red, green, blue",
                "extends": {
                    "args": [
                        {
                            "desc": "Red, green, blue",
                            "finish": [
                                60,
                                21
                            ],
                            "name": "rgb",
                            "rawdesc": "Red, green, blue",
                            "start": [
                                60,
                                18
                            ],
                            "type": "local",
                            "view": "[number, number, number]"
                        }
                    ],
                    "desc": "@*param* `rgb` — Red, green, blue",
                    "finish": [
                        60,
                        26
                    ],
                    "start": [
                        60,
                        0
                    ],
                    "type": "function",
                    "view": "function gl.Color(rgb: [number, number, number])"
                },
                "file": "/generated/LuaOpenGL.lua",
                "finish": [
                    60,
                    17
                ],
                "name": "Color",
                "start": [
                    60,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "gl.Color",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "desc": "User Data FBO\n",
                            "finish": [
                                37,
                                25
                            ],
                            "name": "fbo",
                            "rawdesc": "User Data FBO\n",
                            "start": [
                                37,
                                22
                            ],
                            "type": "local",
                            "view": "Fbo"
                        }
                    ],
                    "finish": [
                        37,
                        30
                    ],
                    "start": [
                        37,
                        0
                    ],
                    "type": "function",
                    "view": "function gl.CreateFBO(fbo: Fbo)"
                },
                "file": "/generated/LuaFBOs.lua",
                "finish": [
                    37,
                    21
                ],
                "name": "CreateFBO",
                "start": [
                    37,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "gl.CreateFBO",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                34,
                                27
                            ],
                            "name": "xsize",
                            "start": [
                                34,
                                22
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                34,
                                34
                            ],
                            "name": "ysize",
                            "start": [
                                34,
                                29
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                34,
                                40
                            ],
                            "name": "data",
                            "start": [
                                34,
                                36
                            ],
                            "type": "local",
                            "view": "CreateRBOData"
                        }
                    ],
                    "finish": [
                        34,
                        45
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "RBO"
                        }
                    ],
                    "start": [
                        34,
                        0
                    ],
                    "type": "function",
                    "view": "function gl.CreateRBO(xsize: integer, ysize: integer, data: CreateRBOData)\n  -> RBO"
                },
                "file": "/generated/LuaRBOs.lua",
                "finish": [
                    34,
                    21
                ],
                "name": "CreateRBO",
                "start": [
                    34,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "gl.CreateRBO",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Create a shader.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                86,
                                37
                            ],
                            "name": "shaderParams",
                            "start": [
                                86,
                                25
                            ],
                            "type": "local",
                            "view": "ShaderParams"
                        }
                    ],
                    "desc": "Create a shader.",
                    "finish": [
                        86,
                        42
                    ],
                    "rawdesc": "Create a shader.",
                    "returns": [
                        {
                            "name": "shaderID",
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": [
                        86,
                        0
                    ],
                    "type": "function",
                    "view": "function gl.CreateShader(shaderParams: ShaderParams)\n  -> shaderID: integer"
                },
                "file": "/generated/LuaShaders.lua",
                "finish": [
                    86,
                    24
                ],
                "name": "CreateShader",
                "rawdesc": "Create a shader.",
                "start": [
                    86,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "gl.CreateShader",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "This doesn't delete the attached objects!",
                "extends": {
                    "args": [
                        {
                            "desc": "User Data FBO\n",
                            "finish": [
                                42,
                                25
                            ],
                            "name": "fbo",
                            "rawdesc": "User Data FBO\n",
                            "start": [
                                42,
                                22
                            ],
                            "type": "local",
                            "view": "Fbo"
                        }
                    ],
                    "desc": "This doesn't delete the attached objects!",
                    "finish": [
                        42,
                        30
                    ],
                    "rawdesc": "This doesn't delete the attached objects!",
                    "start": [
                        42,
                        0
                    ],
                    "type": "function",
                    "view": "function gl.DeleteFBO(fbo: Fbo)"
                },
                "file": "/generated/LuaFBOs.lua",
                "finish": [
                    42,
                    21
                ],
                "name": "DeleteFBO",
                "rawdesc": "This doesn't delete the attached objects!",
                "start": [
                    42,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "gl.DeleteFBO",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "desc": "User Data RBO\n",
                            "finish": [
                                37,
                                25
                            ],
                            "name": "rbo",
                            "rawdesc": "User Data RBO\n",
                            "start": [
                                37,
                                22
                            ],
                            "type": "local",
                            "view": "RBO"
                        }
                    ],
                    "finish": [
                        37,
                        30
                    ],
                    "start": [
                        37,
                        0
                    ],
                    "type": "function",
                    "view": "function gl.DeleteRBO(rbo: RBO)"
                },
                "file": "/generated/LuaRBOs.lua",
                "finish": [
                    37,
                    21
                ],
                "name": "DeleteRBO",
                "start": [
                    37,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "gl.DeleteRBO",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Deletes a shader identified by shaderID",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                91,
                                33
                            ],
                            "name": "shaderID",
                            "start": [
                                91,
                                25
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Deletes a shader identified by shaderID",
                    "finish": [
                        91,
                        38
                    ],
                    "rawdesc": "Deletes a shader identified by shaderID",
                    "start": [
                        91,
                        0
                    ],
                    "type": "function",
                    "view": "function gl.DeleteShader(shaderID: integer)"
                },
                "file": "/generated/LuaShaders.lua",
                "finish": [
                    91,
                    24
                ],
                "name": "DeleteShader",
                "rawdesc": "Deletes a shader identified by shaderID",
                "start": [
                    91,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "gl.DeleteShader",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Query the active (actually used) uniforms of a shader and identify their\nnames, types (float, int, uint) and sizes (float, vec4, ...).",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                122,
                                38
                            ],
                            "name": "shaderID",
                            "start": [
                                122,
                                30
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Query the active (actually used) uniforms of a shader and identify their\nnames, types (float, int, uint) and sizes (float, vec4, ...).",
                    "finish": [
                        122,
                        43
                    ],
                    "rawdesc": "Query the active (actually used) uniforms of a shader and identify their\nnames, types (float, int, uint) and sizes (float, vec4, ...).",
                    "returns": [
                        {
                            "name": "activeUniforms",
                            "type": "function.return",
                            "view": "ActiveUniform[]"
                        }
                    ],
                    "start": [
                        122,
                        0
                    ],
                    "type": "function",
                    "view": "function gl.GetActiveUniforms(shaderID: integer)\n  -> activeUniforms: ActiveUniform[]"
                },
                "file": "/generated/LuaShaders.lua",
                "finish": [
                    122,
                    29
                ],
                "name": "GetActiveUniforms",
                "rawdesc": "Query the active (actually used) uniforms of a shader and identify their\nnames, types (float, int, uint) and sizes (float, vec4, ...).",
                "start": [
                    122,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "gl.GetActiveUniforms",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturn the GLSL compliant definition of ModelUniformData structure (per Unit/Feature buffer available on GPU)",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                201,
                                46
                            ],
                            "name": "index",
                            "start": [
                                201,
                                41
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturn the GLSL compliant definition of ModelUniformData structure (per Unit/Feature buffer available on GPU)",
                    "finish": [
                        201,
                        51
                    ],
                    "rawdesc": "\nReturn the GLSL compliant definition of ModelUniformData structure (per Unit/Feature buffer available on GPU)",
                    "returns": [
                        {
                            "name": "glslDefinition",
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": [
                        201,
                        0
                    ],
                    "type": "function",
                    "view": "function gl.GetEngineModelUniformDataDef(index: number)\n  -> glslDefinition: string"
                },
                "file": "/generated/LuaShaders.lua",
                "finish": [
                    201,
                    40
                ],
                "name": "GetEngineModelUniformDataDef",
                "rawdesc": "\nReturn the GLSL compliant definition of ModelUniformData structure (per Unit/Feature buffer available on GPU)",
                "start": [
                    201,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "gl.GetEngineModelUniformDataDef",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nReturn the GLSL compliant definition of UniformMatricesBuffer(idx=0) or UniformParamsBuffer(idx=1) structure.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                194,
                                43
                            ],
                            "name": "index",
                            "start": [
                                194,
                                38
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturn the GLSL compliant definition of UniformMatricesBuffer(idx=0) or UniformParamsBuffer(idx=1) structure.",
                    "finish": [
                        194,
                        48
                    ],
                    "rawdesc": "\nReturn the GLSL compliant definition of UniformMatricesBuffer(idx=0) or UniformParamsBuffer(idx=1) structure.",
                    "returns": [
                        {
                            "name": "glslDefinition",
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": [
                        194,
                        0
                    ],
                    "type": "function",
                    "view": "function gl.GetEngineUniformBufferDef(index: number)\n  -> glslDefinition: string"
                },
                "file": "/generated/LuaShaders.lua",
                "finish": [
                    194,
                    37
                ],
                "name": "GetEngineUniformBufferDef",
                "rawdesc": "\nReturn the GLSL compliant definition of UniformMatricesBuffer(idx=0) or UniformParamsBuffer(idx=1) structure.",
                "start": [
                    194,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "gl.GetEngineUniformBufferDef",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Returns the shader compilation error log. This is empty if the shader linking failed, in that case, check your in/out blocks and ensure they match.",
                "extends": {
                    "args": [],
                    "desc": "Returns the shader compilation error log. This is empty if the shader linking failed, in that case, check your in/out blocks and ensure they match.",
                    "finish": [
                        19,
                        30
                    ],
                    "rawdesc": "Returns the shader compilation error log. This is empty if the shader linking failed, in that case, check your in/out blocks and ensure they match.",
                    "returns": [
                        {
                            "name": "infoLog",
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": [
                        19,
                        0
                    ],
                    "type": "function",
                    "view": "function gl.GetShaderLog()\n  -> infoLog: string"
                },
                "file": "/generated/LuaShaders.lua",
                "finish": [
                    19,
                    24
                ],
                "name": "GetShaderLog",
                "rawdesc": "Returns the shader compilation error log. This is empty if the shader linking failed, in that case, check your in/out blocks and ensure they match.",
                "start": [
                    19,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "gl.GetShaderLog",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Returns the locationID of a shaders uniform. Needed for changing uniform\nvalues with function `gl.Uniform`.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                130,
                                39
                            ],
                            "name": "shaderID",
                            "start": [
                                130,
                                31
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                130,
                                45
                            ],
                            "name": "name",
                            "start": [
                                130,
                                41
                            ],
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "desc": "Returns the locationID of a shaders uniform. Needed for changing uniform\nvalues with function `gl.Uniform`.",
                    "finish": [
                        130,
                        50
                    ],
                    "rawdesc": "Returns the locationID of a shaders uniform. Needed for changing uniform\nvalues with function `gl.Uniform`.",
                    "returns": [
                        {
                            "name": "locationID",
                            "type": "function.return",
                            "view": "GL"
                        }
                    ],
                    "start": [
                        130,
                        0
                    ],
                    "type": "function",
                    "view": "function gl.GetUniformLocation(shaderID: integer, name: string)\n  -> locationID: GL"
                },
                "file": "/generated/LuaShaders.lua",
                "finish": [
                    130,
                    30
                ],
                "name": "GetUniformLocation",
                "rawdesc": "Returns the locationID of a shaders uniform. Needed for changing uniform\nvalues with function `gl.Uniform`.",
                "start": [
                    130,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "gl.GetUniformLocation",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Example:\n```\nlocal myVAO = gl.GetVAO()\nif myVAO == nil then Spring.Echo(\"Failed to get VAO\") end\n```\n\n@*return* `vao` — The VAO ref on success, else `nil`",
                "extends": {
                    "args": [],
                    "desc": "Example:\n```\nlocal myVAO = gl.GetVAO()\nif myVAO == nil then Spring.Echo(\"Failed to get VAO\") end\n```\n\n@*return* `vao` — The VAO ref on success, else `nil`",
                    "finish": [
                        18,
                        24
                    ],
                    "rawdesc": "Example:\n```\nlocal myVAO = gl.GetVAO()\nif myVAO == nil then Spring.Echo(\"Failed to get VAO\") end\n```",
                    "returns": [
                        {
                            "desc": "The VAO ref on success, else `nil`",
                            "name": "vao",
                            "rawdesc": "The VAO ref on success, else `nil`",
                            "type": "function.return",
                            "view": "VAO?"
                        }
                    ],
                    "start": [
                        18,
                        0
                    ],
                    "type": "function",
                    "view": "function gl.GetVAO()\n  -> vao: VAO?"
                },
                "file": "/generated/LuaVAO.lua",
                "finish": [
                    18,
                    18
                ],
                "name": "GetVAO",
                "rawdesc": "Example:\n```\nlocal myVAO = gl.GetVAO()\nif myVAO == nil then Spring.Echo(\"Failed to get VAO\") end\n```",
                "start": [
                    18,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "gl.GetVAO",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Example:\n\n```lua\nlocal myVBO = gl.GetVBO()\nif myVBO == nil then Spring.Echo(\"Failed to get VBO\") end\n```\n\n@*param* `bufferType` — (Default: GL.ARRAY_BUFFER)\n\n\nUse `GL.ARRAY_BUFFER` for vertex data and\n`GL.ELEMENT_ARRAY_BUFFER` for vertex indices.\n\n@*param* `freqUpdated` — (Default: true)\n\n\n`true` to updated frequently, `false` to update only once.\n\nThe VBO ref on success, or nil if not supported or an error occurred.\nSee: ~GL.OpenGL_Buffer_Types~",
                "extends": {
                    "args": [
                        {
                            "desc": "(Default: GL.ARRAY_BUFFER)",
                            "finish": [
                                35,
                                29
                            ],
                            "name": "bufferType",
                            "rawdesc": "(Default: GL.ARRAY_BUFFER)",
                            "start": [
                                35,
                                19
                            ],
                            "type": "local",
                            "view": "(GL.ARRAY_BUFFER|GL.ELEMENT_ARRAY_BUFFER|GL.SHADER_STORAGE_BUFFER|GL.UNIFORM_BUFFER)?"
                        },
                        {
                            "desc": "(Default: true)",
                            "finish": [
                                35,
                                42
                            ],
                            "name": "freqUpdated",
                            "rawdesc": "(Default: true)",
                            "start": [
                                35,
                                31
                            ],
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "Example:\n\n```lua\nlocal myVBO = gl.GetVBO()\nif myVBO == nil then Spring.Echo(\"Failed to get VBO\") end\n```\n\n@*param* `bufferType` — (Default: GL.ARRAY_BUFFER)\n\n\nUse `GL.ARRAY_BUFFER` for vertex data and\n`GL.ELEMENT_ARRAY_BUFFER` for vertex indices.\n\n@*param* `freqUpdated` — (Default: true)\n\n\n`true` to updated frequently, `false` to update only once.\n\nThe VBO ref on success, or nil if not supported or an error occurred.\nSee: ~GL.OpenGL_Buffer_Types~",
                    "finish": [
                        35,
                        47
                    ],
                    "rawdesc": "Example:\n\n```lua\nlocal myVBO = gl.GetVBO()\nif myVBO == nil then Spring.Echo(\"Failed to get VBO\") end\n```\n\n\nUse `GL.ARRAY_BUFFER` for vertex data and\n`GL.ELEMENT_ARRAY_BUFFER` for vertex indices.\n\n`true` to updated frequently, `false` to update only once.\n\nThe VBO ref on success, or nil if not supported or an error occurred.\nSee: ~GL.OpenGL_Buffer_Types~",
                    "returns": [
                        {
                            "name": "VBO",
                            "type": "function.return",
                            "view": "VBO?"
                        }
                    ],
                    "start": [
                        35,
                        0
                    ],
                    "type": "function",
                    "view": "function gl.GetVBO(bufferType?: GL.ARRAY_BUFFER|GL.ELEMENT_ARRAY_BUFFER|GL.SHADER_STORAGE_BUFFER|GL.UNIFORM_BUFFER, freqUpdated?: boolean)\n  -> VBO: VBO?"
                },
                "file": "/generated/LuaVBO.lua",
                "finish": [
                    35,
                    18
                ],
                "name": "GetVBO",
                "rawdesc": "Example:\n\n```lua\nlocal myVBO = gl.GetVBO()\nif myVBO == nil then Spring.Echo(\"Failed to get VBO\") end\n```\n\n\nUse `GL.ARRAY_BUFFER` for vertex data and\n`GL.ELEMENT_ARRAY_BUFFER` for vertex indices.\n\n`true` to updated frequently, `false` to update only once.\n\nThe VBO ref on success, or nil if not supported or an error occurred.\nSee: ~GL.OpenGL_Buffer_Types~",
                "start": [
                    35,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "gl.GetVBO",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "desc": "User Data FBO\n",
                            "finish": [
                                48,
                                26
                            ],
                            "name": "fbo",
                            "rawdesc": "User Data FBO\n",
                            "start": [
                                48,
                                23
                            ],
                            "type": "local",
                            "view": "Fbo"
                        },
                        {
                            "finish": [
                                48,
                                34
                            ],
                            "name": "target",
                            "start": [
                                48,
                                28
                            ],
                            "type": "local",
                            "view": "GL?"
                        }
                    ],
                    "finish": [
                        48,
                        39
                    ],
                    "returns": [
                        {
                            "name": "valid",
                            "type": "function.return",
                            "view": "boolean"
                        },
                        {
                            "name": "status",
                            "type": "function.return",
                            "view": "number?"
                        }
                    ],
                    "start": [
                        48,
                        0
                    ],
                    "type": "function",
                    "view": "function gl.IsValidFBO(fbo: Fbo, target?: GL)\n  -> valid: boolean\n  2. status: number?"
                },
                "file": "/generated/LuaFBOs.lua",
                "finish": [
                    48,
                    22
                ],
                "name": "IsValidFBO",
                "start": [
                    48,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "gl.IsValidFBO",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\nlabels an object for use with debugging tools\n\n@*param* `objectTypeIdentifier` — Specifies the type of object being labeled.\n\n@*param* `objectID` — Specifies the name or ID of the object to label.\n\n@*param* `label` — A string containing the label to be assigned to the object.",
                "extends": {
                    "args": [
                        {
                            "desc": "Specifies the type of object being labeled.",
                            "finish": [
                                69,
                                44
                            ],
                            "name": "objectTypeIdentifier",
                            "rawdesc": "Specifies the type of object being labeled.",
                            "start": [
                                69,
                                24
                            ],
                            "type": "local",
                            "view": "GLenum"
                        },
                        {
                            "desc": "Specifies the name or ID of the object to label.",
                            "finish": [
                                69,
                                54
                            ],
                            "name": "objectID",
                            "rawdesc": "Specifies the name or ID of the object to label.",
                            "start": [
                                69,
                                46
                            ],
                            "type": "local",
                            "view": "GLuint"
                        },
                        {
                            "desc": "A string containing the label to be assigned to the object.",
                            "finish": [
                                69,
                                61
                            ],
                            "name": "label",
                            "rawdesc": "A string containing the label to be assigned to the object.",
                            "start": [
                                69,
                                56
                            ],
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "desc": "\nlabels an object for use with debugging tools\n\n@*param* `objectTypeIdentifier` — Specifies the type of object being labeled.\n\n@*param* `objectID` — Specifies the name or ID of the object to label.\n\n@*param* `label` — A string containing the label to be assigned to the object.",
                    "finish": [
                        69,
                        66
                    ],
                    "rawdesc": "\nlabels an object for use with debugging tools",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        69,
                        0
                    ],
                    "type": "function",
                    "view": "function gl.ObjectLabel(objectTypeIdentifier: GLenum, objectID: GLuint, label: string)\n  -> nil"
                },
                "file": "/generated/LuaOpenGL.lua",
                "finish": [
                    69,
                    23
                ],
                "name": "ObjectLabel",
                "rawdesc": "\nlabels an object for use with debugging tools",
                "start": [
                    69,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "gl.ObjectLabel",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [],
                    "finish": [
                        81,
                        31
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        81,
                        0
                    ],
                    "type": "function",
                    "view": "function gl.PopDebugGroup()\n  -> nil"
                },
                "file": "/generated/LuaOpenGL.lua",
                "finish": [
                    81,
                    25
                ],
                "name": "PopDebugGroup",
                "start": [
                    81,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "gl.PopDebugGroup",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "\npushes a debug marker for nVidia nSight 2024.04, does not seem to work when FBO's are raw bound\n\n@*param* `id` — A numeric identifier for the group.\n\n@*param* `message` — A human-readable string describing the debug group.\n\n@*param* `sourceIsThirdParty` — Set the source tag, true for GL_DEBUG_SOURCE_THIRD_PARTY, false for GL_DEBUG_SOURCE_APPLICATION. default false",
                "extends": {
                    "args": [
                        {
                            "desc": "A numeric identifier for the group.",
                            "finish": [
                                78,
                                29
                            ],
                            "name": "id",
                            "rawdesc": "A numeric identifier for the group.",
                            "start": [
                                78,
                                27
                            ],
                            "type": "local",
                            "view": "GLuint"
                        },
                        {
                            "desc": "A human-readable string describing the debug group.",
                            "finish": [
                                78,
                                38
                            ],
                            "name": "message",
                            "rawdesc": "A human-readable string describing the debug group.",
                            "start": [
                                78,
                                31
                            ],
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "desc": "Set the source tag, true for GL_DEBUG_SOURCE_THIRD_PARTY, false for GL_DEBUG_SOURCE_APPLICATION. default false",
                            "finish": [
                                78,
                                58
                            ],
                            "name": "sourceIsThirdParty",
                            "rawdesc": "Set the source tag, true for GL_DEBUG_SOURCE_THIRD_PARTY, false for GL_DEBUG_SOURCE_APPLICATION. default false",
                            "start": [
                                78,
                                40
                            ],
                            "type": "local",
                            "view": "boolean"
                        }
                    ],
                    "desc": "\npushes a debug marker for nVidia nSight 2024.04, does not seem to work when FBO's are raw bound\n\n@*param* `id` — A numeric identifier for the group.\n\n@*param* `message` — A human-readable string describing the debug group.\n\n@*param* `sourceIsThirdParty` — Set the source tag, true for GL_DEBUG_SOURCE_THIRD_PARTY, false for GL_DEBUG_SOURCE_APPLICATION. default false",
                    "finish": [
                        78,
                        63
                    ],
                    "rawdesc": "\npushes a debug marker for nVidia nSight 2024.04, does not seem to work when FBO's are raw bound",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        78,
                        0
                    ],
                    "type": "function",
                    "view": "function gl.PushDebugGroup(id: GLuint, message: string, sourceIsThirdParty: boolean)\n  -> nil"
                },
                "file": "/generated/LuaOpenGL.lua",
                "finish": [
                    78,
                    26
                ],
                "name": "PushDebugGroup",
                "rawdesc": "\npushes a debug marker for nVidia nSight 2024.04, does not seem to work when FBO's are raw bound",
                "start": [
                    78,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "gl.PushDebugGroup",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Bind default or specified via rawFboId numeric id of FBO\n\n@*param* `target` — (Default: `GL_FRAMEBUFFER_EXT`)\n\n@*param* `rawFboId` — (Default: 0)",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                65,
                                26
                            ],
                            "name": "fbo",
                            "start": [
                                65,
                                23
                            ],
                            "type": "local",
                            "view": "nil"
                        },
                        {
                            "desc": "(Default: `GL_FRAMEBUFFER_EXT`)",
                            "finish": [
                                65,
                                34
                            ],
                            "name": "target",
                            "rawdesc": "(Default: `GL_FRAMEBUFFER_EXT`)",
                            "start": [
                                65,
                                28
                            ],
                            "type": "local",
                            "view": "GL?"
                        },
                        {
                            "desc": "(Default: 0)",
                            "finish": [
                                65,
                                44
                            ],
                            "name": "rawFboId",
                            "rawdesc": "(Default: 0)",
                            "start": [
                                65,
                                36
                            ],
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "Bind default or specified via rawFboId numeric id of FBO\n\n@*param* `target` — (Default: `GL_FRAMEBUFFER_EXT`)\n\n@*param* `rawFboId` — (Default: 0)",
                    "finish": [
                        65,
                        49
                    ],
                    "rawdesc": "Bind default or specified via rawFboId numeric id of FBO",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        65,
                        0
                    ],
                    "type": "function",
                    "view": "function gl.RawBindFBO(fbo: nil, target?: GL, rawFboId?: integer)\n  -> nil"
                },
                "file": "/generated/LuaFBOs.lua",
                "finish": [
                    65,
                    22
                ],
                "name": "RawBindFBO",
                "rawdesc": "Bind default or specified via rawFboId numeric id of FBO",
                "start": [
                    65,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `target` — (Default: `fbo.target`)",
                "extends": {
                    "args": [
                        {
                            "desc": "User Data FBO\n",
                            "finish": [
                                70,
                                26
                            ],
                            "name": "fbo",
                            "rawdesc": "User Data FBO\n",
                            "start": [
                                70,
                                23
                            ],
                            "type": "local",
                            "view": "Fbo"
                        },
                        {
                            "desc": "(Default: `fbo.target`)",
                            "finish": [
                                70,
                                34
                            ],
                            "name": "target",
                            "rawdesc": "(Default: `fbo.target`)",
                            "start": [
                                70,
                                28
                            ],
                            "type": "local",
                            "view": "GL?"
                        }
                    ],
                    "desc": "@*param* `target` — (Default: `fbo.target`)",
                    "finish": [
                        70,
                        39
                    ],
                    "returns": [
                        {
                            "name": "previouslyBoundRawFboId",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        70,
                        0
                    ],
                    "type": "function",
                    "view": "function gl.RawBindFBO(fbo: Fbo, target?: GL)\n  -> previouslyBoundRawFboId: number"
                },
                "file": "/generated/LuaFBOs.lua",
                "finish": [
                    70,
                    22
                ],
                "name": "RawBindFBO",
                "start": [
                    70,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "gl.RawBindFBO",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Sets the Geometry shader parameters for shaderID. Needed by geometry shader programs (check the opengl GL_ARB_geometry_shader4 extension for glProgramParameteri)",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                209,
                                47
                            ],
                            "name": "shaderID",
                            "start": [
                                209,
                                39
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                209,
                                54
                            ],
                            "name": "param",
                            "start": [
                                209,
                                49
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                209,
                                62
                            ],
                            "name": "number",
                            "start": [
                                209,
                                56
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "Sets the Geometry shader parameters for shaderID. Needed by geometry shader programs (check the opengl GL_ARB_geometry_shader4 extension for glProgramParameteri)",
                    "finish": [
                        209,
                        67
                    ],
                    "rawdesc": "Sets the Geometry shader parameters for shaderID. Needed by geometry shader programs (check the opengl GL_ARB_geometry_shader4 extension for glProgramParameteri)",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        209,
                        0
                    ],
                    "type": "function",
                    "view": "function gl.SetGeometryShaderParameter(shaderID: integer, param: number, number: number)\n  -> nil"
                },
                "file": "/generated/LuaShaders.lua",
                "finish": [
                    209,
                    38
                ],
                "name": "SetGeometryShaderParameter",
                "rawdesc": "Sets the Geometry shader parameters for shaderID. Needed by geometry shader programs (check the opengl GL_ARB_geometry_shader4 extension for glProgramParameteri)",
                "start": [
                    209,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "gl.SetGeometryShaderParameter",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Sets the tesselation shader parameters for `shaderID`.\n\nNeeded by tesselation shader programs. (Check the opengl\n`GL_ARB_tessellation_shader` extension for `glProgramParameteri`).",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                219,
                                47
                            ],
                            "name": "param",
                            "start": [
                                219,
                                42
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                219,
                                54
                            ],
                            "name": "value",
                            "start": [
                                219,
                                49
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Sets the tesselation shader parameters for `shaderID`.\n\nNeeded by tesselation shader programs. (Check the opengl\n`GL_ARB_tessellation_shader` extension for `glProgramParameteri`).",
                    "finish": [
                        219,
                        59
                    ],
                    "rawdesc": "Sets the tesselation shader parameters for `shaderID`.\n\nNeeded by tesselation shader programs. (Check the opengl\n`GL_ARB_tessellation_shader` extension for `glProgramParameteri`).",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        219,
                        0
                    ],
                    "type": "function",
                    "view": "function gl.SetTesselationShaderParameter(param: integer, value: integer)\n  -> nil"
                },
                "file": "/generated/LuaShaders.lua",
                "finish": [
                    219,
                    41
                ],
                "name": "SetTesselationShaderParameter",
                "rawdesc": "Sets the tesselation shader parameters for `shaderID`.\n\nNeeded by tesselation shader programs. (Check the opengl\n`GL_ARB_tessellation_shader` extension for `glProgramParameteri`).",
                "start": [
                    219,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "gl.SetTesselationShaderParameter",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `options` — concatenated string of option characters.\n\n\n- horizontal alignment:\n- 'c' = center\n- 'r' = right\n- vertical alignment:\n- 'a' = ascender\n- 't' = top\n- 'v' = vertical center\n- 'x' = baseline\n- 'b' = bottom\n- 'd' = descender\n- decorations:\n- 'o' = black outline\n- 'O' = white outline\n- 's' = shadow\n- other:\n- 'n' = don't round vertex coords to nearest integer (font may get blurry)",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                44,
                                21
                            ],
                            "name": "text",
                            "start": [
                                44,
                                17
                            ],
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": [
                                44,
                                24
                            ],
                            "name": "x",
                            "start": [
                                44,
                                23
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                44,
                                27
                            ],
                            "name": "y",
                            "start": [
                                44,
                                26
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                44,
                                33
                            ],
                            "name": "size",
                            "start": [
                                44,
                                29
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "desc": "concatenated string of option characters.",
                            "finish": [
                                44,
                                42
                            ],
                            "name": "options",
                            "rawdesc": "concatenated string of option characters.",
                            "start": [
                                44,
                                35
                            ],
                            "type": "local",
                            "view": "string?"
                        }
                    ],
                    "desc": "@*param* `options` — concatenated string of option characters.\n\n\n- horizontal alignment:\n- 'c' = center\n- 'r' = right\n- vertical alignment:\n- 'a' = ascender\n- 't' = top\n- 'v' = vertical center\n- 'x' = baseline\n- 'b' = bottom\n- 'd' = descender\n- decorations:\n- 'o' = black outline\n- 'O' = white outline\n- 's' = shadow\n- other:\n- 'n' = don't round vertex coords to nearest integer (font may get blurry)",
                    "finish": [
                        44,
                        47
                    ],
                    "rawdesc": "\n- horizontal alignment:\n- 'c' = center\n- 'r' = right\n- vertical alignment:\n- 'a' = ascender\n- 't' = top\n- 'v' = vertical center\n- 'x' = baseline\n- 'b' = bottom\n- 'd' = descender\n- decorations:\n- 'o' = black outline\n- 'O' = white outline\n- 's' = shadow\n- other:\n- 'n' = don't round vertex coords to nearest integer (font may get blurry)",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        44,
                        0
                    ],
                    "type": "function",
                    "view": "function gl.Text(text: string, x: number, y: number, size: number, options?: string)\n  -> nil"
                },
                "file": "/generated/LuaOpenGL.lua",
                "finish": [
                    44,
                    16
                ],
                "name": "Text",
                "rawdesc": "\n- horizontal alignment:\n- 'c' = center\n- 'r' = right\n- vertical alignment:\n- 'a' = ascender\n- 't' = top\n- 'v' = vertical center\n- 'x' = baseline\n- 'b' = bottom\n- 'd' = descender\n- decorations:\n- 'o' = black outline\n- 'O' = white outline\n- 's' = shadow\n- other:\n- 'n' = don't round vertex coords to nearest integer (font may get blurry)",
                "start": [
                    44,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "gl.Text",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Sets the uniform float value at the locationID for the currently active\nshader. Shader must be activated before setting uniforms.\n\n@*param* `locationID` — uniformName",
                "extends": {
                    "args": [
                        {
                            "desc": "uniformName",
                            "finish": [
                                140,
                                30
                            ],
                            "name": "locationID",
                            "rawdesc": "uniformName",
                            "start": [
                                140,
                                20
                            ],
                            "type": "local",
                            "view": "string|GL"
                        },
                        {
                            "finish": [
                                140,
                                34
                            ],
                            "name": "f1",
                            "start": [
                                140,
                                32
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                140,
                                38
                            ],
                            "name": "f2",
                            "start": [
                                140,
                                36
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "finish": [
                                140,
                                42
                            ],
                            "name": "f3",
                            "start": [
                                140,
                                40
                            ],
                            "type": "local",
                            "view": "number?"
                        },
                        {
                            "finish": [
                                140,
                                46
                            ],
                            "name": "f4",
                            "start": [
                                140,
                                44
                            ],
                            "type": "local",
                            "view": "number?"
                        }
                    ],
                    "desc": "Sets the uniform float value at the locationID for the currently active\nshader. Shader must be activated before setting uniforms.\n\n@*param* `locationID` — uniformName",
                    "finish": [
                        140,
                        51
                    ],
                    "rawdesc": "Sets the uniform float value at the locationID for the currently active\nshader. Shader must be activated before setting uniforms.",
                    "start": [
                        140,
                        0
                    ],
                    "type": "function",
                    "view": "function gl.Uniform(locationID: string|GL, f1: number, f2?: number, f3?: number, f4?: number)"
                },
                "file": "/generated/LuaShaders.lua",
                "finish": [
                    140,
                    19
                ],
                "name": "Uniform",
                "rawdesc": "Sets the uniform float value at the locationID for the currently active\nshader. Shader must be activated before setting uniforms.",
                "start": [
                    140,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "gl.Uniform",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Sets the an array of uniform values at the locationID for the currently\nactive shader.\n\nShader must be activated before setting uniforms.\n\n@*param* `locationID` — uniformName\n\n@*param* `uniforms` — Array up to 1024 elements\n\n```lua\ntype:\n    | 1 -- int\n    | 2 -- float\n    | 3 -- float matrix\n```",
                "extends": {
                    "args": [
                        {
                            "desc": "uniformName",
                            "finish": [
                                165,
                                35
                            ],
                            "name": "locationID",
                            "rawdesc": "uniformName",
                            "start": [
                                165,
                                25
                            ],
                            "type": "local",
                            "view": "string|integer"
                        },
                        {
                            "finish": [
                                165,
                                41
                            ],
                            "name": "type",
                            "start": [
                                165,
                                37
                            ],
                            "type": "local",
                            "view": "1|2|3"
                        },
                        {
                            "desc": "Array up to 1024 elements",
                            "finish": [
                                165,
                                51
                            ],
                            "name": "uniforms",
                            "rawdesc": "Array up to 1024 elements",
                            "start": [
                                165,
                                43
                            ],
                            "type": "local",
                            "view": "number[]"
                        }
                    ],
                    "desc": "Sets the an array of uniform values at the locationID for the currently\nactive shader.\n\nShader must be activated before setting uniforms.\n\n@*param* `locationID` — uniformName\n\n@*param* `uniforms` — Array up to 1024 elements\n\n```lua\ntype:\n    | 1 -- int\n    | 2 -- float\n    | 3 -- float matrix\n```",
                    "finish": [
                        165,
                        56
                    ],
                    "rawdesc": "Sets the an array of uniform values at the locationID for the currently\nactive shader.\n\nShader must be activated before setting uniforms.\n\n\n```lua\ntype:\n    | 1 -- int\n    | 2 -- float\n    | 3 -- float matrix\n```",
                    "start": [
                        165,
                        0
                    ],
                    "type": "function",
                    "view": "function gl.UniformArray(locationID: string|integer, type: 1|2|3, uniforms: number[])"
                },
                "file": "/generated/LuaShaders.lua",
                "finish": [
                    165,
                    24
                ],
                "name": "UniformArray",
                "rawdesc": "Sets the an array of uniform values at the locationID for the currently\nactive shader.\n\nShader must be activated before setting uniforms.\n\n\n```lua\ntype:\n    | 1 -- int\n    | 2 -- float\n    | 3 -- float matrix\n```",
                "start": [
                    165,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "gl.UniformArray",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Sets the uniform int value at the locationID for the currently active shader.\nShader must be activated before setting uniforms.\n\n@*param* `locationID` — uniformName",
                "extends": {
                    "args": [
                        {
                            "desc": "uniformName",
                            "finish": [
                                150,
                                33
                            ],
                            "name": "locationID",
                            "rawdesc": "uniformName",
                            "start": [
                                150,
                                23
                            ],
                            "type": "local",
                            "view": "string|integer"
                        },
                        {
                            "finish": [
                                150,
                                39
                            ],
                            "name": "int1",
                            "start": [
                                150,
                                35
                            ],
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": [
                                150,
                                45
                            ],
                            "name": "int2",
                            "start": [
                                150,
                                41
                            ],
                            "type": "local",
                            "view": "integer?"
                        },
                        {
                            "finish": [
                                150,
                                51
                            ],
                            "name": "int3",
                            "start": [
                                150,
                                47
                            ],
                            "type": "local",
                            "view": "integer?"
                        },
                        {
                            "finish": [
                                150,
                                57
                            ],
                            "name": "int4",
                            "start": [
                                150,
                                53
                            ],
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "Sets the uniform int value at the locationID for the currently active shader.\nShader must be activated before setting uniforms.\n\n@*param* `locationID` — uniformName",
                    "finish": [
                        150,
                        62
                    ],
                    "rawdesc": "Sets the uniform int value at the locationID for the currently active shader.\nShader must be activated before setting uniforms.",
                    "start": [
                        150,
                        0
                    ],
                    "type": "function",
                    "view": "function gl.UniformInt(locationID: string|integer, int1: integer, int2?: integer, int3?: integer, int4?: integer)"
                },
                "file": "/generated/LuaShaders.lua",
                "finish": [
                    150,
                    22
                ],
                "name": "UniformInt",
                "rawdesc": "Sets the uniform int value at the locationID for the currently active shader.\nShader must be activated before setting uniforms.",
                "start": [
                    150,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "gl.UniformInt",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Sets the a uniform mat4 locationID for the currently active shader.\n\nShader must be activated before setting uniforms.\n\nCan set one one common matrix like shadow, or by passing 16 additional\nnumbers for the matrix.\n\n@*param* `locationID` — uniformName\n\n@*param* `matrix` — Name of common matrix.\n\n```lua\nmatrix:\n    | \"shadows\"\n    | \"camera\"\n    | \"caminv\"\n    | \"camprj\"\n```",
                "extends": {
                    "args": [
                        {
                            "desc": "uniformName",
                            "finish": [
                                176,
                                36
                            ],
                            "name": "locationID",
                            "rawdesc": "uniformName",
                            "start": [
                                176,
                                26
                            ],
                            "type": "local",
                            "view": "string|integer"
                        },
                        {
                            "desc": "Name of common matrix.",
                            "finish": [
                                176,
                                44
                            ],
                            "name": "matrix",
                            "rawdesc": "Name of common matrix.",
                            "start": [
                                176,
                                38
                            ],
                            "type": "local",
                            "view": "\"camera\"|\"caminv\"|\"camprj\"|\"shadows\""
                        }
                    ],
                    "desc": "Sets the a uniform mat4 locationID for the currently active shader.\n\nShader must be activated before setting uniforms.\n\nCan set one one common matrix like shadow, or by passing 16 additional\nnumbers for the matrix.\n\n@*param* `locationID` — uniformName\n\n@*param* `matrix` — Name of common matrix.\n\n```lua\nmatrix:\n    | \"shadows\"\n    | \"camera\"\n    | \"caminv\"\n    | \"camprj\"\n```",
                    "finish": [
                        176,
                        49
                    ],
                    "rawdesc": "Sets the a uniform mat4 locationID for the currently active shader.\n\nShader must be activated before setting uniforms.\n\nCan set one one common matrix like shadow, or by passing 16 additional\nnumbers for the matrix.\n\n\n```lua\nmatrix:\n    | \"shadows\"\n    | \"camera\"\n    | \"caminv\"\n    | \"camprj\"\n```",
                    "start": [
                        176,
                        0
                    ],
                    "type": "function",
                    "view": "function gl.UniformMatrix(locationID: string|integer, matrix: \"camera\"|\"caminv\"|\"camprj\"|\"shadows\")"
                },
                "file": "/generated/LuaShaders.lua",
                "finish": [
                    176,
                    25
                ],
                "name": "UniformMatrix",
                "rawdesc": "Sets the a uniform mat4 locationID for the currently active shader.\n\nShader must be activated before setting uniforms.\n\nCan set one one common matrix like shadow, or by passing 16 additional\nnumbers for the matrix.\n\n\n```lua\nmatrix:\n    | \"shadows\"\n    | \"camera\"\n    | \"caminv\"\n    | \"camprj\"\n```",
                "start": [
                    176,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Sets the a uniform mat4 locationID for the currently active shader.\n\nShader must be activated before setting uniforms.\n\nCan set one one common matrix like shadow, or by passing 16 additional\nnumbers for the matrix.\n\n@*param* `locationID` — uniformName\n\n@*param* `matrix` — A 2x2, 3x3 or 4x4 matrix.",
                "extends": {
                    "args": [
                        {
                            "desc": "uniformName",
                            "finish": [
                                187,
                                36
                            ],
                            "name": "locationID",
                            "rawdesc": "uniformName",
                            "start": [
                                187,
                                26
                            ],
                            "type": "local",
                            "view": "string|number"
                        },
                        {
                            "desc": "A 2x2, 3x3 or 4x4 matrix.",
                            "finish": [
                                187,
                                44
                            ],
                            "name": "matrix",
                            "rawdesc": "A 2x2, 3x3 or 4x4 matrix.",
                            "start": [
                                187,
                                38
                            ],
                            "type": "local",
                            "view": "number[]"
                        }
                    ],
                    "desc": "Sets the a uniform mat4 locationID for the currently active shader.\n\nShader must be activated before setting uniforms.\n\nCan set one one common matrix like shadow, or by passing 16 additional\nnumbers for the matrix.\n\n@*param* `locationID` — uniformName\n\n@*param* `matrix` — A 2x2, 3x3 or 4x4 matrix.",
                    "finish": [
                        187,
                        49
                    ],
                    "rawdesc": "Sets the a uniform mat4 locationID for the currently active shader.\n\nShader must be activated before setting uniforms.\n\nCan set one one common matrix like shadow, or by passing 16 additional\nnumbers for the matrix.",
                    "start": [
                        187,
                        0
                    ],
                    "type": "function",
                    "view": "function gl.UniformMatrix(locationID: string|number, matrix: number[])"
                },
                "file": "/generated/LuaShaders.lua",
                "finish": [
                    187,
                    25
                ],
                "name": "UniformMatrix",
                "rawdesc": "Sets the a uniform mat4 locationID for the currently active shader.\n\nShader must be activated before setting uniforms.\n\nCan set one one common matrix like shadow, or by passing 16 additional\nnumbers for the matrix.",
                "start": [
                    187,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "gl.UniformMatrix",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Binds a shader program identified by shaderID. Pass 0 to disable the shader. Returns whether the shader was successfully bound.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                97,
                                30
                            ],
                            "name": "shaderID",
                            "start": [
                                97,
                                22
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Binds a shader program identified by shaderID. Pass 0 to disable the shader. Returns whether the shader was successfully bound.",
                    "finish": [
                        97,
                        35
                    ],
                    "rawdesc": "Binds a shader program identified by shaderID. Pass 0 to disable the shader. Returns whether the shader was successfully bound.",
                    "returns": [
                        {
                            "name": "linked",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        97,
                        0
                    ],
                    "type": "function",
                    "view": "function gl.UseShader(shaderID: integer)\n  -> linked: boolean"
                },
                "file": "/generated/LuaShaders.lua",
                "finish": [
                    97,
                    21
                ],
                "name": "UseShader",
                "rawdesc": "Binds a shader program identified by shaderID. Pass 0 to disable the shader. Returns whether the shader was successfully bound.",
                "start": [
                    97,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "gl.UseShader",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Parameters for los access\n\n\nIf one condition is fulfilled all beneath it are too (e.g. if an unit is in\nLOS it can read params with `inradar=true` even if the param has\n`inlos=false`) All GameRulesParam are public, TeamRulesParams can just be\n`private`,`allied` and/or `public` You can read RulesParams from any Lua\nenvironments! With those losAccess policies you can limit their access.\n\nAll GameRulesParam are public, TeamRulesParams can just be `private`,`allied` and/or `public`\nYou can read RulesParams from any Lua environments! With those losAccess policies you can limit their access.\n",
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    152,
                    19
                ],
                "rawdesc": "Parameters for los access\n\n\nIf one condition is fulfilled all beneath it are too (e.g. if an unit is in\nLOS it can read params with `inradar=true` even if the param has\n`inlos=false`) All GameRulesParam are public, TeamRulesParams can just be\n`private`,`allied` and/or `public` You can read RulesParams from any Lua\nenvironments! With those losAccess policies you can limit their access.\n\nAll GameRulesParam are public, TeamRulesParams can just be `private`,`allied` and/or `public`\nYou can read RulesParams from any Lua environments! With those losAccess policies you can limit their access.\n",
                "start": [
                    152,
                    10
                ],
                "type": "doc.class",
                "view": "losAccess",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "desc": "readable by ally + ingame allied",
                "extends": {
                    "finish": [
                        154,
                        32
                    ],
                    "start": [
                        154,
                        24
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                154,
                                31
                            ],
                            "start": [
                                154,
                                24
                            ],
                            "type": "doc.type.name",
                            "view": "boolean"
                        }
                    ],
                    "view": "boolean?"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    154,
                    32
                ],
                "name": "allied",
                "rawdesc": "readable by ally + ingame allied",
                "start": [
                    154,
                    10
                ],
                "type": "doc.field",
                "view": "boolean?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "readable if the unit is in LOS",
                "extends": {
                    "finish": [
                        155,
                        31
                    ],
                    "start": [
                        155,
                        23
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                155,
                                30
                            ],
                            "start": [
                                155,
                                23
                            ],
                            "type": "doc.type.name",
                            "view": "boolean"
                        }
                    ],
                    "view": "boolean?"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    155,
                    31
                ],
                "name": "inlos",
                "rawdesc": "readable if the unit is in LOS",
                "start": [
                    155,
                    10
                ],
                "type": "doc.field",
                "view": "boolean?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "readable if the unit is in AirLOS",
                "extends": {
                    "finish": [
                        156,
                        33
                    ],
                    "start": [
                        156,
                        25
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                156,
                                32
                            ],
                            "start": [
                                156,
                                25
                            ],
                            "type": "doc.type.name",
                            "view": "boolean"
                        }
                    ],
                    "view": "boolean?"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    156,
                    33
                ],
                "name": "inradar",
                "rawdesc": "readable if the unit is in AirLOS",
                "start": [
                    156,
                    10
                ],
                "type": "doc.field",
                "view": "boolean?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "only readable by the ally (default)",
                "extends": {
                    "finish": [
                        153,
                        33
                    ],
                    "start": [
                        153,
                        25
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                153,
                                32
                            ],
                            "start": [
                                153,
                                25
                            ],
                            "type": "doc.type.name",
                            "view": "boolean"
                        }
                    ],
                    "view": "boolean?"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    153,
                    33
                ],
                "name": "private",
                "rawdesc": "only readable by the ally (default)",
                "start": [
                    153,
                    10
                ],
                "type": "doc.field",
                "view": "boolean?",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "readable by all",
                "extends": {
                    "finish": [
                        157,
                        32
                    ],
                    "start": [
                        157,
                        24
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                157,
                                31
                            ],
                            "start": [
                                157,
                                24
                            ],
                            "type": "doc.type.name",
                            "view": "boolean"
                        }
                    ],
                    "view": "boolean?"
                },
                "file": "/generated/LuaSyncedCtrl.lua",
                "finish": [
                    157,
                    32
                ],
                "name": "public",
                "rawdesc": "readable by all",
                "start": [
                    157,
                    10
                ],
                "type": "doc.field",
                "view": "boolean?",
                "visible": "public"
            }
        ],
        "name": "losAccess",
        "type": "type",
        "view": "losAccess"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Returns the bitwise AND of all arguments. Only use up to 24 bit integers.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                37,
                                25
                            ],
                            "start": [
                                37,
                                22
                            ],
                            "type": "...",
                            "view": "integer"
                        }
                    ],
                    "desc": "Returns the bitwise AND of all arguments. Only use up to 24 bit integers.",
                    "finish": [
                        37,
                        30
                    ],
                    "rawdesc": "Returns the bitwise AND of all arguments. Only use up to 24 bit integers.",
                    "returns": [
                        {
                            "name": "result",
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": [
                        37,
                        0
                    ],
                    "type": "function",
                    "view": "function math.bit_and(...integer)\n  -> result: integer"
                },
                "file": "/generated/LuaBitOps.lua",
                "finish": [
                    37,
                    21
                ],
                "name": "bit_and",
                "rawdesc": "Returns the bitwise AND of all arguments. Only use up to 24 bit integers.",
                "start": [
                    37,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "math.bit_and",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Set each of the bits of a 24 bit integer. Returns result = result OR (1 << a1) OR (1 << a2) OR ...;)",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                55,
                                26
                            ],
                            "start": [
                                55,
                                23
                            ],
                            "type": "...",
                            "view": "integer"
                        }
                    ],
                    "desc": "Set each of the bits of a 24 bit integer. Returns result = result OR (1 << a1) OR (1 << a2) OR ...;)",
                    "finish": [
                        55,
                        31
                    ],
                    "rawdesc": "Set each of the bits of a 24 bit integer. Returns result = result OR (1 << a1) OR (1 << a2) OR ...;)",
                    "returns": [
                        {
                            "name": "result",
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": [
                        55,
                        0
                    ],
                    "type": "function",
                    "view": "function math.bit_bits(...integer)\n  -> result: integer"
                },
                "file": "/generated/LuaBitOps.lua",
                "finish": [
                    55,
                    22
                ],
                "name": "bit_bits",
                "rawdesc": "Set each of the bits of a 24 bit integer. Returns result = result OR (1 << a1) OR (1 << a2) OR ...;)",
                "start": [
                    55,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "math.bit_bits",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Returns the bitwise NOT of the 24 bit integer argument.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                49,
                                27
                            ],
                            "name": "value",
                            "start": [
                                49,
                                22
                            ],
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Returns the bitwise NOT of the 24 bit integer argument.",
                    "finish": [
                        49,
                        32
                    ],
                    "rawdesc": "Returns the bitwise NOT of the 24 bit integer argument.",
                    "returns": [
                        {
                            "name": "result",
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": [
                        49,
                        0
                    ],
                    "type": "function",
                    "view": "function math.bit_inv(value: integer)\n  -> result: integer"
                },
                "file": "/generated/LuaBitOps.lua",
                "finish": [
                    49,
                    21
                ],
                "name": "bit_inv",
                "rawdesc": "Returns the bitwise NOT of the 24 bit integer argument.",
                "start": [
                    49,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "math.bit_inv",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Returns the bitwise OR of all arguments. Only use up to 24 bit integers.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                31,
                                24
                            ],
                            "start": [
                                31,
                                21
                            ],
                            "type": "...",
                            "view": "integer"
                        }
                    ],
                    "desc": "Returns the bitwise OR of all arguments. Only use up to 24 bit integers.",
                    "finish": [
                        31,
                        29
                    ],
                    "rawdesc": "Returns the bitwise OR of all arguments. Only use up to 24 bit integers.",
                    "returns": [
                        {
                            "name": "result",
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": [
                        31,
                        0
                    ],
                    "type": "function",
                    "view": "function math.bit_or(...integer)\n  -> result: integer"
                },
                "file": "/generated/LuaBitOps.lua",
                "finish": [
                    31,
                    20
                ],
                "name": "bit_or",
                "rawdesc": "Returns the bitwise OR of all arguments. Only use up to 24 bit integers.",
                "start": [
                    31,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "math.bit_or",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Returns the bitwise XOR of all arguments. Only use up to 24 bit integers.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                43,
                                25
                            ],
                            "start": [
                                43,
                                22
                            ],
                            "type": "...",
                            "view": "integer"
                        }
                    ],
                    "desc": "Returns the bitwise XOR of all arguments. Only use up to 24 bit integers.",
                    "finish": [
                        43,
                        30
                    ],
                    "rawdesc": "Returns the bitwise XOR of all arguments. Only use up to 24 bit integers.",
                    "returns": [
                        {
                            "name": "result",
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": [
                        43,
                        0
                    ],
                    "type": "function",
                    "view": "function math.bit_xor(...integer)\n  -> result: integer"
                },
                "file": "/generated/LuaBitOps.lua",
                "finish": [
                    43,
                    21
                ],
                "name": "bit_xor",
                "rawdesc": "Returns the bitwise XOR of all arguments. Only use up to 24 bit integers.",
                "start": [
                    43,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "math.bit_xor",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Returns x clamped to min and max boundaries.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                37,
                                25
                            ],
                            "name": "value",
                            "start": [
                                37,
                                20
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                37,
                                30
                            ],
                            "name": "min",
                            "start": [
                                37,
                                27
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                37,
                                35
                            ],
                            "name": "max",
                            "start": [
                                37,
                                32
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "Returns x clamped to min and max boundaries.",
                    "finish": [
                        37,
                        40
                    ],
                    "rawdesc": "Returns x clamped to min and max boundaries.",
                    "returns": [
                        {
                            "name": "clamped",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        37,
                        0
                    ],
                    "type": "function",
                    "view": "function math.clamp(value: number, min: number, max: number)\n  -> clamped: number"
                },
                "file": "/generated/LuaMathExtra.lua",
                "finish": [
                    37,
                    19
                ],
                "name": "clamp",
                "rawdesc": "Returns x clamped to min and max boundaries.",
                "start": [
                    37,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "math.clamp",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Returns the length of the diagonal of an n-dimensional box (or the length of\nan n-component vector). Rather quick method that does not handle intermediate\noverflows/underflows nor is made for numerical stability.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                29,
                                20
                            ],
                            "name": "x",
                            "start": [
                                29,
                                19
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                29,
                                25
                            ],
                            "start": [
                                29,
                                22
                            ],
                            "type": "...",
                            "view": "number"
                        }
                    ],
                    "desc": "Returns the length of the diagonal of an n-dimensional box (or the length of\nan n-component vector). Rather quick method that does not handle intermediate\noverflows/underflows nor is made for numerical stability.",
                    "finish": [
                        29,
                        30
                    ],
                    "rawdesc": "Returns the length of the diagonal of an n-dimensional box (or the length of\nan n-component vector). Rather quick method that does not handle intermediate\noverflows/underflows nor is made for numerical stability.",
                    "returns": [
                        {
                            "name": "diagonal",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        29,
                        0
                    ],
                    "type": "function",
                    "view": "function math.diag(x: number, ...number)\n  -> diagonal: number"
                },
                "file": "/generated/LuaMathExtra.lua",
                "finish": [
                    29,
                    18
                ],
                "name": "diag",
                "rawdesc": "Returns the length of the diagonal of an n-dimensional box (or the length of\nan n-component vector). Rather quick method that does not handle intermediate\noverflows/underflows nor is made for numerical stability.",
                "start": [
                    29,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "math.diag",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Returns erf(x), the Gauss error function, between -1 and 1.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                66,
                                19
                            ],
                            "name": "x",
                            "start": [
                                66,
                                18
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "Returns erf(x), the Gauss error function, between -1 and 1.",
                    "finish": [
                        66,
                        24
                    ],
                    "rawdesc": "Returns erf(x), the Gauss error function, between -1 and 1.",
                    "returns": [
                        {
                            "name": "erf",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        66,
                        0
                    ],
                    "type": "function",
                    "view": "function math.erf(x: number)\n  -> erf: number"
                },
                "file": "/generated/LuaMathExtra.lua",
                "finish": [
                    66,
                    17
                ],
                "name": "erf",
                "rawdesc": "Returns erf(x), the Gauss error function, between -1 and 1.",
                "start": [
                    66,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "math.erf",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Returns the length of hypotenuse of right angle triangle with sides x and y,\nequivalent to `sqrt(x*x + y*y)`, but has better numerical stability and\ninternally handles intermediate overflows/underflows, but is also slower.\n\n@*return* — `sqrt(x*x+y*y)`",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                20,
                                21
                            ],
                            "name": "x",
                            "start": [
                                20,
                                20
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                20,
                                24
                            ],
                            "name": "y",
                            "start": [
                                20,
                                23
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "Returns the length of hypotenuse of right angle triangle with sides x and y,\nequivalent to `sqrt(x*x + y*y)`, but has better numerical stability and\ninternally handles intermediate overflows/underflows, but is also slower.\n\n@*return* — `sqrt(x*x+y*y)`",
                    "finish": [
                        20,
                        29
                    ],
                    "rawdesc": "Returns the length of hypotenuse of right angle triangle with sides x and y,\nequivalent to `sqrt(x*x + y*y)`, but has better numerical stability and\ninternally handles intermediate overflows/underflows, but is also slower.",
                    "returns": [
                        {
                            "desc": "`sqrt(x*x+y*y)`",
                            "rawdesc": "`sqrt(x*x+y*y)`",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        20,
                        0
                    ],
                    "type": "function",
                    "view": "function math.hypot(x: number, y: number)\n  -> number"
                },
                "file": "/generated/LuaMathExtra.lua",
                "finish": [
                    20,
                    19
                ],
                "name": "hypot",
                "rawdesc": "Returns the length of hypotenuse of right angle triangle with sides x and y,\nequivalent to `sqrt(x*x + y*y)`, but has better numerical stability and\ninternally handles intermediate overflows/underflows, but is also slower.",
                "start": [
                    20,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "math.hypot",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Returns linear interpolation between x and y with ratio a (x+(y-x)*a).\n\n@*return* — (x+(y-x)*a)",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                51,
                                19
                            ],
                            "name": "x",
                            "start": [
                                51,
                                18
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                51,
                                22
                            ],
                            "name": "y",
                            "start": [
                                51,
                                21
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                51,
                                25
                            ],
                            "name": "a",
                            "start": [
                                51,
                                24
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "Returns linear interpolation between x and y with ratio a (x+(y-x)*a).\n\n@*return* — (x+(y-x)*a)",
                    "finish": [
                        51,
                        30
                    ],
                    "rawdesc": "Returns linear interpolation between x and y with ratio a (x+(y-x)*a).",
                    "returns": [
                        {
                            "desc": "(x+(y-x)*a)",
                            "rawdesc": "(x+(y-x)*a)",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        51,
                        0
                    ],
                    "type": "function",
                    "view": "function math.mix(x: number, y: number, a: number)\n  -> number"
                },
                "file": "/generated/LuaMathExtra.lua",
                "finish": [
                    51,
                    17
                ],
                "name": "mix",
                "rawdesc": "Returns linear interpolation between x and y with ratio a (x+(y-x)*a).",
                "start": [
                    51,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "math.mix",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Returns the normalize vector of an given vector.\n\n@*return* `...` — normalized",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                84,
                                25
                            ],
                            "name": "x",
                            "start": [
                                84,
                                24
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                84,
                                30
                            ],
                            "start": [
                                84,
                                27
                            ],
                            "type": "...",
                            "view": "number"
                        }
                    ],
                    "desc": "Returns the normalize vector of an given vector.\n\n@*return* `...` — normalized",
                    "finish": [
                        84,
                        35
                    ],
                    "rawdesc": "Returns the normalize vector of an given vector.",
                    "returns": [
                        {
                            "desc": "normalized",
                            "name": "...",
                            "rawdesc": "normalized",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        84,
                        0
                    ],
                    "type": "function",
                    "view": "function math.normalize(x: number, ...number)\n  -> ...number"
                },
                "file": "/generated/LuaMathExtra.lua",
                "finish": [
                    84,
                    23
                ],
                "name": "normalize",
                "rawdesc": "Returns the normalize vector of an given vector.",
                "start": [
                    84,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "math.normalize",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Returns x rounded to n decimals, if n is omitted or <=0, rounds to nearest\ninteger. Note that Spring's Lua interpreter uses 32-bit floats for all\nnumbers so max. precision is ~7 decimal digits.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                60,
                                21
                            ],
                            "name": "x",
                            "start": [
                                60,
                                20
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                60,
                                31
                            ],
                            "name": "decimals",
                            "start": [
                                60,
                                23
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "Returns x rounded to n decimals, if n is omitted or <=0, rounds to nearest\ninteger. Note that Spring's Lua interpreter uses 32-bit floats for all\nnumbers so max. precision is ~7 decimal digits.",
                    "finish": [
                        60,
                        36
                    ],
                    "rawdesc": "Returns x rounded to n decimals, if n is omitted or <=0, rounds to nearest\ninteger. Note that Spring's Lua interpreter uses 32-bit floats for all\nnumbers so max. precision is ~7 decimal digits.",
                    "returns": [
                        {
                            "name": "rounded",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        60,
                        0
                    ],
                    "type": "function",
                    "view": "function math.round(x: number, decimals: number)\n  -> rounded: number"
                },
                "file": "/generated/LuaMathExtra.lua",
                "finish": [
                    60,
                    19
                ],
                "name": "round",
                "rawdesc": "Returns x rounded to n decimals, if n is omitted or <=0, rounds to nearest\ninteger. Note that Spring's Lua interpreter uses 32-bit floats for all\nnumbers so max. precision is ~7 decimal digits.",
                "start": [
                    60,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "math.round",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Returns 0 if x == 0, 1 if x > 0, -1 if x < 0",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                43,
                                19
                            ],
                            "name": "x",
                            "start": [
                                43,
                                18
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "Returns 0 if x == 0, 1 if x > 0, -1 if x < 0",
                    "finish": [
                        43,
                        24
                    ],
                    "rawdesc": "Returns 0 if x == 0, 1 if x > 0, -1 if x < 0",
                    "returns": [
                        {
                            "name": "sign",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        43,
                        0
                    ],
                    "type": "function",
                    "view": "function math.sgn(x: number)\n  -> sign: number"
                },
                "file": "/generated/LuaMathExtra.lua",
                "finish": [
                    43,
                    17
                ],
                "name": "sgn",
                "rawdesc": "Returns 0 if x == 0, 1 if x > 0, -1 if x < 0",
                "start": [
                    43,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "math.sgn",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Applies the smoothstep function\n\nClamps and rescales v to a value between [0; 1] based on the edges and then applies the smoothstep function.\nFor example math.smoothstep(10, 25, 15) is 0.259, because 15 is 0.333 of the way from 10 to 25, and smoothstep(0.333) is 0.259",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                77,
                                30
                            ],
                            "name": "edge0",
                            "start": [
                                77,
                                25
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                77,
                                37
                            ],
                            "name": "edge1",
                            "start": [
                                77,
                                32
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                77,
                                40
                            ],
                            "name": "v",
                            "start": [
                                77,
                                39
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "Applies the smoothstep function\n\nClamps and rescales v to a value between [0; 1] based on the edges and then applies the smoothstep function.\nFor example math.smoothstep(10, 25, 15) is 0.259, because 15 is 0.333 of the way from 10 to 25, and smoothstep(0.333) is 0.259",
                    "finish": [
                        77,
                        45
                    ],
                    "rawdesc": "Applies the smoothstep function\n\nClamps and rescales v to a value between [0; 1] based on the edges and then applies the smoothstep function.\nFor example math.smoothstep(10, 25, 15) is 0.259, because 15 is 0.333 of the way from 10 to 25, and smoothstep(0.333) is 0.259",
                    "returns": [
                        {
                            "name": "smoothstep",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        77,
                        0
                    ],
                    "type": "function",
                    "view": "function math.smoothstep(edge0: number, edge1: number, v: number)\n  -> smoothstep: number"
                },
                "file": "/generated/LuaMathExtra.lua",
                "finish": [
                    77,
                    24
                ],
                "name": "smoothstep",
                "rawdesc": "Applies the smoothstep function\n\nClamps and rescales v to a value between [0; 1] based on the edges and then applies the smoothstep function.\nFor example math.smoothstep(10, 25, 15) is 0.259, because 15 is 0.333 of the way from 10 to 25, and smoothstep(0.333) is 0.259",
                "start": [
                    77,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "math.smoothstep",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Color triple (RGB)\n",
                "file": "/Types.lua",
                "finish": [
                    21,
                    13
                ],
                "rawdesc": "Color triple (RGB)\n",
                "start": [
                    21,
                    10
                ],
                "type": "doc.class",
                "view": "rgb",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        24,
                        18
                    ],
                    "start": [
                        24,
                        12
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                24,
                                18
                            ],
                            "start": [
                                24,
                                12
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/Types.lua",
                "finish": [
                    24,
                    18
                ],
                "name": "b",
                "start": [
                    24,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        23,
                        18
                    ],
                    "start": [
                        23,
                        12
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                23,
                                18
                            ],
                            "start": [
                                23,
                                12
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/Types.lua",
                "finish": [
                    23,
                    18
                ],
                "name": "g",
                "start": [
                    23,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        22,
                        18
                    ],
                    "start": [
                        22,
                        12
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                22,
                                18
                            ],
                            "start": [
                                22,
                                12
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/Types.lua",
                "finish": [
                    22,
                    18
                ],
                "name": "r",
                "start": [
                    22,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            }
        ],
        "name": "rgb",
        "type": "type",
        "view": "rgb"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Color quadruple (RGBA)\n",
                "file": "/Types.lua",
                "finish": [
                    28,
                    14
                ],
                "rawdesc": "Color quadruple (RGBA)\n",
                "start": [
                    28,
                    10
                ],
                "type": "doc.class",
                "view": "rgba",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        32,
                        18
                    ],
                    "start": [
                        32,
                        12
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                32,
                                18
                            ],
                            "start": [
                                32,
                                12
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/Types.lua",
                "finish": [
                    32,
                    18
                ],
                "name": "a",
                "start": [
                    32,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        31,
                        18
                    ],
                    "start": [
                        31,
                        12
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                31,
                                18
                            ],
                            "start": [
                                31,
                                12
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/Types.lua",
                "finish": [
                    31,
                    18
                ],
                "name": "b",
                "start": [
                    31,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        30,
                        18
                    ],
                    "start": [
                        30,
                        12
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                30,
                                18
                            ],
                            "start": [
                                30,
                                12
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/Types.lua",
                "finish": [
                    30,
                    18
                ],
                "name": "g",
                "start": [
                    30,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        29,
                        18
                    ],
                    "start": [
                        29,
                        12
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                29,
                                18
                            ],
                            "start": [
                                29,
                                12
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/Types.lua",
                "finish": [
                    29,
                    18
                ],
                "name": "r",
                "start": [
                    29,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            }
        ],
        "name": "rgba",
        "type": "type",
        "view": "rgba"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Returns a table with preallocated memory\n\nReturns an empty table with more memory allocated.\nThis lets you microoptimize cases where a table receives\na lot of elements and you know the number beforehand,\nsuch as one for each UnitDef, by avoiding reallocation.\n\n@*param* `nArray` — hint for count of array elements\n\n@*param* `nHashed` — hint for count of hashtable elements",
                "extends": {
                    "args": [
                        {
                            "desc": "hint for count of array elements",
                            "finish": [
                                21,
                                25
                            ],
                            "name": "nArray",
                            "rawdesc": "hint for count of array elements",
                            "start": [
                                21,
                                19
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "desc": "hint for count of hashtable elements",
                            "finish": [
                                21,
                                34
                            ],
                            "name": "nHashed",
                            "rawdesc": "hint for count of hashtable elements",
                            "start": [
                                21,
                                27
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "Returns a table with preallocated memory\n\nReturns an empty table with more memory allocated.\nThis lets you microoptimize cases where a table receives\na lot of elements and you know the number beforehand,\nsuch as one for each UnitDef, by avoiding reallocation.\n\n@*param* `nArray` — hint for count of array elements\n\n@*param* `nHashed` — hint for count of hashtable elements",
                    "finish": [
                        21,
                        39
                    ],
                    "rawdesc": "Returns a table with preallocated memory\n\nReturns an empty table with more memory allocated.\nThis lets you microoptimize cases where a table receives\na lot of elements and you know the number beforehand,\nsuch as one for each UnitDef, by avoiding reallocation.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "table"
                        }
                    ],
                    "start": [
                        21,
                        0
                    ],
                    "type": "function",
                    "view": "function table.new(nArray: number, nHashed: number)\n  -> table"
                },
                "file": "/generated/LuaTableExtra.lua",
                "finish": [
                    21,
                    18
                ],
                "name": "new",
                "rawdesc": "Returns a table with preallocated memory\n\nReturns an empty table with more memory allocated.\nThis lets you microoptimize cases where a table receives\na lot of elements and you know the number beforehand,\nsuch as one for each UnitDef, by avoiding reallocation.",
                "start": [
                    21,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "table.new",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Tracy extensions",
                "extends": {
                    "finish": [
                        12,
                        1
                    ],
                    "start": [
                        10,
                        8
                    ],
                    "type": "table",
                    "view": "table"
                },
                "file": "/generated/LuaTracyExtra.lua",
                "finish": [
                    10,
                    5
                ],
                "rawdesc": "Tracy extensions",
                "start": [
                    10,
                    0
                ],
                "type": "setglobal",
                "view": "table",
                "visible": "public"
            }
        ],
        "name": "tracy",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Update a Tracy plot with a value\n\n@*param* `plotName` — Which LuaPlot should be updated\n\n@*param* `plotValue` — the number to show on the Tracy plot",
                "extends": {
                    "args": [
                        {
                            "desc": "Which LuaPlot should be updated",
                            "finish": [
                                27,
                                36
                            ],
                            "name": "plotName",
                            "rawdesc": "Which LuaPlot should be updated",
                            "start": [
                                27,
                                28
                            ],
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "desc": "the number to show on the Tracy plot",
                            "finish": [
                                27,
                                47
                            ],
                            "name": "plotValue",
                            "rawdesc": "the number to show on the Tracy plot",
                            "start": [
                                27,
                                38
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "Update a Tracy plot with a value\n\n@*param* `plotName` — Which LuaPlot should be updated\n\n@*param* `plotValue` — the number to show on the Tracy plot",
                    "finish": [
                        27,
                        52
                    ],
                    "rawdesc": "Update a Tracy plot with a value",
                    "start": [
                        27,
                        0
                    ],
                    "type": "function",
                    "view": "function tracy.LuaTracyPlot(plotName: string, plotValue: number)"
                },
                "file": "/generated/LuaTracyExtra.lua",
                "finish": [
                    27,
                    27
                ],
                "name": "LuaTracyPlot",
                "rawdesc": "Update a Tracy plot with a value",
                "start": [
                    27,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "tracy.LuaTracyPlot",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Configure custom appearance for a Tracy plot for use in debugging or profiling\n\n@*param* `plotName` — name of the plot to customize\n\n@*param* `plotFormatType` — (Default: `\"Number\"`)\n\n@*param* `stepwise` — (Default: `true`) stepwise chart\n\n@*param* `fill` — (Default: `false`) whether to fill color\n\n@*param* `color` — (Default: `0xFFFFFF`) uint32 number as BGR color\n\n```lua\nplotFormatType:\n    | \"Number\"\n    | \"Percentage\"\n    | \"Memory\"\n```",
                "extends": {
                    "args": [
                        {
                            "desc": "name of the plot to customize",
                            "finish": [
                                21,
                                42
                            ],
                            "name": "plotName",
                            "rawdesc": "name of the plot to customize",
                            "start": [
                                21,
                                34
                            ],
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "desc": "(Default: `\"Number\"`)",
                            "finish": [
                                21,
                                58
                            ],
                            "name": "plotFormatType",
                            "rawdesc": "(Default: `\"Number\"`)",
                            "start": [
                                21,
                                44
                            ],
                            "type": "local",
                            "view": "\"Memory\"|\"Number\"|\"Percentage\"|nil"
                        },
                        {
                            "desc": "(Default: `true`) stepwise chart",
                            "finish": [
                                21,
                                68
                            ],
                            "name": "stepwise",
                            "rawdesc": "(Default: `true`) stepwise chart",
                            "start": [
                                21,
                                60
                            ],
                            "type": "local",
                            "view": "boolean?"
                        },
                        {
                            "desc": "(Default: `false`) whether to fill color",
                            "finish": [
                                21,
                                74
                            ],
                            "name": "fill",
                            "rawdesc": "(Default: `false`) whether to fill color",
                            "start": [
                                21,
                                70
                            ],
                            "type": "local",
                            "view": "boolean?"
                        },
                        {
                            "desc": "(Default: `0xFFFFFF`) uint32 number as BGR color",
                            "finish": [
                                21,
                                81
                            ],
                            "name": "color",
                            "rawdesc": "(Default: `0xFFFFFF`) uint32 number as BGR color",
                            "start": [
                                21,
                                76
                            ],
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "Configure custom appearance for a Tracy plot for use in debugging or profiling\n\n@*param* `plotName` — name of the plot to customize\n\n@*param* `plotFormatType` — (Default: `\"Number\"`)\n\n@*param* `stepwise` — (Default: `true`) stepwise chart\n\n@*param* `fill` — (Default: `false`) whether to fill color\n\n@*param* `color` — (Default: `0xFFFFFF`) uint32 number as BGR color\n\n```lua\nplotFormatType:\n    | \"Number\"\n    | \"Percentage\"\n    | \"Memory\"\n```",
                    "finish": [
                        21,
                        86
                    ],
                    "rawdesc": "Configure custom appearance for a Tracy plot for use in debugging or profiling\n\n\n```lua\nplotFormatType:\n    | \"Number\"\n    | \"Percentage\"\n    | \"Memory\"\n```",
                    "start": [
                        21,
                        0
                    ],
                    "type": "function",
                    "view": "function tracy.LuaTracyPlotConfig(plotName: string, plotFormatType: \"Memory\"|\"Number\"|\"Percentage\"|nil, stepwise?: boolean, fill?: boolean, color?: integer)"
                },
                "file": "/generated/LuaTracyExtra.lua",
                "finish": [
                    21,
                    33
                ],
                "name": "LuaTracyPlotConfig",
                "rawdesc": "Configure custom appearance for a Tracy plot for use in debugging or profiling\n\n\n```lua\nplotFormatType:\n    | \"Number\"\n    | \"Percentage\"\n    | \"Memory\"\n```",
                "start": [
                    21,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "tracy.LuaTracyPlotConfig",
        "type": "variable",
        "view": "unknown"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Cartesian triple (XYZ)\n",
                "file": "/Types.lua",
                "finish": [
                    8,
                    13
                ],
                "rawdesc": "Cartesian triple (XYZ)\n",
                "start": [
                    8,
                    10
                ],
                "type": "doc.class",
                "view": "xyz",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        9,
                        18
                    ],
                    "start": [
                        9,
                        12
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                9,
                                18
                            ],
                            "start": [
                                9,
                                12
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/Types.lua",
                "finish": [
                    9,
                    18
                ],
                "name": "x",
                "start": [
                    9,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        10,
                        18
                    ],
                    "start": [
                        10,
                        12
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                10,
                                18
                            ],
                            "start": [
                                10,
                                12
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/Types.lua",
                "finish": [
                    10,
                    18
                ],
                "name": "y",
                "start": [
                    10,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        11,
                        18
                    ],
                    "start": [
                        11,
                        12
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                11,
                                18
                            ],
                            "start": [
                                11,
                                12
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/Types.lua",
                "finish": [
                    11,
                    18
                ],
                "name": "z",
                "start": [
                    11,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            }
        ],
        "name": "xyz",
        "type": "type",
        "view": "xyz"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    1128,
                    12
                ],
                "start": [
                    1128,
                    10
                ],
                "type": "doc.class",
                "view": "xz",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        1129,
                        18
                    ],
                    "start": [
                        1129,
                        12
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                1129,
                                18
                            ],
                            "start": [
                                1129,
                                12
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    1129,
                    18
                ],
                "name": "x",
                "start": [
                    1129,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        1130,
                        18
                    ],
                    "start": [
                        1130,
                        12
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                1130,
                                18
                            ],
                            "start": [
                                1130,
                                12
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "/generated/LuaUnsyncedCtrl.lua",
                "finish": [
                    1130,
                    18
                ],
                "name": "y",
                "start": [
                    1130,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "public"
            }
        ],
        "name": "xz",
        "type": "type",
        "view": "xz"
    }
]